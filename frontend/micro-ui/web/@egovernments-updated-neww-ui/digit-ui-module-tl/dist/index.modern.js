import { Card, CardHeader, CardText, Loader, CardSubHeader, SubmitBar, CitizenInfoLabel, TickMark, LocationSearchCard, LabelFieldPair, CardLabel, Dropdown, CardLabelError, FormStep, RadioOrSelect, TextInput, CardLabelDesc, UploadFile, CheckBox, RadioButtons, LinkButton, TextArea, DatePicker, Header, StatusTable, EditIcon, Row, Toast, Banner, KeyNote, TelePhone, DisplayPhotos, CardSectionHeader, CheckPoint, ConnectingCheckPoints, WrapUnMaskComponent, MobileNumber, CaseIcon, EmployeeModuleCard, SearchField, SearchAction, PopUp, DetailsCard, SearchForm, CloseSvg, Table, Localities, RemoveableTag, FormComposer, ActionBar, MultiLink, AppContainer, BackButton, PrivateRoute, Label, LinkLabel, FilterAction, Modal, PDFSvg as PDFSvg$1, MultiUploadWrapper, Close as Close$7, BreakLine, InfoBannerIcon, Menu, ButtonSelector, BreadCrumb, CitizenHomeCard } from '@egovernments/digit-ui-react-components';
import React, { useState, useEffect, useMemo, useReducer, Fragment as Fragment$1, useCallback, useLayoutEffect, useRef } from 'react';
import { useTranslation } from 'react-i18next';
import { useLocation, useHistory, useRouteMatch, Link, useParams, Switch, Route, Redirect } from 'react-router-dom';
import { useForm, Controller, useWatch } from 'react-hook-form';
import { useQueryClient } from 'react-query';

var isArray = Array.isArray;
var isArray_1 = isArray;

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
var _freeGlobal = freeGlobal;

var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
var root = _freeGlobal || freeSelf || Function('return this')();
var _root = root;

var Symbol$1 = _root.Symbol;
var _Symbol = Symbol$1;

var objectProto = Object.prototype;
var hasOwnProperty = objectProto.hasOwnProperty;
var nativeObjectToString = objectProto.toString;
var symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
    tag = value[symToStringTag];
  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}
  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}
var _getRawTag = getRawTag;

var objectProto$1 = Object.prototype;
var nativeObjectToString$1 = objectProto$1.toString;
function objectToString(value) {
  return nativeObjectToString$1.call(value);
}
var _objectToString = objectToString;

var nullTag = '[object Null]',
  undefinedTag = '[object Undefined]';
var symToStringTag$1 = _Symbol ? _Symbol.toStringTag : undefined;
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return symToStringTag$1 && symToStringTag$1 in Object(value) ? _getRawTag(value) : _objectToString(value);
}
var _baseGetTag = baseGetTag;

function isObjectLike(value) {
  return value != null && typeof value == 'object';
}
var isObjectLike_1 = isObjectLike;

var symbolTag = '[object Symbol]';
function isSymbol(value) {
  return typeof value == 'symbol' || isObjectLike_1(value) && _baseGetTag(value) == symbolTag;
}
var isSymbol_1 = isSymbol;

var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
  reIsPlainProp = /^\w*$/;
function isKey(value, object) {
  if (isArray_1(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol_1(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
}
var _isKey = isKey;

function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}
var isObject_1 = isObject;

var asyncTag = '[object AsyncFunction]',
  funcTag = '[object Function]',
  genTag = '[object GeneratorFunction]',
  proxyTag = '[object Proxy]';
function isFunction(value) {
  if (!isObject_1(value)) {
    return false;
  }
  var tag = _baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}
var isFunction_1 = isFunction;

var coreJsData = _root['__core-js_shared__'];
var _coreJsData = coreJsData;

var maskSrcKey = function () {
  var uid = /[^.]+$/.exec(_coreJsData && _coreJsData.keys && _coreJsData.keys.IE_PROTO || '');
  return uid ? 'Symbol(src)_1.' + uid : '';
}();
function isMasked(func) {
  return !!maskSrcKey && maskSrcKey in func;
}
var _isMasked = isMasked;

var funcProto = Function.prototype;
var funcToString = funcProto.toString;
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return func + '';
    } catch (e) {}
  }
  return '';
}
var _toSource = toSource;

var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
var reIsHostCtor = /^\[object .+?Constructor\]$/;
var funcProto$1 = Function.prototype,
  objectProto$2 = Object.prototype;
var funcToString$1 = funcProto$1.toString;
var hasOwnProperty$1 = objectProto$2.hasOwnProperty;
var reIsNative = RegExp('^' + funcToString$1.call(hasOwnProperty$1).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
function baseIsNative(value) {
  if (!isObject_1(value) || _isMasked(value)) {
    return false;
  }
  var pattern = isFunction_1(value) ? reIsNative : reIsHostCtor;
  return pattern.test(_toSource(value));
}
var _baseIsNative = baseIsNative;

function getValue(object, key) {
  return object == null ? undefined : object[key];
}
var _getValue = getValue;

function getNative(object, key) {
  var value = _getValue(object, key);
  return _baseIsNative(value) ? value : undefined;
}
var _getNative = getNative;

var nativeCreate = _getNative(Object, 'create');
var _nativeCreate = nativeCreate;

function hashClear() {
  this.__data__ = _nativeCreate ? _nativeCreate(null) : {};
  this.size = 0;
}
var _hashClear = hashClear;

function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}
var _hashDelete = hashDelete;

var HASH_UNDEFINED = '__lodash_hash_undefined__';
var objectProto$3 = Object.prototype;
var hasOwnProperty$2 = objectProto$3.hasOwnProperty;
function hashGet(key) {
  var data = this.__data__;
  if (_nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty$2.call(data, key) ? data[key] : undefined;
}
var _hashGet = hashGet;

var objectProto$4 = Object.prototype;
var hasOwnProperty$3 = objectProto$4.hasOwnProperty;
function hashHas(key) {
  var data = this.__data__;
  return _nativeCreate ? data[key] !== undefined : hasOwnProperty$3.call(data, key);
}
var _hashHas = hashHas;

var HASH_UNDEFINED$1 = '__lodash_hash_undefined__';
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = _nativeCreate && value === undefined ? HASH_UNDEFINED$1 : value;
  return this;
}
var _hashSet = hashSet;

function Hash(entries) {
  var index = -1,
    length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
Hash.prototype.clear = _hashClear;
Hash.prototype['delete'] = _hashDelete;
Hash.prototype.get = _hashGet;
Hash.prototype.has = _hashHas;
Hash.prototype.set = _hashSet;
var _Hash = Hash;

function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}
var _listCacheClear = listCacheClear;

function eq(value, other) {
  return value === other || value !== value && other !== other;
}
var eq_1 = eq;

function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq_1(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}
var _assocIndexOf = assocIndexOf;

var arrayProto = Array.prototype;
var splice = arrayProto.splice;
function listCacheDelete(key) {
  var data = this.__data__,
    index = _assocIndexOf(data, key);
  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}
var _listCacheDelete = listCacheDelete;

function listCacheGet(key) {
  var data = this.__data__,
    index = _assocIndexOf(data, key);
  return index < 0 ? undefined : data[index][1];
}
var _listCacheGet = listCacheGet;

function listCacheHas(key) {
  return _assocIndexOf(this.__data__, key) > -1;
}
var _listCacheHas = listCacheHas;

function listCacheSet(key, value) {
  var data = this.__data__,
    index = _assocIndexOf(data, key);
  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}
var _listCacheSet = listCacheSet;

function ListCache(entries) {
  var index = -1,
    length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
ListCache.prototype.clear = _listCacheClear;
ListCache.prototype['delete'] = _listCacheDelete;
ListCache.prototype.get = _listCacheGet;
ListCache.prototype.has = _listCacheHas;
ListCache.prototype.set = _listCacheSet;
var _ListCache = ListCache;

var Map$1 = _getNative(_root, 'Map');
var _Map = Map$1;

function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new _Hash(),
    'map': new (_Map || _ListCache)(),
    'string': new _Hash()
  };
}
var _mapCacheClear = mapCacheClear;

function isKeyable(value) {
  var type = typeof value;
  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
}
var _isKeyable = isKeyable;

function getMapData(map, key) {
  var data = map.__data__;
  return _isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
}
var _getMapData = getMapData;

function mapCacheDelete(key) {
  var result = _getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}
var _mapCacheDelete = mapCacheDelete;

function mapCacheGet(key) {
  return _getMapData(this, key).get(key);
}
var _mapCacheGet = mapCacheGet;

function mapCacheHas(key) {
  return _getMapData(this, key).has(key);
}
var _mapCacheHas = mapCacheHas;

function mapCacheSet(key, value) {
  var data = _getMapData(this, key),
    size = data.size;
  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}
var _mapCacheSet = mapCacheSet;

function MapCache(entries) {
  var index = -1,
    length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
MapCache.prototype.clear = _mapCacheClear;
MapCache.prototype['delete'] = _mapCacheDelete;
MapCache.prototype.get = _mapCacheGet;
MapCache.prototype.has = _mapCacheHas;
MapCache.prototype.set = _mapCacheSet;
var _MapCache = MapCache;

var FUNC_ERROR_TEXT = 'Expected a function';
function memoize(func, resolver) {
  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function () {
    var args = arguments,
      key = resolver ? resolver.apply(this, args) : args[0],
      cache = memoized.cache;
    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || _MapCache)();
  return memoized;
}
memoize.Cache = _MapCache;
var memoize_1 = memoize;

var MAX_MEMOIZE_SIZE = 500;
function memoizeCapped(func) {
  var result = memoize_1(func, function (key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });
  var cache = result.cache;
  return result;
}
var _memoizeCapped = memoizeCapped;

var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var reEscapeChar = /\\(\\)?/g;
var stringToPath = _memoizeCapped(function (string) {
  var result = [];
  if (string.charCodeAt(0) === 46) {
    result.push('');
  }
  string.replace(rePropName, function (match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);
  });
  return result;
});
var _stringToPath = stringToPath;

function arrayMap(array, iteratee) {
  var index = -1,
    length = array == null ? 0 : array.length,
    result = Array(length);
  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}
var _arrayMap = arrayMap;

var INFINITY = 1 / 0;
var symbolProto = _Symbol ? _Symbol.prototype : undefined,
  symbolToString = symbolProto ? symbolProto.toString : undefined;
function baseToString(value) {
  if (typeof value == 'string') {
    return value;
  }
  if (isArray_1(value)) {
    return _arrayMap(value, baseToString) + '';
  }
  if (isSymbol_1(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = value + '';
  return result == '0' && 1 / value == -INFINITY ? '-0' : result;
}
var _baseToString = baseToString;

function toString(value) {
  return value == null ? '' : _baseToString(value);
}
var toString_1 = toString;

function castPath(value, object) {
  if (isArray_1(value)) {
    return value;
  }
  return _isKey(value, object) ? [value] : _stringToPath(toString_1(value));
}
var _castPath = castPath;

var INFINITY$1 = 1 / 0;
function toKey(value) {
  if (typeof value == 'string' || isSymbol_1(value)) {
    return value;
  }
  var result = value + '';
  return result == '0' && 1 / value == -INFINITY$1 ? '-0' : result;
}
var _toKey = toKey;

function baseGet(object, path) {
  path = _castPath(path, object);
  var index = 0,
    length = path.length;
  while (object != null && index < length) {
    object = object[_toKey(path[index++])];
  }
  return index && index == length ? object : undefined;
}
var _baseGet = baseGet;

function get(object, path, defaultValue) {
  var result = object == null ? undefined : _baseGet(object, path);
  return result === undefined ? defaultValue : result;
}
var get_1 = get;

var defineProperty = function () {
  try {
    var func = _getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}();
var _defineProperty = defineProperty;

function baseAssignValue(object, key, value) {
  if (key == '__proto__' && _defineProperty) {
    _defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}
var _baseAssignValue = baseAssignValue;

var objectProto$5 = Object.prototype;
var hasOwnProperty$4 = objectProto$5.hasOwnProperty;
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty$4.call(object, key) && eq_1(objValue, value)) || value === undefined && !(key in object)) {
    _baseAssignValue(object, key, value);
  }
}
var _assignValue = assignValue;

var MAX_SAFE_INTEGER = 9007199254740991;
var reIsUint = /^(?:0|[1-9]\d*)$/;
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
}
var _isIndex = isIndex;

function baseSet(object, path, value, customizer) {
  if (!isObject_1(object)) {
    return object;
  }
  path = _castPath(path, object);
  var index = -1,
    length = path.length,
    lastIndex = length - 1,
    nested = object;
  while (nested != null && ++index < length) {
    var key = _toKey(path[index]),
      newValue = value;
    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
      return object;
    }
    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : undefined;
      if (newValue === undefined) {
        newValue = isObject_1(objValue) ? objValue : _isIndex(path[index + 1]) ? [] : {};
      }
    }
    _assignValue(nested, key, newValue);
    nested = nested[key];
  }
  return object;
}
var _baseSet = baseSet;

function set(object, path, value) {
  return object == null ? object : _baseSet(object, path, value);
}
var set_1 = set;

const sortDropdownNames = (options, optionkey, locilizationkey) => {
  return options.sort((a, b) => locilizationkey(a[optionkey]).localeCompare(locilizationkey(b[optionkey])));
};
const getTransaltedLocality = data => {
  var _data$tenantId, _data$locality;
  let localityVariable = (data === null || data === void 0 ? void 0 : (_data$tenantId = data.tenantId) === null || _data$tenantId === void 0 ? void 0 : _data$tenantId.replaceAll(".", "_")) || stringReplaceAll(data === null || data === void 0 ? void 0 : data.tenantId, ".", "_");
  return localityVariable.toUpperCase() + "_REVENUE_" + (data === null || data === void 0 ? void 0 : (_data$locality = data.locality) === null || _data$locality === void 0 ? void 0 : _data$locality.code);
};
const getownerarray = data => {
  var _data$owners;
  const ownersData = data === null || data === void 0 ? void 0 : (_data$owners = data.owners) === null || _data$owners === void 0 ? void 0 : _data$owners.owners;
  const res = ownersData === null || ownersData === void 0 ? void 0 : ownersData.map(ob => {
    var _ob$relationship, _ob$gender, _data$owners2;
    return {
      mobileNumber: ob.mobilenumber,
      name: ob.name,
      fatherOrHusbandName: ob === null || ob === void 0 ? void 0 : ob.fatherOrHusbandName,
      relationship: ob === null || ob === void 0 ? void 0 : (_ob$relationship = ob.relationship) === null || _ob$relationship === void 0 ? void 0 : _ob$relationship.code,
      dob: null,
      gender: ob === null || ob === void 0 ? void 0 : (_ob$gender = ob.gender) === null || _ob$gender === void 0 ? void 0 : _ob$gender.code,
      permanentAddress: data === null || data === void 0 ? void 0 : (_data$owners2 = data.owners) === null || _data$owners2 === void 0 ? void 0 : _data$owners2.permanentAddress,
      emailId: ob === null || ob === void 0 ? void 0 : ob.emailId
    };
  });
  return res;
};
const gettradeownerarray = data => {
  var _data$owners7;
  let tradeownerarray = [];
  const isEditRenew = window.location.href.includes("renew-trade");
  data.tradeLicenseDetail.owners.map(oldowner => {
    var _data$owners3;
    data === null || data === void 0 ? void 0 : (_data$owners3 = data.owners) === null || _data$owners3 === void 0 ? void 0 : _data$owners3.owners.map(newowner => {
      if (oldowner.id === newowner.id) {
        var _newowner$gender, _data$owners4, _newowner$relationshi;
        if (oldowner.name !== newowner.name || oldowner.gender !== (newowner === null || newowner === void 0 ? void 0 : (_newowner$gender = newowner.gender) === null || _newowner$gender === void 0 ? void 0 : _newowner$gender.code) || oldowner.mobileNumber !== newowner.mobilenumber || oldowner.permanentAddress !== (data === null || data === void 0 ? void 0 : (_data$owners4 = data.owners) === null || _data$owners4 === void 0 ? void 0 : _data$owners4.permanentAddress) || oldowner.relationship !== ((_newowner$relationshi = newowner.relationship) === null || _newowner$relationshi === void 0 ? void 0 : _newowner$relationshi.code) || oldowner.fatherOrHusbandName !== newowner.fatherOrHusbandName) {
          var _newowner$gender2, _data$owners5, _newowner$relationshi2;
          if (oldowner.name !== newowner.name) {
            oldowner.name = newowner.name;
          }
          if (oldowner.gender !== ((_newowner$gender2 = newowner.gender) === null || _newowner$gender2 === void 0 ? void 0 : _newowner$gender2.code)) {
            var _newowner$gender3;
            oldowner.gender = (_newowner$gender3 = newowner.gender) === null || _newowner$gender3 === void 0 ? void 0 : _newowner$gender3.code;
          }
          if (oldowner.mobileNumber !== newowner.mobilenumber) {
            oldowner.mobileNumber = newowner.mobilenumber;
          }
          if (oldowner.permanentAddress !== (data === null || data === void 0 ? void 0 : (_data$owners5 = data.owners) === null || _data$owners5 === void 0 ? void 0 : _data$owners5.permanentAddress)) {
            var _data$owners6;
            oldowner.permanentAddress = data === null || data === void 0 ? void 0 : (_data$owners6 = data.owners) === null || _data$owners6 === void 0 ? void 0 : _data$owners6.permanentAddress;
          }
          if (oldowner.relationship !== ((_newowner$relationshi2 = newowner.relationship) === null || _newowner$relationshi2 === void 0 ? void 0 : _newowner$relationshi2.code)) {
            var _newowner$relationshi3;
            oldowner.relationship = (_newowner$relationshi3 = newowner.relationship) === null || _newowner$relationshi3 === void 0 ? void 0 : _newowner$relationshi3.code;
          }
          if (oldowner.fatherOrHusbandName !== newowner.fatherOrHusbandName) {
            oldowner.fatherOrHusbandName = newowner.fatherOrHusbandName;
          }
          let found = tradeownerarray.length > 0 ? tradeownerarray.some(el => el.id === oldowner.id) : false;
          if (!found) tradeownerarray.push(oldowner);
        } else {
          let found = tradeownerarray.length > 0 ? tradeownerarray.some(el => el.id === oldowner.id) : false;
          if (!found) tradeownerarray.push(oldowner);
        }
      }
    });
  });
  !isEditRenew && !window.location.href.includes("edit-application") && data.tradeLicenseDetail.owners.map(oldowner => {
    let found = tradeownerarray.length > 0 ? tradeownerarray.some(el => el.id === oldowner.id) : false;
    if (!found) tradeownerarray.push({
      ...oldowner,
      active: false
    });
  });
  data === null || data === void 0 ? void 0 : (_data$owners7 = data.owners) === null || _data$owners7 === void 0 ? void 0 : _data$owners7.owners.map(ob => {
    if (!ob.id) {
      var _ob$relationship2, _ob$relationship3, _ob$gender2, _data$owners8, _data$ownershipCatego, _data$tradeLicenseDet, _data$tradeLicenseDet2, _data$tradeLicenseDet3;
      tradeownerarray.push({
        mobileNumber: ob.mobilenumber,
        name: ob.name,
        fatherOrHusbandName: ob === null || ob === void 0 ? void 0 : ob.fatherOrHusbandName,
        relationship: ob !== null && ob !== void 0 && (_ob$relationship2 = ob.relationship) !== null && _ob$relationship2 !== void 0 && _ob$relationship2.code ? ob === null || ob === void 0 ? void 0 : (_ob$relationship3 = ob.relationship) === null || _ob$relationship3 === void 0 ? void 0 : _ob$relationship3.code : ob === null || ob === void 0 ? void 0 : ob.relationship,
        dob: null,
        gender: (ob === null || ob === void 0 ? void 0 : (_ob$gender2 = ob.gender) === null || _ob$gender2 === void 0 ? void 0 : _ob$gender2.code) || null,
        permanentAddress: data === null || data === void 0 ? void 0 : (_data$owners8 = data.owners) === null || _data$owners8 === void 0 ? void 0 : _data$owners8.permanentAddress,
        ...((data === null || data === void 0 ? void 0 : (_data$ownershipCatego = data.ownershipCategory) === null || _data$ownershipCatego === void 0 ? void 0 : _data$ownershipCatego.code.includes("INSTITUTIONAL")) && {
          uuid: data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet = data.tradeLicenseDetail) === null || _data$tradeLicenseDet === void 0 ? void 0 : (_data$tradeLicenseDet2 = _data$tradeLicenseDet.owners) === null || _data$tradeLicenseDet2 === void 0 ? void 0 : (_data$tradeLicenseDet3 = _data$tradeLicenseDet2[0]) === null || _data$tradeLicenseDet3 === void 0 ? void 0 : _data$tradeLicenseDet3.uuid
        })
      });
    }
  });
  return tradeownerarray;
};
const gettradeunits = data => {
  var _data$TradeDetails;
  let tradeunits = [];
  data === null || data === void 0 ? void 0 : (_data$TradeDetails = data.TradeDetails) === null || _data$TradeDetails === void 0 ? void 0 : _data$TradeDetails.units.map(ob => {
    tradeunits.push({
      tradeType: ob.tradesubtype.code,
      uom: ob.unit,
      uomValue: ob.uom
    });
  });
  return tradeunits;
};
const gettradeupdateunits = data => {
  let TLunits = [];
  const isEditRenew = window.location.href.includes("renew-trade");
  data.tradeLicenseDetail.tradeUnits.map(oldunit => {
    data.TradeDetails.units.map(newunit => {
      if (oldunit.id === newunit.id) {
        if (oldunit.tradeType !== newunit.tradesubtype.code || oldunit.uomValue !== newunit.uom) {
          if (oldunit.tradeType !== newunit.tradesubtype.code) oldunit.tradeType = newunit.tradesubtype.code;else if (oldunit.uomValue !== newunit.uom) oldunit.uomValue = newunit.uom;
          TLunits.push(oldunit);
        } else {
          let found = TLunits.length > 0 ? TLunits.some(el => el.id === oldunit.id) : false;
          if (!found) TLunits.push(oldunit);
        }
      } else {
        if (!isEditRenew) {
          let found = TLunits.length > 0 ? TLunits.some(el => el.id === oldunit.id) : false;
          if (!found) TLunits.push({
            ...oldunit,
            active: false
          });
        }
      }
    });
  });
  data.TradeDetails.units.map(ob => {
    if (!ob.id) {
      TLunits.push({
        tradeType: ob.tradesubtype.code,
        uom: ob.unit,
        uomValue: ob.uom
      });
    }
  });
  return TLunits;
};
const getaccessories = data => {
  var _data$TradeDetails2;
  let tradeaccessories = [];
  data === null || data === void 0 ? void 0 : (_data$TradeDetails2 = data.TradeDetails) === null || _data$TradeDetails2 === void 0 ? void 0 : _data$TradeDetails2.accessories.map(ob => {
    tradeaccessories.push({
      uom: ob.unit,
      accessoryCategory: ob.accessory.code,
      uomValue: ob.uom ? ob.uom : null,
      count: ob.accessorycount
    });
  });
  return tradeaccessories;
};
const gettradeupdateaccessories = data => {
  var _data$TradeDetails3, _data$TradeDetails3$i;
  let TLaccessories = [];
  const isEditRenew = window.location.href.includes("renew-trade");
  if (data !== null && data !== void 0 && (_data$TradeDetails3 = data.TradeDetails) !== null && _data$TradeDetails3 !== void 0 && (_data$TradeDetails3$i = _data$TradeDetails3.isAccessories) !== null && _data$TradeDetails3$i !== void 0 && _data$TradeDetails3$i.i18nKey.includes("NO")) {
    var _data$tradeLicenseDet4;
    (data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet4 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet4 === void 0 ? void 0 : _data$tradeLicenseDet4.accessories) && data.tradeLicenseDetail.accessories.map(oldunit => {
      TLaccessories.push({
        ...oldunit,
        active: false
      });
    });
  } else {
    var _data$tradeLicenseDet5;
    (data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet5 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet5 === void 0 ? void 0 : _data$tradeLicenseDet5.accessories) && data.tradeLicenseDetail.accessories.map(oldunit => {
      data.TradeDetails.accessories.map(newunit => {
        if (oldunit.id === newunit.id) {
          if (oldunit.accessoryCategory !== newunit.accessory.code || oldunit.count !== newunit.accessorycount || oldunit.uomValue !== newunit.uom) {
            if (oldunit.accessoryCategory !== newunit.accessory.code) oldunit.accessoryCategory = newunit.accessory.code;
            if (oldunit.count !== newunit.accessorycount) oldunit.count = newunit.accessorycount;
            if (oldunit.uomValue !== newunit.uom) oldunit.uomValue = newunit.uom;
            TLaccessories.push(oldunit);
          } else {
            let found = TLaccessories.length > 0 ? TLaccessories.some(el => el.id === oldunit.id) : false;
            if (!found) TLaccessories.push(oldunit);
          }
        } else {
          if (!isEditRenew) {
            let found = TLaccessories.length > 0 ? TLaccessories.some(el => el.id === oldunit.id) : false;
            if (!found) TLaccessories.push({
              ...oldunit,
              active: false
            });
          }
        }
      });
    });
    data.TradeDetails.accessories.map(ob => {
      if (!ob.id) {
        TLaccessories.push({
          uom: ob.unit,
          accessoryCategory: ob.accessory.code,
          uomValue: ob.uom ? ob.uom : null,
          count: ob.accessorycount
        });
      }
    });
  }
  return TLaccessories;
};
const currentFinancialYear = () => {
  const data = convertEpochToDate(Date.now());
  const splitData = data.split("-")[0];
  const year = splitData.slice(2, 4);
  let monthNo = Number(data.split("-")[1]);
  const currentFinancialYear = monthNo < 4 ? `${Number(splitData) - 1}-${Number(year)}` : `${Number(splitData)}-${Number(year) + 1}`;
  return currentFinancialYear;
};
const convertToTrade = (data = {}) => {
  var _data$TradeDetails4, _data$address, _data$address$city, _data$address2, _data$address2$city, _data$address3, _data$address3$city, _data$address4, _data$cpt, _data$cpt$details, _data$cpt$details$add, _data$cpt$details$add2, _data$cpt2, _data$cpt2$details, _data$cpt2$details$ad, _data$cpt2$details$ad2, _data$cpt3, _data$cpt3$details, _data$cpt3$details$ad, _data$address5, _data$address5$locali, _data$cpt4, _data$cpt4$details, _data$cpt4$details$ad, _data$cpt4$details$ad2, _data$address6, _data$cpt5, _data$cpt5$details, _data$cpt5$details$ad, _data$address7, _data$cpt6, _data$cpt6$details, _data$cpt6$details$ad, _data$address8, _data$cpt7, _data$cpt7$details, _data$cpt7$details$ad, _data$address9, _data$cpt8, _data$cpt8$details, _data$cpt8$details$ad, _data$TradeDetails5, _data$TradeDetails6, _data$TradeDetails7, _data$TradeDetails8, _data$TradeDetails8$i, _data$TradeDetails8$i2, _data$ownershipCatego2, _data$owners9, _data$owners9$owners, _data$owners9$owners$, _data$owners10, _data$owners10$owners, _data$owners10$owners2, _data$owners11, _data$owners11$owners, _data$owners11$owners2, _data$owners12, _data$owners12$owners, _data$owners12$owners2, _data$owners13, _data$owners13$owners, _data$owners13$owners2, _data$TradeDetails9, _data$TradeDetails9$S, _data$TradeDetails10, _data$TradeDetails10$, _data$TradeDetails11, _data$TradeDetails11$, _data$owners$owners, _data$owners$owners$, _data$owners$owners$$, _data$owners$owners2, _data$owners$owners2$, _data$owners$owners2$2, _data$ownershipCatego3, _data$cpt9, _data$cpt9$details, _data$TradeDetails12, _data$TradeDetails13;
  let Financialyear = sessionStorage.getItem("CurrentFinancialYear");
  let isSameAsPropertyOwner = sessionStorage.getItem("isSameAsPropertyOwner");
  const formdata = {
    Licenses: [{
      action: "INITIATE",
      applicationType: "NEW",
      commencementDate: Date.parse(data === null || data === void 0 ? void 0 : (_data$TradeDetails4 = data.TradeDetails) === null || _data$TradeDetails4 === void 0 ? void 0 : _data$TradeDetails4.CommencementDate),
      financialYear: Financialyear ? Financialyear : "2021-22",
      licenseType: "PERMANENT",
      tenantId: data === null || data === void 0 ? void 0 : (_data$address = data.address) === null || _data$address === void 0 ? void 0 : (_data$address$city = _data$address.city) === null || _data$address$city === void 0 ? void 0 : _data$address$city.code,
      tradeLicenseDetail: {
        channel: "CITIZEN",
        address: {
          city: !(data !== null && data !== void 0 && data.cpt) ? data !== null && data !== void 0 && (_data$address2 = data.address) !== null && _data$address2 !== void 0 && (_data$address2$city = _data$address2.city) !== null && _data$address2$city !== void 0 && _data$address2$city.code ? data === null || data === void 0 ? void 0 : (_data$address3 = data.address) === null || _data$address3 === void 0 ? void 0 : (_data$address3$city = _data$address3.city) === null || _data$address3$city === void 0 ? void 0 : _data$address3$city.code : data === null || data === void 0 ? void 0 : (_data$address4 = data.address) === null || _data$address4 === void 0 ? void 0 : _data$address4.city : data !== null && data !== void 0 && (_data$cpt = data.cpt) !== null && _data$cpt !== void 0 && (_data$cpt$details = _data$cpt.details) !== null && _data$cpt$details !== void 0 && (_data$cpt$details$add = _data$cpt$details.address) !== null && _data$cpt$details$add !== void 0 && (_data$cpt$details$add2 = _data$cpt$details$add.city) !== null && _data$cpt$details$add2 !== void 0 && _data$cpt$details$add2.code ? data === null || data === void 0 ? void 0 : (_data$cpt2 = data.cpt) === null || _data$cpt2 === void 0 ? void 0 : (_data$cpt2$details = _data$cpt2.details) === null || _data$cpt2$details === void 0 ? void 0 : (_data$cpt2$details$ad = _data$cpt2$details.address) === null || _data$cpt2$details$ad === void 0 ? void 0 : (_data$cpt2$details$ad2 = _data$cpt2$details$ad.city) === null || _data$cpt2$details$ad2 === void 0 ? void 0 : _data$cpt2$details$ad2.code : data === null || data === void 0 ? void 0 : (_data$cpt3 = data.cpt) === null || _data$cpt3 === void 0 ? void 0 : (_data$cpt3$details = _data$cpt3.details) === null || _data$cpt3$details === void 0 ? void 0 : (_data$cpt3$details$ad = _data$cpt3$details.address) === null || _data$cpt3$details$ad === void 0 ? void 0 : _data$cpt3$details$ad.city,
          locality: {
            code: !(data !== null && data !== void 0 && data.cpt) ? data === null || data === void 0 ? void 0 : (_data$address5 = data.address) === null || _data$address5 === void 0 ? void 0 : (_data$address5$locali = _data$address5.locality) === null || _data$address5$locali === void 0 ? void 0 : _data$address5$locali.code : data === null || data === void 0 ? void 0 : (_data$cpt4 = data.cpt) === null || _data$cpt4 === void 0 ? void 0 : (_data$cpt4$details = _data$cpt4.details) === null || _data$cpt4$details === void 0 ? void 0 : (_data$cpt4$details$ad = _data$cpt4$details.address) === null || _data$cpt4$details$ad === void 0 ? void 0 : (_data$cpt4$details$ad2 = _data$cpt4$details$ad.locality) === null || _data$cpt4$details$ad2 === void 0 ? void 0 : _data$cpt4$details$ad2.code
          },
          tenantId: data === null || data === void 0 ? void 0 : data.tenantId,
          pincode: !(data !== null && data !== void 0 && data.cpt) ? data === null || data === void 0 ? void 0 : (_data$address6 = data.address) === null || _data$address6 === void 0 ? void 0 : _data$address6.pincode : data === null || data === void 0 ? void 0 : (_data$cpt5 = data.cpt) === null || _data$cpt5 === void 0 ? void 0 : (_data$cpt5$details = _data$cpt5.details) === null || _data$cpt5$details === void 0 ? void 0 : (_data$cpt5$details$ad = _data$cpt5$details.address) === null || _data$cpt5$details$ad === void 0 ? void 0 : _data$cpt5$details$ad.pincode,
          doorNo: !(data !== null && data !== void 0 && data.cpt) ? data === null || data === void 0 ? void 0 : (_data$address7 = data.address) === null || _data$address7 === void 0 ? void 0 : _data$address7.doorNo : data === null || data === void 0 ? void 0 : (_data$cpt6 = data.cpt) === null || _data$cpt6 === void 0 ? void 0 : (_data$cpt6$details = _data$cpt6.details) === null || _data$cpt6$details === void 0 ? void 0 : (_data$cpt6$details$ad = _data$cpt6$details.address) === null || _data$cpt6$details$ad === void 0 ? void 0 : _data$cpt6$details$ad.doorNo,
          street: !(data !== null && data !== void 0 && data.cpt) ? data === null || data === void 0 ? void 0 : (_data$address8 = data.address) === null || _data$address8 === void 0 ? void 0 : _data$address8.street : data === null || data === void 0 ? void 0 : (_data$cpt7 = data.cpt) === null || _data$cpt7 === void 0 ? void 0 : (_data$cpt7$details = _data$cpt7.details) === null || _data$cpt7$details === void 0 ? void 0 : (_data$cpt7$details$ad = _data$cpt7$details.address) === null || _data$cpt7$details$ad === void 0 ? void 0 : _data$cpt7$details$ad.street,
          landmark: !(data !== null && data !== void 0 && data.cpt) ? data === null || data === void 0 ? void 0 : (_data$address9 = data.address) === null || _data$address9 === void 0 ? void 0 : _data$address9.landmark : data === null || data === void 0 ? void 0 : (_data$cpt8 = data.cpt) === null || _data$cpt8 === void 0 ? void 0 : (_data$cpt8$details = _data$cpt8.details) === null || _data$cpt8$details === void 0 ? void 0 : (_data$cpt8$details$ad = _data$cpt8$details.address) === null || _data$cpt8$details$ad === void 0 ? void 0 : _data$cpt8$details$ad.landmark
        },
        noOfEmployees: (data === null || data === void 0 ? void 0 : (_data$TradeDetails5 = data.TradeDetails) === null || _data$TradeDetails5 === void 0 ? void 0 : _data$TradeDetails5.NumberOfEmployees) || null,
        operationalArea: (data === null || data === void 0 ? void 0 : (_data$TradeDetails6 = data.TradeDetails) === null || _data$TradeDetails6 === void 0 ? void 0 : _data$TradeDetails6.OperationalSqFtArea) || null,
        applicationDocuments: null,
        accessories: data !== null && data !== void 0 && (_data$TradeDetails7 = data.TradeDetails) !== null && _data$TradeDetails7 !== void 0 && _data$TradeDetails7.accessories && data !== null && data !== void 0 && (_data$TradeDetails8 = data.TradeDetails) !== null && _data$TradeDetails8 !== void 0 && (_data$TradeDetails8$i = _data$TradeDetails8.isAccessories) !== null && _data$TradeDetails8$i !== void 0 && (_data$TradeDetails8$i2 = _data$TradeDetails8$i.i18nKey) !== null && _data$TradeDetails8$i2 !== void 0 && _data$TradeDetails8$i2.includes("YES") ? getaccessories(data) : null,
        owners: getownerarray(data),
        ...((data === null || data === void 0 ? void 0 : (_data$ownershipCatego2 = data.ownershipCategory) === null || _data$ownershipCatego2 === void 0 ? void 0 : _data$ownershipCatego2.code.includes("INSTITUTIONAL")) && {
          institution: {
            designation: data === null || data === void 0 ? void 0 : (_data$owners9 = data.owners) === null || _data$owners9 === void 0 ? void 0 : (_data$owners9$owners = _data$owners9.owners) === null || _data$owners9$owners === void 0 ? void 0 : (_data$owners9$owners$ = _data$owners9$owners[0]) === null || _data$owners9$owners$ === void 0 ? void 0 : _data$owners9$owners$.designation,
            ContactNo: data === null || data === void 0 ? void 0 : (_data$owners10 = data.owners) === null || _data$owners10 === void 0 ? void 0 : (_data$owners10$owners = _data$owners10.owners) === null || _data$owners10$owners === void 0 ? void 0 : (_data$owners10$owners2 = _data$owners10$owners[0]) === null || _data$owners10$owners2 === void 0 ? void 0 : _data$owners10$owners2.altContactNumber,
            mobileNumber: data === null || data === void 0 ? void 0 : (_data$owners11 = data.owners) === null || _data$owners11 === void 0 ? void 0 : (_data$owners11$owners = _data$owners11.owners) === null || _data$owners11$owners === void 0 ? void 0 : (_data$owners11$owners2 = _data$owners11$owners[0]) === null || _data$owners11$owners2 === void 0 ? void 0 : _data$owners11$owners2.mobilenumber,
            instituionName: data === null || data === void 0 ? void 0 : (_data$owners12 = data.owners) === null || _data$owners12 === void 0 ? void 0 : (_data$owners12$owners = _data$owners12.owners) === null || _data$owners12$owners === void 0 ? void 0 : (_data$owners12$owners2 = _data$owners12$owners[0]) === null || _data$owners12$owners2 === void 0 ? void 0 : _data$owners12$owners2.institutionName,
            name: data === null || data === void 0 ? void 0 : (_data$owners13 = data.owners) === null || _data$owners13 === void 0 ? void 0 : (_data$owners13$owners = _data$owners13.owners) === null || _data$owners13$owners === void 0 ? void 0 : (_data$owners13$owners2 = _data$owners13$owners[0]) === null || _data$owners13$owners2 === void 0 ? void 0 : _data$owners13$owners2.name
          }
        }),
        structureType: (data === null || data === void 0 ? void 0 : (_data$TradeDetails9 = data.TradeDetails) === null || _data$TradeDetails9 === void 0 ? void 0 : (_data$TradeDetails9$S = _data$TradeDetails9.StructureType) === null || _data$TradeDetails9$S === void 0 ? void 0 : _data$TradeDetails9$S.code) !== "IMMOVABLE" ? data === null || data === void 0 ? void 0 : (_data$TradeDetails10 = data.TradeDetails) === null || _data$TradeDetails10 === void 0 ? void 0 : (_data$TradeDetails10$ = _data$TradeDetails10.VehicleType) === null || _data$TradeDetails10$ === void 0 ? void 0 : _data$TradeDetails10$.code : data === null || data === void 0 ? void 0 : (_data$TradeDetails11 = data.TradeDetails) === null || _data$TradeDetails11 === void 0 ? void 0 : (_data$TradeDetails11$ = _data$TradeDetails11.BuildingType) === null || _data$TradeDetails11$ === void 0 ? void 0 : _data$TradeDetails11$.code,
        subOwnerShipCategory: data !== null && data !== void 0 && (_data$owners$owners = data.owners.owners) !== null && _data$owners$owners !== void 0 && (_data$owners$owners$ = _data$owners$owners[0]) !== null && _data$owners$owners$ !== void 0 && (_data$owners$owners$$ = _data$owners$owners$.subOwnerShipCategory) !== null && _data$owners$owners$$ !== void 0 && _data$owners$owners$$.code ? data === null || data === void 0 ? void 0 : (_data$owners$owners2 = data.owners.owners) === null || _data$owners$owners2 === void 0 ? void 0 : (_data$owners$owners2$ = _data$owners$owners2[0]) === null || _data$owners$owners2$ === void 0 ? void 0 : (_data$owners$owners2$2 = _data$owners$owners2$.subOwnerShipCategory) === null || _data$owners$owners2$2 === void 0 ? void 0 : _data$owners$owners2$2.code : data === null || data === void 0 ? void 0 : (_data$ownershipCatego3 = data.ownershipCategory) === null || _data$ownershipCatego3 === void 0 ? void 0 : _data$ownershipCatego3.code,
        tradeUnits: gettradeunits(data),
        additionalDetail: {
          propertyId: !(data !== null && data !== void 0 && data.cpt) ? "" : data === null || data === void 0 ? void 0 : (_data$cpt9 = data.cpt) === null || _data$cpt9 === void 0 ? void 0 : (_data$cpt9$details = _data$cpt9.details) === null || _data$cpt9$details === void 0 ? void 0 : _data$cpt9$details.propertyId,
          isSameAsPropertyOwner: isSameAsPropertyOwner,
          tradeGstNo: (data === null || data === void 0 ? void 0 : (_data$TradeDetails12 = data.TradeDetails) === null || _data$TradeDetails12 === void 0 ? void 0 : _data$TradeDetails12.TradeGSTNumber) || null
        }
      },
      tradeName: data === null || data === void 0 ? void 0 : (_data$TradeDetails13 = data.TradeDetails) === null || _data$TradeDetails13 === void 0 ? void 0 : _data$TradeDetails13.TradeName,
      wfDocuments: [],
      applicationDocuments: [],
      workflowCode: "NewTL"
    }]
  };
  return formdata;
};
const getwfdocuments = data => {
  let wfdoc = [];
  let doc = data ? data.owners.documents : [];
  doc["OwnerPhotoProof"] && wfdoc.push({
    fileName: doc["OwnerPhotoProof"].name,
    fileStoreId: doc["OwnerPhotoProof"].fileStoreId,
    documentType: "OWNERPHOTO",
    tenantId: data === null || data === void 0 ? void 0 : data.tenantId
  });
  doc["ProofOfIdentity"] && wfdoc.push({
    fileName: doc["ProofOfIdentity"].name,
    fileStoreId: doc["ProofOfIdentity"].fileStoreId,
    documentType: "OWNERIDPROOF",
    tenantId: data === null || data === void 0 ? void 0 : data.tenantId
  });
  doc["ProofOfOwnership"] && wfdoc.push({
    fileName: doc["ProofOfOwnership"].name,
    fileStoreId: doc["ProofOfOwnership"].fileStoreId,
    documentType: "OWNERSHIPPROOF",
    tenantId: data === null || data === void 0 ? void 0 : data.tenantId
  });
  return wfdoc;
};
const getEditTradeDocumentUpdate = data => {
  var _data$tradeLicenseDet6, _data$tradeLicenseDet7, _data$tradeLicenseDet8, _data$tradeLicenseDet9, _data$tradeLicenseDet10, _data$tradeLicenseDet11, _data$tradeLicenseDet12, _data$tradeLicenseDet13;
  let updateddocuments = [];
  let doc = data ? data.owners.documents : [];
  data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet6 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet6 === void 0 ? void 0 : (_data$tradeLicenseDet7 = _data$tradeLicenseDet6.applicationDocuments) === null || _data$tradeLicenseDet7 === void 0 ? void 0 : _data$tradeLicenseDet7.map(olddoc => {
    if (olddoc.documentType === "OWNERPHOTO" && olddoc.fileStoreId === data.owners.documents["OwnerPhotoProof"].fileStoreId || olddoc.documentType === "OWNERSHIPPROOF" && olddoc.fileStoreId == data.owners.documents["ProofOfOwnership"].fileStoreId || olddoc.documentType === "OWNERIDPROOF" && olddoc.fileStoreId === data.owners.documents["ProofOfIdentity"].fileStoreId) {
      updateddocuments.push(olddoc);
    } else {
      if (olddoc.documentType === "OWNERPHOTO" && olddoc.fileStoreId !== data.owners.documents["OwnerPhotoProof"].fileStoreId) {
        updateddocuments.push({
          fileName: doc["OwnerPhotoProof"].name,
          fileStoreId: doc["OwnerPhotoProof"].fileStoreId,
          documentType: "OWNERPHOTO",
          tenantId: data === null || data === void 0 ? void 0 : data.tenantId
        });
        updateddocuments.push({
          ...olddoc,
          active: "false"
        });
      }
      if (olddoc.documentType === "OWNERSHIPPROOF" && olddoc.fileStoreId !== data.owners.documents["ProofOfOwnership"].fileStoreId) {
        updateddocuments.push({
          fileName: doc["ProofOfOwnership"].name,
          fileStoreId: doc["ProofOfOwnership"].fileStoreId,
          documentType: "OWNERSHIPPROOF",
          tenantId: data === null || data === void 0 ? void 0 : data.tenantId
        });
        updateddocuments.push({
          ...olddoc,
          active: "false"
        });
      }
      if (olddoc.documentType === "OWNERIDPROOF" && olddoc.fileStoreId !== data.owners.documents["ProofOfIdentity"].fileStoreId) {
        updateddocuments.push({
          fileName: doc["ProofOfIdentity"].name,
          fileStoreId: doc["ProofOfIdentity"].fileStoreId,
          documentType: "OWNERIDPROOF",
          tenantId: data === null || data === void 0 ? void 0 : data.tenantId
        });
        updateddocuments.push({
          ...olddoc,
          active: "false"
        });
      }
    }
  });
  if ((data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet8 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet8 === void 0 ? void 0 : (_data$tradeLicenseDet9 = _data$tradeLicenseDet8.applicationDocuments) === null || _data$tradeLicenseDet9 === void 0 ? void 0 : (_data$tradeLicenseDet10 = _data$tradeLicenseDet9.filter(doc => (doc === null || doc === void 0 ? void 0 : doc.documentType) === "OLDLICENCENO")) === null || _data$tradeLicenseDet10 === void 0 ? void 0 : _data$tradeLicenseDet10.length) > 0) updateddocuments.push(data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet11 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet11 === void 0 ? void 0 : (_data$tradeLicenseDet12 = _data$tradeLicenseDet11.applicationDocuments) === null || _data$tradeLicenseDet12 === void 0 ? void 0 : (_data$tradeLicenseDet13 = _data$tradeLicenseDet12.filter(doc => (doc === null || doc === void 0 ? void 0 : doc.documentType) === "OLDLICENCENO")) === null || _data$tradeLicenseDet13 === void 0 ? void 0 : _data$tradeLicenseDet13[0]);
  return updateddocuments;
};
const getEditRenewTradeDocumentUpdate = (data, datafromflow) => {
  let updateddocuments = [];
  let doc = datafromflow ? datafromflow.owners.documents : [];
  data.tradeLicenseDetail.applicationDocuments.map(olddoc => {
    if (olddoc.documentType === "OWNERPHOTO" && olddoc.fileStoreId === datafromflow.owners.documents["OwnerPhotoProof"].fileStoreId || olddoc.documentType === "OWNERSHIPPROOF" && olddoc.fileStoreId == datafromflow.owners.documents["ProofOfOwnership"].fileStoreId || olddoc.documentType === "OWNERIDPROOF" && olddoc.fileStoreId === datafromflow.owners.documents["ProofOfIdentity"].fileStoreId) {
      updateddocuments.push(olddoc);
    } else {
      if (olddoc.documentType === "OWNERPHOTO" && olddoc.fileStoreId !== datafromflow.owners.documents["OwnerPhotoProof"].fileStoreId) {
        updateddocuments.push({
          fileName: doc["OwnerPhotoProof"].name,
          fileStoreId: doc["OwnerPhotoProof"].fileStoreId,
          documentType: "OWNERPHOTO",
          tenantId: data === null || data === void 0 ? void 0 : data.tenantId
        });
        updateddocuments.push({
          ...olddoc,
          active: "false"
        });
      }
      if (olddoc.documentType === "OWNERSHIPPROOF" && olddoc.fileStoreId !== datafromflow.owners.documents["ProofOfOwnership"].fileStoreId) {
        updateddocuments.push({
          fileName: doc["ProofOfOwnership"].name,
          fileStoreId: doc["ProofOfOwnership"].fileStoreId,
          documentType: "OWNERSHIPPROOF",
          tenantId: data === null || data === void 0 ? void 0 : data.tenantId
        });
        updateddocuments.push({
          ...olddoc,
          active: "false"
        });
      }
      if (olddoc.documentType === "OWNERIDPROOF" && olddoc.fileStoreId !== datafromflow.owners.documents["ProofOfIdentity"].fileStoreId) {
        updateddocuments.push({
          fileName: doc["ProofOfIdentity"].name,
          fileStoreId: doc["ProofOfIdentity"].fileStoreId,
          documentType: "OWNERIDPROOF",
          tenantId: data === null || data === void 0 ? void 0 : data.tenantId
        });
        updateddocuments.push({
          ...olddoc,
          active: "false"
        });
      }
    }
  });
  return updateddocuments;
};
const convertToUpdateTrade = (data = {}, datafromflow, tenantId) => {
  const isEdit = window.location.href.includes("renew-trade");
  let formdata1 = {
    Licenses: []
  };
  formdata1.Licenses[0] = {
    ...data.Licenses[0]
  };
  formdata1.Licenses[0].action = "APPLY";
  formdata1.Licenses[0].wfDocuments = formdata1.Licenses[0].wfDocuments ? formdata1.Licenses[0].wfDocuments : getwfdocuments(datafromflow);
  formdata1.Licenses[0].tradeLicenseDetail.applicationDocuments = !isEdit ? formdata1.Licenses[0].tradeLicenseDetail.applicationDocuments ? formdata1.Licenses[0].tradeLicenseDetail.applicationDocuments : getwfdocuments(datafromflow) : getEditRenewTradeDocumentUpdate(data === null || data === void 0 ? void 0 : data.Licenses[0], datafromflow);
  return formdata1;
};
const getvalidfromdate = (date, fy) => {
  let temp = parseInt(fy[0].id);
  let object = fy === null || fy === void 0 ? void 0 : fy[0];
  fy && fy.map(ob => {
    if (parseInt(ob.id) > temp) {
      object = ob;
      temp = parseInt(ob.id);
    }
  });
  return object;
};
const stringToBoolean = value => {
  if (value) {
    switch (value.toLowerCase().trim()) {
      case "true":
      case "yes":
      case "1":
        return true;
      case "false":
      case "no":
      case "0":
      case null:
        return false;
      default:
        return Boolean(value);
    }
  } else {
    return Boolean(value);
  }
};
const convertToEditTrade = (data, fy = []) => {
  var _fy$filter, _fy$filter$, _fy$filter2, _fy$filter2$, _data$address10, _data$address10$city, _data$TradeDetails14, _data$TradeDetails15, _gettradeupdateaccess, _data$TradeDetails16, _data$TradeDetails17, _data$TradeDetails18, _data$ownershipCatego4, _data$owners14, _data$owners14$owners, _data$owners14$owners2, _data$ownershipCatego5, _data$TradeDetails19, _data$ownershipCatego6, _data$owners15, _data$owners15$owners, _data$owners15$owners2, _data$owners16, _data$owners16$owners, _data$owners16$owners2, _data$owners17, _data$owners17$owners, _data$owners17$owners2, _data$owners18, _data$owners18$owners, _data$owners18$owners2, _data$owners19, _data$owners19$owners, _data$owners19$owners2;
  const currrentFYending = fy === null || fy === void 0 ? void 0 : (_fy$filter = fy.filter(item => (item === null || item === void 0 ? void 0 : item.code) === (data === null || data === void 0 ? void 0 : data.financialYear))) === null || _fy$filter === void 0 ? void 0 : (_fy$filter$ = _fy$filter[0]) === null || _fy$filter$ === void 0 ? void 0 : _fy$filter$.endingDate;
  const nextFinancialYearForRenewal = fy === null || fy === void 0 ? void 0 : (_fy$filter2 = fy.filter(item => (item === null || item === void 0 ? void 0 : item.startingDate) === currrentFYending)) === null || _fy$filter2 === void 0 ? void 0 : (_fy$filter2$ = _fy$filter2[0]) === null || _fy$filter2$ === void 0 ? void 0 : _fy$filter2$.code;
  let isDirectrenewal = stringToBoolean(sessionStorage.getItem("isDirectRenewal"));
  let isSameAsPropertyOwner = sessionStorage.getItem("isSameAsPropertyOwner");
  let formdata = {
    Licenses: [{
      id: data === null || data === void 0 ? void 0 : data.id,
      tenantId: data === null || data === void 0 ? void 0 : (_data$address10 = data.address) === null || _data$address10 === void 0 ? void 0 : (_data$address10$city = _data$address10.city) === null || _data$address10$city === void 0 ? void 0 : _data$address10$city.code,
      businessService: data === null || data === void 0 ? void 0 : data.businessService,
      licenseType: data === null || data === void 0 ? void 0 : data.licenseType,
      applicationType: "RENEWAL",
      workflowCode: isDirectrenewal ? "DIRECTRENEWAL" : "EDITRENEWAL",
      licenseNumber: data === null || data === void 0 ? void 0 : data.licenseNumber,
      applicationNumber: data === null || data === void 0 ? void 0 : data.applicationNumber,
      tradeName: data === null || data === void 0 ? void 0 : data.tradeName,
      applicationDate: data === null || data === void 0 ? void 0 : data.applicationDate,
      commencementDate: data === null || data === void 0 ? void 0 : data.commencementDate,
      issuedDate: data === null || data === void 0 ? void 0 : data.issuedDate,
      financialYear: nextFinancialYearForRenewal || "2022-23",
      validFrom: data === null || data === void 0 ? void 0 : data.validFrom,
      validTo: data === null || data === void 0 ? void 0 : data.validTo,
      action: "INITIATE",
      wfDocuments: data === null || data === void 0 ? void 0 : data.wfDocuments,
      status: data === null || data === void 0 ? void 0 : data.status,
      tradeLicenseDetail: {
        address: data.tradeLicenseDetail.address,
        applicationDocuments: data.tradeLicenseDetail.applicationDocuments,
        noOfEmployees: (data === null || data === void 0 ? void 0 : (_data$TradeDetails14 = data.TradeDetails) === null || _data$TradeDetails14 === void 0 ? void 0 : _data$TradeDetails14.NumberOfEmployees) || null,
        operationalArea: (data === null || data === void 0 ? void 0 : (_data$TradeDetails15 = data.TradeDetails) === null || _data$TradeDetails15 === void 0 ? void 0 : _data$TradeDetails15.OperationalSqFtArea) || null,
        accessories: isDirectrenewal ? data.tradeLicenseDetail.accessories : (_gettradeupdateaccess = gettradeupdateaccessories(data)) === null || _gettradeupdateaccess === void 0 ? void 0 : _gettradeupdateaccess.filter(ob => (ob === null || ob === void 0 ? void 0 : ob.active) !== false),
        owners: isDirectrenewal ? data.tradeLicenseDetail.owners : gettradeownerarray(data),
        structureType: isDirectrenewal ? data.tradeLicenseDetail.structureType : data !== null && data !== void 0 && (_data$TradeDetails16 = data.TradeDetails) !== null && _data$TradeDetails16 !== void 0 && _data$TradeDetails16.VehicleType ? data === null || data === void 0 ? void 0 : (_data$TradeDetails17 = data.TradeDetails) === null || _data$TradeDetails17 === void 0 ? void 0 : _data$TradeDetails17.VehicleType.code : data === null || data === void 0 ? void 0 : (_data$TradeDetails18 = data.TradeDetails) === null || _data$TradeDetails18 === void 0 ? void 0 : _data$TradeDetails18.BuildingType.code,
        subOwnerShipCategory: data !== null && data !== void 0 && (_data$ownershipCatego4 = data.ownershipCategory) !== null && _data$ownershipCatego4 !== void 0 && _data$ownershipCatego4.code.includes("INSTITUTIONAL") ? data === null || data === void 0 ? void 0 : (_data$owners14 = data.owners) === null || _data$owners14 === void 0 ? void 0 : (_data$owners14$owners = _data$owners14.owners) === null || _data$owners14$owners === void 0 ? void 0 : (_data$owners14$owners2 = _data$owners14$owners[0]) === null || _data$owners14$owners2 === void 0 ? void 0 : _data$owners14$owners2.subOwnerShipCategory.code : data === null || data === void 0 ? void 0 : (_data$ownershipCatego5 = data.ownershipCategory) === null || _data$ownershipCatego5 === void 0 ? void 0 : _data$ownershipCatego5.code,
        tradeUnits: gettradeupdateunits(data),
        additionalDetail: {
          ...data.tradeLicenseDetail.additionalDetail,
          isSameAsPropertyOwner: isSameAsPropertyOwner
        },
        tradeGstNo: (data === null || data === void 0 ? void 0 : (_data$TradeDetails19 = data.TradeDetails) === null || _data$TradeDetails19 === void 0 ? void 0 : _data$TradeDetails19.TradeGSTNumber) || null,
        auditDetails: data.tradeLicenseDetail.auditDetails,
        channel: "CITIZEN",
        id: data.tradeLicenseDetail.id,
        ...((data === null || data === void 0 ? void 0 : (_data$ownershipCatego6 = data.ownershipCategory) === null || _data$ownershipCatego6 === void 0 ? void 0 : _data$ownershipCatego6.code.includes("INSTITUTIONAL")) && {
          institution: {
            designation: data === null || data === void 0 ? void 0 : (_data$owners15 = data.owners) === null || _data$owners15 === void 0 ? void 0 : (_data$owners15$owners = _data$owners15.owners) === null || _data$owners15$owners === void 0 ? void 0 : (_data$owners15$owners2 = _data$owners15$owners[0]) === null || _data$owners15$owners2 === void 0 ? void 0 : _data$owners15$owners2.designation,
            ContactNo: data === null || data === void 0 ? void 0 : (_data$owners16 = data.owners) === null || _data$owners16 === void 0 ? void 0 : (_data$owners16$owners = _data$owners16.owners) === null || _data$owners16$owners === void 0 ? void 0 : (_data$owners16$owners2 = _data$owners16$owners[0]) === null || _data$owners16$owners2 === void 0 ? void 0 : _data$owners16$owners2.altContactNumber,
            mobileNumber: data === null || data === void 0 ? void 0 : (_data$owners17 = data.owners) === null || _data$owners17 === void 0 ? void 0 : (_data$owners17$owners = _data$owners17.owners) === null || _data$owners17$owners === void 0 ? void 0 : (_data$owners17$owners2 = _data$owners17$owners[0]) === null || _data$owners17$owners2 === void 0 ? void 0 : _data$owners17$owners2.mobilenumber,
            instituionName: data === null || data === void 0 ? void 0 : (_data$owners18 = data.owners) === null || _data$owners18 === void 0 ? void 0 : (_data$owners18$owners = _data$owners18.owners) === null || _data$owners18$owners === void 0 ? void 0 : (_data$owners18$owners2 = _data$owners18$owners[0]) === null || _data$owners18$owners2 === void 0 ? void 0 : _data$owners18$owners2.institutionName,
            name: data === null || data === void 0 ? void 0 : (_data$owners19 = data.owners) === null || _data$owners19 === void 0 ? void 0 : (_data$owners19$owners = _data$owners19.owners) === null || _data$owners19$owners === void 0 ? void 0 : (_data$owners19$owners2 = _data$owners19$owners[0]) === null || _data$owners19$owners2 === void 0 ? void 0 : _data$owners19$owners2.name
          }
        })
      },
      calculation: null,
      auditDetails: data === null || data === void 0 ? void 0 : data.auditDetails,
      accountId: data === null || data === void 0 ? void 0 : data.accountId
    }]
  };
  return formdata;
};
const convertToResubmitTrade = data => {
  var _data$address11, _data$address11$city, _data$workflowObject, _data$workflowObject$, _data$workflowObject$2, _data$TradeDetails20, _data$TradeDetails21, _data$TradeDetails22, _data$TradeDetails23, _data$TradeDetails24, _data$ownershipCatego7, _data$owners20, _data$owners20$owners, _data$owners20$owners2, _data$ownershipCatego8, _data$ownershipCatego9, _data$owners21, _data$owners21$owners, _data$owners21$owners2, _data$owners22, _data$owners22$owners, _data$owners22$owners2, _data$owners23, _data$owners23$owners, _data$owners23$owners2, _data$owners24, _data$owners24$owners, _data$owners24$owners2, _data$owners25, _data$owners25$owners, _data$owners25$owners2, _data$tradeLicenseDet14;
  let formdata = {
    Licenses: [{
      id: data === null || data === void 0 ? void 0 : data.id,
      tenantId: data === null || data === void 0 ? void 0 : (_data$address11 = data.address) === null || _data$address11 === void 0 ? void 0 : (_data$address11$city = _data$address11.city) === null || _data$address11$city === void 0 ? void 0 : _data$address11$city.code,
      businessService: data === null || data === void 0 ? void 0 : data.businessService,
      licenseType: data === null || data === void 0 ? void 0 : data.licenseType,
      applicationType: data.applicationType,
      workflowCode: data.workflowCode,
      licenseNumber: data === null || data === void 0 ? void 0 : data.licenseNumber,
      applicationNumber: data === null || data === void 0 ? void 0 : data.applicationNumber,
      tradeName: data === null || data === void 0 ? void 0 : data.tradeName,
      applicationDate: data === null || data === void 0 ? void 0 : data.applicationDate,
      commencementDate: data === null || data === void 0 ? void 0 : data.commencementDate,
      issuedDate: data === null || data === void 0 ? void 0 : data.issuedDate,
      financialYear: data === null || data === void 0 ? void 0 : data.financialYear,
      validFrom: data === null || data === void 0 ? void 0 : data.validFrom,
      validTo: data === null || data === void 0 ? void 0 : data.validTo,
      action: (data === null || data === void 0 ? void 0 : (_data$workflowObject = data.workflowObject) === null || _data$workflowObject === void 0 ? void 0 : (_data$workflowObject$ = _data$workflowObject.nextActions) === null || _data$workflowObject$ === void 0 ? void 0 : (_data$workflowObject$2 = _data$workflowObject$[0]) === null || _data$workflowObject$2 === void 0 ? void 0 : _data$workflowObject$2.action) || "FORWARD",
      wfDocuments: data === null || data === void 0 ? void 0 : data.wfDocuments,
      status: data === null || data === void 0 ? void 0 : data.status,
      tradeLicenseDetail: {
        address: data.tradeLicenseDetail.address,
        noOfEmployees: (data === null || data === void 0 ? void 0 : (_data$TradeDetails20 = data.TradeDetails) === null || _data$TradeDetails20 === void 0 ? void 0 : _data$TradeDetails20.NumberOfEmployees) || null,
        operationalArea: (data === null || data === void 0 ? void 0 : (_data$TradeDetails21 = data.TradeDetails) === null || _data$TradeDetails21 === void 0 ? void 0 : _data$TradeDetails21.OperationalSqFtArea) || null,
        applicationDocuments: getEditTradeDocumentUpdate(data),
        accessories: gettradeupdateaccessories(data),
        owners: gettradeownerarray(data),
        structureType: data !== null && data !== void 0 && (_data$TradeDetails22 = data.TradeDetails) !== null && _data$TradeDetails22 !== void 0 && _data$TradeDetails22.VehicleType ? data === null || data === void 0 ? void 0 : (_data$TradeDetails23 = data.TradeDetails) === null || _data$TradeDetails23 === void 0 ? void 0 : _data$TradeDetails23.VehicleType.code : data === null || data === void 0 ? void 0 : (_data$TradeDetails24 = data.TradeDetails) === null || _data$TradeDetails24 === void 0 ? void 0 : _data$TradeDetails24.BuildingType.code,
        subOwnerShipCategory: data !== null && data !== void 0 && (_data$ownershipCatego7 = data.ownershipCategory) !== null && _data$ownershipCatego7 !== void 0 && _data$ownershipCatego7.code.includes("INSTITUTIONAL") ? data === null || data === void 0 ? void 0 : (_data$owners20 = data.owners) === null || _data$owners20 === void 0 ? void 0 : (_data$owners20$owners = _data$owners20.owners) === null || _data$owners20$owners === void 0 ? void 0 : (_data$owners20$owners2 = _data$owners20$owners[0]) === null || _data$owners20$owners2 === void 0 ? void 0 : _data$owners20$owners2.subOwnerShipCategory.code : data === null || data === void 0 ? void 0 : (_data$ownershipCatego8 = data.ownershipCategory) === null || _data$ownershipCatego8 === void 0 ? void 0 : _data$ownershipCatego8.code,
        tradeUnits: gettradeupdateunits(data),
        additionalDetail: data.tradeLicenseDetail.additionalDetail,
        auditDetails: data.tradeLicenseDetail.auditDetails,
        channel: "CITIZEN",
        id: data.tradeLicenseDetail.id,
        institution: data !== null && data !== void 0 && (_data$ownershipCatego9 = data.ownershipCategory) !== null && _data$ownershipCatego9 !== void 0 && _data$ownershipCatego9.code.includes("INSTITUTIONAL") ? {
          designation: data === null || data === void 0 ? void 0 : (_data$owners21 = data.owners) === null || _data$owners21 === void 0 ? void 0 : (_data$owners21$owners = _data$owners21.owners) === null || _data$owners21$owners === void 0 ? void 0 : (_data$owners21$owners2 = _data$owners21$owners[0]) === null || _data$owners21$owners2 === void 0 ? void 0 : _data$owners21$owners2.designation,
          ContactNo: data === null || data === void 0 ? void 0 : (_data$owners22 = data.owners) === null || _data$owners22 === void 0 ? void 0 : (_data$owners22$owners = _data$owners22.owners) === null || _data$owners22$owners === void 0 ? void 0 : (_data$owners22$owners2 = _data$owners22$owners[0]) === null || _data$owners22$owners2 === void 0 ? void 0 : _data$owners22$owners2.altContactNumber,
          mobileNumber: data === null || data === void 0 ? void 0 : (_data$owners23 = data.owners) === null || _data$owners23 === void 0 ? void 0 : (_data$owners23$owners = _data$owners23.owners) === null || _data$owners23$owners === void 0 ? void 0 : (_data$owners23$owners2 = _data$owners23$owners[0]) === null || _data$owners23$owners2 === void 0 ? void 0 : _data$owners23$owners2.mobilenumber,
          instituionName: data === null || data === void 0 ? void 0 : (_data$owners24 = data.owners) === null || _data$owners24 === void 0 ? void 0 : (_data$owners24$owners = _data$owners24.owners) === null || _data$owners24$owners === void 0 ? void 0 : (_data$owners24$owners2 = _data$owners24$owners[0]) === null || _data$owners24$owners2 === void 0 ? void 0 : _data$owners24$owners2.institutionName,
          name: data === null || data === void 0 ? void 0 : (_data$owners25 = data.owners) === null || _data$owners25 === void 0 ? void 0 : (_data$owners25$owners = _data$owners25.owners) === null || _data$owners25$owners === void 0 ? void 0 : (_data$owners25$owners2 = _data$owners25$owners[0]) === null || _data$owners25$owners2 === void 0 ? void 0 : _data$owners25$owners2.name
        } : data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet14 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet14 === void 0 ? void 0 : _data$tradeLicenseDet14.institution
      },
      calculation: null,
      auditDetails: data === null || data === void 0 ? void 0 : data.auditDetails,
      accountId: data === null || data === void 0 ? void 0 : data.accountId
    }]
  };
  return formdata;
};
const convertEpochToDateCitizen = dateEpoch => {
  if (dateEpoch) {
    const dateFromApi = new Date(dateEpoch);
    let month = dateFromApi.getMonth() + 1;
    let day = dateFromApi.getDate();
    let year = dateFromApi.getFullYear();
    month = (month > 9 ? "" : "0") + month;
    day = (day > 9 ? "" : "0") + day;
    return `${day}/${month}/${year}`;
  } else {
    return null;
  }
};
const getCommencementDataFormat = date => {
  let newDate = new Date(date).getFullYear().toString() + "-" + (new Date(date).getMonth() + 1).toString() + "-" + new Date(date).getDate().toString();
  return newDate;
};
const pdfDownloadLink = (documents = {}, fileStoreId = "", format = "") => {
  let downloadLink = documents[fileStoreId] || "";
  let differentFormats = (downloadLink === null || downloadLink === void 0 ? void 0 : downloadLink.split(",")) || [];
  let fileURL = "";
  differentFormats.length > 0 && differentFormats.map(link => {
    if (!link.includes("large") && !link.includes("medium") && !link.includes("small")) {
      fileURL = link;
    }
  });
  return fileURL;
};
const pdfDocumentName = (documentLink = "", index = 0) => {
  let documentName = decodeURIComponent(documentLink.split("?")[0].split("/").pop().slice(13)) || `Document - ${index + 1}`;
  return documentName;
};
const convertEpochToDate = dateEpoch => {
  if (dateEpoch) {
    const dateFromApi = new Date(dateEpoch);
    let month = dateFromApi.getMonth() + 1;
    let day = dateFromApi.getDate();
    let year = dateFromApi.getFullYear();
    month = (month > 9 ? "" : "0") + month;
    day = (day > 9 ? "" : "0") + day;
    return `${year}-${month}-${day}`;
  } else {
    return null;
  }
};
const stringReplaceAll = (str = "", searcher = "", replaceWith = "") => {
  if (searcher == "") return str;
  while (str.includes(searcher)) {
    str = str.replace(searcher, replaceWith);
  }
  return str;
};
const getUniqueItemsFromArray = (data, identifier) => {
  const uniqueArray = [];
  const map = new Map();
  for (const item of data) {
    if (!map.has(item[identifier])) {
      map.set(item[identifier], true);
      uniqueArray.push(item);
    }
  }
  return uniqueArray;
};
const commonTransform = (object, path) => {
  let data = get_1(object, path);
  let transformedData = {};
  data.map(a => {
    const splitList = a.code.split(".");
    let ipath = "";
    for (let i = 0; i < splitList.length; i += 1) {
      if (i != splitList.length - 1) {
        if (!(splitList[i] in (ipath === "" ? transformedData : get_1(transformedData, ipath)))) {
          set_1(transformedData, ipath === "" ? splitList[i] : ipath + "." + splitList[i], i < splitList.length - 2 ? {} : []);
        }
      } else {
        get_1(transformedData, ipath).push(a);
      }
      ipath = splitList.slice(0, i + 1).join(".");
    }
  });
  set_1(object, path, transformedData);
  return object;
};
const convertDateToEpoch = (dateString, dayStartOrEnd = "dayend") => {
  try {
    const parts = dateString.match(/(\d{4})-(\d{1,2})-(\d{1,2})/);
    const DateObj = new Date(Date.UTC(parts[1], parts[2] - 1, parts[3]));
    DateObj.setMinutes(DateObj.getMinutes() + DateObj.getTimezoneOffset());
    if (dayStartOrEnd === "dayend") {
      DateObj.setHours(DateObj.getHours() + 24);
      DateObj.setSeconds(DateObj.getSeconds() - 1);
    }
    return DateObj.getTime();
  } catch (e) {
    return dateString;
  }
};
const getQueryStringParams = query => {
  return query ? (/^[?#]/.test(query) ? query.slice(1) : query).split("&").reduce((params, param) => {
    let [key, value] = param.split("=");
    params[key] = value ? decodeURIComponent(value.replace(/\+/g, " ")) : "";
    return params;
  }, {}) : {};
};
const getPattern = type => {
  switch (type) {
    case "Name":
      return /^[^{0-9}^\$\"<>?\\\\~!@#$%^()+={}\[\]*,/_:;“”‘’]{1,50}$/i;
    case "MobileNo":
      return /^[6789][0-9]{9}$/i;
    case "Amount":
      return /^[0-9]{0,8}$/i;
    case "NonZeroAmount":
      return /^[1-9][0-9]{0,7}$/i;
    case "DecimalNumber":
      return /^\d{0,8}(\.\d{1,2})?$/i;
    case "Email":
      return /^(?=^.{1,64}$)((([^<>()\[\]\\.,;:\s$*@'"]+(\.[^<>()\[\]\\.,;:\s@'"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,})))$/i;
    case "Address":
      return /^[^\$\"<>?\\\\~`!@$%^()+={}\[\]*:;“”‘’]{1,500}$/i;
    case "PAN":
      return /^[A-Za-z]{5}\d{4}[A-Za-z]{1}$/i;
    case "TradeName":
      return /^[-@.\/#&+\w\s]*$/;
    case "Date":
      return /^[12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])$/i;
    case "UOMValue":
      return /^(0)*[1-9][0-9]{0,5}$/i;
    case "OperationalArea":
      return /^(0)*[1-9][0-9]{0,6}$/i;
    case "NoOfEmp":
      return /^(0)*[1-9][0-9]{0,6}$/i;
    case "GSTNo":
      return /^\d{2}[A-Z]{5}\d{4}[A-Z]{1}\d[Z]{1}[A-Z\d]{1}$/i;
    case "DoorHouseNo":
      return /^[^\$\"'<>?\\\\~`!@$%^()+={}\[\]*:;“”‘’]{1,50}$/i;
    case "BuildingStreet":
      return /^[^\$\"'<>?\\\\~`!@$%^()+={}\[\]*.:;“”‘’]{1,64}$/i;
    case "Pincode":
      return /^[1-9][0-9]{5}$/i;
    case "Landline":
      return /^[0-9]{11}$/i;
    case "PropertyID":
      return /^[a-zA-z0-9\s\\/\-]$/i;
    case "ElectricityConnNo":
      return /^.{1,15}$/i;
    case "DocumentNo":
      return /^[0-9]{1,15}$/i;
    case "eventName":
      return /^[^\$\"<>?\\\\~`!@#$%^()+={}\[\]*,.:;“”]{1,65}$/i;
    case "eventDescription":
      return /^[^\$\"'<>?\\\\~`!@$%^()+={}\[\]*.:;“”‘’]{1,500}$/i;
    case "cancelChallan":
      return /^[^\$\"'<>?\\\\~`!@$%^()+={}\[\]*.:;“”‘’]{1,100}$/i;
    case "FireNOCNo":
      return /^[a-zA-Z0-9-]*$/i;
    case "consumerNo":
      return /^[a-zA-Z0-9/-]*$/i;
    case "AadharNo":
      return /^([0-9]){12}$/;
    case "ChequeNo":
      return /^(?!0{6})[0-9]{6}$/;
    case "Comments":
      return /^[^\$\"'<>?\\\\~`!@$%^()+={}\[\]*.:;“”‘’]{1,50}$/i;
    case "OldLicenceNo":
      return /^[a-zA-Z0-9-/]{0,64}$/;
  }
};
const checkForEmployee = role => {
  var _userInfo$info;
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const userInfo = Digit.UserService.getUser();
  const rolearray = userInfo === null || userInfo === void 0 ? void 0 : (_userInfo$info = userInfo.info) === null || _userInfo$info === void 0 ? void 0 : _userInfo$info.roles.filter(item => {
    if (item.code == role && item.tenantId === tenantId) return true;
  });
  return rolearray === null || rolearray === void 0 ? void 0 : rolearray.length;
};
const convertEpochToDateDMY = dateEpoch => {
  if (dateEpoch == null || dateEpoch == undefined || dateEpoch == "") {
    return "NA";
  }
  const dateFromApi = new Date(dateEpoch);
  let month = dateFromApi.getMonth() + 1;
  let day = dateFromApi.getDate();
  let year = dateFromApi.getFullYear();
  month = (month > 9 ? "" : "0") + month;
  day = (day > 9 ? "" : "0") + day;
  return `${day}/${month}/${year}`;
};
const getOwnersForNewApplication = (formdata, t) => {
  var _formdata$ownershipCa, _formdata$ownershipCa2, _formdata$ownershipCa3, _formdata$ownershipCa4, _formdata$cpt, _formdata$cpt$details, _formdata$cpt$details2, _formdata$ownershipCa5, _formdata$ownershipCa6;
  let owners = [];
  if (formdata !== null && formdata !== void 0 && (_formdata$ownershipCa = formdata.ownershipCategory) !== null && _formdata$ownershipCa !== void 0 && (_formdata$ownershipCa2 = _formdata$ownershipCa.code) !== null && _formdata$ownershipCa2 !== void 0 && _formdata$ownershipCa2.includes("SINGLEOWNER") || formdata !== null && formdata !== void 0 && (_formdata$ownershipCa3 = formdata.ownershipCategory) !== null && _formdata$ownershipCa3 !== void 0 && (_formdata$ownershipCa4 = _formdata$ownershipCa3.code) !== null && _formdata$ownershipCa4 !== void 0 && _formdata$ownershipCa4.includes("MULTIPLEOWNER")) formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt = formdata.cpt) === null || _formdata$cpt === void 0 ? void 0 : (_formdata$cpt$details = _formdata$cpt.details) === null || _formdata$cpt$details === void 0 ? void 0 : (_formdata$cpt$details2 = _formdata$cpt$details.owners) === null || _formdata$cpt$details2 === void 0 ? void 0 : _formdata$cpt$details2.map(ow => {
    owners.push({
      name: ow === null || ow === void 0 ? void 0 : ow.name,
      designation: "",
      mobileNumber: ow === null || ow === void 0 ? void 0 : ow.mobileNumber,
      altContactNumber: "",
      instituionName: "",
      fatherOrHusbandName: ow === null || ow === void 0 ? void 0 : ow.fatherOrHusbandName,
      relationship: {
        code: ow === null || ow === void 0 ? void 0 : ow.relationship,
        i18nKey: `COMMON_RELATION_${ow === null || ow === void 0 ? void 0 : ow.relationship}`
      },
      emailId: ow === null || ow === void 0 ? void 0 : ow.emailId,
      permanentAddress: ow === null || ow === void 0 ? void 0 : ow.permanentAddress,
      ownerType: {
        code: ow === null || ow === void 0 ? void 0 : ow.ownerType,
        i18nKey: ow === null || ow === void 0 ? void 0 : ow.ownerType,
        name: t(`PROPERTYTAX_OWNERTYPE_${ow === null || ow === void 0 ? void 0 : ow.ownerType}`)
      },
      gender: {
        code: ow === null || ow === void 0 ? void 0 : ow.gender,
        i18nKey: `TL_GENDER_${ow === null || ow === void 0 ? void 0 : ow.gender}`
      },
      subOwnerShipCategory: "",
      correspondenceAddress: ow === null || ow === void 0 ? void 0 : ow.correspondenceAddress
    });
  });else if (formdata !== null && formdata !== void 0 && (_formdata$ownershipCa5 = formdata.ownershipCategory) !== null && _formdata$ownershipCa5 !== void 0 && (_formdata$ownershipCa6 = _formdata$ownershipCa5.code) !== null && _formdata$ownershipCa6 !== void 0 && _formdata$ownershipCa6.includes("INSTITUTIONAL")) {
    var _formdata$cpt2, _formdata$cpt2$detail, _formdata$cpt2$detail2, _formdata$cpt3, _formdata$cpt3$detail, _formdata$cpt3$detail2, _formdata$cpt4, _formdata$cpt4$detail, _formdata$cpt4$detail2, _formdata$cpt4$detail3, _formdata$cpt5, _formdata$cpt5$detail, _formdata$cpt5$detail2, _formdata$cpt5$detail3, _formdata$cpt6, _formdata$cpt6$detail, _formdata$cpt6$detail2, _formdata$cpt7, _formdata$cpt7$detail, _formdata$cpt7$detail2, _formdata$cpt7$detail3, _formdata$cpt8, _formdata$cpt8$detail, _formdata$cpt8$detail2, _formdata$cpt8$detail3, _formdata$cpt9, _formdata$cpt9$detail, _formdata$cpt10, _formdata$cpt10$detai, _formdata$cpt10$detai2, _formdata$cpt11, _formdata$cpt11$detai, _formdata$cpt12, _formdata$cpt12$detai, _formdata$cpt12$detai2, _formdata$cpt13, _formdata$cpt13$detai, _formdata$cpt13$detai2, _formdata$cpt13$detai3;
    owners.push({
      name: formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt2 = formdata.cpt) === null || _formdata$cpt2 === void 0 ? void 0 : (_formdata$cpt2$detail = _formdata$cpt2.details) === null || _formdata$cpt2$detail === void 0 ? void 0 : (_formdata$cpt2$detail2 = _formdata$cpt2$detail.institution) === null || _formdata$cpt2$detail2 === void 0 ? void 0 : _formdata$cpt2$detail2.nameOfAuthorizedPerson,
      designation: formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt3 = formdata.cpt) === null || _formdata$cpt3 === void 0 ? void 0 : (_formdata$cpt3$detail = _formdata$cpt3.details) === null || _formdata$cpt3$detail === void 0 ? void 0 : (_formdata$cpt3$detail2 = _formdata$cpt3$detail.institution) === null || _formdata$cpt3$detail2 === void 0 ? void 0 : _formdata$cpt3$detail2.designation,
      mobileNumber: formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt4 = formdata.cpt) === null || _formdata$cpt4 === void 0 ? void 0 : (_formdata$cpt4$detail = _formdata$cpt4.details) === null || _formdata$cpt4$detail === void 0 ? void 0 : (_formdata$cpt4$detail2 = _formdata$cpt4$detail.owners) === null || _formdata$cpt4$detail2 === void 0 ? void 0 : (_formdata$cpt4$detail3 = _formdata$cpt4$detail2[0]) === null || _formdata$cpt4$detail3 === void 0 ? void 0 : _formdata$cpt4$detail3.mobileNumber,
      altContactNumber: formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt5 = formdata.cpt) === null || _formdata$cpt5 === void 0 ? void 0 : (_formdata$cpt5$detail = _formdata$cpt5.details) === null || _formdata$cpt5$detail === void 0 ? void 0 : (_formdata$cpt5$detail2 = _formdata$cpt5$detail.owners) === null || _formdata$cpt5$detail2 === void 0 ? void 0 : (_formdata$cpt5$detail3 = _formdata$cpt5$detail2[0]) === null || _formdata$cpt5$detail3 === void 0 ? void 0 : _formdata$cpt5$detail3.altContactNumber,
      instituionName: formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt6 = formdata.cpt) === null || _formdata$cpt6 === void 0 ? void 0 : (_formdata$cpt6$detail = _formdata$cpt6.details) === null || _formdata$cpt6$detail === void 0 ? void 0 : (_formdata$cpt6$detail2 = _formdata$cpt6$detail.institution) === null || _formdata$cpt6$detail2 === void 0 ? void 0 : _formdata$cpt6$detail2.name,
      fatherOrHusbandName: "",
      relationship: "",
      emailId: formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt7 = formdata.cpt) === null || _formdata$cpt7 === void 0 ? void 0 : (_formdata$cpt7$detail = _formdata$cpt7.details) === null || _formdata$cpt7$detail === void 0 ? void 0 : (_formdata$cpt7$detail2 = _formdata$cpt7$detail.owners) === null || _formdata$cpt7$detail2 === void 0 ? void 0 : (_formdata$cpt7$detail3 = _formdata$cpt7$detail2[0]) === null || _formdata$cpt7$detail3 === void 0 ? void 0 : _formdata$cpt7$detail3.emailId,
      permanentAddress: formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt8 = formdata.cpt) === null || _formdata$cpt8 === void 0 ? void 0 : (_formdata$cpt8$detail = _formdata$cpt8.details) === null || _formdata$cpt8$detail === void 0 ? void 0 : (_formdata$cpt8$detail2 = _formdata$cpt8$detail.owners) === null || _formdata$cpt8$detail2 === void 0 ? void 0 : (_formdata$cpt8$detail3 = _formdata$cpt8$detail2[0]) === null || _formdata$cpt8$detail3 === void 0 ? void 0 : _formdata$cpt8$detail3.permanentAddress,
      ownerType: "",
      gender: "",
      subOwnerShipCategory: {
        active: true,
        code: `${formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt9 = formdata.cpt) === null || _formdata$cpt9 === void 0 ? void 0 : (_formdata$cpt9$detail = _formdata$cpt9.details) === null || _formdata$cpt9$detail === void 0 ? void 0 : _formdata$cpt9$detail.ownershipCategory}.${formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt10 = formdata.cpt) === null || _formdata$cpt10 === void 0 ? void 0 : (_formdata$cpt10$detai = _formdata$cpt10.details) === null || _formdata$cpt10$detai === void 0 ? void 0 : (_formdata$cpt10$detai2 = _formdata$cpt10$detai.institution) === null || _formdata$cpt10$detai2 === void 0 ? void 0 : _formdata$cpt10$detai2.type}`,
        i18nKey: `COMMON_MASTERS_OWNERSHIPCATEGORY_${formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt11 = formdata.cpt) === null || _formdata$cpt11 === void 0 ? void 0 : (_formdata$cpt11$detai = _formdata$cpt11.details) === null || _formdata$cpt11$detai === void 0 ? void 0 : _formdata$cpt11$detai.ownershipCategory}_${formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt12 = formdata.cpt) === null || _formdata$cpt12 === void 0 ? void 0 : (_formdata$cpt12$detai = _formdata$cpt12.details) === null || _formdata$cpt12$detai === void 0 ? void 0 : (_formdata$cpt12$detai2 = _formdata$cpt12$detai.institution) === null || _formdata$cpt12$detai2 === void 0 ? void 0 : _formdata$cpt12$detai2.type}`
      },
      correspondenceAddress: formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt13 = formdata.cpt) === null || _formdata$cpt13 === void 0 ? void 0 : (_formdata$cpt13$detai = _formdata$cpt13.details) === null || _formdata$cpt13$detai === void 0 ? void 0 : (_formdata$cpt13$detai2 = _formdata$cpt13$detai.owners) === null || _formdata$cpt13$detai2 === void 0 ? void 0 : (_formdata$cpt13$detai3 = _formdata$cpt13$detai2[0]) === null || _formdata$cpt13$detai3 === void 0 ? void 0 : _formdata$cpt13$detai3.correspondenceAddress
    });
  }
  return owners;
};
const getOwnersfromProperty = formdata => {
  var _formdata$ownershipCa7, _formdata$ownershipCa8, _formdata$ownershipCa9, _formdata$ownershipCa10, _formdata$cpt14, _formdata$cpt14$detai, _formdata$cpt14$detai2, _formdata$ownershipCa11, _formdata$ownershipCa12;
  let owners = [];
  if (formdata !== null && formdata !== void 0 && (_formdata$ownershipCa7 = formdata.ownershipCategory) !== null && _formdata$ownershipCa7 !== void 0 && (_formdata$ownershipCa8 = _formdata$ownershipCa7.code) !== null && _formdata$ownershipCa8 !== void 0 && _formdata$ownershipCa8.includes("SINGLEOWNER") || formdata !== null && formdata !== void 0 && (_formdata$ownershipCa9 = formdata.ownershipCategory) !== null && _formdata$ownershipCa9 !== void 0 && (_formdata$ownershipCa10 = _formdata$ownershipCa9.code) !== null && _formdata$ownershipCa10 !== void 0 && _formdata$ownershipCa10.includes("MULTIPLEOWNER")) formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt14 = formdata.cpt) === null || _formdata$cpt14 === void 0 ? void 0 : (_formdata$cpt14$detai = _formdata$cpt14.details) === null || _formdata$cpt14$detai === void 0 ? void 0 : (_formdata$cpt14$detai2 = _formdata$cpt14$detai.owners) === null || _formdata$cpt14$detai2 === void 0 ? void 0 : _formdata$cpt14$detai2.map(ow => {
    owners.push({
      name: ow === null || ow === void 0 ? void 0 : ow.name,
      fatherOrHusbandName: ow === null || ow === void 0 ? void 0 : ow.fatherOrHusbandName,
      gender: {
        code: ow === null || ow === void 0 ? void 0 : ow.gender,
        i18nKey: `TL_GENDER_${ow === null || ow === void 0 ? void 0 : ow.gender}`
      },
      isprimaryowner: false,
      emailId: ow === null || ow === void 0 ? void 0 : ow.emailId,
      mobilenumber: ow === null || ow === void 0 ? void 0 : ow.mobileNumber,
      relationship: {
        code: ow === null || ow === void 0 ? void 0 : ow.relationship,
        i18nKey: `COMMON_RELATION_${ow === null || ow === void 0 ? void 0 : ow.relationship}`
      }
    });
  });else if (formdata !== null && formdata !== void 0 && (_formdata$ownershipCa11 = formdata.ownershipCategory) !== null && _formdata$ownershipCa11 !== void 0 && (_formdata$ownershipCa12 = _formdata$ownershipCa11.code) !== null && _formdata$ownershipCa12 !== void 0 && _formdata$ownershipCa12.includes("INSTITUTIONAL")) {
    var _formdata$cpt15, _formdata$cpt15$detai, _formdata$cpt15$detai2, _formdata$cpt16, _formdata$cpt16$detai, _formdata$cpt16$detai2, _formdata$cpt17, _formdata$cpt17$detai, _formdata$cpt17$detai2, _formdata$cpt17$detai3, _formdata$cpt18, _formdata$cpt18$detai, _formdata$cpt18$detai2, _formdata$cpt18$detai3, _formdata$cpt19, _formdata$cpt19$detai, _formdata$cpt19$detai2, _formdata$cpt20, _formdata$cpt20$detai, _formdata$cpt20$detai2, _formdata$cpt20$detai3, _formdata$cpt21, _formdata$cpt21$detai, _formdata$cpt22, _formdata$cpt22$detai, _formdata$cpt22$detai2, _formdata$cpt23, _formdata$cpt23$detai, _formdata$cpt24, _formdata$cpt24$detai, _formdata$cpt24$detai2;
    owners.push({
      name: formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt15 = formdata.cpt) === null || _formdata$cpt15 === void 0 ? void 0 : (_formdata$cpt15$detai = _formdata$cpt15.details) === null || _formdata$cpt15$detai === void 0 ? void 0 : (_formdata$cpt15$detai2 = _formdata$cpt15$detai.institution) === null || _formdata$cpt15$detai2 === void 0 ? void 0 : _formdata$cpt15$detai2.nameOfAuthorizedPerson,
      designation: formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt16 = formdata.cpt) === null || _formdata$cpt16 === void 0 ? void 0 : (_formdata$cpt16$detai = _formdata$cpt16.details) === null || _formdata$cpt16$detai === void 0 ? void 0 : (_formdata$cpt16$detai2 = _formdata$cpt16$detai.institution) === null || _formdata$cpt16$detai2 === void 0 ? void 0 : _formdata$cpt16$detai2.designation,
      mobilenumber: formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt17 = formdata.cpt) === null || _formdata$cpt17 === void 0 ? void 0 : (_formdata$cpt17$detai = _formdata$cpt17.details) === null || _formdata$cpt17$detai === void 0 ? void 0 : (_formdata$cpt17$detai2 = _formdata$cpt17$detai.owners) === null || _formdata$cpt17$detai2 === void 0 ? void 0 : (_formdata$cpt17$detai3 = _formdata$cpt17$detai2[0]) === null || _formdata$cpt17$detai3 === void 0 ? void 0 : _formdata$cpt17$detai3.mobileNumber,
      altContactNumber: formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt18 = formdata.cpt) === null || _formdata$cpt18 === void 0 ? void 0 : (_formdata$cpt18$detai = _formdata$cpt18.details) === null || _formdata$cpt18$detai === void 0 ? void 0 : (_formdata$cpt18$detai2 = _formdata$cpt18$detai.owners) === null || _formdata$cpt18$detai2 === void 0 ? void 0 : (_formdata$cpt18$detai3 = _formdata$cpt18$detai2[0]) === null || _formdata$cpt18$detai3 === void 0 ? void 0 : _formdata$cpt18$detai3.altContactNumber,
      instituionName: formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt19 = formdata.cpt) === null || _formdata$cpt19 === void 0 ? void 0 : (_formdata$cpt19$detai = _formdata$cpt19.details) === null || _formdata$cpt19$detai === void 0 ? void 0 : (_formdata$cpt19$detai2 = _formdata$cpt19$detai.institution) === null || _formdata$cpt19$detai2 === void 0 ? void 0 : _formdata$cpt19$detai2.name,
      emailId: formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt20 = formdata.cpt) === null || _formdata$cpt20 === void 0 ? void 0 : (_formdata$cpt20$detai = _formdata$cpt20.details) === null || _formdata$cpt20$detai === void 0 ? void 0 : (_formdata$cpt20$detai2 = _formdata$cpt20$detai.owners) === null || _formdata$cpt20$detai2 === void 0 ? void 0 : (_formdata$cpt20$detai3 = _formdata$cpt20$detai2[0]) === null || _formdata$cpt20$detai3 === void 0 ? void 0 : _formdata$cpt20$detai3.emailId,
      subOwnerShipCategory: {
        active: true,
        code: `${formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt21 = formdata.cpt) === null || _formdata$cpt21 === void 0 ? void 0 : (_formdata$cpt21$detai = _formdata$cpt21.details) === null || _formdata$cpt21$detai === void 0 ? void 0 : _formdata$cpt21$detai.ownershipCategory}.${formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt22 = formdata.cpt) === null || _formdata$cpt22 === void 0 ? void 0 : (_formdata$cpt22$detai = _formdata$cpt22.details) === null || _formdata$cpt22$detai === void 0 ? void 0 : (_formdata$cpt22$detai2 = _formdata$cpt22$detai.institution) === null || _formdata$cpt22$detai2 === void 0 ? void 0 : _formdata$cpt22$detai2.type}`,
        i18nKey: `COMMON_MASTERS_OWNERSHIPCATEGORY_${formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt23 = formdata.cpt) === null || _formdata$cpt23 === void 0 ? void 0 : (_formdata$cpt23$detai = _formdata$cpt23.details) === null || _formdata$cpt23$detai === void 0 ? void 0 : _formdata$cpt23$detai.ownershipCategory}_${formdata === null || formdata === void 0 ? void 0 : (_formdata$cpt24 = formdata.cpt) === null || _formdata$cpt24 === void 0 ? void 0 : (_formdata$cpt24$detai = _formdata$cpt24.details) === null || _formdata$cpt24$detai === void 0 ? void 0 : (_formdata$cpt24$detai2 = _formdata$cpt24$detai.institution) === null || _formdata$cpt24$detai2 === void 0 ? void 0 : _formdata$cpt24$detai2.type}`
      },
      id: "",
      uuid: ""
    });
  }
  return owners;
};

const TradeLicense = ({
  t,
  config,
  onSelect,
  userType,
  formData
}) => {
  var _Documentsob$TradeLic;
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const stateId = Digit.ULBService.getStateId();
  const {
    isLoading,
    data: Documentsob = {}
  } = Digit.Hooks.tl.useTradeLicenseMDMS(stateId, "TradeLicense", "TLDocuments");
  let docs = Documentsob === null || Documentsob === void 0 ? void 0 : (_Documentsob$TradeLic = Documentsob.TradeLicense) === null || _Documentsob$TradeLic === void 0 ? void 0 : _Documentsob$TradeLic.Documents;
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(CardHeader, null, t("TL_DOC_REQ_SCREEN_HEADER")), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(CardText, null, t("TL_DOC_REQ_SCREEN_TEXT")), /*#__PURE__*/React.createElement("div", null, isLoading && /*#__PURE__*/React.createElement(Loader, null), Array.isArray(docs) ? docs.map(({
    code,
    dropdownData
  }, index) => /*#__PURE__*/React.createElement("div", {
    key: index
  }, /*#__PURE__*/React.createElement(CardSubHeader, null, t("TRADELICENSE_" + stringReplaceAll(code, ".", "_") + "_HEADING")), dropdownData.map(dropdownData => /*#__PURE__*/React.createElement(CardText, null, t("TRADELICENSE_" + stringReplaceAll(dropdownData === null || dropdownData === void 0 ? void 0 : dropdownData.code, ".", "_") + "_LABEL"))))) : null)), /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement(SubmitBar, {
    label: t("CS_COMMON_NEXT"),
    onSubmit: onSelect
  }))), /*#__PURE__*/React.createElement(CitizenInfoLabel, {
    info: t("CS_FILE_APPLICATION_INFO_LABEL"),
    text: t("TL_DOCUMENT_SIZE_INFO_MSG")
  }));
};

let actions = [];
const getAction = flow => {
  switch (flow) {
    case "STAKEHOLDER":
      actions = [];
      break;
    default:
      actions = ['TL_COMMON_TR_DETAILS', 'TL_LOCATION_AND_OWNER_DETAILS', 'TL_DOCUMENT_DETAIL', 'TL_COMMON_SUMMARY'];
  }
};
const Timeline = ({
  currentStep: _currentStep = 1,
  flow: _flow = ""
}) => {
  const {
    t
  } = useTranslation();
  const isMobile = window.Digit.Utils.browser.isMobile();
  getAction(_flow);
  return /*#__PURE__*/React.createElement("div", {
    className: "timeline-container",
    style: isMobile ? {} : {
      maxWidth: "960px",
      minWidth: "640px",
      marginRight: "auto"
    }
  }, actions.map((action, index, arr) => /*#__PURE__*/React.createElement("div", {
    className: "timeline-checkpoint",
    key: index
  }, /*#__PURE__*/React.createElement("div", {
    className: "timeline-content"
  }, /*#__PURE__*/React.createElement("span", {
    className: `circle ${index <= _currentStep - 1 && 'active'}`
  }, index < _currentStep - 1 ? /*#__PURE__*/React.createElement(TickMark, null) : index + 1), /*#__PURE__*/React.createElement("span", {
    className: "secondary-color"
  }, t(action))), index < arr.length - 1 && /*#__PURE__*/React.createElement("span", {
    className: `line ${index < _currentStep - 1 && 'active'}`
  }))));
};

const TLSelectGeolocation = ({
  t,
  config,
  onSelect,
  formData: _formData = {}
}) => {
  var _formData$address, _formData$address2, _defaultConfig$Proper;
  const [pincode, setPincode] = useState((_formData === null || _formData === void 0 ? void 0 : (_formData$address = _formData.address) === null || _formData$address === void 0 ? void 0 : _formData$address.pincode) || "");
  const [geoLocation, setGeoLocation] = useState((_formData === null || _formData === void 0 ? void 0 : (_formData$address2 = _formData.address) === null || _formData$address2 === void 0 ? void 0 : _formData$address2.geoLocation) || {});
  const tenants = Digit.Hooks.tl.useTenants();
  const [pincodeServicability, setPincodeServicability] = useState(null);
  let isEditProperty = window.location.href.includes("edit-application") || window.location.href.includes("renew-trade");
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const stateId = Digit.ULBService.getStateId();
  const {
    data: defaultConfig = {}
  } = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", "MapConfig");
  const defaultcoord = defaultConfig === null || defaultConfig === void 0 ? void 0 : (_defaultConfig$Proper = defaultConfig.PropertyTax) === null || _defaultConfig$Proper === void 0 ? void 0 : _defaultConfig$Proper.MapConfig;
  let defaultcoord1 = defaultcoord ? defaultcoord[0] : {};
  const onSkip = () => onSelect();
  const onChange = (code, location) => {
    setPincodeServicability(null);
    const foundValue = tenants === null || tenants === void 0 ? void 0 : tenants.find(obj => {
      var _obj$pincode;
      return (_obj$pincode = obj.pincode) === null || _obj$pincode === void 0 ? void 0 : _obj$pincode.find(item => item == code);
    });
    if (!foundValue) {
      setPincodeServicability("TL_COMMON_PINCODE_NOT_SERVICABLE");
      setPincode("");
      setGeoLocation({});
    } else {
      setPincode(code);
      setGeoLocation(location);
    }
  };
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, {
    currentStep: 2
  }) : null, /*#__PURE__*/React.createElement(LocationSearchCard, {
    header: t("TL_GEOLOCATION_HEADER"),
    cardText: t("TL_GEOLOCATION_TEXT"),
    nextText: t("CS_COMMON_NEXT"),
    skipAndContinueText: t("CORE_COMMON_SKIP_CONTINUE"),
    skip: onSkip,
    t: t,
    position: geoLocation,
    onSave: () => onSelect(config.key, {
      geoLocation,
      pincode
    }),
    onChange: (code, location) => onChange(code, location),
    disabled: pincode === "" || isEditProperty,
    forcedError: t(pincodeServicability),
    isPTDefault: true,
    PTdefaultcoord: defaultcoord1
  }));
};

var lodash = createCommonjsModule(function (module, exports) {
  (function () {
    var undefined$1;
    var VERSION = '4.17.21';
    var LARGE_ARRAY_SIZE = 200;
    var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function',
      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';
    var HASH_UNDEFINED = '__lodash_hash_undefined__';
    var MAX_MEMOIZE_SIZE = 500;
    var PLACEHOLDER = '__lodash_placeholder__';
    var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;
    var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;
    var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;
    var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';
    var HOT_COUNT = 800,
      HOT_SPAN = 16;
    var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;
    var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;
    var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
    var wrapFlags = [['ary', WRAP_ARY_FLAG], ['bind', WRAP_BIND_FLAG], ['bindKey', WRAP_BIND_KEY_FLAG], ['curry', WRAP_CURRY_FLAG], ['curryRight', WRAP_CURRY_RIGHT_FLAG], ['flip', WRAP_FLIP_FLAG], ['partial', WRAP_PARTIAL_FLAG], ['partialRight', WRAP_PARTIAL_RIGHT_FLAG], ['rearg', WRAP_REARG_FLAG]];
    var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';
    var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';
    var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
    var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
    var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;
    var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);
    var reTrimStart = /^\s+/;
    var reWhitespace = /\s/;
    var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;
    var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
    var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
    var reEscapeChar = /\\(\\)?/g;
    var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
    var reFlags = /\w*$/;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var reIsOctal = /^0o[0-7]+$/i;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
    var reNoMatch = /($^)/;
    var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
    var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
    var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';
    var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
    var reApos = RegExp(rsApos, 'g');
    var reComboMark = RegExp(rsCombo, 'g');
    var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
    var reUnicodeWord = RegExp([rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')', rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')', rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower, rsUpper + '+' + rsOptContrUpper, rsOrdUpper, rsOrdLower, rsDigits, rsEmoji].join('|'), 'g');
    var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + ']');
    var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
    var contextProps = ['Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array', 'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object', 'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'];
    var templateCounter = -1;
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    var cloneableTags = {};
    cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
    cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
    var deburredLetters = {
      '\xc0': 'A',
      '\xc1': 'A',
      '\xc2': 'A',
      '\xc3': 'A',
      '\xc4': 'A',
      '\xc5': 'A',
      '\xe0': 'a',
      '\xe1': 'a',
      '\xe2': 'a',
      '\xe3': 'a',
      '\xe4': 'a',
      '\xe5': 'a',
      '\xc7': 'C',
      '\xe7': 'c',
      '\xd0': 'D',
      '\xf0': 'd',
      '\xc8': 'E',
      '\xc9': 'E',
      '\xca': 'E',
      '\xcb': 'E',
      '\xe8': 'e',
      '\xe9': 'e',
      '\xea': 'e',
      '\xeb': 'e',
      '\xcc': 'I',
      '\xcd': 'I',
      '\xce': 'I',
      '\xcf': 'I',
      '\xec': 'i',
      '\xed': 'i',
      '\xee': 'i',
      '\xef': 'i',
      '\xd1': 'N',
      '\xf1': 'n',
      '\xd2': 'O',
      '\xd3': 'O',
      '\xd4': 'O',
      '\xd5': 'O',
      '\xd6': 'O',
      '\xd8': 'O',
      '\xf2': 'o',
      '\xf3': 'o',
      '\xf4': 'o',
      '\xf5': 'o',
      '\xf6': 'o',
      '\xf8': 'o',
      '\xd9': 'U',
      '\xda': 'U',
      '\xdb': 'U',
      '\xdc': 'U',
      '\xf9': 'u',
      '\xfa': 'u',
      '\xfb': 'u',
      '\xfc': 'u',
      '\xdd': 'Y',
      '\xfd': 'y',
      '\xff': 'y',
      '\xc6': 'Ae',
      '\xe6': 'ae',
      '\xde': 'Th',
      '\xfe': 'th',
      '\xdf': 'ss',
      '\u0100': 'A',
      '\u0102': 'A',
      '\u0104': 'A',
      '\u0101': 'a',
      '\u0103': 'a',
      '\u0105': 'a',
      '\u0106': 'C',
      '\u0108': 'C',
      '\u010a': 'C',
      '\u010c': 'C',
      '\u0107': 'c',
      '\u0109': 'c',
      '\u010b': 'c',
      '\u010d': 'c',
      '\u010e': 'D',
      '\u0110': 'D',
      '\u010f': 'd',
      '\u0111': 'd',
      '\u0112': 'E',
      '\u0114': 'E',
      '\u0116': 'E',
      '\u0118': 'E',
      '\u011a': 'E',
      '\u0113': 'e',
      '\u0115': 'e',
      '\u0117': 'e',
      '\u0119': 'e',
      '\u011b': 'e',
      '\u011c': 'G',
      '\u011e': 'G',
      '\u0120': 'G',
      '\u0122': 'G',
      '\u011d': 'g',
      '\u011f': 'g',
      '\u0121': 'g',
      '\u0123': 'g',
      '\u0124': 'H',
      '\u0126': 'H',
      '\u0125': 'h',
      '\u0127': 'h',
      '\u0128': 'I',
      '\u012a': 'I',
      '\u012c': 'I',
      '\u012e': 'I',
      '\u0130': 'I',
      '\u0129': 'i',
      '\u012b': 'i',
      '\u012d': 'i',
      '\u012f': 'i',
      '\u0131': 'i',
      '\u0134': 'J',
      '\u0135': 'j',
      '\u0136': 'K',
      '\u0137': 'k',
      '\u0138': 'k',
      '\u0139': 'L',
      '\u013b': 'L',
      '\u013d': 'L',
      '\u013f': 'L',
      '\u0141': 'L',
      '\u013a': 'l',
      '\u013c': 'l',
      '\u013e': 'l',
      '\u0140': 'l',
      '\u0142': 'l',
      '\u0143': 'N',
      '\u0145': 'N',
      '\u0147': 'N',
      '\u014a': 'N',
      '\u0144': 'n',
      '\u0146': 'n',
      '\u0148': 'n',
      '\u014b': 'n',
      '\u014c': 'O',
      '\u014e': 'O',
      '\u0150': 'O',
      '\u014d': 'o',
      '\u014f': 'o',
      '\u0151': 'o',
      '\u0154': 'R',
      '\u0156': 'R',
      '\u0158': 'R',
      '\u0155': 'r',
      '\u0157': 'r',
      '\u0159': 'r',
      '\u015a': 'S',
      '\u015c': 'S',
      '\u015e': 'S',
      '\u0160': 'S',
      '\u015b': 's',
      '\u015d': 's',
      '\u015f': 's',
      '\u0161': 's',
      '\u0162': 'T',
      '\u0164': 'T',
      '\u0166': 'T',
      '\u0163': 't',
      '\u0165': 't',
      '\u0167': 't',
      '\u0168': 'U',
      '\u016a': 'U',
      '\u016c': 'U',
      '\u016e': 'U',
      '\u0170': 'U',
      '\u0172': 'U',
      '\u0169': 'u',
      '\u016b': 'u',
      '\u016d': 'u',
      '\u016f': 'u',
      '\u0171': 'u',
      '\u0173': 'u',
      '\u0174': 'W',
      '\u0175': 'w',
      '\u0176': 'Y',
      '\u0177': 'y',
      '\u0178': 'Y',
      '\u0179': 'Z',
      '\u017b': 'Z',
      '\u017d': 'Z',
      '\u017a': 'z',
      '\u017c': 'z',
      '\u017e': 'z',
      '\u0132': 'IJ',
      '\u0133': 'ij',
      '\u0152': 'Oe',
      '\u0153': 'oe',
      '\u0149': "'n",
      '\u017f': 's'
    };
    var htmlEscapes = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#39;'
    };
    var htmlUnescapes = {
      '&amp;': '&',
      '&lt;': '<',
      '&gt;': '>',
      '&quot;': '"',
      '&#39;': "'"
    };
    var stringEscapes = {
      '\\': '\\',
      "'": "'",
      '\n': 'n',
      '\r': 'r',
      '\u2028': 'u2028',
      '\u2029': 'u2029'
    };
    var freeParseFloat = parseFloat,
      freeParseInt = parseInt;
    var freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
    var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function('return this')();
    var freeExports =  exports && !exports.nodeType && exports;
    var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function () {
      try {
        var types = freeModule && freeModule.require && freeModule.require('util').types;
        if (types) {
          return types;
        }
        return freeProcess && freeProcess.binding && freeProcess.binding('util');
      } catch (e) {}
    }();
    var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    function apply(func, thisArg, args) {
      switch (args.length) {
        case 0:
          return func.call(thisArg);
        case 1:
          return func.call(thisArg, args[0]);
        case 2:
          return func.call(thisArg, args[0], args[1]);
        case 3:
          return func.call(thisArg, args[0], args[1], args[2]);
      }
      return func.apply(thisArg, args);
    }
    function arrayAggregator(array, setter, iteratee, accumulator) {
      var index = -1,
        length = array == null ? 0 : array.length;
      while (++index < length) {
        var value = array[index];
        setter(accumulator, value, iteratee(value), array);
      }
      return accumulator;
    }
    function arrayEach(array, iteratee) {
      var index = -1,
        length = array == null ? 0 : array.length;
      while (++index < length) {
        if (iteratee(array[index], index, array) === false) {
          break;
        }
      }
      return array;
    }
    function arrayEachRight(array, iteratee) {
      var length = array == null ? 0 : array.length;
      while (length--) {
        if (iteratee(array[length], length, array) === false) {
          break;
        }
      }
      return array;
    }
    function arrayEvery(array, predicate) {
      var index = -1,
        length = array == null ? 0 : array.length;
      while (++index < length) {
        if (!predicate(array[index], index, array)) {
          return false;
        }
      }
      return true;
    }
    function arrayFilter(array, predicate) {
      var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    function arrayIncludes(array, value) {
      var length = array == null ? 0 : array.length;
      return !!length && baseIndexOf(array, value, 0) > -1;
    }
    function arrayIncludesWith(array, value, comparator) {
      var index = -1,
        length = array == null ? 0 : array.length;
      while (++index < length) {
        if (comparator(value, array[index])) {
          return true;
        }
      }
      return false;
    }
    function arrayMap(array, iteratee) {
      var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);
      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }
    function arrayPush(array, values) {
      var index = -1,
        length = values.length,
        offset = array.length;
      while (++index < length) {
        array[offset + index] = values[index];
      }
      return array;
    }
    function arrayReduce(array, iteratee, accumulator, initAccum) {
      var index = -1,
        length = array == null ? 0 : array.length;
      if (initAccum && length) {
        accumulator = array[++index];
      }
      while (++index < length) {
        accumulator = iteratee(accumulator, array[index], index, array);
      }
      return accumulator;
    }
    function arrayReduceRight(array, iteratee, accumulator, initAccum) {
      var length = array == null ? 0 : array.length;
      if (initAccum && length) {
        accumulator = array[--length];
      }
      while (length--) {
        accumulator = iteratee(accumulator, array[length], length, array);
      }
      return accumulator;
    }
    function arraySome(array, predicate) {
      var index = -1,
        length = array == null ? 0 : array.length;
      while (++index < length) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }
    var asciiSize = baseProperty('length');
    function asciiToArray(string) {
      return string.split('');
    }
    function asciiWords(string) {
      return string.match(reAsciiWord) || [];
    }
    function baseFindKey(collection, predicate, eachFunc) {
      var result;
      eachFunc(collection, function (value, key, collection) {
        if (predicate(value, key, collection)) {
          result = key;
          return false;
        }
      });
      return result;
    }
    function baseFindIndex(array, predicate, fromIndex, fromRight) {
      var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);
      while (fromRight ? index-- : ++index < length) {
        if (predicate(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }
    function baseIndexOf(array, value, fromIndex) {
      return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
    }
    function baseIndexOfWith(array, value, fromIndex, comparator) {
      var index = fromIndex - 1,
        length = array.length;
      while (++index < length) {
        if (comparator(array[index], value)) {
          return index;
        }
      }
      return -1;
    }
    function baseIsNaN(value) {
      return value !== value;
    }
    function baseMean(array, iteratee) {
      var length = array == null ? 0 : array.length;
      return length ? baseSum(array, iteratee) / length : NAN;
    }
    function baseProperty(key) {
      return function (object) {
        return object == null ? undefined$1 : object[key];
      };
    }
    function basePropertyOf(object) {
      return function (key) {
        return object == null ? undefined$1 : object[key];
      };
    }
    function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
      eachFunc(collection, function (value, index, collection) {
        accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection);
      });
      return accumulator;
    }
    function baseSortBy(array, comparer) {
      var length = array.length;
      array.sort(comparer);
      while (length--) {
        array[length] = array[length].value;
      }
      return array;
    }
    function baseSum(array, iteratee) {
      var result,
        index = -1,
        length = array.length;
      while (++index < length) {
        var current = iteratee(array[index]);
        if (current !== undefined$1) {
          result = result === undefined$1 ? current : result + current;
        }
      }
      return result;
    }
    function baseTimes(n, iteratee) {
      var index = -1,
        result = Array(n);
      while (++index < n) {
        result[index] = iteratee(index);
      }
      return result;
    }
    function baseToPairs(object, props) {
      return arrayMap(props, function (key) {
        return [key, object[key]];
      });
    }
    function baseTrim(string) {
      return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '') : string;
    }
    function baseUnary(func) {
      return function (value) {
        return func(value);
      };
    }
    function baseValues(object, props) {
      return arrayMap(props, function (key) {
        return object[key];
      });
    }
    function cacheHas(cache, key) {
      return cache.has(key);
    }
    function charsStartIndex(strSymbols, chrSymbols) {
      var index = -1,
        length = strSymbols.length;
      while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
      return index;
    }
    function charsEndIndex(strSymbols, chrSymbols) {
      var index = strSymbols.length;
      while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
      return index;
    }
    function countHolders(array, placeholder) {
      var length = array.length,
        result = 0;
      while (length--) {
        if (array[length] === placeholder) {
          ++result;
        }
      }
      return result;
    }
    var deburrLetter = basePropertyOf(deburredLetters);
    var escapeHtmlChar = basePropertyOf(htmlEscapes);
    function escapeStringChar(chr) {
      return '\\' + stringEscapes[chr];
    }
    function getValue(object, key) {
      return object == null ? undefined$1 : object[key];
    }
    function hasUnicode(string) {
      return reHasUnicode.test(string);
    }
    function hasUnicodeWord(string) {
      return reHasUnicodeWord.test(string);
    }
    function iteratorToArray(iterator) {
      var data,
        result = [];
      while (!(data = iterator.next()).done) {
        result.push(data.value);
      }
      return result;
    }
    function mapToArray(map) {
      var index = -1,
        result = Array(map.size);
      map.forEach(function (value, key) {
        result[++index] = [key, value];
      });
      return result;
    }
    function overArg(func, transform) {
      return function (arg) {
        return func(transform(arg));
      };
    }
    function replaceHolders(array, placeholder) {
      var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];
      while (++index < length) {
        var value = array[index];
        if (value === placeholder || value === PLACEHOLDER) {
          array[index] = PLACEHOLDER;
          result[resIndex++] = index;
        }
      }
      return result;
    }
    function setToArray(set) {
      var index = -1,
        result = Array(set.size);
      set.forEach(function (value) {
        result[++index] = value;
      });
      return result;
    }
    function setToPairs(set) {
      var index = -1,
        result = Array(set.size);
      set.forEach(function (value) {
        result[++index] = [value, value];
      });
      return result;
    }
    function strictIndexOf(array, value, fromIndex) {
      var index = fromIndex - 1,
        length = array.length;
      while (++index < length) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }
    function strictLastIndexOf(array, value, fromIndex) {
      var index = fromIndex + 1;
      while (index--) {
        if (array[index] === value) {
          return index;
        }
      }
      return index;
    }
    function stringSize(string) {
      return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
    }
    function stringToArray(string) {
      return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
    }
    function trimmedEndIndex(string) {
      var index = string.length;
      while (index-- && reWhitespace.test(string.charAt(index))) {}
      return index;
    }
    var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
    function unicodeSize(string) {
      var result = reUnicode.lastIndex = 0;
      while (reUnicode.test(string)) {
        ++result;
      }
      return result;
    }
    function unicodeToArray(string) {
      return string.match(reUnicode) || [];
    }
    function unicodeWords(string) {
      return string.match(reUnicodeWord) || [];
    }
    var runInContext = function runInContext(context) {
      context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
      var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;
      var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;
      var coreJsData = context['__core-js_shared__'];
      var funcToString = funcProto.toString;
      var hasOwnProperty = objectProto.hasOwnProperty;
      var idCounter = 0;
      var maskSrcKey = function () {
        var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
        return uid ? 'Symbol(src)_1.' + uid : '';
      }();
      var nativeObjectToString = objectProto.toString;
      var objectCtorString = funcToString.call(Object);
      var oldDash = root._;
      var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
      var Buffer = moduleExports ? context.Buffer : undefined$1,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined$1,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined$1,
        symIterator = Symbol ? Symbol.iterator : undefined$1,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined$1;
      var defineProperty = function () {
        try {
          var func = getNative(Object, 'defineProperty');
          func({}, '', {});
          return func;
        } catch (e) {}
      }();
      var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
      var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined$1,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;
      var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');
      var metaMap = WeakMap && new WeakMap();
      var realNames = {};
      var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);
      var symbolProto = Symbol ? Symbol.prototype : undefined$1,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined$1,
        symbolToString = symbolProto ? symbolProto.toString : undefined$1;
      function lodash(value) {
        if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
          if (value instanceof LodashWrapper) {
            return value;
          }
          if (hasOwnProperty.call(value, '__wrapped__')) {
            return wrapperClone(value);
          }
        }
        return new LodashWrapper(value);
      }
      var baseCreate = function () {
        function object() {}
        return function (proto) {
          if (!isObject(proto)) {
            return {};
          }
          if (objectCreate) {
            return objectCreate(proto);
          }
          object.prototype = proto;
          var result = new object();
          object.prototype = undefined$1;
          return result;
        };
      }();
      function baseLodash() {}
      function LodashWrapper(value, chainAll) {
        this.__wrapped__ = value;
        this.__actions__ = [];
        this.__chain__ = !!chainAll;
        this.__index__ = 0;
        this.__values__ = undefined$1;
      }
      lodash.templateSettings = {
        'escape': reEscape,
        'evaluate': reEvaluate,
        'interpolate': reInterpolate,
        'variable': '',
        'imports': {
          '_': lodash
        }
      };
      lodash.prototype = baseLodash.prototype;
      lodash.prototype.constructor = lodash;
      LodashWrapper.prototype = baseCreate(baseLodash.prototype);
      LodashWrapper.prototype.constructor = LodashWrapper;
      function LazyWrapper(value) {
        this.__wrapped__ = value;
        this.__actions__ = [];
        this.__dir__ = 1;
        this.__filtered__ = false;
        this.__iteratees__ = [];
        this.__takeCount__ = MAX_ARRAY_LENGTH;
        this.__views__ = [];
      }
      function lazyClone() {
        var result = new LazyWrapper(this.__wrapped__);
        result.__actions__ = copyArray(this.__actions__);
        result.__dir__ = this.__dir__;
        result.__filtered__ = this.__filtered__;
        result.__iteratees__ = copyArray(this.__iteratees__);
        result.__takeCount__ = this.__takeCount__;
        result.__views__ = copyArray(this.__views__);
        return result;
      }
      function lazyReverse() {
        if (this.__filtered__) {
          var result = new LazyWrapper(this);
          result.__dir__ = -1;
          result.__filtered__ = true;
        } else {
          result = this.clone();
          result.__dir__ *= -1;
        }
        return result;
      }
      function lazyValue() {
        var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : start - 1,
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);
        if (!isArr || !isRight && arrLength == length && takeCount == length) {
          return baseWrapperValue(array, this.__actions__);
        }
        var result = [];
        outer: while (length-- && resIndex < takeCount) {
          index += dir;
          var iterIndex = -1,
            value = array[index];
          while (++iterIndex < iterLength) {
            var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);
            if (type == LAZY_MAP_FLAG) {
              value = computed;
            } else if (!computed) {
              if (type == LAZY_FILTER_FLAG) {
                continue outer;
              } else {
                break outer;
              }
            }
          }
          result[resIndex++] = value;
        }
        return result;
      }
      LazyWrapper.prototype = baseCreate(baseLodash.prototype);
      LazyWrapper.prototype.constructor = LazyWrapper;
      function Hash(entries) {
        var index = -1,
          length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index < length) {
          var entry = entries[index];
          this.set(entry[0], entry[1]);
        }
      }
      function hashClear() {
        this.__data__ = nativeCreate ? nativeCreate(null) : {};
        this.size = 0;
      }
      function hashDelete(key) {
        var result = this.has(key) && delete this.__data__[key];
        this.size -= result ? 1 : 0;
        return result;
      }
      function hashGet(key) {
        var data = this.__data__;
        if (nativeCreate) {
          var result = data[key];
          return result === HASH_UNDEFINED ? undefined$1 : result;
        }
        return hasOwnProperty.call(data, key) ? data[key] : undefined$1;
      }
      function hashHas(key) {
        var data = this.__data__;
        return nativeCreate ? data[key] !== undefined$1 : hasOwnProperty.call(data, key);
      }
      function hashSet(key, value) {
        var data = this.__data__;
        this.size += this.has(key) ? 0 : 1;
        data[key] = nativeCreate && value === undefined$1 ? HASH_UNDEFINED : value;
        return this;
      }
      Hash.prototype.clear = hashClear;
      Hash.prototype['delete'] = hashDelete;
      Hash.prototype.get = hashGet;
      Hash.prototype.has = hashHas;
      Hash.prototype.set = hashSet;
      function ListCache(entries) {
        var index = -1,
          length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index < length) {
          var entry = entries[index];
          this.set(entry[0], entry[1]);
        }
      }
      function listCacheClear() {
        this.__data__ = [];
        this.size = 0;
      }
      function listCacheDelete(key) {
        var data = this.__data__,
          index = assocIndexOf(data, key);
        if (index < 0) {
          return false;
        }
        var lastIndex = data.length - 1;
        if (index == lastIndex) {
          data.pop();
        } else {
          splice.call(data, index, 1);
        }
        --this.size;
        return true;
      }
      function listCacheGet(key) {
        var data = this.__data__,
          index = assocIndexOf(data, key);
        return index < 0 ? undefined$1 : data[index][1];
      }
      function listCacheHas(key) {
        return assocIndexOf(this.__data__, key) > -1;
      }
      function listCacheSet(key, value) {
        var data = this.__data__,
          index = assocIndexOf(data, key);
        if (index < 0) {
          ++this.size;
          data.push([key, value]);
        } else {
          data[index][1] = value;
        }
        return this;
      }
      ListCache.prototype.clear = listCacheClear;
      ListCache.prototype['delete'] = listCacheDelete;
      ListCache.prototype.get = listCacheGet;
      ListCache.prototype.has = listCacheHas;
      ListCache.prototype.set = listCacheSet;
      function MapCache(entries) {
        var index = -1,
          length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index < length) {
          var entry = entries[index];
          this.set(entry[0], entry[1]);
        }
      }
      function mapCacheClear() {
        this.size = 0;
        this.__data__ = {
          'hash': new Hash(),
          'map': new (Map || ListCache)(),
          'string': new Hash()
        };
      }
      function mapCacheDelete(key) {
        var result = getMapData(this, key)['delete'](key);
        this.size -= result ? 1 : 0;
        return result;
      }
      function mapCacheGet(key) {
        return getMapData(this, key).get(key);
      }
      function mapCacheHas(key) {
        return getMapData(this, key).has(key);
      }
      function mapCacheSet(key, value) {
        var data = getMapData(this, key),
          size = data.size;
        data.set(key, value);
        this.size += data.size == size ? 0 : 1;
        return this;
      }
      MapCache.prototype.clear = mapCacheClear;
      MapCache.prototype['delete'] = mapCacheDelete;
      MapCache.prototype.get = mapCacheGet;
      MapCache.prototype.has = mapCacheHas;
      MapCache.prototype.set = mapCacheSet;
      function SetCache(values) {
        var index = -1,
          length = values == null ? 0 : values.length;
        this.__data__ = new MapCache();
        while (++index < length) {
          this.add(values[index]);
        }
      }
      function setCacheAdd(value) {
        this.__data__.set(value, HASH_UNDEFINED);
        return this;
      }
      function setCacheHas(value) {
        return this.__data__.has(value);
      }
      SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
      SetCache.prototype.has = setCacheHas;
      function Stack(entries) {
        var data = this.__data__ = new ListCache(entries);
        this.size = data.size;
      }
      function stackClear() {
        this.__data__ = new ListCache();
        this.size = 0;
      }
      function stackDelete(key) {
        var data = this.__data__,
          result = data['delete'](key);
        this.size = data.size;
        return result;
      }
      function stackGet(key) {
        return this.__data__.get(key);
      }
      function stackHas(key) {
        return this.__data__.has(key);
      }
      function stackSet(key, value) {
        var data = this.__data__;
        if (data instanceof ListCache) {
          var pairs = data.__data__;
          if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
            pairs.push([key, value]);
            this.size = ++data.size;
            return this;
          }
          data = this.__data__ = new MapCache(pairs);
        }
        data.set(key, value);
        this.size = data.size;
        return this;
      }
      Stack.prototype.clear = stackClear;
      Stack.prototype['delete'] = stackDelete;
      Stack.prototype.get = stackGet;
      Stack.prototype.has = stackHas;
      Stack.prototype.set = stackSet;
      function arrayLikeKeys(value, inherited) {
        var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;
        for (var key in value) {
          if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == 'length' || isBuff && (key == 'offset' || key == 'parent') || isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || isIndex(key, length)))) {
            result.push(key);
          }
        }
        return result;
      }
      function arraySample(array) {
        var length = array.length;
        return length ? array[baseRandom(0, length - 1)] : undefined$1;
      }
      function arraySampleSize(array, n) {
        return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
      }
      function arrayShuffle(array) {
        return shuffleSelf(copyArray(array));
      }
      function assignMergeValue(object, key, value) {
        if (value !== undefined$1 && !eq(object[key], value) || value === undefined$1 && !(key in object)) {
          baseAssignValue(object, key, value);
        }
      }
      function assignValue(object, key, value) {
        var objValue = object[key];
        if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined$1 && !(key in object)) {
          baseAssignValue(object, key, value);
        }
      }
      function assocIndexOf(array, key) {
        var length = array.length;
        while (length--) {
          if (eq(array[length][0], key)) {
            return length;
          }
        }
        return -1;
      }
      function baseAggregator(collection, setter, iteratee, accumulator) {
        baseEach(collection, function (value, key, collection) {
          setter(accumulator, value, iteratee(value), collection);
        });
        return accumulator;
      }
      function baseAssign(object, source) {
        return object && copyObject(source, keys(source), object);
      }
      function baseAssignIn(object, source) {
        return object && copyObject(source, keysIn(source), object);
      }
      function baseAssignValue(object, key, value) {
        if (key == '__proto__' && defineProperty) {
          defineProperty(object, key, {
            'configurable': true,
            'enumerable': true,
            'value': value,
            'writable': true
          });
        } else {
          object[key] = value;
        }
      }
      function baseAt(object, paths) {
        var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;
        while (++index < length) {
          result[index] = skip ? undefined$1 : get(object, paths[index]);
        }
        return result;
      }
      function baseClamp(number, lower, upper) {
        if (number === number) {
          if (upper !== undefined$1) {
            number = number <= upper ? number : upper;
          }
          if (lower !== undefined$1) {
            number = number >= lower ? number : lower;
          }
        }
        return number;
      }
      function baseClone(value, bitmask, customizer, key, object, stack) {
        var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;
        if (customizer) {
          result = object ? customizer(value, key, object, stack) : customizer(value);
        }
        if (result !== undefined$1) {
          return result;
        }
        if (!isObject(value)) {
          return value;
        }
        var isArr = isArray(value);
        if (isArr) {
          result = initCloneArray(value);
          if (!isDeep) {
            return copyArray(value, result);
          }
        } else {
          var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;
          if (isBuffer(value)) {
            return cloneBuffer(value, isDeep);
          }
          if (tag == objectTag || tag == argsTag || isFunc && !object) {
            result = isFlat || isFunc ? {} : initCloneObject(value);
            if (!isDeep) {
              return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
            }
          } else {
            if (!cloneableTags[tag]) {
              return object ? value : {};
            }
            result = initCloneByTag(value, tag, isDeep);
          }
        }
        stack || (stack = new Stack());
        var stacked = stack.get(value);
        if (stacked) {
          return stacked;
        }
        stack.set(value, result);
        if (isSet(value)) {
          value.forEach(function (subValue) {
            result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
          });
        } else if (isMap(value)) {
          value.forEach(function (subValue, key) {
            result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
          });
        }
        var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
        var props = isArr ? undefined$1 : keysFunc(value);
        arrayEach(props || value, function (subValue, key) {
          if (props) {
            key = subValue;
            subValue = value[key];
          }
          assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
        return result;
      }
      function baseConforms(source) {
        var props = keys(source);
        return function (object) {
          return baseConformsTo(object, source, props);
        };
      }
      function baseConformsTo(object, source, props) {
        var length = props.length;
        if (object == null) {
          return !length;
        }
        object = Object(object);
        while (length--) {
          var key = props[length],
            predicate = source[key],
            value = object[key];
          if (value === undefined$1 && !(key in object) || !predicate(value)) {
            return false;
          }
        }
        return true;
      }
      function baseDelay(func, wait, args) {
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return setTimeout(function () {
          func.apply(undefined$1, args);
        }, wait);
      }
      function baseDifference(array, values, iteratee, comparator) {
        var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;
        if (!length) {
          return result;
        }
        if (iteratee) {
          values = arrayMap(values, baseUnary(iteratee));
        }
        if (comparator) {
          includes = arrayIncludesWith;
          isCommon = false;
        } else if (values.length >= LARGE_ARRAY_SIZE) {
          includes = cacheHas;
          isCommon = false;
          values = new SetCache(values);
        }
        outer: while (++index < length) {
          var value = array[index],
            computed = iteratee == null ? value : iteratee(value);
          value = comparator || value !== 0 ? value : 0;
          if (isCommon && computed === computed) {
            var valuesIndex = valuesLength;
            while (valuesIndex--) {
              if (values[valuesIndex] === computed) {
                continue outer;
              }
            }
            result.push(value);
          } else if (!includes(values, computed, comparator)) {
            result.push(value);
          }
        }
        return result;
      }
      var baseEach = createBaseEach(baseForOwn);
      var baseEachRight = createBaseEach(baseForOwnRight, true);
      function baseEvery(collection, predicate) {
        var result = true;
        baseEach(collection, function (value, index, collection) {
          result = !!predicate(value, index, collection);
          return result;
        });
        return result;
      }
      function baseExtremum(array, iteratee, comparator) {
        var index = -1,
          length = array.length;
        while (++index < length) {
          var value = array[index],
            current = iteratee(value);
          if (current != null && (computed === undefined$1 ? current === current && !isSymbol(current) : comparator(current, computed))) {
            var computed = current,
              result = value;
          }
        }
        return result;
      }
      function baseFill(array, value, start, end) {
        var length = array.length;
        start = toInteger(start);
        if (start < 0) {
          start = -start > length ? 0 : length + start;
        }
        end = end === undefined$1 || end > length ? length : toInteger(end);
        if (end < 0) {
          end += length;
        }
        end = start > end ? 0 : toLength(end);
        while (start < end) {
          array[start++] = value;
        }
        return array;
      }
      function baseFilter(collection, predicate) {
        var result = [];
        baseEach(collection, function (value, index, collection) {
          if (predicate(value, index, collection)) {
            result.push(value);
          }
        });
        return result;
      }
      function baseFlatten(array, depth, predicate, isStrict, result) {
        var index = -1,
          length = array.length;
        predicate || (predicate = isFlattenable);
        result || (result = []);
        while (++index < length) {
          var value = array[index];
          if (depth > 0 && predicate(value)) {
            if (depth > 1) {
              baseFlatten(value, depth - 1, predicate, isStrict, result);
            } else {
              arrayPush(result, value);
            }
          } else if (!isStrict) {
            result[result.length] = value;
          }
        }
        return result;
      }
      var baseFor = createBaseFor();
      var baseForRight = createBaseFor(true);
      function baseForOwn(object, iteratee) {
        return object && baseFor(object, iteratee, keys);
      }
      function baseForOwnRight(object, iteratee) {
        return object && baseForRight(object, iteratee, keys);
      }
      function baseFunctions(object, props) {
        return arrayFilter(props, function (key) {
          return isFunction(object[key]);
        });
      }
      function baseGet(object, path) {
        path = castPath(path, object);
        var index = 0,
          length = path.length;
        while (object != null && index < length) {
          object = object[toKey(path[index++])];
        }
        return index && index == length ? object : undefined$1;
      }
      function baseGetAllKeys(object, keysFunc, symbolsFunc) {
        var result = keysFunc(object);
        return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
      }
      function baseGetTag(value) {
        if (value == null) {
          return value === undefined$1 ? undefinedTag : nullTag;
        }
        return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
      }
      function baseGt(value, other) {
        return value > other;
      }
      function baseHas(object, key) {
        return object != null && hasOwnProperty.call(object, key);
      }
      function baseHasIn(object, key) {
        return object != null && key in Object(object);
      }
      function baseInRange(number, start, end) {
        return number >= nativeMin(start, end) && number < nativeMax(start, end);
      }
      function baseIntersection(arrays, iteratee, comparator) {
        var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];
        while (othIndex--) {
          var array = arrays[othIndex];
          if (othIndex && iteratee) {
            array = arrayMap(array, baseUnary(iteratee));
          }
          maxLength = nativeMin(array.length, maxLength);
          caches[othIndex] = !comparator && (iteratee || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined$1;
        }
        array = arrays[0];
        var index = -1,
          seen = caches[0];
        outer: while (++index < length && result.length < maxLength) {
          var value = array[index],
            computed = iteratee ? iteratee(value) : value;
          value = comparator || value !== 0 ? value : 0;
          if (!(seen ? cacheHas(seen, computed) : includes(result, computed, comparator))) {
            othIndex = othLength;
            while (--othIndex) {
              var cache = caches[othIndex];
              if (!(cache ? cacheHas(cache, computed) : includes(arrays[othIndex], computed, comparator))) {
                continue outer;
              }
            }
            if (seen) {
              seen.push(computed);
            }
            result.push(value);
          }
        }
        return result;
      }
      function baseInverter(object, setter, iteratee, accumulator) {
        baseForOwn(object, function (value, key, object) {
          setter(accumulator, iteratee(value), key, object);
        });
        return accumulator;
      }
      function baseInvoke(object, path, args) {
        path = castPath(path, object);
        object = parent(object, path);
        var func = object == null ? object : object[toKey(last(path))];
        return func == null ? undefined$1 : apply(func, object, args);
      }
      function baseIsArguments(value) {
        return isObjectLike(value) && baseGetTag(value) == argsTag;
      }
      function baseIsArrayBuffer(value) {
        return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
      }
      function baseIsDate(value) {
        return isObjectLike(value) && baseGetTag(value) == dateTag;
      }
      function baseIsEqual(value, other, bitmask, customizer, stack) {
        if (value === other) {
          return true;
        }
        if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
          return value !== value && other !== other;
        }
        return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
      }
      function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
        var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);
        objTag = objTag == argsTag ? objectTag : objTag;
        othTag = othTag == argsTag ? objectTag : othTag;
        var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;
        if (isSameTag && isBuffer(object)) {
          if (!isBuffer(other)) {
            return false;
          }
          objIsArr = true;
          objIsObj = false;
        }
        if (isSameTag && !objIsObj) {
          stack || (stack = new Stack());
          return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
        }
        if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
          var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
          if (objIsWrapped || othIsWrapped) {
            var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;
            stack || (stack = new Stack());
            return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
          }
        }
        if (!isSameTag) {
          return false;
        }
        stack || (stack = new Stack());
        return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
      }
      function baseIsMap(value) {
        return isObjectLike(value) && getTag(value) == mapTag;
      }
      function baseIsMatch(object, source, matchData, customizer) {
        var index = matchData.length,
          length = index,
          noCustomizer = !customizer;
        if (object == null) {
          return !length;
        }
        object = Object(object);
        while (index--) {
          var data = matchData[index];
          if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
            return false;
          }
        }
        while (++index < length) {
          data = matchData[index];
          var key = data[0],
            objValue = object[key],
            srcValue = data[1];
          if (noCustomizer && data[2]) {
            if (objValue === undefined$1 && !(key in object)) {
              return false;
            }
          } else {
            var stack = new Stack();
            if (customizer) {
              var result = customizer(objValue, srcValue, key, object, source, stack);
            }
            if (!(result === undefined$1 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
              return false;
            }
          }
        }
        return true;
      }
      function baseIsNative(value) {
        if (!isObject(value) || isMasked(value)) {
          return false;
        }
        var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
        return pattern.test(toSource(value));
      }
      function baseIsRegExp(value) {
        return isObjectLike(value) && baseGetTag(value) == regexpTag;
      }
      function baseIsSet(value) {
        return isObjectLike(value) && getTag(value) == setTag;
      }
      function baseIsTypedArray(value) {
        return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
      }
      function baseIteratee(value) {
        if (typeof value == 'function') {
          return value;
        }
        if (value == null) {
          return identity;
        }
        if (typeof value == 'object') {
          return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
        }
        return property(value);
      }
      function baseKeys(object) {
        if (!isPrototype(object)) {
          return nativeKeys(object);
        }
        var result = [];
        for (var key in Object(object)) {
          if (hasOwnProperty.call(object, key) && key != 'constructor') {
            result.push(key);
          }
        }
        return result;
      }
      function baseKeysIn(object) {
        if (!isObject(object)) {
          return nativeKeysIn(object);
        }
        var isProto = isPrototype(object),
          result = [];
        for (var key in object) {
          if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
            result.push(key);
          }
        }
        return result;
      }
      function baseLt(value, other) {
        return value < other;
      }
      function baseMap(collection, iteratee) {
        var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];
        baseEach(collection, function (value, key, collection) {
          result[++index] = iteratee(value, key, collection);
        });
        return result;
      }
      function baseMatches(source) {
        var matchData = getMatchData(source);
        if (matchData.length == 1 && matchData[0][2]) {
          return matchesStrictComparable(matchData[0][0], matchData[0][1]);
        }
        return function (object) {
          return object === source || baseIsMatch(object, source, matchData);
        };
      }
      function baseMatchesProperty(path, srcValue) {
        if (isKey(path) && isStrictComparable(srcValue)) {
          return matchesStrictComparable(toKey(path), srcValue);
        }
        return function (object) {
          var objValue = get(object, path);
          return objValue === undefined$1 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
        };
      }
      function baseMerge(object, source, srcIndex, customizer, stack) {
        if (object === source) {
          return;
        }
        baseFor(source, function (srcValue, key) {
          stack || (stack = new Stack());
          if (isObject(srcValue)) {
            baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
          } else {
            var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + '', object, source, stack) : undefined$1;
            if (newValue === undefined$1) {
              newValue = srcValue;
            }
            assignMergeValue(object, key, newValue);
          }
        }, keysIn);
      }
      function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
        var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);
        if (stacked) {
          assignMergeValue(object, key, stacked);
          return;
        }
        var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined$1;
        var isCommon = newValue === undefined$1;
        if (isCommon) {
          var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);
          newValue = srcValue;
          if (isArr || isBuff || isTyped) {
            if (isArray(objValue)) {
              newValue = objValue;
            } else if (isArrayLikeObject(objValue)) {
              newValue = copyArray(objValue);
            } else if (isBuff) {
              isCommon = false;
              newValue = cloneBuffer(srcValue, true);
            } else if (isTyped) {
              isCommon = false;
              newValue = cloneTypedArray(srcValue, true);
            } else {
              newValue = [];
            }
          } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
            newValue = objValue;
            if (isArguments(objValue)) {
              newValue = toPlainObject(objValue);
            } else if (!isObject(objValue) || isFunction(objValue)) {
              newValue = initCloneObject(srcValue);
            }
          } else {
            isCommon = false;
          }
        }
        if (isCommon) {
          stack.set(srcValue, newValue);
          mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
          stack['delete'](srcValue);
        }
        assignMergeValue(object, key, newValue);
      }
      function baseNth(array, n) {
        var length = array.length;
        if (!length) {
          return;
        }
        n += n < 0 ? length : 0;
        return isIndex(n, length) ? array[n] : undefined$1;
      }
      function baseOrderBy(collection, iteratees, orders) {
        if (iteratees.length) {
          iteratees = arrayMap(iteratees, function (iteratee) {
            if (isArray(iteratee)) {
              return function (value) {
                return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
              };
            }
            return iteratee;
          });
        } else {
          iteratees = [identity];
        }
        var index = -1;
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        var result = baseMap(collection, function (value, key, collection) {
          var criteria = arrayMap(iteratees, function (iteratee) {
            return iteratee(value);
          });
          return {
            'criteria': criteria,
            'index': ++index,
            'value': value
          };
        });
        return baseSortBy(result, function (object, other) {
          return compareMultiple(object, other, orders);
        });
      }
      function basePick(object, paths) {
        return basePickBy(object, paths, function (value, path) {
          return hasIn(object, path);
        });
      }
      function basePickBy(object, paths, predicate) {
        var index = -1,
          length = paths.length,
          result = {};
        while (++index < length) {
          var path = paths[index],
            value = baseGet(object, path);
          if (predicate(value, path)) {
            baseSet(result, castPath(path, object), value);
          }
        }
        return result;
      }
      function basePropertyDeep(path) {
        return function (object) {
          return baseGet(object, path);
        };
      }
      function basePullAll(array, values, iteratee, comparator) {
        var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;
        if (array === values) {
          values = copyArray(values);
        }
        if (iteratee) {
          seen = arrayMap(array, baseUnary(iteratee));
        }
        while (++index < length) {
          var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;
          while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
            if (seen !== array) {
              splice.call(seen, fromIndex, 1);
            }
            splice.call(array, fromIndex, 1);
          }
        }
        return array;
      }
      function basePullAt(array, indexes) {
        var length = array ? indexes.length : 0,
          lastIndex = length - 1;
        while (length--) {
          var index = indexes[length];
          if (length == lastIndex || index !== previous) {
            var previous = index;
            if (isIndex(index)) {
              splice.call(array, index, 1);
            } else {
              baseUnset(array, index);
            }
          }
        }
        return array;
      }
      function baseRandom(lower, upper) {
        return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
      }
      function baseRange(start, end, step, fromRight) {
        var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);
        while (length--) {
          result[fromRight ? length : ++index] = start;
          start += step;
        }
        return result;
      }
      function baseRepeat(string, n) {
        var result = '';
        if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
          return result;
        }
        do {
          if (n % 2) {
            result += string;
          }
          n = nativeFloor(n / 2);
          if (n) {
            string += string;
          }
        } while (n);
        return result;
      }
      function baseRest(func, start) {
        return setToString(overRest(func, start, identity), func + '');
      }
      function baseSample(collection) {
        return arraySample(values(collection));
      }
      function baseSampleSize(collection, n) {
        var array = values(collection);
        return shuffleSelf(array, baseClamp(n, 0, array.length));
      }
      function baseSet(object, path, value, customizer) {
        if (!isObject(object)) {
          return object;
        }
        path = castPath(path, object);
        var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;
        while (nested != null && ++index < length) {
          var key = toKey(path[index]),
            newValue = value;
          if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
            return object;
          }
          if (index != lastIndex) {
            var objValue = nested[key];
            newValue = customizer ? customizer(objValue, key, nested) : undefined$1;
            if (newValue === undefined$1) {
              newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
            }
          }
          assignValue(nested, key, newValue);
          nested = nested[key];
        }
        return object;
      }
      var baseSetData = !metaMap ? identity : function (func, data) {
        metaMap.set(func, data);
        return func;
      };
      var baseSetToString = !defineProperty ? identity : function (func, string) {
        return defineProperty(func, 'toString', {
          'configurable': true,
          'enumerable': false,
          'value': constant(string),
          'writable': true
        });
      };
      function baseShuffle(collection) {
        return shuffleSelf(values(collection));
      }
      function baseSlice(array, start, end) {
        var index = -1,
          length = array.length;
        if (start < 0) {
          start = -start > length ? 0 : length + start;
        }
        end = end > length ? length : end;
        if (end < 0) {
          end += length;
        }
        length = start > end ? 0 : end - start >>> 0;
        start >>>= 0;
        var result = Array(length);
        while (++index < length) {
          result[index] = array[index + start];
        }
        return result;
      }
      function baseSome(collection, predicate) {
        var result;
        baseEach(collection, function (value, index, collection) {
          result = predicate(value, index, collection);
          return !result;
        });
        return !!result;
      }
      function baseSortedIndex(array, value, retHighest) {
        var low = 0,
          high = array == null ? low : array.length;
        if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
          while (low < high) {
            var mid = low + high >>> 1,
              computed = array[mid];
            if (computed !== null && !isSymbol(computed) && (retHighest ? computed <= value : computed < value)) {
              low = mid + 1;
            } else {
              high = mid;
            }
          }
          return high;
        }
        return baseSortedIndexBy(array, value, identity, retHighest);
      }
      function baseSortedIndexBy(array, value, iteratee, retHighest) {
        var low = 0,
          high = array == null ? 0 : array.length;
        if (high === 0) {
          return 0;
        }
        value = iteratee(value);
        var valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined$1;
        while (low < high) {
          var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined$1,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);
          if (valIsNaN) {
            var setLow = retHighest || othIsReflexive;
          } else if (valIsUndefined) {
            setLow = othIsReflexive && (retHighest || othIsDefined);
          } else if (valIsNull) {
            setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
          } else if (valIsSymbol) {
            setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
          } else if (othIsNull || othIsSymbol) {
            setLow = false;
          } else {
            setLow = retHighest ? computed <= value : computed < value;
          }
          if (setLow) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return nativeMin(high, MAX_ARRAY_INDEX);
      }
      function baseSortedUniq(array, iteratee) {
        var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];
        while (++index < length) {
          var value = array[index],
            computed = iteratee ? iteratee(value) : value;
          if (!index || !eq(computed, seen)) {
            var seen = computed;
            result[resIndex++] = value === 0 ? 0 : value;
          }
        }
        return result;
      }
      function baseToNumber(value) {
        if (typeof value == 'number') {
          return value;
        }
        if (isSymbol(value)) {
          return NAN;
        }
        return +value;
      }
      function baseToString(value) {
        if (typeof value == 'string') {
          return value;
        }
        if (isArray(value)) {
          return arrayMap(value, baseToString) + '';
        }
        if (isSymbol(value)) {
          return symbolToString ? symbolToString.call(value) : '';
        }
        var result = value + '';
        return result == '0' && 1 / value == -INFINITY ? '-0' : result;
      }
      function baseUniq(array, iteratee, comparator) {
        var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;
        if (comparator) {
          isCommon = false;
          includes = arrayIncludesWith;
        } else if (length >= LARGE_ARRAY_SIZE) {
          var set = iteratee ? null : createSet(array);
          if (set) {
            return setToArray(set);
          }
          isCommon = false;
          includes = cacheHas;
          seen = new SetCache();
        } else {
          seen = iteratee ? [] : result;
        }
        outer: while (++index < length) {
          var value = array[index],
            computed = iteratee ? iteratee(value) : value;
          value = comparator || value !== 0 ? value : 0;
          if (isCommon && computed === computed) {
            var seenIndex = seen.length;
            while (seenIndex--) {
              if (seen[seenIndex] === computed) {
                continue outer;
              }
            }
            if (iteratee) {
              seen.push(computed);
            }
            result.push(value);
          } else if (!includes(seen, computed, comparator)) {
            if (seen !== result) {
              seen.push(computed);
            }
            result.push(value);
          }
        }
        return result;
      }
      function baseUnset(object, path) {
        path = castPath(path, object);
        object = parent(object, path);
        return object == null || delete object[toKey(last(path))];
      }
      function baseUpdate(object, path, updater, customizer) {
        return baseSet(object, path, updater(baseGet(object, path)), customizer);
      }
      function baseWhile(array, predicate, isDrop, fromRight) {
        var length = array.length,
          index = fromRight ? length : -1;
        while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}
        return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
      }
      function baseWrapperValue(value, actions) {
        var result = value;
        if (result instanceof LazyWrapper) {
          result = result.value();
        }
        return arrayReduce(actions, function (result, action) {
          return action.func.apply(action.thisArg, arrayPush([result], action.args));
        }, result);
      }
      function baseXor(arrays, iteratee, comparator) {
        var length = arrays.length;
        if (length < 2) {
          return length ? baseUniq(arrays[0]) : [];
        }
        var index = -1,
          result = Array(length);
        while (++index < length) {
          var array = arrays[index],
            othIndex = -1;
          while (++othIndex < length) {
            if (othIndex != index) {
              result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
            }
          }
        }
        return baseUniq(baseFlatten(result, 1), iteratee, comparator);
      }
      function baseZipObject(props, values, assignFunc) {
        var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};
        while (++index < length) {
          var value = index < valsLength ? values[index] : undefined$1;
          assignFunc(result, props[index], value);
        }
        return result;
      }
      function castArrayLikeObject(value) {
        return isArrayLikeObject(value) ? value : [];
      }
      function castFunction(value) {
        return typeof value == 'function' ? value : identity;
      }
      function castPath(value, object) {
        if (isArray(value)) {
          return value;
        }
        return isKey(value, object) ? [value] : stringToPath(toString(value));
      }
      var castRest = baseRest;
      function castSlice(array, start, end) {
        var length = array.length;
        end = end === undefined$1 ? length : end;
        return !start && end >= length ? array : baseSlice(array, start, end);
      }
      var clearTimeout = ctxClearTimeout || function (id) {
        return root.clearTimeout(id);
      };
      function cloneBuffer(buffer, isDeep) {
        if (isDeep) {
          return buffer.slice();
        }
        var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
        buffer.copy(result);
        return result;
      }
      function cloneArrayBuffer(arrayBuffer) {
        var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
        new Uint8Array(result).set(new Uint8Array(arrayBuffer));
        return result;
      }
      function cloneDataView(dataView, isDeep) {
        var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
        return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
      }
      function cloneRegExp(regexp) {
        var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
        result.lastIndex = regexp.lastIndex;
        return result;
      }
      function cloneSymbol(symbol) {
        return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
      }
      function cloneTypedArray(typedArray, isDeep) {
        var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
        return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
      }
      function compareAscending(value, other) {
        if (value !== other) {
          var valIsDefined = value !== undefined$1,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);
          var othIsDefined = other !== undefined$1,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);
          if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
            return 1;
          }
          if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
            return -1;
          }
        }
        return 0;
      }
      function compareMultiple(object, other, orders) {
        var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;
        while (++index < length) {
          var result = compareAscending(objCriteria[index], othCriteria[index]);
          if (result) {
            if (index >= ordersLength) {
              return result;
            }
            var order = orders[index];
            return result * (order == 'desc' ? -1 : 1);
          }
        }
        return object.index - other.index;
      }
      function composeArgs(args, partials, holders, isCurried) {
        var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;
        while (++leftIndex < leftLength) {
          result[leftIndex] = partials[leftIndex];
        }
        while (++argsIndex < holdersLength) {
          if (isUncurried || argsIndex < argsLength) {
            result[holders[argsIndex]] = args[argsIndex];
          }
        }
        while (rangeLength--) {
          result[leftIndex++] = args[argsIndex++];
        }
        return result;
      }
      function composeArgsRight(args, partials, holders, isCurried) {
        var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;
        while (++argsIndex < rangeLength) {
          result[argsIndex] = args[argsIndex];
        }
        var offset = argsIndex;
        while (++rightIndex < rightLength) {
          result[offset + rightIndex] = partials[rightIndex];
        }
        while (++holdersIndex < holdersLength) {
          if (isUncurried || argsIndex < argsLength) {
            result[offset + holders[holdersIndex]] = args[argsIndex++];
          }
        }
        return result;
      }
      function copyArray(source, array) {
        var index = -1,
          length = source.length;
        array || (array = Array(length));
        while (++index < length) {
          array[index] = source[index];
        }
        return array;
      }
      function copyObject(source, props, object, customizer) {
        var isNew = !object;
        object || (object = {});
        var index = -1,
          length = props.length;
        while (++index < length) {
          var key = props[index];
          var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined$1;
          if (newValue === undefined$1) {
            newValue = source[key];
          }
          if (isNew) {
            baseAssignValue(object, key, newValue);
          } else {
            assignValue(object, key, newValue);
          }
        }
        return object;
      }
      function copySymbols(source, object) {
        return copyObject(source, getSymbols(source), object);
      }
      function copySymbolsIn(source, object) {
        return copyObject(source, getSymbolsIn(source), object);
      }
      function createAggregator(setter, initializer) {
        return function (collection, iteratee) {
          var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};
          return func(collection, setter, getIteratee(iteratee, 2), accumulator);
        };
      }
      function createAssigner(assigner) {
        return baseRest(function (object, sources) {
          var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined$1,
            guard = length > 2 ? sources[2] : undefined$1;
          customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined$1;
          if (guard && isIterateeCall(sources[0], sources[1], guard)) {
            customizer = length < 3 ? undefined$1 : customizer;
            length = 1;
          }
          object = Object(object);
          while (++index < length) {
            var source = sources[index];
            if (source) {
              assigner(object, source, index, customizer);
            }
          }
          return object;
        });
      }
      function createBaseEach(eachFunc, fromRight) {
        return function (collection, iteratee) {
          if (collection == null) {
            return collection;
          }
          if (!isArrayLike(collection)) {
            return eachFunc(collection, iteratee);
          }
          var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);
          while (fromRight ? index-- : ++index < length) {
            if (iteratee(iterable[index], index, iterable) === false) {
              break;
            }
          }
          return collection;
        };
      }
      function createBaseFor(fromRight) {
        return function (object, iteratee, keysFunc) {
          var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;
          while (length--) {
            var key = props[fromRight ? length : ++index];
            if (iteratee(iterable[key], key, iterable) === false) {
              break;
            }
          }
          return object;
        };
      }
      function createBind(func, bitmask, thisArg) {
        var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);
        function wrapper() {
          var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
          return fn.apply(isBind ? thisArg : this, arguments);
        }
        return wrapper;
      }
      function createCaseFirst(methodName) {
        return function (string) {
          string = toString(string);
          var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined$1;
          var chr = strSymbols ? strSymbols[0] : string.charAt(0);
          var trailing = strSymbols ? castSlice(strSymbols, 1).join('') : string.slice(1);
          return chr[methodName]() + trailing;
        };
      }
      function createCompounder(callback) {
        return function (string) {
          return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
        };
      }
      function createCtor(Ctor) {
        return function () {
          var args = arguments;
          switch (args.length) {
            case 0:
              return new Ctor();
            case 1:
              return new Ctor(args[0]);
            case 2:
              return new Ctor(args[0], args[1]);
            case 3:
              return new Ctor(args[0], args[1], args[2]);
            case 4:
              return new Ctor(args[0], args[1], args[2], args[3]);
            case 5:
              return new Ctor(args[0], args[1], args[2], args[3], args[4]);
            case 6:
              return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
            case 7:
              return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
          }
          var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);
          return isObject(result) ? result : thisBinding;
        };
      }
      function createCurry(func, bitmask, arity) {
        var Ctor = createCtor(func);
        function wrapper() {
          var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);
          while (index--) {
            args[index] = arguments[index];
          }
          var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
          length -= holders.length;
          if (length < arity) {
            return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, undefined$1, args, holders, undefined$1, undefined$1, arity - length);
          }
          var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
          return apply(fn, this, args);
        }
        return wrapper;
      }
      function createFind(findIndexFunc) {
        return function (collection, predicate, fromIndex) {
          var iterable = Object(collection);
          if (!isArrayLike(collection)) {
            var iteratee = getIteratee(predicate, 3);
            collection = keys(collection);
            predicate = function (key) {
              return iteratee(iterable[key], key, iterable);
            };
          }
          var index = findIndexFunc(collection, predicate, fromIndex);
          return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined$1;
        };
      }
      function createFlow(fromRight) {
        return flatRest(function (funcs) {
          var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;
          if (fromRight) {
            funcs.reverse();
          }
          while (index--) {
            var func = funcs[index];
            if (typeof func != 'function') {
              throw new TypeError(FUNC_ERROR_TEXT);
            }
            if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
              var wrapper = new LodashWrapper([], true);
            }
          }
          index = wrapper ? index : length;
          while (++index < length) {
            func = funcs[index];
            var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined$1;
            if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) {
              wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
            } else {
              wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
            }
          }
          return function () {
            var args = arguments,
              value = args[0];
            if (wrapper && args.length == 1 && isArray(value)) {
              return wrapper.plant(value).value();
            }
            var index = 0,
              result = length ? funcs[index].apply(this, args) : value;
            while (++index < length) {
              result = funcs[index].call(this, result);
            }
            return result;
          };
        });
      }
      function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
        var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined$1 : createCtor(func);
        function wrapper() {
          var length = arguments.length,
            args = Array(length),
            index = length;
          while (index--) {
            args[index] = arguments[index];
          }
          if (isCurried) {
            var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
          }
          if (partials) {
            args = composeArgs(args, partials, holders, isCurried);
          }
          if (partialsRight) {
            args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
          }
          length -= holdersCount;
          if (isCurried && length < arity) {
            var newHolders = replaceHolders(args, placeholder);
            return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);
          }
          var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;
          length = args.length;
          if (argPos) {
            args = reorder(args, argPos);
          } else if (isFlip && length > 1) {
            args.reverse();
          }
          if (isAry && ary < length) {
            args.length = ary;
          }
          if (this && this !== root && this instanceof wrapper) {
            fn = Ctor || createCtor(fn);
          }
          return fn.apply(thisBinding, args);
        }
        return wrapper;
      }
      function createInverter(setter, toIteratee) {
        return function (object, iteratee) {
          return baseInverter(object, setter, toIteratee(iteratee), {});
        };
      }
      function createMathOperation(operator, defaultValue) {
        return function (value, other) {
          var result;
          if (value === undefined$1 && other === undefined$1) {
            return defaultValue;
          }
          if (value !== undefined$1) {
            result = value;
          }
          if (other !== undefined$1) {
            if (result === undefined$1) {
              return other;
            }
            if (typeof value == 'string' || typeof other == 'string') {
              value = baseToString(value);
              other = baseToString(other);
            } else {
              value = baseToNumber(value);
              other = baseToNumber(other);
            }
            result = operator(value, other);
          }
          return result;
        };
      }
      function createOver(arrayFunc) {
        return flatRest(function (iteratees) {
          iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
          return baseRest(function (args) {
            var thisArg = this;
            return arrayFunc(iteratees, function (iteratee) {
              return apply(iteratee, thisArg, args);
            });
          });
        });
      }
      function createPadding(length, chars) {
        chars = chars === undefined$1 ? ' ' : baseToString(chars);
        var charsLength = chars.length;
        if (charsLength < 2) {
          return charsLength ? baseRepeat(chars, length) : chars;
        }
        var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
        return hasUnicode(chars) ? castSlice(stringToArray(result), 0, length).join('') : result.slice(0, length);
      }
      function createPartial(func, bitmask, thisArg, partials) {
        var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);
        function wrapper() {
          var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = this && this !== root && this instanceof wrapper ? Ctor : func;
          while (++leftIndex < leftLength) {
            args[leftIndex] = partials[leftIndex];
          }
          while (argsLength--) {
            args[leftIndex++] = arguments[++argsIndex];
          }
          return apply(fn, isBind ? thisArg : this, args);
        }
        return wrapper;
      }
      function createRange(fromRight) {
        return function (start, end, step) {
          if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
            end = step = undefined$1;
          }
          start = toFinite(start);
          if (end === undefined$1) {
            end = start;
            start = 0;
          } else {
            end = toFinite(end);
          }
          step = step === undefined$1 ? start < end ? 1 : -1 : toFinite(step);
          return baseRange(start, end, step, fromRight);
        };
      }
      function createRelationalOperation(operator) {
        return function (value, other) {
          if (!(typeof value == 'string' && typeof other == 'string')) {
            value = toNumber(value);
            other = toNumber(other);
          }
          return operator(value, other);
        };
      }
      function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
        var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined$1,
          newHoldersRight = isCurry ? undefined$1 : holders,
          newPartials = isCurry ? partials : undefined$1,
          newPartialsRight = isCurry ? undefined$1 : partials;
        bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
        bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
        if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
          bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
        }
        var newData = [func, bitmask, thisArg, newPartials, newHolders, newPartialsRight, newHoldersRight, argPos, ary, arity];
        var result = wrapFunc.apply(undefined$1, newData);
        if (isLaziable(func)) {
          setData(result, newData);
        }
        result.placeholder = placeholder;
        return setWrapToString(result, func, bitmask);
      }
      function createRound(methodName) {
        var func = Math[methodName];
        return function (number, precision) {
          number = toNumber(number);
          precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
          if (precision && nativeIsFinite(number)) {
            var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));
            pair = (toString(value) + 'e').split('e');
            return +(pair[0] + 'e' + (+pair[1] - precision));
          }
          return func(number);
        };
      }
      var createSet = !(Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY) ? noop : function (values) {
        return new Set(values);
      };
      function createToPairs(keysFunc) {
        return function (object) {
          var tag = getTag(object);
          if (tag == mapTag) {
            return mapToArray(object);
          }
          if (tag == setTag) {
            return setToPairs(object);
          }
          return baseToPairs(object, keysFunc(object));
        };
      }
      function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
        var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
        if (!isBindKey && typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        var length = partials ? partials.length : 0;
        if (!length) {
          bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
          partials = holders = undefined$1;
        }
        ary = ary === undefined$1 ? ary : nativeMax(toInteger(ary), 0);
        arity = arity === undefined$1 ? arity : toInteger(arity);
        length -= holders ? holders.length : 0;
        if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
          var partialsRight = partials,
            holdersRight = holders;
          partials = holders = undefined$1;
        }
        var data = isBindKey ? undefined$1 : getData(func);
        var newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];
        if (data) {
          mergeData(newData, data);
        }
        func = newData[0];
        bitmask = newData[1];
        thisArg = newData[2];
        partials = newData[3];
        holders = newData[4];
        arity = newData[9] = newData[9] === undefined$1 ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);
        if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
          bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
        }
        if (!bitmask || bitmask == WRAP_BIND_FLAG) {
          var result = createBind(func, bitmask, thisArg);
        } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
          result = createCurry(func, bitmask, arity);
        } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
          result = createPartial(func, bitmask, thisArg, partials);
        } else {
          result = createHybrid.apply(undefined$1, newData);
        }
        var setter = data ? baseSetData : setData;
        return setWrapToString(setter(result, newData), func, bitmask);
      }
      function customDefaultsAssignIn(objValue, srcValue, key, object) {
        if (objValue === undefined$1 || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) {
          return srcValue;
        }
        return objValue;
      }
      function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
        if (isObject(objValue) && isObject(srcValue)) {
          stack.set(srcValue, objValue);
          baseMerge(objValue, srcValue, undefined$1, customDefaultsMerge, stack);
          stack['delete'](srcValue);
        }
        return objValue;
      }
      function customOmitClone(value) {
        return isPlainObject(value) ? undefined$1 : value;
      }
      function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;
        if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
          return false;
        }
        var arrStacked = stack.get(array);
        var othStacked = stack.get(other);
        if (arrStacked && othStacked) {
          return arrStacked == other && othStacked == array;
        }
        var index = -1,
          result = true,
          seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined$1;
        stack.set(array, other);
        stack.set(other, array);
        while (++index < arrLength) {
          var arrValue = array[index],
            othValue = other[index];
          if (customizer) {
            var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
          }
          if (compared !== undefined$1) {
            if (compared) {
              continue;
            }
            result = false;
            break;
          }
          if (seen) {
            if (!arraySome(other, function (othValue, othIndex) {
              if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                return seen.push(othIndex);
              }
            })) {
              result = false;
              break;
            }
          } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
            result = false;
            break;
          }
        }
        stack['delete'](array);
        stack['delete'](other);
        return result;
      }
      function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
        switch (tag) {
          case dataViewTag:
            if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
              return false;
            }
            object = object.buffer;
            other = other.buffer;
          case arrayBufferTag:
            if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
              return false;
            }
            return true;
          case boolTag:
          case dateTag:
          case numberTag:
            return eq(+object, +other);
          case errorTag:
            return object.name == other.name && object.message == other.message;
          case regexpTag:
          case stringTag:
            return object == other + '';
          case mapTag:
            var convert = mapToArray;
          case setTag:
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
            convert || (convert = setToArray);
            if (object.size != other.size && !isPartial) {
              return false;
            }
            var stacked = stack.get(object);
            if (stacked) {
              return stacked == other;
            }
            bitmask |= COMPARE_UNORDERED_FLAG;
            stack.set(object, other);
            var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
            stack['delete'](object);
            return result;
          case symbolTag:
            if (symbolValueOf) {
              return symbolValueOf.call(object) == symbolValueOf.call(other);
            }
        }
        return false;
      }
      function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;
        if (objLength != othLength && !isPartial) {
          return false;
        }
        var index = objLength;
        while (index--) {
          var key = objProps[index];
          if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
            return false;
          }
        }
        var objStacked = stack.get(object);
        var othStacked = stack.get(other);
        if (objStacked && othStacked) {
          return objStacked == other && othStacked == object;
        }
        var result = true;
        stack.set(object, other);
        stack.set(other, object);
        var skipCtor = isPartial;
        while (++index < objLength) {
          key = objProps[index];
          var objValue = object[key],
            othValue = other[key];
          if (customizer) {
            var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
          }
          if (!(compared === undefined$1 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
            result = false;
            break;
          }
          skipCtor || (skipCtor = key == 'constructor');
        }
        if (result && !skipCtor) {
          var objCtor = object.constructor,
            othCtor = other.constructor;
          if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
            result = false;
          }
        }
        stack['delete'](object);
        stack['delete'](other);
        return result;
      }
      function flatRest(func) {
        return setToString(overRest(func, undefined$1, flatten), func + '');
      }
      function getAllKeys(object) {
        return baseGetAllKeys(object, keys, getSymbols);
      }
      function getAllKeysIn(object) {
        return baseGetAllKeys(object, keysIn, getSymbolsIn);
      }
      var getData = !metaMap ? noop : function (func) {
        return metaMap.get(func);
      };
      function getFuncName(func) {
        var result = func.name + '',
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;
        while (length--) {
          var data = array[length],
            otherFunc = data.func;
          if (otherFunc == null || otherFunc == func) {
            return data.name;
          }
        }
        return result;
      }
      function getHolder(func) {
        var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
        return object.placeholder;
      }
      function getIteratee() {
        var result = lodash.iteratee || iteratee;
        result = result === iteratee ? baseIteratee : result;
        return arguments.length ? result(arguments[0], arguments[1]) : result;
      }
      function getMapData(map, key) {
        var data = map.__data__;
        return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
      }
      function getMatchData(object) {
        var result = keys(object),
          length = result.length;
        while (length--) {
          var key = result[length],
            value = object[key];
          result[length] = [key, value, isStrictComparable(value)];
        }
        return result;
      }
      function getNative(object, key) {
        var value = getValue(object, key);
        return baseIsNative(value) ? value : undefined$1;
      }
      function getRawTag(value) {
        var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];
        try {
          value[symToStringTag] = undefined$1;
          var unmasked = true;
        } catch (e) {}
        var result = nativeObjectToString.call(value);
        if (unmasked) {
          if (isOwn) {
            value[symToStringTag] = tag;
          } else {
            delete value[symToStringTag];
          }
        }
        return result;
      }
      var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
        if (object == null) {
          return [];
        }
        object = Object(object);
        return arrayFilter(nativeGetSymbols(object), function (symbol) {
          return propertyIsEnumerable.call(object, symbol);
        });
      };
      var getSymbolsIn = !nativeGetSymbols ? stubArray : function (object) {
        var result = [];
        while (object) {
          arrayPush(result, getSymbols(object));
          object = getPrototype(object);
        }
        return result;
      };
      var getTag = baseGetTag;
      if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
        getTag = function (value) {
          var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined$1,
            ctorString = Ctor ? toSource(Ctor) : '';
          if (ctorString) {
            switch (ctorString) {
              case dataViewCtorString:
                return dataViewTag;
              case mapCtorString:
                return mapTag;
              case promiseCtorString:
                return promiseTag;
              case setCtorString:
                return setTag;
              case weakMapCtorString:
                return weakMapTag;
            }
          }
          return result;
        };
      }
      function getView(start, end, transforms) {
        var index = -1,
          length = transforms.length;
        while (++index < length) {
          var data = transforms[index],
            size = data.size;
          switch (data.type) {
            case 'drop':
              start += size;
              break;
            case 'dropRight':
              end -= size;
              break;
            case 'take':
              end = nativeMin(end, start + size);
              break;
            case 'takeRight':
              start = nativeMax(start, end - size);
              break;
          }
        }
        return {
          'start': start,
          'end': end
        };
      }
      function getWrapDetails(source) {
        var match = source.match(reWrapDetails);
        return match ? match[1].split(reSplitDetails) : [];
      }
      function hasPath(object, path, hasFunc) {
        path = castPath(path, object);
        var index = -1,
          length = path.length,
          result = false;
        while (++index < length) {
          var key = toKey(path[index]);
          if (!(result = object != null && hasFunc(object, key))) {
            break;
          }
          object = object[key];
        }
        if (result || ++index != length) {
          return result;
        }
        length = object == null ? 0 : object.length;
        return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
      }
      function initCloneArray(array) {
        var length = array.length,
          result = new array.constructor(length);
        if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
          result.index = array.index;
          result.input = array.input;
        }
        return result;
      }
      function initCloneObject(object) {
        return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
      }
      function initCloneByTag(object, tag, isDeep) {
        var Ctor = object.constructor;
        switch (tag) {
          case arrayBufferTag:
            return cloneArrayBuffer(object);
          case boolTag:
          case dateTag:
            return new Ctor(+object);
          case dataViewTag:
            return cloneDataView(object, isDeep);
          case float32Tag:
          case float64Tag:
          case int8Tag:
          case int16Tag:
          case int32Tag:
          case uint8Tag:
          case uint8ClampedTag:
          case uint16Tag:
          case uint32Tag:
            return cloneTypedArray(object, isDeep);
          case mapTag:
            return new Ctor();
          case numberTag:
          case stringTag:
            return new Ctor(object);
          case regexpTag:
            return cloneRegExp(object);
          case setTag:
            return new Ctor();
          case symbolTag:
            return cloneSymbol(object);
        }
      }
      function insertWrapDetails(source, details) {
        var length = details.length;
        if (!length) {
          return source;
        }
        var lastIndex = length - 1;
        details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
        details = details.join(length > 2 ? ', ' : ' ');
        return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
      }
      function isFlattenable(value) {
        return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
      }
      function isIndex(value, length) {
        var type = typeof value;
        length = length == null ? MAX_SAFE_INTEGER : length;
        return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
      }
      function isIterateeCall(value, index, object) {
        if (!isObject(object)) {
          return false;
        }
        var type = typeof index;
        if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {
          return eq(object[index], value);
        }
        return false;
      }
      function isKey(value, object) {
        if (isArray(value)) {
          return false;
        }
        var type = typeof value;
        if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {
          return true;
        }
        return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
      }
      function isKeyable(value) {
        var type = typeof value;
        return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
      }
      function isLaziable(func) {
        var funcName = getFuncName(func),
          other = lodash[funcName];
        if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
          return false;
        }
        if (func === other) {
          return true;
        }
        var data = getData(other);
        return !!data && func === data[0];
      }
      function isMasked(func) {
        return !!maskSrcKey && maskSrcKey in func;
      }
      var isMaskable = coreJsData ? isFunction : stubFalse;
      function isPrototype(value) {
        var Ctor = value && value.constructor,
          proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;
        return value === proto;
      }
      function isStrictComparable(value) {
        return value === value && !isObject(value);
      }
      function matchesStrictComparable(key, srcValue) {
        return function (object) {
          if (object == null) {
            return false;
          }
          return object[key] === srcValue && (srcValue !== undefined$1 || key in Object(object));
        };
      }
      function memoizeCapped(func) {
        var result = memoize(func, function (key) {
          if (cache.size === MAX_MEMOIZE_SIZE) {
            cache.clear();
          }
          return key;
        });
        var cache = result.cache;
        return result;
      }
      function mergeData(data, source) {
        var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
        var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;
        if (!(isCommon || isCombo)) {
          return data;
        }
        if (srcBitmask & WRAP_BIND_FLAG) {
          data[2] = source[2];
          newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
        }
        var value = source[3];
        if (value) {
          var partials = data[3];
          data[3] = partials ? composeArgs(partials, value, source[4]) : value;
          data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
        }
        value = source[5];
        if (value) {
          partials = data[5];
          data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
          data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
        }
        value = source[7];
        if (value) {
          data[7] = value;
        }
        if (srcBitmask & WRAP_ARY_FLAG) {
          data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
        }
        if (data[9] == null) {
          data[9] = source[9];
        }
        data[0] = source[0];
        data[1] = newBitmask;
        return data;
      }
      function nativeKeysIn(object) {
        var result = [];
        if (object != null) {
          for (var key in Object(object)) {
            result.push(key);
          }
        }
        return result;
      }
      function objectToString(value) {
        return nativeObjectToString.call(value);
      }
      function overRest(func, start, transform) {
        start = nativeMax(start === undefined$1 ? func.length - 1 : start, 0);
        return function () {
          var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);
          while (++index < length) {
            array[index] = args[start + index];
          }
          index = -1;
          var otherArgs = Array(start + 1);
          while (++index < start) {
            otherArgs[index] = args[index];
          }
          otherArgs[start] = transform(array);
          return apply(func, this, otherArgs);
        };
      }
      function parent(object, path) {
        return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
      }
      function reorder(array, indexes) {
        var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);
        while (length--) {
          var index = indexes[length];
          array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined$1;
        }
        return array;
      }
      function safeGet(object, key) {
        if (key === 'constructor' && typeof object[key] === 'function') {
          return;
        }
        if (key == '__proto__') {
          return;
        }
        return object[key];
      }
      var setData = shortOut(baseSetData);
      var setTimeout = ctxSetTimeout || function (func, wait) {
        return root.setTimeout(func, wait);
      };
      var setToString = shortOut(baseSetToString);
      function setWrapToString(wrapper, reference, bitmask) {
        var source = reference + '';
        return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
      }
      function shortOut(func) {
        var count = 0,
          lastCalled = 0;
        return function () {
          var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);
          lastCalled = stamp;
          if (remaining > 0) {
            if (++count >= HOT_COUNT) {
              return arguments[0];
            }
          } else {
            count = 0;
          }
          return func.apply(undefined$1, arguments);
        };
      }
      function shuffleSelf(array, size) {
        var index = -1,
          length = array.length,
          lastIndex = length - 1;
        size = size === undefined$1 ? length : size;
        while (++index < size) {
          var rand = baseRandom(index, lastIndex),
            value = array[rand];
          array[rand] = array[index];
          array[index] = value;
        }
        array.length = size;
        return array;
      }
      var stringToPath = memoizeCapped(function (string) {
        var result = [];
        if (string.charCodeAt(0) === 46) {
          result.push('');
        }
        string.replace(rePropName, function (match, number, quote, subString) {
          result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);
        });
        return result;
      });
      function toKey(value) {
        if (typeof value == 'string' || isSymbol(value)) {
          return value;
        }
        var result = value + '';
        return result == '0' && 1 / value == -INFINITY ? '-0' : result;
      }
      function toSource(func) {
        if (func != null) {
          try {
            return funcToString.call(func);
          } catch (e) {}
          try {
            return func + '';
          } catch (e) {}
        }
        return '';
      }
      function updateWrapDetails(details, bitmask) {
        arrayEach(wrapFlags, function (pair) {
          var value = '_.' + pair[0];
          if (bitmask & pair[1] && !arrayIncludes(details, value)) {
            details.push(value);
          }
        });
        return details.sort();
      }
      function wrapperClone(wrapper) {
        if (wrapper instanceof LazyWrapper) {
          return wrapper.clone();
        }
        var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
        result.__actions__ = copyArray(wrapper.__actions__);
        result.__index__ = wrapper.__index__;
        result.__values__ = wrapper.__values__;
        return result;
      }
      function chunk(array, size, guard) {
        if (guard ? isIterateeCall(array, size, guard) : size === undefined$1) {
          size = 1;
        } else {
          size = nativeMax(toInteger(size), 0);
        }
        var length = array == null ? 0 : array.length;
        if (!length || size < 1) {
          return [];
        }
        var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));
        while (index < length) {
          result[resIndex++] = baseSlice(array, index, index += size);
        }
        return result;
      }
      function compact(array) {
        var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];
        while (++index < length) {
          var value = array[index];
          if (value) {
            result[resIndex++] = value;
          }
        }
        return result;
      }
      function concat() {
        var length = arguments.length;
        if (!length) {
          return [];
        }
        var args = Array(length - 1),
          array = arguments[0],
          index = length;
        while (index--) {
          args[index - 1] = arguments[index];
        }
        return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
      }
      var difference = baseRest(function (array, values) {
        return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];
      });
      var differenceBy = baseRest(function (array, values) {
        var iteratee = last(values);
        if (isArrayLikeObject(iteratee)) {
          iteratee = undefined$1;
        }
        return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2)) : [];
      });
      var differenceWith = baseRest(function (array, values) {
        var comparator = last(values);
        if (isArrayLikeObject(comparator)) {
          comparator = undefined$1;
        }
        return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined$1, comparator) : [];
      });
      function drop(array, n, guard) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return [];
        }
        n = guard || n === undefined$1 ? 1 : toInteger(n);
        return baseSlice(array, n < 0 ? 0 : n, length);
      }
      function dropRight(array, n, guard) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return [];
        }
        n = guard || n === undefined$1 ? 1 : toInteger(n);
        n = length - n;
        return baseSlice(array, 0, n < 0 ? 0 : n);
      }
      function dropRightWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
      }
      function dropWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
      }
      function fill(array, value, start, end) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return [];
        }
        if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
          start = 0;
          end = length;
        }
        return baseFill(array, value, start, end);
      }
      function findIndex(array, predicate, fromIndex) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return -1;
        }
        var index = fromIndex == null ? 0 : toInteger(fromIndex);
        if (index < 0) {
          index = nativeMax(length + index, 0);
        }
        return baseFindIndex(array, getIteratee(predicate, 3), index);
      }
      function findLastIndex(array, predicate, fromIndex) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return -1;
        }
        var index = length - 1;
        if (fromIndex !== undefined$1) {
          index = toInteger(fromIndex);
          index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
        }
        return baseFindIndex(array, getIteratee(predicate, 3), index, true);
      }
      function flatten(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseFlatten(array, 1) : [];
      }
      function flattenDeep(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseFlatten(array, INFINITY) : [];
      }
      function flattenDepth(array, depth) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return [];
        }
        depth = depth === undefined$1 ? 1 : toInteger(depth);
        return baseFlatten(array, depth);
      }
      function fromPairs(pairs) {
        var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};
        while (++index < length) {
          var pair = pairs[index];
          result[pair[0]] = pair[1];
        }
        return result;
      }
      function head(array) {
        return array && array.length ? array[0] : undefined$1;
      }
      function indexOf(array, value, fromIndex) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return -1;
        }
        var index = fromIndex == null ? 0 : toInteger(fromIndex);
        if (index < 0) {
          index = nativeMax(length + index, 0);
        }
        return baseIndexOf(array, value, index);
      }
      function initial(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseSlice(array, 0, -1) : [];
      }
      var intersection = baseRest(function (arrays) {
        var mapped = arrayMap(arrays, castArrayLikeObject);
        return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
      });
      var intersectionBy = baseRest(function (arrays) {
        var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);
        if (iteratee === last(mapped)) {
          iteratee = undefined$1;
        } else {
          mapped.pop();
        }
        return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee, 2)) : [];
      });
      var intersectionWith = baseRest(function (arrays) {
        var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);
        comparator = typeof comparator == 'function' ? comparator : undefined$1;
        if (comparator) {
          mapped.pop();
        }
        return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined$1, comparator) : [];
      });
      function join(array, separator) {
        return array == null ? '' : nativeJoin.call(array, separator);
      }
      function last(array) {
        var length = array == null ? 0 : array.length;
        return length ? array[length - 1] : undefined$1;
      }
      function lastIndexOf(array, value, fromIndex) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return -1;
        }
        var index = length;
        if (fromIndex !== undefined$1) {
          index = toInteger(fromIndex);
          index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
        }
        return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
      }
      function nth(array, n) {
        return array && array.length ? baseNth(array, toInteger(n)) : undefined$1;
      }
      var pull = baseRest(pullAll);
      function pullAll(array, values) {
        return array && array.length && values && values.length ? basePullAll(array, values) : array;
      }
      function pullAllBy(array, values, iteratee) {
        return array && array.length && values && values.length ? basePullAll(array, values, getIteratee(iteratee, 2)) : array;
      }
      function pullAllWith(array, values, comparator) {
        return array && array.length && values && values.length ? basePullAll(array, values, undefined$1, comparator) : array;
      }
      var pullAt = flatRest(function (array, indexes) {
        var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);
        basePullAt(array, arrayMap(indexes, function (index) {
          return isIndex(index, length) ? +index : index;
        }).sort(compareAscending));
        return result;
      });
      function remove(array, predicate) {
        var result = [];
        if (!(array && array.length)) {
          return result;
        }
        var index = -1,
          indexes = [],
          length = array.length;
        predicate = getIteratee(predicate, 3);
        while (++index < length) {
          var value = array[index];
          if (predicate(value, index, array)) {
            result.push(value);
            indexes.push(index);
          }
        }
        basePullAt(array, indexes);
        return result;
      }
      function reverse(array) {
        return array == null ? array : nativeReverse.call(array);
      }
      function slice(array, start, end) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return [];
        }
        if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
          start = 0;
          end = length;
        } else {
          start = start == null ? 0 : toInteger(start);
          end = end === undefined$1 ? length : toInteger(end);
        }
        return baseSlice(array, start, end);
      }
      function sortedIndex(array, value) {
        return baseSortedIndex(array, value);
      }
      function sortedIndexBy(array, value, iteratee) {
        return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
      }
      function sortedIndexOf(array, value) {
        var length = array == null ? 0 : array.length;
        if (length) {
          var index = baseSortedIndex(array, value);
          if (index < length && eq(array[index], value)) {
            return index;
          }
        }
        return -1;
      }
      function sortedLastIndex(array, value) {
        return baseSortedIndex(array, value, true);
      }
      function sortedLastIndexBy(array, value, iteratee) {
        return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
      }
      function sortedLastIndexOf(array, value) {
        var length = array == null ? 0 : array.length;
        if (length) {
          var index = baseSortedIndex(array, value, true) - 1;
          if (eq(array[index], value)) {
            return index;
          }
        }
        return -1;
      }
      function sortedUniq(array) {
        return array && array.length ? baseSortedUniq(array) : [];
      }
      function sortedUniqBy(array, iteratee) {
        return array && array.length ? baseSortedUniq(array, getIteratee(iteratee, 2)) : [];
      }
      function tail(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseSlice(array, 1, length) : [];
      }
      function take(array, n, guard) {
        if (!(array && array.length)) {
          return [];
        }
        n = guard || n === undefined$1 ? 1 : toInteger(n);
        return baseSlice(array, 0, n < 0 ? 0 : n);
      }
      function takeRight(array, n, guard) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return [];
        }
        n = guard || n === undefined$1 ? 1 : toInteger(n);
        n = length - n;
        return baseSlice(array, n < 0 ? 0 : n, length);
      }
      function takeRightWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
      }
      function takeWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
      }
      var union = baseRest(function (arrays) {
        return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
      });
      var unionBy = baseRest(function (arrays) {
        var iteratee = last(arrays);
        if (isArrayLikeObject(iteratee)) {
          iteratee = undefined$1;
        }
        return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
      });
      var unionWith = baseRest(function (arrays) {
        var comparator = last(arrays);
        comparator = typeof comparator == 'function' ? comparator : undefined$1;
        return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined$1, comparator);
      });
      function uniq(array) {
        return array && array.length ? baseUniq(array) : [];
      }
      function uniqBy(array, iteratee) {
        return array && array.length ? baseUniq(array, getIteratee(iteratee, 2)) : [];
      }
      function uniqWith(array, comparator) {
        comparator = typeof comparator == 'function' ? comparator : undefined$1;
        return array && array.length ? baseUniq(array, undefined$1, comparator) : [];
      }
      function unzip(array) {
        if (!(array && array.length)) {
          return [];
        }
        var length = 0;
        array = arrayFilter(array, function (group) {
          if (isArrayLikeObject(group)) {
            length = nativeMax(group.length, length);
            return true;
          }
        });
        return baseTimes(length, function (index) {
          return arrayMap(array, baseProperty(index));
        });
      }
      function unzipWith(array, iteratee) {
        if (!(array && array.length)) {
          return [];
        }
        var result = unzip(array);
        if (iteratee == null) {
          return result;
        }
        return arrayMap(result, function (group) {
          return apply(iteratee, undefined$1, group);
        });
      }
      var without = baseRest(function (array, values) {
        return isArrayLikeObject(array) ? baseDifference(array, values) : [];
      });
      var xor = baseRest(function (arrays) {
        return baseXor(arrayFilter(arrays, isArrayLikeObject));
      });
      var xorBy = baseRest(function (arrays) {
        var iteratee = last(arrays);
        if (isArrayLikeObject(iteratee)) {
          iteratee = undefined$1;
        }
        return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
      });
      var xorWith = baseRest(function (arrays) {
        var comparator = last(arrays);
        comparator = typeof comparator == 'function' ? comparator : undefined$1;
        return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined$1, comparator);
      });
      var zip = baseRest(unzip);
      function zipObject(props, values) {
        return baseZipObject(props || [], values || [], assignValue);
      }
      function zipObjectDeep(props, values) {
        return baseZipObject(props || [], values || [], baseSet);
      }
      var zipWith = baseRest(function (arrays) {
        var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined$1;
        iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined$1;
        return unzipWith(arrays, iteratee);
      });
      function chain(value) {
        var result = lodash(value);
        result.__chain__ = true;
        return result;
      }
      function tap(value, interceptor) {
        interceptor(value);
        return value;
      }
      function thru(value, interceptor) {
        return interceptor(value);
      }
      var wrapperAt = flatRest(function (paths) {
        var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function (object) {
            return baseAt(object, paths);
          };
        if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) {
          return this.thru(interceptor);
        }
        value = value.slice(start, +start + (length ? 1 : 0));
        value.__actions__.push({
          'func': thru,
          'args': [interceptor],
          'thisArg': undefined$1
        });
        return new LodashWrapper(value, this.__chain__).thru(function (array) {
          if (length && !array.length) {
            array.push(undefined$1);
          }
          return array;
        });
      });
      function wrapperChain() {
        return chain(this);
      }
      function wrapperCommit() {
        return new LodashWrapper(this.value(), this.__chain__);
      }
      function wrapperNext() {
        if (this.__values__ === undefined$1) {
          this.__values__ = toArray(this.value());
        }
        var done = this.__index__ >= this.__values__.length,
          value = done ? undefined$1 : this.__values__[this.__index__++];
        return {
          'done': done,
          'value': value
        };
      }
      function wrapperToIterator() {
        return this;
      }
      function wrapperPlant(value) {
        var result,
          parent = this;
        while (parent instanceof baseLodash) {
          var clone = wrapperClone(parent);
          clone.__index__ = 0;
          clone.__values__ = undefined$1;
          if (result) {
            previous.__wrapped__ = clone;
          } else {
            result = clone;
          }
          var previous = clone;
          parent = parent.__wrapped__;
        }
        previous.__wrapped__ = value;
        return result;
      }
      function wrapperReverse() {
        var value = this.__wrapped__;
        if (value instanceof LazyWrapper) {
          var wrapped = value;
          if (this.__actions__.length) {
            wrapped = new LazyWrapper(this);
          }
          wrapped = wrapped.reverse();
          wrapped.__actions__.push({
            'func': thru,
            'args': [reverse],
            'thisArg': undefined$1
          });
          return new LodashWrapper(wrapped, this.__chain__);
        }
        return this.thru(reverse);
      }
      function wrapperValue() {
        return baseWrapperValue(this.__wrapped__, this.__actions__);
      }
      var countBy = createAggregator(function (result, value, key) {
        if (hasOwnProperty.call(result, key)) {
          ++result[key];
        } else {
          baseAssignValue(result, key, 1);
        }
      });
      function every(collection, predicate, guard) {
        var func = isArray(collection) ? arrayEvery : baseEvery;
        if (guard && isIterateeCall(collection, predicate, guard)) {
          predicate = undefined$1;
        }
        return func(collection, getIteratee(predicate, 3));
      }
      function filter(collection, predicate) {
        var func = isArray(collection) ? arrayFilter : baseFilter;
        return func(collection, getIteratee(predicate, 3));
      }
      var find = createFind(findIndex);
      var findLast = createFind(findLastIndex);
      function flatMap(collection, iteratee) {
        return baseFlatten(map(collection, iteratee), 1);
      }
      function flatMapDeep(collection, iteratee) {
        return baseFlatten(map(collection, iteratee), INFINITY);
      }
      function flatMapDepth(collection, iteratee, depth) {
        depth = depth === undefined$1 ? 1 : toInteger(depth);
        return baseFlatten(map(collection, iteratee), depth);
      }
      function forEach(collection, iteratee) {
        var func = isArray(collection) ? arrayEach : baseEach;
        return func(collection, getIteratee(iteratee, 3));
      }
      function forEachRight(collection, iteratee) {
        var func = isArray(collection) ? arrayEachRight : baseEachRight;
        return func(collection, getIteratee(iteratee, 3));
      }
      var groupBy = createAggregator(function (result, value, key) {
        if (hasOwnProperty.call(result, key)) {
          result[key].push(value);
        } else {
          baseAssignValue(result, key, [value]);
        }
      });
      function includes(collection, value, fromIndex, guard) {
        collection = isArrayLike(collection) ? collection : values(collection);
        fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
        var length = collection.length;
        if (fromIndex < 0) {
          fromIndex = nativeMax(length + fromIndex, 0);
        }
        return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
      }
      var invokeMap = baseRest(function (collection, path, args) {
        var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];
        baseEach(collection, function (value) {
          result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
        });
        return result;
      });
      var keyBy = createAggregator(function (result, value, key) {
        baseAssignValue(result, key, value);
      });
      function map(collection, iteratee) {
        var func = isArray(collection) ? arrayMap : baseMap;
        return func(collection, getIteratee(iteratee, 3));
      }
      function orderBy(collection, iteratees, orders, guard) {
        if (collection == null) {
          return [];
        }
        if (!isArray(iteratees)) {
          iteratees = iteratees == null ? [] : [iteratees];
        }
        orders = guard ? undefined$1 : orders;
        if (!isArray(orders)) {
          orders = orders == null ? [] : [orders];
        }
        return baseOrderBy(collection, iteratees, orders);
      }
      var partition = createAggregator(function (result, value, key) {
        result[key ? 0 : 1].push(value);
      }, function () {
        return [[], []];
      });
      function reduce(collection, iteratee, accumulator) {
        var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;
        return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
      }
      function reduceRight(collection, iteratee, accumulator) {
        var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;
        return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
      }
      function reject(collection, predicate) {
        var func = isArray(collection) ? arrayFilter : baseFilter;
        return func(collection, negate(getIteratee(predicate, 3)));
      }
      function sample(collection) {
        var func = isArray(collection) ? arraySample : baseSample;
        return func(collection);
      }
      function sampleSize(collection, n, guard) {
        if (guard ? isIterateeCall(collection, n, guard) : n === undefined$1) {
          n = 1;
        } else {
          n = toInteger(n);
        }
        var func = isArray(collection) ? arraySampleSize : baseSampleSize;
        return func(collection, n);
      }
      function shuffle(collection) {
        var func = isArray(collection) ? arrayShuffle : baseShuffle;
        return func(collection);
      }
      function size(collection) {
        if (collection == null) {
          return 0;
        }
        if (isArrayLike(collection)) {
          return isString(collection) ? stringSize(collection) : collection.length;
        }
        var tag = getTag(collection);
        if (tag == mapTag || tag == setTag) {
          return collection.size;
        }
        return baseKeys(collection).length;
      }
      function some(collection, predicate, guard) {
        var func = isArray(collection) ? arraySome : baseSome;
        if (guard && isIterateeCall(collection, predicate, guard)) {
          predicate = undefined$1;
        }
        return func(collection, getIteratee(predicate, 3));
      }
      var sortBy = baseRest(function (collection, iteratees) {
        if (collection == null) {
          return [];
        }
        var length = iteratees.length;
        if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
          iteratees = [];
        } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
          iteratees = [iteratees[0]];
        }
        return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
      });
      var now = ctxNow || function () {
        return root.Date.now();
      };
      function after(n, func) {
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        n = toInteger(n);
        return function () {
          if (--n < 1) {
            return func.apply(this, arguments);
          }
        };
      }
      function ary(func, n, guard) {
        n = guard ? undefined$1 : n;
        n = func && n == null ? func.length : n;
        return createWrap(func, WRAP_ARY_FLAG, undefined$1, undefined$1, undefined$1, undefined$1, n);
      }
      function before(n, func) {
        var result;
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        n = toInteger(n);
        return function () {
          if (--n > 0) {
            result = func.apply(this, arguments);
          }
          if (n <= 1) {
            func = undefined$1;
          }
          return result;
        };
      }
      var bind = baseRest(function (func, thisArg, partials) {
        var bitmask = WRAP_BIND_FLAG;
        if (partials.length) {
          var holders = replaceHolders(partials, getHolder(bind));
          bitmask |= WRAP_PARTIAL_FLAG;
        }
        return createWrap(func, bitmask, thisArg, partials, holders);
      });
      var bindKey = baseRest(function (object, key, partials) {
        var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
        if (partials.length) {
          var holders = replaceHolders(partials, getHolder(bindKey));
          bitmask |= WRAP_PARTIAL_FLAG;
        }
        return createWrap(key, bitmask, object, partials, holders);
      });
      function curry(func, arity, guard) {
        arity = guard ? undefined$1 : arity;
        var result = createWrap(func, WRAP_CURRY_FLAG, undefined$1, undefined$1, undefined$1, undefined$1, undefined$1, arity);
        result.placeholder = curry.placeholder;
        return result;
      }
      function curryRight(func, arity, guard) {
        arity = guard ? undefined$1 : arity;
        var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined$1, undefined$1, undefined$1, undefined$1, undefined$1, arity);
        result.placeholder = curryRight.placeholder;
        return result;
      }
      function debounce(func, wait, options) {
        var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        wait = toNumber(wait) || 0;
        if (isObject(options)) {
          leading = !!options.leading;
          maxing = 'maxWait' in options;
          maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
          trailing = 'trailing' in options ? !!options.trailing : trailing;
        }
        function invokeFunc(time) {
          var args = lastArgs,
            thisArg = lastThis;
          lastArgs = lastThis = undefined$1;
          lastInvokeTime = time;
          result = func.apply(thisArg, args);
          return result;
        }
        function leadingEdge(time) {
          lastInvokeTime = time;
          timerId = setTimeout(timerExpired, wait);
          return leading ? invokeFunc(time) : result;
        }
        function remainingWait(time) {
          var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;
          return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
        }
        function shouldInvoke(time) {
          var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;
          return lastCallTime === undefined$1 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
        }
        function timerExpired() {
          var time = now();
          if (shouldInvoke(time)) {
            return trailingEdge(time);
          }
          timerId = setTimeout(timerExpired, remainingWait(time));
        }
        function trailingEdge(time) {
          timerId = undefined$1;
          if (trailing && lastArgs) {
            return invokeFunc(time);
          }
          lastArgs = lastThis = undefined$1;
          return result;
        }
        function cancel() {
          if (timerId !== undefined$1) {
            clearTimeout(timerId);
          }
          lastInvokeTime = 0;
          lastArgs = lastCallTime = lastThis = timerId = undefined$1;
        }
        function flush() {
          return timerId === undefined$1 ? result : trailingEdge(now());
        }
        function debounced() {
          var time = now(),
            isInvoking = shouldInvoke(time);
          lastArgs = arguments;
          lastThis = this;
          lastCallTime = time;
          if (isInvoking) {
            if (timerId === undefined$1) {
              return leadingEdge(lastCallTime);
            }
            if (maxing) {
              clearTimeout(timerId);
              timerId = setTimeout(timerExpired, wait);
              return invokeFunc(lastCallTime);
            }
          }
          if (timerId === undefined$1) {
            timerId = setTimeout(timerExpired, wait);
          }
          return result;
        }
        debounced.cancel = cancel;
        debounced.flush = flush;
        return debounced;
      }
      var defer = baseRest(function (func, args) {
        return baseDelay(func, 1, args);
      });
      var delay = baseRest(function (func, wait, args) {
        return baseDelay(func, toNumber(wait) || 0, args);
      });
      function flip(func) {
        return createWrap(func, WRAP_FLIP_FLAG);
      }
      function memoize(func, resolver) {
        if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        var memoized = function () {
          var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;
          if (cache.has(key)) {
            return cache.get(key);
          }
          var result = func.apply(this, args);
          memoized.cache = cache.set(key, result) || cache;
          return result;
        };
        memoized.cache = new (memoize.Cache || MapCache)();
        return memoized;
      }
      memoize.Cache = MapCache;
      function negate(predicate) {
        if (typeof predicate != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return function () {
          var args = arguments;
          switch (args.length) {
            case 0:
              return !predicate.call(this);
            case 1:
              return !predicate.call(this, args[0]);
            case 2:
              return !predicate.call(this, args[0], args[1]);
            case 3:
              return !predicate.call(this, args[0], args[1], args[2]);
          }
          return !predicate.apply(this, args);
        };
      }
      function once(func) {
        return before(2, func);
      }
      var overArgs = castRest(function (func, transforms) {
        transforms = transforms.length == 1 && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
        var funcsLength = transforms.length;
        return baseRest(function (args) {
          var index = -1,
            length = nativeMin(args.length, funcsLength);
          while (++index < length) {
            args[index] = transforms[index].call(this, args[index]);
          }
          return apply(func, this, args);
        });
      });
      var partial = baseRest(function (func, partials) {
        var holders = replaceHolders(partials, getHolder(partial));
        return createWrap(func, WRAP_PARTIAL_FLAG, undefined$1, partials, holders);
      });
      var partialRight = baseRest(function (func, partials) {
        var holders = replaceHolders(partials, getHolder(partialRight));
        return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined$1, partials, holders);
      });
      var rearg = flatRest(function (func, indexes) {
        return createWrap(func, WRAP_REARG_FLAG, undefined$1, undefined$1, undefined$1, indexes);
      });
      function rest(func, start) {
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        start = start === undefined$1 ? start : toInteger(start);
        return baseRest(func, start);
      }
      function spread(func, start) {
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        start = start == null ? 0 : nativeMax(toInteger(start), 0);
        return baseRest(function (args) {
          var array = args[start],
            otherArgs = castSlice(args, 0, start);
          if (array) {
            arrayPush(otherArgs, array);
          }
          return apply(func, this, otherArgs);
        });
      }
      function throttle(func, wait, options) {
        var leading = true,
          trailing = true;
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        if (isObject(options)) {
          leading = 'leading' in options ? !!options.leading : leading;
          trailing = 'trailing' in options ? !!options.trailing : trailing;
        }
        return debounce(func, wait, {
          'leading': leading,
          'maxWait': wait,
          'trailing': trailing
        });
      }
      function unary(func) {
        return ary(func, 1);
      }
      function wrap(value, wrapper) {
        return partial(castFunction(wrapper), value);
      }
      function castArray() {
        if (!arguments.length) {
          return [];
        }
        var value = arguments[0];
        return isArray(value) ? value : [value];
      }
      function clone(value) {
        return baseClone(value, CLONE_SYMBOLS_FLAG);
      }
      function cloneWith(value, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined$1;
        return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
      }
      function cloneDeep(value) {
        return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
      }
      function cloneDeepWith(value, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined$1;
        return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
      }
      function conformsTo(object, source) {
        return source == null || baseConformsTo(object, source, keys(source));
      }
      function eq(value, other) {
        return value === other || value !== value && other !== other;
      }
      var gt = createRelationalOperation(baseGt);
      var gte = createRelationalOperation(function (value, other) {
        return value >= other;
      });
      var isArguments = baseIsArguments(function () {
        return arguments;
      }()) ? baseIsArguments : function (value) {
        return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
      };
      var isArray = Array.isArray;
      var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
      function isArrayLike(value) {
        return value != null && isLength(value.length) && !isFunction(value);
      }
      function isArrayLikeObject(value) {
        return isObjectLike(value) && isArrayLike(value);
      }
      function isBoolean(value) {
        return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
      }
      var isBuffer = nativeIsBuffer || stubFalse;
      var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
      function isElement(value) {
        return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
      }
      function isEmpty(value) {
        if (value == null) {
          return true;
        }
        if (isArrayLike(value) && (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' || isBuffer(value) || isTypedArray(value) || isArguments(value))) {
          return !value.length;
        }
        var tag = getTag(value);
        if (tag == mapTag || tag == setTag) {
          return !value.size;
        }
        if (isPrototype(value)) {
          return !baseKeys(value).length;
        }
        for (var key in value) {
          if (hasOwnProperty.call(value, key)) {
            return false;
          }
        }
        return true;
      }
      function isEqual(value, other) {
        return baseIsEqual(value, other);
      }
      function isEqualWith(value, other, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined$1;
        var result = customizer ? customizer(value, other) : undefined$1;
        return result === undefined$1 ? baseIsEqual(value, other, undefined$1, customizer) : !!result;
      }
      function isError(value) {
        if (!isObjectLike(value)) {
          return false;
        }
        var tag = baseGetTag(value);
        return tag == errorTag || tag == domExcTag || typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value);
      }
      function isFinite(value) {
        return typeof value == 'number' && nativeIsFinite(value);
      }
      function isFunction(value) {
        if (!isObject(value)) {
          return false;
        }
        var tag = baseGetTag(value);
        return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
      }
      function isInteger(value) {
        return typeof value == 'number' && value == toInteger(value);
      }
      function isLength(value) {
        return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
      }
      function isObject(value) {
        var type = typeof value;
        return value != null && (type == 'object' || type == 'function');
      }
      function isObjectLike(value) {
        return value != null && typeof value == 'object';
      }
      var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
      function isMatch(object, source) {
        return object === source || baseIsMatch(object, source, getMatchData(source));
      }
      function isMatchWith(object, source, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined$1;
        return baseIsMatch(object, source, getMatchData(source), customizer);
      }
      function isNaN(value) {
        return isNumber(value) && value != +value;
      }
      function isNative(value) {
        if (isMaskable(value)) {
          throw new Error(CORE_ERROR_TEXT);
        }
        return baseIsNative(value);
      }
      function isNull(value) {
        return value === null;
      }
      function isNil(value) {
        return value == null;
      }
      function isNumber(value) {
        return typeof value == 'number' || isObjectLike(value) && baseGetTag(value) == numberTag;
      }
      function isPlainObject(value) {
        if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
          return false;
        }
        var proto = getPrototype(value);
        if (proto === null) {
          return true;
        }
        var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
        return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
      }
      var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
      function isSafeInteger(value) {
        return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
      }
      var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
      function isString(value) {
        return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
      }
      function isSymbol(value) {
        return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
      }
      var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
      function isUndefined(value) {
        return value === undefined$1;
      }
      function isWeakMap(value) {
        return isObjectLike(value) && getTag(value) == weakMapTag;
      }
      function isWeakSet(value) {
        return isObjectLike(value) && baseGetTag(value) == weakSetTag;
      }
      var lt = createRelationalOperation(baseLt);
      var lte = createRelationalOperation(function (value, other) {
        return value <= other;
      });
      function toArray(value) {
        if (!value) {
          return [];
        }
        if (isArrayLike(value)) {
          return isString(value) ? stringToArray(value) : copyArray(value);
        }
        if (symIterator && value[symIterator]) {
          return iteratorToArray(value[symIterator]());
        }
        var tag = getTag(value),
          func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
        return func(value);
      }
      function toFinite(value) {
        if (!value) {
          return value === 0 ? value : 0;
        }
        value = toNumber(value);
        if (value === INFINITY || value === -INFINITY) {
          var sign = value < 0 ? -1 : 1;
          return sign * MAX_INTEGER;
        }
        return value === value ? value : 0;
      }
      function toInteger(value) {
        var result = toFinite(value),
          remainder = result % 1;
        return result === result ? remainder ? result - remainder : result : 0;
      }
      function toLength(value) {
        return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
      }
      function toNumber(value) {
        if (typeof value == 'number') {
          return value;
        }
        if (isSymbol(value)) {
          return NAN;
        }
        if (isObject(value)) {
          var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
          value = isObject(other) ? other + '' : other;
        }
        if (typeof value != 'string') {
          return value === 0 ? value : +value;
        }
        value = baseTrim(value);
        var isBinary = reIsBinary.test(value);
        return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
      }
      function toPlainObject(value) {
        return copyObject(value, keysIn(value));
      }
      function toSafeInteger(value) {
        return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
      }
      function toString(value) {
        return value == null ? '' : baseToString(value);
      }
      var assign = createAssigner(function (object, source) {
        if (isPrototype(source) || isArrayLike(source)) {
          copyObject(source, keys(source), object);
          return;
        }
        for (var key in source) {
          if (hasOwnProperty.call(source, key)) {
            assignValue(object, key, source[key]);
          }
        }
      });
      var assignIn = createAssigner(function (object, source) {
        copyObject(source, keysIn(source), object);
      });
      var assignInWith = createAssigner(function (object, source, srcIndex, customizer) {
        copyObject(source, keysIn(source), object, customizer);
      });
      var assignWith = createAssigner(function (object, source, srcIndex, customizer) {
        copyObject(source, keys(source), object, customizer);
      });
      var at = flatRest(baseAt);
      function create(prototype, properties) {
        var result = baseCreate(prototype);
        return properties == null ? result : baseAssign(result, properties);
      }
      var defaults = baseRest(function (object, sources) {
        object = Object(object);
        var index = -1;
        var length = sources.length;
        var guard = length > 2 ? sources[2] : undefined$1;
        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          length = 1;
        }
        while (++index < length) {
          var source = sources[index];
          var props = keysIn(source);
          var propsIndex = -1;
          var propsLength = props.length;
          while (++propsIndex < propsLength) {
            var key = props[propsIndex];
            var value = object[key];
            if (value === undefined$1 || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) {
              object[key] = source[key];
            }
          }
        }
        return object;
      });
      var defaultsDeep = baseRest(function (args) {
        args.push(undefined$1, customDefaultsMerge);
        return apply(mergeWith, undefined$1, args);
      });
      function findKey(object, predicate) {
        return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
      }
      function findLastKey(object, predicate) {
        return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
      }
      function forIn(object, iteratee) {
        return object == null ? object : baseFor(object, getIteratee(iteratee, 3), keysIn);
      }
      function forInRight(object, iteratee) {
        return object == null ? object : baseForRight(object, getIteratee(iteratee, 3), keysIn);
      }
      function forOwn(object, iteratee) {
        return object && baseForOwn(object, getIteratee(iteratee, 3));
      }
      function forOwnRight(object, iteratee) {
        return object && baseForOwnRight(object, getIteratee(iteratee, 3));
      }
      function functions(object) {
        return object == null ? [] : baseFunctions(object, keys(object));
      }
      function functionsIn(object) {
        return object == null ? [] : baseFunctions(object, keysIn(object));
      }
      function get(object, path, defaultValue) {
        var result = object == null ? undefined$1 : baseGet(object, path);
        return result === undefined$1 ? defaultValue : result;
      }
      function has(object, path) {
        return object != null && hasPath(object, path, baseHas);
      }
      function hasIn(object, path) {
        return object != null && hasPath(object, path, baseHasIn);
      }
      var invert = createInverter(function (result, value, key) {
        if (value != null && typeof value.toString != 'function') {
          value = nativeObjectToString.call(value);
        }
        result[value] = key;
      }, constant(identity));
      var invertBy = createInverter(function (result, value, key) {
        if (value != null && typeof value.toString != 'function') {
          value = nativeObjectToString.call(value);
        }
        if (hasOwnProperty.call(result, value)) {
          result[value].push(key);
        } else {
          result[value] = [key];
        }
      }, getIteratee);
      var invoke = baseRest(baseInvoke);
      function keys(object) {
        return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
      }
      function keysIn(object) {
        return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
      }
      function mapKeys(object, iteratee) {
        var result = {};
        iteratee = getIteratee(iteratee, 3);
        baseForOwn(object, function (value, key, object) {
          baseAssignValue(result, iteratee(value, key, object), value);
        });
        return result;
      }
      function mapValues(object, iteratee) {
        var result = {};
        iteratee = getIteratee(iteratee, 3);
        baseForOwn(object, function (value, key, object) {
          baseAssignValue(result, key, iteratee(value, key, object));
        });
        return result;
      }
      var merge = createAssigner(function (object, source, srcIndex) {
        baseMerge(object, source, srcIndex);
      });
      var mergeWith = createAssigner(function (object, source, srcIndex, customizer) {
        baseMerge(object, source, srcIndex, customizer);
      });
      var omit = flatRest(function (object, paths) {
        var result = {};
        if (object == null) {
          return result;
        }
        var isDeep = false;
        paths = arrayMap(paths, function (path) {
          path = castPath(path, object);
          isDeep || (isDeep = path.length > 1);
          return path;
        });
        copyObject(object, getAllKeysIn(object), result);
        if (isDeep) {
          result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
        }
        var length = paths.length;
        while (length--) {
          baseUnset(result, paths[length]);
        }
        return result;
      });
      function omitBy(object, predicate) {
        return pickBy(object, negate(getIteratee(predicate)));
      }
      var pick = flatRest(function (object, paths) {
        return object == null ? {} : basePick(object, paths);
      });
      function pickBy(object, predicate) {
        if (object == null) {
          return {};
        }
        var props = arrayMap(getAllKeysIn(object), function (prop) {
          return [prop];
        });
        predicate = getIteratee(predicate);
        return basePickBy(object, props, function (value, path) {
          return predicate(value, path[0]);
        });
      }
      function result(object, path, defaultValue) {
        path = castPath(path, object);
        var index = -1,
          length = path.length;
        if (!length) {
          length = 1;
          object = undefined$1;
        }
        while (++index < length) {
          var value = object == null ? undefined$1 : object[toKey(path[index])];
          if (value === undefined$1) {
            index = length;
            value = defaultValue;
          }
          object = isFunction(value) ? value.call(object) : value;
        }
        return object;
      }
      function set(object, path, value) {
        return object == null ? object : baseSet(object, path, value);
      }
      function setWith(object, path, value, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined$1;
        return object == null ? object : baseSet(object, path, value, customizer);
      }
      var toPairs = createToPairs(keys);
      var toPairsIn = createToPairs(keysIn);
      function transform(object, iteratee, accumulator) {
        var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);
        iteratee = getIteratee(iteratee, 4);
        if (accumulator == null) {
          var Ctor = object && object.constructor;
          if (isArrLike) {
            accumulator = isArr ? new Ctor() : [];
          } else if (isObject(object)) {
            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
          } else {
            accumulator = {};
          }
        }
        (isArrLike ? arrayEach : baseForOwn)(object, function (value, index, object) {
          return iteratee(accumulator, value, index, object);
        });
        return accumulator;
      }
      function unset(object, path) {
        return object == null ? true : baseUnset(object, path);
      }
      function update(object, path, updater) {
        return object == null ? object : baseUpdate(object, path, castFunction(updater));
      }
      function updateWith(object, path, updater, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined$1;
        return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
      }
      function values(object) {
        return object == null ? [] : baseValues(object, keys(object));
      }
      function valuesIn(object) {
        return object == null ? [] : baseValues(object, keysIn(object));
      }
      function clamp(number, lower, upper) {
        if (upper === undefined$1) {
          upper = lower;
          lower = undefined$1;
        }
        if (upper !== undefined$1) {
          upper = toNumber(upper);
          upper = upper === upper ? upper : 0;
        }
        if (lower !== undefined$1) {
          lower = toNumber(lower);
          lower = lower === lower ? lower : 0;
        }
        return baseClamp(toNumber(number), lower, upper);
      }
      function inRange(number, start, end) {
        start = toFinite(start);
        if (end === undefined$1) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        number = toNumber(number);
        return baseInRange(number, start, end);
      }
      function random(lower, upper, floating) {
        if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
          upper = floating = undefined$1;
        }
        if (floating === undefined$1) {
          if (typeof upper == 'boolean') {
            floating = upper;
            upper = undefined$1;
          } else if (typeof lower == 'boolean') {
            floating = lower;
            lower = undefined$1;
          }
        }
        if (lower === undefined$1 && upper === undefined$1) {
          lower = 0;
          upper = 1;
        } else {
          lower = toFinite(lower);
          if (upper === undefined$1) {
            upper = lower;
            lower = 0;
          } else {
            upper = toFinite(upper);
          }
        }
        if (lower > upper) {
          var temp = lower;
          lower = upper;
          upper = temp;
        }
        if (floating || lower % 1 || upper % 1) {
          var rand = nativeRandom();
          return nativeMin(lower + rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1))), upper);
        }
        return baseRandom(lower, upper);
      }
      var camelCase = createCompounder(function (result, word, index) {
        word = word.toLowerCase();
        return result + (index ? capitalize(word) : word);
      });
      function capitalize(string) {
        return upperFirst(toString(string).toLowerCase());
      }
      function deburr(string) {
        string = toString(string);
        return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
      }
      function endsWith(string, target, position) {
        string = toString(string);
        target = baseToString(target);
        var length = string.length;
        position = position === undefined$1 ? length : baseClamp(toInteger(position), 0, length);
        var end = position;
        position -= target.length;
        return position >= 0 && string.slice(position, end) == target;
      }
      function escape(string) {
        string = toString(string);
        return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
      }
      function escapeRegExp(string) {
        string = toString(string);
        return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\$&') : string;
      }
      var kebabCase = createCompounder(function (result, word, index) {
        return result + (index ? '-' : '') + word.toLowerCase();
      });
      var lowerCase = createCompounder(function (result, word, index) {
        return result + (index ? ' ' : '') + word.toLowerCase();
      });
      var lowerFirst = createCaseFirst('toLowerCase');
      function pad(string, length, chars) {
        string = toString(string);
        length = toInteger(length);
        var strLength = length ? stringSize(string) : 0;
        if (!length || strLength >= length) {
          return string;
        }
        var mid = (length - strLength) / 2;
        return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
      }
      function padEnd(string, length, chars) {
        string = toString(string);
        length = toInteger(length);
        var strLength = length ? stringSize(string) : 0;
        return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
      }
      function padStart(string, length, chars) {
        string = toString(string);
        length = toInteger(length);
        var strLength = length ? stringSize(string) : 0;
        return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
      }
      function parseInt(string, radix, guard) {
        if (guard || radix == null) {
          radix = 0;
        } else if (radix) {
          radix = +radix;
        }
        return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
      }
      function repeat(string, n, guard) {
        if (guard ? isIterateeCall(string, n, guard) : n === undefined$1) {
          n = 1;
        } else {
          n = toInteger(n);
        }
        return baseRepeat(toString(string), n);
      }
      function replace() {
        var args = arguments,
          string = toString(args[0]);
        return args.length < 3 ? string : string.replace(args[1], args[2]);
      }
      var snakeCase = createCompounder(function (result, word, index) {
        return result + (index ? '_' : '') + word.toLowerCase();
      });
      function split(string, separator, limit) {
        if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
          separator = limit = undefined$1;
        }
        limit = limit === undefined$1 ? MAX_ARRAY_LENGTH : limit >>> 0;
        if (!limit) {
          return [];
        }
        string = toString(string);
        if (string && (typeof separator == 'string' || separator != null && !isRegExp(separator))) {
          separator = baseToString(separator);
          if (!separator && hasUnicode(string)) {
            return castSlice(stringToArray(string), 0, limit);
          }
        }
        return string.split(separator, limit);
      }
      var startCase = createCompounder(function (result, word, index) {
        return result + (index ? ' ' : '') + upperFirst(word);
      });
      function startsWith(string, target, position) {
        string = toString(string);
        position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length);
        target = baseToString(target);
        return string.slice(position, position + target.length) == target;
      }
      function template(string, options, guard) {
        var settings = lodash.templateSettings;
        if (guard && isIterateeCall(string, options, guard)) {
          options = undefined$1;
        }
        string = toString(string);
        options = assignInWith({}, options, settings, customDefaultsAssignIn);
        var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);
        var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";
        var reDelimiters = RegExp((options.escape || reNoMatch).source + '|' + interpolate.source + '|' + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' + (options.evaluate || reNoMatch).source + '|$', 'g');
        var sourceURL = '//# sourceURL=' + (hasOwnProperty.call(options, 'sourceURL') ? (options.sourceURL + '').replace(/\s/g, ' ') : 'lodash.templateSources[' + ++templateCounter + ']') + '\n';
        string.replace(reDelimiters, function (match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
          interpolateValue || (interpolateValue = esTemplateValue);
          source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);
          if (escapeValue) {
            isEscaping = true;
            source += "' +\n__e(" + escapeValue + ") +\n'";
          }
          if (evaluateValue) {
            isEvaluating = true;
            source += "';\n" + evaluateValue + ";\n__p += '";
          }
          if (interpolateValue) {
            source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
          }
          index = offset + match.length;
          return match;
        });
        source += "';\n";
        var variable = hasOwnProperty.call(options, 'variable') && options.variable;
        if (!variable) {
          source = 'with (obj) {\n' + source + '\n}\n';
        } else if (reForbiddenIdentifierChars.test(variable)) {
          throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
        }
        source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source).replace(reEmptyStringMiddle, '$1').replace(reEmptyStringTrailing, '$1;');
        source = 'function(' + (variable || 'obj') + ') {\n' + (variable ? '' : 'obj || (obj = {});\n') + "var __t, __p = ''" + (isEscaping ? ', __e = _.escape' : '') + (isEvaluating ? ', __j = Array.prototype.join;\n' + "function print() { __p += __j.call(arguments, '') }\n" : ';\n') + source + 'return __p\n}';
        var result = attempt(function () {
          return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined$1, importsValues);
        });
        result.source = source;
        if (isError(result)) {
          throw result;
        }
        return result;
      }
      function toLower(value) {
        return toString(value).toLowerCase();
      }
      function toUpper(value) {
        return toString(value).toUpperCase();
      }
      function trim(string, chars, guard) {
        string = toString(string);
        if (string && (guard || chars === undefined$1)) {
          return baseTrim(string);
        }
        if (!string || !(chars = baseToString(chars))) {
          return string;
        }
        var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;
        return castSlice(strSymbols, start, end).join('');
      }
      function trimEnd(string, chars, guard) {
        string = toString(string);
        if (string && (guard || chars === undefined$1)) {
          return string.slice(0, trimmedEndIndex(string) + 1);
        }
        if (!string || !(chars = baseToString(chars))) {
          return string;
        }
        var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
        return castSlice(strSymbols, 0, end).join('');
      }
      function trimStart(string, chars, guard) {
        string = toString(string);
        if (string && (guard || chars === undefined$1)) {
          return string.replace(reTrimStart, '');
        }
        if (!string || !(chars = baseToString(chars))) {
          return string;
        }
        var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));
        return castSlice(strSymbols, start).join('');
      }
      function truncate(string, options) {
        var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;
        if (isObject(options)) {
          var separator = 'separator' in options ? options.separator : separator;
          length = 'length' in options ? toInteger(options.length) : length;
          omission = 'omission' in options ? baseToString(options.omission) : omission;
        }
        string = toString(string);
        var strLength = string.length;
        if (hasUnicode(string)) {
          var strSymbols = stringToArray(string);
          strLength = strSymbols.length;
        }
        if (length >= strLength) {
          return string;
        }
        var end = length - stringSize(omission);
        if (end < 1) {
          return omission;
        }
        var result = strSymbols ? castSlice(strSymbols, 0, end).join('') : string.slice(0, end);
        if (separator === undefined$1) {
          return result + omission;
        }
        if (strSymbols) {
          end += result.length - end;
        }
        if (isRegExp(separator)) {
          if (string.slice(end).search(separator)) {
            var match,
              substring = result;
            if (!separator.global) {
              separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
            }
            separator.lastIndex = 0;
            while (match = separator.exec(substring)) {
              var newEnd = match.index;
            }
            result = result.slice(0, newEnd === undefined$1 ? end : newEnd);
          }
        } else if (string.indexOf(baseToString(separator), end) != end) {
          var index = result.lastIndexOf(separator);
          if (index > -1) {
            result = result.slice(0, index);
          }
        }
        return result + omission;
      }
      function unescape(string) {
        string = toString(string);
        return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
      }
      var upperCase = createCompounder(function (result, word, index) {
        return result + (index ? ' ' : '') + word.toUpperCase();
      });
      var upperFirst = createCaseFirst('toUpperCase');
      function words(string, pattern, guard) {
        string = toString(string);
        pattern = guard ? undefined$1 : pattern;
        if (pattern === undefined$1) {
          return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
        }
        return string.match(pattern) || [];
      }
      var attempt = baseRest(function (func, args) {
        try {
          return apply(func, undefined$1, args);
        } catch (e) {
          return isError(e) ? e : new Error(e);
        }
      });
      var bindAll = flatRest(function (object, methodNames) {
        arrayEach(methodNames, function (key) {
          key = toKey(key);
          baseAssignValue(object, key, bind(object[key], object));
        });
        return object;
      });
      function cond(pairs) {
        var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();
        pairs = !length ? [] : arrayMap(pairs, function (pair) {
          if (typeof pair[1] != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          return [toIteratee(pair[0]), pair[1]];
        });
        return baseRest(function (args) {
          var index = -1;
          while (++index < length) {
            var pair = pairs[index];
            if (apply(pair[0], this, args)) {
              return apply(pair[1], this, args);
            }
          }
        });
      }
      function conforms(source) {
        return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
      }
      function constant(value) {
        return function () {
          return value;
        };
      }
      function defaultTo(value, defaultValue) {
        return value == null || value !== value ? defaultValue : value;
      }
      var flow = createFlow();
      var flowRight = createFlow(true);
      function identity(value) {
        return value;
      }
      function iteratee(func) {
        return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
      }
      function matches(source) {
        return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
      }
      function matchesProperty(path, srcValue) {
        return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
      }
      var method = baseRest(function (path, args) {
        return function (object) {
          return baseInvoke(object, path, args);
        };
      });
      var methodOf = baseRest(function (object, args) {
        return function (path) {
          return baseInvoke(object, path, args);
        };
      });
      function mixin(object, source, options) {
        var props = keys(source),
          methodNames = baseFunctions(source, props);
        if (options == null && !(isObject(source) && (methodNames.length || !props.length))) {
          options = source;
          source = object;
          object = this;
          methodNames = baseFunctions(source, keys(source));
        }
        var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);
        arrayEach(methodNames, function (methodName) {
          var func = source[methodName];
          object[methodName] = func;
          if (isFunc) {
            object.prototype[methodName] = function () {
              var chainAll = this.__chain__;
              if (chain || chainAll) {
                var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);
                actions.push({
                  'func': func,
                  'args': arguments,
                  'thisArg': object
                });
                result.__chain__ = chainAll;
                return result;
              }
              return func.apply(object, arrayPush([this.value()], arguments));
            };
          }
        });
        return object;
      }
      function noConflict() {
        if (root._ === this) {
          root._ = oldDash;
        }
        return this;
      }
      function noop() {}
      function nthArg(n) {
        n = toInteger(n);
        return baseRest(function (args) {
          return baseNth(args, n);
        });
      }
      var over = createOver(arrayMap);
      var overEvery = createOver(arrayEvery);
      var overSome = createOver(arraySome);
      function property(path) {
        return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
      }
      function propertyOf(object) {
        return function (path) {
          return object == null ? undefined$1 : baseGet(object, path);
        };
      }
      var range = createRange();
      var rangeRight = createRange(true);
      function stubArray() {
        return [];
      }
      function stubFalse() {
        return false;
      }
      function stubObject() {
        return {};
      }
      function stubString() {
        return '';
      }
      function stubTrue() {
        return true;
      }
      function times(n, iteratee) {
        n = toInteger(n);
        if (n < 1 || n > MAX_SAFE_INTEGER) {
          return [];
        }
        var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);
        iteratee = getIteratee(iteratee);
        n -= MAX_ARRAY_LENGTH;
        var result = baseTimes(length, iteratee);
        while (++index < n) {
          iteratee(index);
        }
        return result;
      }
      function toPath(value) {
        if (isArray(value)) {
          return arrayMap(value, toKey);
        }
        return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
      }
      function uniqueId(prefix) {
        var id = ++idCounter;
        return toString(prefix) + id;
      }
      var add = createMathOperation(function (augend, addend) {
        return augend + addend;
      }, 0);
      var ceil = createRound('ceil');
      var divide = createMathOperation(function (dividend, divisor) {
        return dividend / divisor;
      }, 1);
      var floor = createRound('floor');
      function max(array) {
        return array && array.length ? baseExtremum(array, identity, baseGt) : undefined$1;
      }
      function maxBy(array, iteratee) {
        return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseGt) : undefined$1;
      }
      function mean(array) {
        return baseMean(array, identity);
      }
      function meanBy(array, iteratee) {
        return baseMean(array, getIteratee(iteratee, 2));
      }
      function min(array) {
        return array && array.length ? baseExtremum(array, identity, baseLt) : undefined$1;
      }
      function minBy(array, iteratee) {
        return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseLt) : undefined$1;
      }
      var multiply = createMathOperation(function (multiplier, multiplicand) {
        return multiplier * multiplicand;
      }, 1);
      var round = createRound('round');
      var subtract = createMathOperation(function (minuend, subtrahend) {
        return minuend - subtrahend;
      }, 0);
      function sum(array) {
        return array && array.length ? baseSum(array, identity) : 0;
      }
      function sumBy(array, iteratee) {
        return array && array.length ? baseSum(array, getIteratee(iteratee, 2)) : 0;
      }
      lodash.after = after;
      lodash.ary = ary;
      lodash.assign = assign;
      lodash.assignIn = assignIn;
      lodash.assignInWith = assignInWith;
      lodash.assignWith = assignWith;
      lodash.at = at;
      lodash.before = before;
      lodash.bind = bind;
      lodash.bindAll = bindAll;
      lodash.bindKey = bindKey;
      lodash.castArray = castArray;
      lodash.chain = chain;
      lodash.chunk = chunk;
      lodash.compact = compact;
      lodash.concat = concat;
      lodash.cond = cond;
      lodash.conforms = conforms;
      lodash.constant = constant;
      lodash.countBy = countBy;
      lodash.create = create;
      lodash.curry = curry;
      lodash.curryRight = curryRight;
      lodash.debounce = debounce;
      lodash.defaults = defaults;
      lodash.defaultsDeep = defaultsDeep;
      lodash.defer = defer;
      lodash.delay = delay;
      lodash.difference = difference;
      lodash.differenceBy = differenceBy;
      lodash.differenceWith = differenceWith;
      lodash.drop = drop;
      lodash.dropRight = dropRight;
      lodash.dropRightWhile = dropRightWhile;
      lodash.dropWhile = dropWhile;
      lodash.fill = fill;
      lodash.filter = filter;
      lodash.flatMap = flatMap;
      lodash.flatMapDeep = flatMapDeep;
      lodash.flatMapDepth = flatMapDepth;
      lodash.flatten = flatten;
      lodash.flattenDeep = flattenDeep;
      lodash.flattenDepth = flattenDepth;
      lodash.flip = flip;
      lodash.flow = flow;
      lodash.flowRight = flowRight;
      lodash.fromPairs = fromPairs;
      lodash.functions = functions;
      lodash.functionsIn = functionsIn;
      lodash.groupBy = groupBy;
      lodash.initial = initial;
      lodash.intersection = intersection;
      lodash.intersectionBy = intersectionBy;
      lodash.intersectionWith = intersectionWith;
      lodash.invert = invert;
      lodash.invertBy = invertBy;
      lodash.invokeMap = invokeMap;
      lodash.iteratee = iteratee;
      lodash.keyBy = keyBy;
      lodash.keys = keys;
      lodash.keysIn = keysIn;
      lodash.map = map;
      lodash.mapKeys = mapKeys;
      lodash.mapValues = mapValues;
      lodash.matches = matches;
      lodash.matchesProperty = matchesProperty;
      lodash.memoize = memoize;
      lodash.merge = merge;
      lodash.mergeWith = mergeWith;
      lodash.method = method;
      lodash.methodOf = methodOf;
      lodash.mixin = mixin;
      lodash.negate = negate;
      lodash.nthArg = nthArg;
      lodash.omit = omit;
      lodash.omitBy = omitBy;
      lodash.once = once;
      lodash.orderBy = orderBy;
      lodash.over = over;
      lodash.overArgs = overArgs;
      lodash.overEvery = overEvery;
      lodash.overSome = overSome;
      lodash.partial = partial;
      lodash.partialRight = partialRight;
      lodash.partition = partition;
      lodash.pick = pick;
      lodash.pickBy = pickBy;
      lodash.property = property;
      lodash.propertyOf = propertyOf;
      lodash.pull = pull;
      lodash.pullAll = pullAll;
      lodash.pullAllBy = pullAllBy;
      lodash.pullAllWith = pullAllWith;
      lodash.pullAt = pullAt;
      lodash.range = range;
      lodash.rangeRight = rangeRight;
      lodash.rearg = rearg;
      lodash.reject = reject;
      lodash.remove = remove;
      lodash.rest = rest;
      lodash.reverse = reverse;
      lodash.sampleSize = sampleSize;
      lodash.set = set;
      lodash.setWith = setWith;
      lodash.shuffle = shuffle;
      lodash.slice = slice;
      lodash.sortBy = sortBy;
      lodash.sortedUniq = sortedUniq;
      lodash.sortedUniqBy = sortedUniqBy;
      lodash.split = split;
      lodash.spread = spread;
      lodash.tail = tail;
      lodash.take = take;
      lodash.takeRight = takeRight;
      lodash.takeRightWhile = takeRightWhile;
      lodash.takeWhile = takeWhile;
      lodash.tap = tap;
      lodash.throttle = throttle;
      lodash.thru = thru;
      lodash.toArray = toArray;
      lodash.toPairs = toPairs;
      lodash.toPairsIn = toPairsIn;
      lodash.toPath = toPath;
      lodash.toPlainObject = toPlainObject;
      lodash.transform = transform;
      lodash.unary = unary;
      lodash.union = union;
      lodash.unionBy = unionBy;
      lodash.unionWith = unionWith;
      lodash.uniq = uniq;
      lodash.uniqBy = uniqBy;
      lodash.uniqWith = uniqWith;
      lodash.unset = unset;
      lodash.unzip = unzip;
      lodash.unzipWith = unzipWith;
      lodash.update = update;
      lodash.updateWith = updateWith;
      lodash.values = values;
      lodash.valuesIn = valuesIn;
      lodash.without = without;
      lodash.words = words;
      lodash.wrap = wrap;
      lodash.xor = xor;
      lodash.xorBy = xorBy;
      lodash.xorWith = xorWith;
      lodash.zip = zip;
      lodash.zipObject = zipObject;
      lodash.zipObjectDeep = zipObjectDeep;
      lodash.zipWith = zipWith;
      lodash.entries = toPairs;
      lodash.entriesIn = toPairsIn;
      lodash.extend = assignIn;
      lodash.extendWith = assignInWith;
      mixin(lodash, lodash);
      lodash.add = add;
      lodash.attempt = attempt;
      lodash.camelCase = camelCase;
      lodash.capitalize = capitalize;
      lodash.ceil = ceil;
      lodash.clamp = clamp;
      lodash.clone = clone;
      lodash.cloneDeep = cloneDeep;
      lodash.cloneDeepWith = cloneDeepWith;
      lodash.cloneWith = cloneWith;
      lodash.conformsTo = conformsTo;
      lodash.deburr = deburr;
      lodash.defaultTo = defaultTo;
      lodash.divide = divide;
      lodash.endsWith = endsWith;
      lodash.eq = eq;
      lodash.escape = escape;
      lodash.escapeRegExp = escapeRegExp;
      lodash.every = every;
      lodash.find = find;
      lodash.findIndex = findIndex;
      lodash.findKey = findKey;
      lodash.findLast = findLast;
      lodash.findLastIndex = findLastIndex;
      lodash.findLastKey = findLastKey;
      lodash.floor = floor;
      lodash.forEach = forEach;
      lodash.forEachRight = forEachRight;
      lodash.forIn = forIn;
      lodash.forInRight = forInRight;
      lodash.forOwn = forOwn;
      lodash.forOwnRight = forOwnRight;
      lodash.get = get;
      lodash.gt = gt;
      lodash.gte = gte;
      lodash.has = has;
      lodash.hasIn = hasIn;
      lodash.head = head;
      lodash.identity = identity;
      lodash.includes = includes;
      lodash.indexOf = indexOf;
      lodash.inRange = inRange;
      lodash.invoke = invoke;
      lodash.isArguments = isArguments;
      lodash.isArray = isArray;
      lodash.isArrayBuffer = isArrayBuffer;
      lodash.isArrayLike = isArrayLike;
      lodash.isArrayLikeObject = isArrayLikeObject;
      lodash.isBoolean = isBoolean;
      lodash.isBuffer = isBuffer;
      lodash.isDate = isDate;
      lodash.isElement = isElement;
      lodash.isEmpty = isEmpty;
      lodash.isEqual = isEqual;
      lodash.isEqualWith = isEqualWith;
      lodash.isError = isError;
      lodash.isFinite = isFinite;
      lodash.isFunction = isFunction;
      lodash.isInteger = isInteger;
      lodash.isLength = isLength;
      lodash.isMap = isMap;
      lodash.isMatch = isMatch;
      lodash.isMatchWith = isMatchWith;
      lodash.isNaN = isNaN;
      lodash.isNative = isNative;
      lodash.isNil = isNil;
      lodash.isNull = isNull;
      lodash.isNumber = isNumber;
      lodash.isObject = isObject;
      lodash.isObjectLike = isObjectLike;
      lodash.isPlainObject = isPlainObject;
      lodash.isRegExp = isRegExp;
      lodash.isSafeInteger = isSafeInteger;
      lodash.isSet = isSet;
      lodash.isString = isString;
      lodash.isSymbol = isSymbol;
      lodash.isTypedArray = isTypedArray;
      lodash.isUndefined = isUndefined;
      lodash.isWeakMap = isWeakMap;
      lodash.isWeakSet = isWeakSet;
      lodash.join = join;
      lodash.kebabCase = kebabCase;
      lodash.last = last;
      lodash.lastIndexOf = lastIndexOf;
      lodash.lowerCase = lowerCase;
      lodash.lowerFirst = lowerFirst;
      lodash.lt = lt;
      lodash.lte = lte;
      lodash.max = max;
      lodash.maxBy = maxBy;
      lodash.mean = mean;
      lodash.meanBy = meanBy;
      lodash.min = min;
      lodash.minBy = minBy;
      lodash.stubArray = stubArray;
      lodash.stubFalse = stubFalse;
      lodash.stubObject = stubObject;
      lodash.stubString = stubString;
      lodash.stubTrue = stubTrue;
      lodash.multiply = multiply;
      lodash.nth = nth;
      lodash.noConflict = noConflict;
      lodash.noop = noop;
      lodash.now = now;
      lodash.pad = pad;
      lodash.padEnd = padEnd;
      lodash.padStart = padStart;
      lodash.parseInt = parseInt;
      lodash.random = random;
      lodash.reduce = reduce;
      lodash.reduceRight = reduceRight;
      lodash.repeat = repeat;
      lodash.replace = replace;
      lodash.result = result;
      lodash.round = round;
      lodash.runInContext = runInContext;
      lodash.sample = sample;
      lodash.size = size;
      lodash.snakeCase = snakeCase;
      lodash.some = some;
      lodash.sortedIndex = sortedIndex;
      lodash.sortedIndexBy = sortedIndexBy;
      lodash.sortedIndexOf = sortedIndexOf;
      lodash.sortedLastIndex = sortedLastIndex;
      lodash.sortedLastIndexBy = sortedLastIndexBy;
      lodash.sortedLastIndexOf = sortedLastIndexOf;
      lodash.startCase = startCase;
      lodash.startsWith = startsWith;
      lodash.subtract = subtract;
      lodash.sum = sum;
      lodash.sumBy = sumBy;
      lodash.template = template;
      lodash.times = times;
      lodash.toFinite = toFinite;
      lodash.toInteger = toInteger;
      lodash.toLength = toLength;
      lodash.toLower = toLower;
      lodash.toNumber = toNumber;
      lodash.toSafeInteger = toSafeInteger;
      lodash.toString = toString;
      lodash.toUpper = toUpper;
      lodash.trim = trim;
      lodash.trimEnd = trimEnd;
      lodash.trimStart = trimStart;
      lodash.truncate = truncate;
      lodash.unescape = unescape;
      lodash.uniqueId = uniqueId;
      lodash.upperCase = upperCase;
      lodash.upperFirst = upperFirst;
      lodash.each = forEach;
      lodash.eachRight = forEachRight;
      lodash.first = head;
      mixin(lodash, function () {
        var source = {};
        baseForOwn(lodash, function (func, methodName) {
          if (!hasOwnProperty.call(lodash.prototype, methodName)) {
            source[methodName] = func;
          }
        });
        return source;
      }(), {
        'chain': false
      });
      lodash.VERSION = VERSION;
      arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function (methodName) {
        lodash[methodName].placeholder = lodash;
      });
      arrayEach(['drop', 'take'], function (methodName, index) {
        LazyWrapper.prototype[methodName] = function (n) {
          n = n === undefined$1 ? 1 : nativeMax(toInteger(n), 0);
          var result = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();
          if (result.__filtered__) {
            result.__takeCount__ = nativeMin(n, result.__takeCount__);
          } else {
            result.__views__.push({
              'size': nativeMin(n, MAX_ARRAY_LENGTH),
              'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
            });
          }
          return result;
        };
        LazyWrapper.prototype[methodName + 'Right'] = function (n) {
          return this.reverse()[methodName](n).reverse();
        };
      });
      arrayEach(['filter', 'map', 'takeWhile'], function (methodName, index) {
        var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
        LazyWrapper.prototype[methodName] = function (iteratee) {
          var result = this.clone();
          result.__iteratees__.push({
            'iteratee': getIteratee(iteratee, 3),
            'type': type
          });
          result.__filtered__ = result.__filtered__ || isFilter;
          return result;
        };
      });
      arrayEach(['head', 'last'], function (methodName, index) {
        var takeName = 'take' + (index ? 'Right' : '');
        LazyWrapper.prototype[methodName] = function () {
          return this[takeName](1).value()[0];
        };
      });
      arrayEach(['initial', 'tail'], function (methodName, index) {
        var dropName = 'drop' + (index ? '' : 'Right');
        LazyWrapper.prototype[methodName] = function () {
          return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
        };
      });
      LazyWrapper.prototype.compact = function () {
        return this.filter(identity);
      };
      LazyWrapper.prototype.find = function (predicate) {
        return this.filter(predicate).head();
      };
      LazyWrapper.prototype.findLast = function (predicate) {
        return this.reverse().find(predicate);
      };
      LazyWrapper.prototype.invokeMap = baseRest(function (path, args) {
        if (typeof path == 'function') {
          return new LazyWrapper(this);
        }
        return this.map(function (value) {
          return baseInvoke(value, path, args);
        });
      });
      LazyWrapper.prototype.reject = function (predicate) {
        return this.filter(negate(getIteratee(predicate)));
      };
      LazyWrapper.prototype.slice = function (start, end) {
        start = toInteger(start);
        var result = this;
        if (result.__filtered__ && (start > 0 || end < 0)) {
          return new LazyWrapper(result);
        }
        if (start < 0) {
          result = result.takeRight(-start);
        } else if (start) {
          result = result.drop(start);
        }
        if (end !== undefined$1) {
          end = toInteger(end);
          result = end < 0 ? result.dropRight(-end) : result.take(end - start);
        }
        return result;
      };
      LazyWrapper.prototype.takeRightWhile = function (predicate) {
        return this.reverse().takeWhile(predicate).reverse();
      };
      LazyWrapper.prototype.toArray = function () {
        return this.take(MAX_ARRAY_LENGTH);
      };
      baseForOwn(LazyWrapper.prototype, function (func, methodName) {
        var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? 'take' + (methodName == 'last' ? 'Right' : '') : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);
        if (!lodashFunc) {
          return;
        }
        lodash.prototype[methodName] = function () {
          var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);
          var interceptor = function (value) {
            var result = lodashFunc.apply(lodash, arrayPush([value], args));
            return isTaker && chainAll ? result[0] : result;
          };
          if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
            isLazy = useLazy = false;
          }
          var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;
          if (!retUnwrapped && useLazy) {
            value = onlyLazy ? value : new LazyWrapper(this);
            var result = func.apply(value, args);
            result.__actions__.push({
              'func': thru,
              'args': [interceptor],
              'thisArg': undefined$1
            });
            return new LodashWrapper(result, chainAll);
          }
          if (isUnwrapped && onlyLazy) {
            return func.apply(this, args);
          }
          result = this.thru(interceptor);
          return isUnwrapped ? isTaker ? result.value()[0] : result.value() : result;
        };
      });
      arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function (methodName) {
        var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);
        lodash.prototype[methodName] = function () {
          var args = arguments;
          if (retUnwrapped && !this.__chain__) {
            var value = this.value();
            return func.apply(isArray(value) ? value : [], args);
          }
          return this[chainName](function (value) {
            return func.apply(isArray(value) ? value : [], args);
          });
        };
      });
      baseForOwn(LazyWrapper.prototype, function (func, methodName) {
        var lodashFunc = lodash[methodName];
        if (lodashFunc) {
          var key = lodashFunc.name + '';
          if (!hasOwnProperty.call(realNames, key)) {
            realNames[key] = [];
          }
          realNames[key].push({
            'name': methodName,
            'func': lodashFunc
          });
        }
      });
      realNames[createHybrid(undefined$1, WRAP_BIND_KEY_FLAG).name] = [{
        'name': 'wrapper',
        'func': undefined$1
      }];
      LazyWrapper.prototype.clone = lazyClone;
      LazyWrapper.prototype.reverse = lazyReverse;
      LazyWrapper.prototype.value = lazyValue;
      lodash.prototype.at = wrapperAt;
      lodash.prototype.chain = wrapperChain;
      lodash.prototype.commit = wrapperCommit;
      lodash.prototype.next = wrapperNext;
      lodash.prototype.plant = wrapperPlant;
      lodash.prototype.reverse = wrapperReverse;
      lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
      lodash.prototype.first = lodash.prototype.head;
      if (symIterator) {
        lodash.prototype[symIterator] = wrapperToIterator;
      }
      return lodash;
    };
    var _ = runInContext();
    if (freeModule) {
      (freeModule.exports = _)._ = _;
      freeExports._ = _;
    } else {
      root._ = _;
    }
  }).call(commonjsGlobal);
});

const TLSelectAddress = ({
  t,
  config,
  onSelect,
  userType,
  formData,
  setError,
  formState,
  clearErrors
}) => {
  var _formData$tradeUnits, _formData$tradeUnits$, _formData$tradeUnits$2, _formData$address5;
  const allCities = Digit.Hooks.tl.useTenants();
  let tenantId = Digit.ULBService.getCurrentTenantId();
  const isEdit = window.location.href.includes("/edit-application/") || window.location.href.includes("renew-trade");
  const {
    pincode,
    city
  } = (formData === null || formData === void 0 ? void 0 : formData.address) || "";
  const cities = userType === "employee" ? allCities.filter(city => city.code === tenantId) : pincode ? allCities.filter(city => {
    var _city$pincode;
    return city === null || city === void 0 ? void 0 : (_city$pincode = city.pincode) === null || _city$pincode === void 0 ? void 0 : _city$pincode.some(pin => pin == pincode);
  }) : allCities;
  const [selectedCity, setSelectedCity] = useState(() => {
    var _formData$address;
    return (formData === null || formData === void 0 ? void 0 : (_formData$address = formData.address) === null || _formData$address === void 0 ? void 0 : _formData$address.city) || null;
  });
  const {
    data: fetchedLocalities
  } = Digit.Hooks.useBoundaryLocalities(selectedCity === null || selectedCity === void 0 ? void 0 : selectedCity.code, "revenue", {
    enabled: !!selectedCity
  }, t);
  const [localities, setLocalities] = useState();
  const [selectedLocality, setSelectedLocality] = useState();
  const [isErrors, setIsErrors] = useState(false);
  useEffect(() => {
    if (cities) {
      if (cities.length === 1) {
        setSelectedCity(cities[0]);
      }
    }
  }, [cities]);
  useEffect(() => {
    if (formData !== null && formData !== void 0 && formData.address) {
      let flag = true;
      Object.keys(formData === null || formData === void 0 ? void 0 : formData.address).map(dta => {
        if (dta != "key" || (formData === null || formData === void 0 ? void 0 : formData.address[dta]) != undefined || (formData === null || formData === void 0 ? void 0 : formData.address[dta]) != "" || (formData === null || formData === void 0 ? void 0 : formData.address[dta]) != null) ; else {
          if (flag) setSelectedCity(cities[0]);
          flag = false;
        }
      });
    }
  }, [formData === null || formData === void 0 ? void 0 : (_formData$tradeUnits = formData.tradeUnits) === null || _formData$tradeUnits === void 0 ? void 0 : (_formData$tradeUnits$ = _formData$tradeUnits[0]) === null || _formData$tradeUnits$ === void 0 ? void 0 : (_formData$tradeUnits$2 = _formData$tradeUnits$.tradeCategory) === null || _formData$tradeUnits$2 === void 0 ? void 0 : _formData$tradeUnits$2.code]);
  useEffect(() => {
    if (selectedCity && fetchedLocalities) {
      var _formData$address2, _formData$address3;
      let __localityList = fetchedLocalities;
      let filteredLocalityList = [];
      if (formData !== null && formData !== void 0 && (_formData$address2 = formData.address) !== null && _formData$address2 !== void 0 && _formData$address2.locality) {
        setSelectedLocality(formData.address.locality);
      }
      if (formData !== null && formData !== void 0 && (_formData$address3 = formData.address) !== null && _formData$address3 !== void 0 && _formData$address3.pincode) {
        var _formData$address4;
        filteredLocalityList = __localityList.filter(obj => {
          var _obj$pincode;
          return (_obj$pincode = obj.pincode) === null || _obj$pincode === void 0 ? void 0 : _obj$pincode.find(item => item == formData.address.pincode);
        });
        if (!(formData !== null && formData !== void 0 && (_formData$address4 = formData.address) !== null && _formData$address4 !== void 0 && _formData$address4.locality)) setSelectedLocality();
      }
      setLocalities(() => filteredLocalityList.length > 0 ? filteredLocalityList : __localityList);
      if (filteredLocalityList.length === 1) {
        setSelectedLocality(filteredLocalityList[0]);
        if (userType === "employee") {
          onSelect(config.key, {
            ...formData[config.key],
            locality: filteredLocalityList[0]
          });
        }
      }
    }
  }, [selectedCity, formData === null || formData === void 0 ? void 0 : (_formData$address5 = formData.address) === null || _formData$address5 === void 0 ? void 0 : _formData$address5.pincode, fetchedLocalities]);
  function selectCity(city) {
    setSelectedLocality(null);
    setLocalities(null);
    setSelectedCity(city);
  }
  function selectLocality(locality) {
    var _formData$address6;
    if (formData !== null && formData !== void 0 && (_formData$address6 = formData.address) !== null && _formData$address6 !== void 0 && _formData$address6.locality) {
      formData.address["locality"] = locality;
    }
    setSelectedLocality(locality);
    if (userType === "employee") {
      onSelect(config.key, {
        ...formData[config.key],
        locality: locality
      });
    }
  }
  function onSubmit() {
    onSelect(config.key, {
      city: selectedCity,
      locality: selectedLocality
    });
  }
  const {
    control,
    formState: localFormState,
    watch,
    setError: setLocalError,
    clearErrors: clearLocalErrors,
    setValue,
    trigger
  } = useForm();
  const formValue = watch();
  const {
    errors
  } = localFormState;
  const errorStyle = {
    width: "70%",
    marginLeft: "30%",
    fontSize: "12px",
    marginTop: "-21px"
  };
  useEffect(() => {
    trigger();
  }, []);
  useEffect(() => {
    let keys = Object.keys(formValue);
    const part = {};
    keys.forEach(key => {
      var _formData$config$key;
      return part[key] = (_formData$config$key = formData[config.key]) === null || _formData$config$key === void 0 ? void 0 : _formData$config$key[key];
    });
    if (userType === "employee") {
      if (!lodash.isEqual(formValue, part)) {
        Object.keys(formValue).map(data => {
          if (data != "key" && formValue[data] != undefined && formValue[data] != "" && formValue[data] != null && !isErrors) {
            setIsErrors(true);
          }
        });
        onSelect(config.key, {
          ...formData[config.key],
          ...formValue
        });
        trigger();
      }
    } else {
      if (!lodash.isEqual(formValue, part)) onSelect(config.key, {
        ...formData[config.key],
        ...formValue
      });
    }
    for (let key in formValue) {
      if (!formValue[key] && !localFormState.errors[key]) {
        setLocalError(key, {
          type: `${key.toUpperCase()}_REQUIRED`,
          message: `${key.toUpperCase()}_REQUIRED`
        });
      } else if (formValue[key] && localFormState.errors[key]) {
        clearLocalErrors([key]);
      }
    }
  }, [formValue]);
  useEffect(() => {
    if (userType === "employee") {
      var _formState$errors$con;
      if (Object.keys(errors).length && !lodash.isEqual(((_formState$errors$con = formState.errors[config.key]) === null || _formState$errors$con === void 0 ? void 0 : _formState$errors$con.type) || {}, errors)) {
        setError(config.key, {
          type: errors
        });
      } else if (!Object.keys(errors).length && formState.errors[config.key] && isErrors) {
        clearErrors(config.key);
      }
    }
  }, [errors]);
  let checkingLocationForRenew = window.location.href.includes("renew-application-details");
  if (window.location.href.includes("edit-application-details")) checkingLocationForRenew = true;
  if (userType === "employee") {
    var _errors$city, _formData$address7, _errors$locality2;
    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      className: "card-label-smaller"
    }, `${t("MYCITY_CODE_LABEL")} * `), /*#__PURE__*/React.createElement(Controller, {
      name: "city",
      defaultValue: (cities === null || cities === void 0 ? void 0 : cities.length) === 1 ? cities[0] : selectedCity,
      control: control,
      rules: {
        required: t("REQUIRED_FIELD")
      },
      render: props => /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: props.value,
        disable: true,
        option: cities,
        select: props.onChange,
        optionKey: "code",
        onBlur: props.onBlur,
        t: t
      })
    })), /*#__PURE__*/React.createElement(CardLabelError, {
      style: errorStyle
    }, localFormState.touched.city ? errors === null || errors === void 0 ? void 0 : (_errors$city = errors.city) === null || _errors$city === void 0 ? void 0 : _errors$city.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      className: "card-label-smaller"
    }, `${t("TL_LOCALIZATION_LOCALITY")} * `), /*#__PURE__*/React.createElement(Controller, {
      name: "locality",
      defaultValue: checkingLocationForRenew ? formData === null || formData === void 0 ? void 0 : (_formData$address7 = formData.address) === null || _formData$address7 === void 0 ? void 0 : _formData$address7.locality : null,
      control: control,
      rules: {
        required: t("REQUIRED_FIELD")
      },
      render: props => {
        var _formData$cpt, _formData$cpt2, _formData$cpt2$detail, _formData$cpt2$detail2, _formData$cpt3, _formData$cpt3$detail, _formData$cpt3$detail2, _formData$cpt3$detail3, _formData$cpt4, _formData$cpt4$detail, _formData$cpt4$detail2, _formData$cpt5, _formData$cpt5$detail, _formData$cpt5$detail2, _formData$cpt5$detail3, _formData$cpt6, _errors$locality;
        return /*#__PURE__*/React.createElement(Dropdown, {
          className: "form-field",
          selected: checkingLocationForRenew || formData !== null && formData !== void 0 && (_formData$cpt = formData.cpt) !== null && _formData$cpt !== void 0 && _formData$cpt.details ? {
            ...(formData === null || formData === void 0 ? void 0 : (_formData$cpt2 = formData.cpt) === null || _formData$cpt2 === void 0 ? void 0 : (_formData$cpt2$detail = _formData$cpt2.details) === null || _formData$cpt2$detail === void 0 ? void 0 : (_formData$cpt2$detail2 = _formData$cpt2$detail.address) === null || _formData$cpt2$detail2 === void 0 ? void 0 : _formData$cpt2$detail2.locality),
            i18nkey: formData === null || formData === void 0 ? void 0 : (_formData$cpt3 = formData.cpt) === null || _formData$cpt3 === void 0 ? void 0 : (_formData$cpt3$detail = _formData$cpt3.details) === null || _formData$cpt3$detail === void 0 ? void 0 : (_formData$cpt3$detail2 = _formData$cpt3$detail.address) === null || _formData$cpt3$detail2 === void 0 ? void 0 : (_formData$cpt3$detail3 = _formData$cpt3$detail2.locality) === null || _formData$cpt3$detail3 === void 0 ? void 0 : _formData$cpt3$detail3.name
          } : props.value || {
            ...(formData === null || formData === void 0 ? void 0 : (_formData$cpt4 = formData.cpt) === null || _formData$cpt4 === void 0 ? void 0 : (_formData$cpt4$detail = _formData$cpt4.details) === null || _formData$cpt4$detail === void 0 ? void 0 : (_formData$cpt4$detail2 = _formData$cpt4$detail.address) === null || _formData$cpt4$detail2 === void 0 ? void 0 : _formData$cpt4$detail2.locality),
            i18nkey: formData === null || formData === void 0 ? void 0 : (_formData$cpt5 = formData.cpt) === null || _formData$cpt5 === void 0 ? void 0 : (_formData$cpt5$detail = _formData$cpt5.details) === null || _formData$cpt5$detail === void 0 ? void 0 : (_formData$cpt5$detail2 = _formData$cpt5$detail.address) === null || _formData$cpt5$detail2 === void 0 ? void 0 : (_formData$cpt5$detail3 = _formData$cpt5$detail2.locality) === null || _formData$cpt5$detail3 === void 0 ? void 0 : _formData$cpt5$detail3.name
          },
          option: localities,
          select: props.onChange,
          onBlur: props.onBlur,
          optionKey: "i18nkey",
          t: t,
          disable: checkingLocationForRenew || formData !== null && formData !== void 0 && (_formData$cpt6 = formData.cpt) !== null && _formData$cpt6 !== void 0 && _formData$cpt6.details ? true : false,
          errorStyle: localFormState.touched.locality && errors !== null && errors !== void 0 && (_errors$locality = errors.locality) !== null && _errors$locality !== void 0 && _errors$locality.message ? true : false
        });
      }
    })), /*#__PURE__*/React.createElement(CardLabelError, {
      style: errorStyle
    }, localFormState.touched.locality ? errors === null || errors === void 0 ? void 0 : (_errors$locality2 = errors.locality) === null || _errors$locality2 === void 0 ? void 0 : _errors$locality2.message : ""));
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, {
    currentStep: 2
  }) : null, /*#__PURE__*/React.createElement(FormStep, {
    config: config,
    onSelect: onSubmit,
    t: t,
    isDisabled: selectedLocality ? false : true
  }, /*#__PURE__*/React.createElement(CardLabel, null, `${t("MYCITY_CODE_LABEL")}*`), /*#__PURE__*/React.createElement("span", {
    className: "form-pt-dropdown-only"
  }, /*#__PURE__*/React.createElement(RadioOrSelect, {
    options: cities.sort((a, b) => a.name.localeCompare(b.name)),
    selectedOption: selectedCity,
    optionKey: "i18nKey",
    onSelect: selectCity,
    t: t,
    isDependent: true,
    labelKey: "",
    disabled: isEdit
  })), selectedCity && localities && /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_LOCALIZATION_LOCALITY")} `), selectedCity && localities && /*#__PURE__*/React.createElement("span", {
    className: "form-pt-dropdown-only"
  }, /*#__PURE__*/React.createElement(RadioOrSelect, {
    dropdownStyle: {
      paddingBottom: "20px"
    },
    isMandatory: config.isMandatory,
    options: localities.sort((a, b) => a.name.localeCompare(b.name)),
    selectedOption: selectedLocality,
    optionKey: "i18nkey",
    onSelect: selectLocality,
    t: t,
    optionCardStyles: {
      maxHeight: "210px",
      overflow: "scroll"
    },
    labelKey: "",
    disabled: isEdit
  }))));
};

const TLSelectPincode = ({
  t,
  config,
  onSelect,
  formData: _formData = {},
  userType,
  register,
  errors,
  props
}) => {
  var _formData$address3;
  const tenants = Digit.Hooks.tl.useTenants();
  const [pincode, setPincode] = useState(() => {
    var _formData$address;
    return (_formData === null || _formData === void 0 ? void 0 : (_formData$address = _formData.address) === null || _formData$address === void 0 ? void 0 : _formData$address.pincode) || "";
  });
  const {
    pathname
  } = useLocation();
  const presentInModifyApplication = pathname.includes("modify");
  let isEdit = window.location.href.includes("/edit-application/") || window.location.href.includes("renew-trade");
  const isRenewal = window.location.href.includes("edit-application") || window.location.href.includes("tl/renew-application-details");
  const inputs = [{
    label: "CORE_COMMON_PINCODE",
    type: "text",
    name: "pincode",
    disable: isEdit,
    validation: {
      minlength: 6,
      maxlength: 7,
      pattern: "^[1-9]{1}[0-9]{2}\\s{0,1}[0-9]{3}$",
      max: "9999999",
      title: t("CORE_COMMON_PINCODE_INVALID")
    }
  }];
  const [pincodeServicability, setPincodeServicability] = useState(null);
  useEffect(() => {
    var _formData$address2;
    if (_formData !== null && _formData !== void 0 && (_formData$address2 = _formData.address) !== null && _formData$address2 !== void 0 && _formData$address2.pincode) {
      setPincode(_formData.address.pincode);
    }
  }, [_formData === null || _formData === void 0 ? void 0 : (_formData$address3 = _formData.address) === null || _formData$address3 === void 0 ? void 0 : _formData$address3.pincode]);
  function onChange(e) {
    setPincode(e.target.value);
    setPincodeServicability(null);
    if (userType === "employee") {
      const foundValue = tenants === null || tenants === void 0 ? void 0 : tenants.find(obj => {
        var _obj$pincode;
        return (_obj$pincode = obj.pincode) === null || _obj$pincode === void 0 ? void 0 : _obj$pincode.find(item => item.toString() === e.target.value);
      });
      if (foundValue) {
        const city = tenants.filter(obj => {
          var _obj$pincode2;
          return (_obj$pincode2 = obj.pincode) === null || _obj$pincode2 === void 0 ? void 0 : _obj$pincode2.find(item => item == e.target.value);
        })[0];
        onSelect(config.key, {
          ..._formData.address,
          city,
          pincode: e.target.value,
          slum: null
        });
      } else {
        onSelect(config.key, {
          ..._formData.address,
          pincode: e.target.value
        });
        setPincodeServicability("TL_COMMON_PINCODE_NOT_SERVICABLE");
      }
    }
  }
  const goNext = async data => {
    const foundValue = tenants === null || tenants === void 0 ? void 0 : tenants.find(obj => {
      var _obj$pincode3;
      return (_obj$pincode3 = obj.pincode) === null || _obj$pincode3 === void 0 ? void 0 : _obj$pincode3.find(item => item == (data === null || data === void 0 ? void 0 : data.pincode));
    });
    if (foundValue) {
      onSelect(config.key, {
        pincode
      });
    } else {
      setPincodeServicability("TL_COMMON_PINCODE_NOT_SERVICABLE");
    }
  };
  if (userType === "employee") {
    return inputs === null || inputs === void 0 ? void 0 : inputs.map((input, index) => {
      var _formData$cpt, _formData$cpt$details, _formData$cpt$details2, _formData$cpt2;
      return /*#__PURE__*/React.createElement(LabelFieldPair, {
        key: index
      }, /*#__PURE__*/React.createElement(CardLabel, {
        className: "card-label-smaller"
      }, `${t(input.label)}`), /*#__PURE__*/React.createElement("div", {
        className: "field"
      }, /*#__PURE__*/React.createElement(TextInput, Object.assign({
        key: input.name,
        value: (_formData === null || _formData === void 0 ? void 0 : (_formData$cpt = _formData.cpt) === null || _formData$cpt === void 0 ? void 0 : (_formData$cpt$details = _formData$cpt.details) === null || _formData$cpt$details === void 0 ? void 0 : (_formData$cpt$details2 = _formData$cpt$details.address) === null || _formData$cpt$details2 === void 0 ? void 0 : _formData$cpt$details2.pincode) || pincode,
        onChange: onChange,
        disable: (_formData === null || _formData === void 0 ? void 0 : (_formData$cpt2 = _formData.cpt) === null || _formData$cpt2 === void 0 ? void 0 : _formData$cpt2.details) || isRenewal
      }, input.validation, {
        autoFocus: presentInModifyApplication
      }))));
    });
  }
  const onSkip = () => onSelect();
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, {
    currentStep: 2
  }) : null, /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: {
      ...config,
      inputs
    },
    onSelect: goNext,
    _defaultValues: {
      pincode
    },
    onChange: onChange,
    onSkip: onSkip,
    forcedError: t(pincodeServicability),
    isDisabled: !pincode || isEdit
  }));
};

const Proof = ({
  t,
  config,
  onSelect,
  userType,
  formData
}) => {
  var _formData$owners, _formData$owners$docu, _formData$owners$docu2, _formData$owners2, _formData$owners2$doc, _formData$owners3, _formData$owners3$doc, _formData$owners3$doc2, _Documentsob$Property;
  const [uploadedFile, setUploadedFile] = useState((formData === null || formData === void 0 ? void 0 : (_formData$owners = formData.owners) === null || _formData$owners === void 0 ? void 0 : (_formData$owners$docu = _formData$owners.documents) === null || _formData$owners$docu === void 0 ? void 0 : (_formData$owners$docu2 = _formData$owners$docu.OwnerPhotoProof) === null || _formData$owners$docu2 === void 0 ? void 0 : _formData$owners$docu2.fileStoreId) || null);
  const [file, setFile] = useState(formData === null || formData === void 0 ? void 0 : (_formData$owners2 = formData.owners) === null || _formData$owners2 === void 0 ? void 0 : (_formData$owners2$doc = _formData$owners2.documents) === null || _formData$owners2$doc === void 0 ? void 0 : _formData$owners2$doc.OwnerPhotoProof);
  const [error, setError] = useState(null);
  const cityDetails = Digit.ULBService.getCurrentUlb();
  let acceptFormat = ".jpg,.png,.pdf,.jpeg";
  const [dropdownValue, setDropdownValue] = useState((formData === null || formData === void 0 ? void 0 : (_formData$owners3 = formData.owners) === null || _formData$owners3 === void 0 ? void 0 : (_formData$owners3$doc = _formData$owners3.documents) === null || _formData$owners3$doc === void 0 ? void 0 : (_formData$owners3$doc2 = _formData$owners3$doc.OwnerPhotoProof) === null || _formData$owners3$doc2 === void 0 ? void 0 : _formData$owners3$doc2.documentType) || null);
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const stateId = Digit.ULBService.getStateId();
  const {
    data: Documentsob = {}
  } = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", "Documents");
  const docs = Documentsob === null || Documentsob === void 0 ? void 0 : (_Documentsob$Property = Documentsob.PropertyTax) === null || _Documentsob$Property === void 0 ? void 0 : _Documentsob$Property.Documents;
  const ownerPhotoProof = Array.isArray(docs) && docs.filter(doc => doc.code.includes("ADDRESSPROOF"));
  useEffect(() => {
    localStorage.setItem("TLAppSubmitEnabled", "true");
  }, []);
  const handleSubmit = () => {
    let fileStoreId = uploadedFile;
    let fileDetails = file;
    if (fileDetails) fileDetails.documentType = "OWNERPHOTO";
    if (fileDetails) fileDetails.fileStoreId = fileStoreId ? fileStoreId : null;
    let owners = formData === null || formData === void 0 ? void 0 : formData.owners;
    if (owners && owners.documents) {
      owners.documents["OwnerPhotoProof"] = fileDetails;
    } else {
      owners["documents"] = [];
      owners.documents["OwnerPhotoProof"] = fileDetails;
    }
    onSelect(config.key, owners);
  };
  const onSkip = () => onSelect();
  function selectfile(e) {
    setUploadedFile(null);
    setFile(e.target.files[0]);
  }
  useEffect(() => {
    (async () => {
      setError(null);
      if (file && file !== null && file !== void 0 && file.type) {
        var _acceptFormat$split, _file$type, _file$type$split;
        if (!( (_acceptFormat$split = acceptFormat.split(",")) !== null && _acceptFormat$split !== void 0 && _acceptFormat$split.includes(`.${file === null || file === void 0 ? void 0 : (_file$type = file.type) === null || _file$type === void 0 ? void 0 : (_file$type$split = _file$type.split("/")) === null || _file$type$split === void 0 ? void 0 : _file$type$split.pop()}`))) {
          setError(t("PT_UPLOAD_FORMAT_NOT_SUPPORTED"));
        } else if (file.size >= 2000000) {
          setError(t("PT_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
        } else {
          try {
            var _response$data, _response$data$files;
            const response = await Digit.UploadServices.Filestorage("property-upload", file, Digit.ULBService.getStateId());
            if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
              var _response$data2, _response$data2$files;
              setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
            } else {
              setError(t("PT_FILE_UPLOAD_ERROR"));
            }
          } catch (err) {}
        }
      }
    })();
  }, [file]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, {
    currentStep: 3
  }) : null, /*#__PURE__*/React.createElement(FormStep, {
    config: config,
    onSelect: handleSubmit,
    onSkip: onSkip,
    t: t,
    isDisabled: !uploadedFile || error
  }, /*#__PURE__*/React.createElement(CardLabelDesc, {
    style: {
      fontWeight: "unset"
    }
  }, t(`TL_UPLOAD_PHOTO_RESTRICTIONS_TYPES`)), /*#__PURE__*/React.createElement(CardLabelDesc, {
    style: {
      fontWeight: "unset"
    }
  }, t(`TL_UPLOAD_RESTRICTIONS_SIZE`)), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_CATEGORY_DOCUMENT_TYPE")}`), /*#__PURE__*/React.createElement(UploadFile, {
    id: "tl-doc",
    extraStyleName: "propertyCreate",
    accept: ".jpg,.png,.pdf,.jpeg",
    onUpload: selectfile,
    onDelete: () => {
      setUploadedFile(null);
    },
    message: uploadedFile ? `1 ${t(`TL_ACTION_FILEUPLOADED`)}` : t(`TL_ACTION_NO_FILEUPLOADED`),
    error: error
  }), error ? /*#__PURE__*/React.createElement("div", {
    style: {
      height: "20px",
      width: "100%",
      fontSize: "20px",
      color: "red",
      marginTop: "5px"
    }
  }, error) : "", /*#__PURE__*/React.createElement("div", {
    style: {
      disabled: "true",
      height: "20px",
      width: "100%"
    }
  })));
};

const SelectOwnerShipDetails = ({
  t,
  config,
  onSelect,
  userType,
  formData,
  onBlur,
  formState,
  setError,
  clearErrors
}) => {
  var _formData$ownershipCa, _formData$ownershipCa2, _formData$ownershipCa7, _formData$cpt19, _formData$cpt19$detai, _formData$cptId, _formData$TradeDetail, _formData$TradeDetail2, _formData$cpt21;
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const stateId = Digit.ULBService.getStateId();
  let isEdit = window.location.href.includes("edit-application") || window.location.href.includes("renew-trade");
  const [ownershipCategory, setOwnershipCategory] = useState(formData === null || formData === void 0 ? void 0 : formData.ownershipCategory);
  const [isSameAsPropertyOwner, setisSameAsPropertyOwner] = useState(((formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa = formData.ownershipCategory) === null || _formData$ownershipCa === void 0 ? void 0 : _formData$ownershipCa.isSameAsPropertyOwner) === "false" ? false : formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa2 = formData.ownershipCategory) === null || _formData$ownershipCa2 === void 0 ? void 0 : _formData$ownershipCa2.isSameAsPropertyOwner) || null);
  const {
    data: dropdownData
  } = Digit.Hooks.tl.useTradeLicenseMDMS(stateId, "common-masters", "TLOwnerTypeWithSubtypes", {
    userType
  });
  const isEmpNewApplication = window.location.href.includes("/employee/tl/new-application");
  const isEmpRenewLicense = window.location.href.includes("/employee/tl/renew-application-details");
  const isEmpEdit = window.location.href.includes("/employee/tl/edit-application-details");
  const {
    pathname: url
  } = useLocation();
  const editScreen = url.includes("/modify-application/");
  function selectedValue(value) {
    setOwnershipCategory(value);
  }
  function selectisSameAsPropertyOwner(e) {
    setisSameAsPropertyOwner(e.target.checked);
    if (e.target.checked == true) {
      var _formData$cpt, _formData$cpt$details, _formData$cpt$details2, _formData$cpt9, _formData$cpt9$detail, _formData$cpt10, _formData$cpt10$detai, _formData$cpt10$detai2, _formData$cpt11, _formData$cpt11$detai, _formData$cpt11$detai2, _formData$cpt12, _formData$cpt12$detai, _formData$cpt12$detai2, _formData$cpt13, _formData$cpt13$detai, _formData$cpt13$detai2, _formData$cpt14, _formData$cpt14$detai, _formData$cpt14$detai2, _formData$cpt15, _formData$cpt15$detai, _formData$cpt16, _formData$cpt16$detai, _formData$cpt16$detai2, _formData$cpt17, _formData$cpt17$detai, _formData$cpt17$detai2;
      if (window.location.href.includes("/citizen/tl") && formData !== null && formData !== void 0 && (_formData$cpt = formData.cpt) !== null && _formData$cpt !== void 0 && (_formData$cpt$details = _formData$cpt.details) !== null && _formData$cpt$details !== void 0 && (_formData$cpt$details2 = _formData$cpt$details.ownershipCategory) !== null && _formData$cpt$details2 !== void 0 && _formData$cpt$details2.includes("INSTITUTIONAL")) {
        var _formData$cpt2, _formData$cpt2$detail, _formData$cpt3, _formData$cpt3$detail, _formData$cpt3$detail2, _formData$cpt4, _formData$cpt4$detail, _formData$cpt4$detail2, _formData$cpt5, _formData$cpt5$detail, _formData$cpt5$detail2, _formData$cpt6, _formData$cpt6$detail, _formData$cpt7, _formData$cpt7$detail, _formData$cpt7$detail2, _formData$cpt8, _formData$cpt8$detail, _formData$cpt8$detail2;
        setOwnershipCategory({
          code: `${formData === null || formData === void 0 ? void 0 : (_formData$cpt2 = formData.cpt) === null || _formData$cpt2 === void 0 ? void 0 : (_formData$cpt2$detail = _formData$cpt2.details) === null || _formData$cpt2$detail === void 0 ? void 0 : _formData$cpt2$detail.ownershipCategory}`,
          i18nKey: `PT_OWNERSHIP_${formData !== null && formData !== void 0 && (_formData$cpt3 = formData.cpt) !== null && _formData$cpt3 !== void 0 && (_formData$cpt3$detail = _formData$cpt3.details) !== null && _formData$cpt3$detail !== void 0 && (_formData$cpt3$detail2 = _formData$cpt3$detail.ownershipCategory) !== null && _formData$cpt3$detail2 !== void 0 && _formData$cpt3$detail2.includes("INSTITUTIONAL") ? formData !== null && formData !== void 0 && (_formData$cpt4 = formData.cpt) !== null && _formData$cpt4 !== void 0 && (_formData$cpt4$detail = _formData$cpt4.details) !== null && _formData$cpt4$detail !== void 0 && (_formData$cpt4$detail2 = _formData$cpt4$detail.ownershipCategory) !== null && _formData$cpt4$detail2 !== void 0 && _formData$cpt4$detail2.includes("GOVERNMENT") ? "OTHERGOVERNMENTINSTITUITION" : "OTHERSPRIVATEINSTITUITION" : formData === null || formData === void 0 ? void 0 : (_formData$cpt5 = formData.cpt) === null || _formData$cpt5 === void 0 ? void 0 : (_formData$cpt5$detail = _formData$cpt5.details) === null || _formData$cpt5$detail === void 0 ? void 0 : (_formData$cpt5$detail2 = _formData$cpt5$detail.ownershipCategory) === null || _formData$cpt5$detail2 === void 0 ? void 0 : _formData$cpt5$detail2.split(".")[1]}`,
          label: undefined,
          value: `${formData === null || formData === void 0 ? void 0 : (_formData$cpt6 = formData.cpt) === null || _formData$cpt6 === void 0 ? void 0 : (_formData$cpt6$detail = _formData$cpt6.details) === null || _formData$cpt6$detail === void 0 ? void 0 : _formData$cpt6$detail.ownershipCategory}${formData !== null && formData !== void 0 && (_formData$cpt7 = formData.cpt) !== null && _formData$cpt7 !== void 0 && (_formData$cpt7$detail = _formData$cpt7.details) !== null && _formData$cpt7$detail !== void 0 && (_formData$cpt7$detail2 = _formData$cpt7$detail.ownershipCategory) !== null && _formData$cpt7$detail2 !== void 0 && _formData$cpt7$detail2.includes("INSTITUTIONAL") ? formData !== null && formData !== void 0 && (_formData$cpt8 = formData.cpt) !== null && _formData$cpt8 !== void 0 && (_formData$cpt8$detail = _formData$cpt8.details) !== null && _formData$cpt8$detail !== void 0 && (_formData$cpt8$detail2 = _formData$cpt8$detail.ownershipCategory) !== null && _formData$cpt8$detail2 !== void 0 && _formData$cpt8$detail2.includes("GOVERNMENT") ? ".OTHERGOVERNMENTINSTITUITION" : ".OTHERSPRIVATEINSTITUITION" : ""}`
        });
      } else setOwnershipCategory({
        code: `${formData === null || formData === void 0 ? void 0 : (_formData$cpt9 = formData.cpt) === null || _formData$cpt9 === void 0 ? void 0 : (_formData$cpt9$detail = _formData$cpt9.details) === null || _formData$cpt9$detail === void 0 ? void 0 : _formData$cpt9$detail.ownershipCategory}${formData !== null && formData !== void 0 && (_formData$cpt10 = formData.cpt) !== null && _formData$cpt10 !== void 0 && (_formData$cpt10$detai = _formData$cpt10.details) !== null && _formData$cpt10$detai !== void 0 && (_formData$cpt10$detai2 = _formData$cpt10$detai.ownershipCategory) !== null && _formData$cpt10$detai2 !== void 0 && _formData$cpt10$detai2.includes("INSTITUTIONAL") ? formData !== null && formData !== void 0 && (_formData$cpt11 = formData.cpt) !== null && _formData$cpt11 !== void 0 && (_formData$cpt11$detai = _formData$cpt11.details) !== null && _formData$cpt11$detai !== void 0 && (_formData$cpt11$detai2 = _formData$cpt11$detai.ownershipCategory) !== null && _formData$cpt11$detai2 !== void 0 && _formData$cpt11$detai2.includes("GOVERNMENT") ? ".OTHERGOVERNMENTINSTITUITION" : ".OTHERSPRIVATEINSTITUITION" : ""}`,
        i18nKey: `COMMON_MASTERS_OWNERSHIPCATEGORY_INDIVIDUAL_${formData !== null && formData !== void 0 && (_formData$cpt12 = formData.cpt) !== null && _formData$cpt12 !== void 0 && (_formData$cpt12$detai = _formData$cpt12.details) !== null && _formData$cpt12$detai !== void 0 && (_formData$cpt12$detai2 = _formData$cpt12$detai.ownershipCategory) !== null && _formData$cpt12$detai2 !== void 0 && _formData$cpt12$detai2.includes("INSTITUTIONAL") ? formData !== null && formData !== void 0 && (_formData$cpt13 = formData.cpt) !== null && _formData$cpt13 !== void 0 && (_formData$cpt13$detai = _formData$cpt13.details) !== null && _formData$cpt13$detai !== void 0 && (_formData$cpt13$detai2 = _formData$cpt13$detai.ownershipCategory) !== null && _formData$cpt13$detai2 !== void 0 && _formData$cpt13$detai2.includes("GOVERNMENT") ? "OTHERGOVERNMENTINSTITUITION" : "OTHERSPRIVATEINSTITUITION" : formData === null || formData === void 0 ? void 0 : (_formData$cpt14 = formData.cpt) === null || _formData$cpt14 === void 0 ? void 0 : (_formData$cpt14$detai = _formData$cpt14.details) === null || _formData$cpt14$detai === void 0 ? void 0 : (_formData$cpt14$detai2 = _formData$cpt14$detai.ownershipCategory) === null || _formData$cpt14$detai2 === void 0 ? void 0 : _formData$cpt14$detai2.split(".")[1]}`,
        label: undefined,
        value: `${formData === null || formData === void 0 ? void 0 : (_formData$cpt15 = formData.cpt) === null || _formData$cpt15 === void 0 ? void 0 : (_formData$cpt15$detai = _formData$cpt15.details) === null || _formData$cpt15$detai === void 0 ? void 0 : _formData$cpt15$detai.ownershipCategory}${formData !== null && formData !== void 0 && (_formData$cpt16 = formData.cpt) !== null && _formData$cpt16 !== void 0 && (_formData$cpt16$detai = _formData$cpt16.details) !== null && _formData$cpt16$detai !== void 0 && (_formData$cpt16$detai2 = _formData$cpt16$detai.ownershipCategory) !== null && _formData$cpt16$detai2 !== void 0 && _formData$cpt16$detai2.includes("INSTITUTIONAL") ? formData !== null && formData !== void 0 && (_formData$cpt17 = formData.cpt) !== null && _formData$cpt17 !== void 0 && (_formData$cpt17$detai = _formData$cpt17.details) !== null && _formData$cpt17$detai !== void 0 && (_formData$cpt17$detai2 = _formData$cpt17$detai.ownershipCategory) !== null && _formData$cpt17$detai2 !== void 0 && _formData$cpt17$detai2.includes("GOVERNMENT") ? ".OTHERGOVERNMENTINSTITUITION" : ".OTHERSPRIVATEINSTITUITION" : ""}`
      });
    } else {
      var _formData$owners;
      setOwnershipCategory({
        code: "",
        i18nKey: "",
        label: undefined,
        value: ""
      });
      if (formData !== null && formData !== void 0 && (_formData$owners = formData.owners) !== null && _formData$owners !== void 0 && _formData$owners.owners) {
        formData === null || formData === void 0 ? true : delete formData.owners;
        onSelect("formData", formData);
      }
    }
  }
  useEffect(() => {
    var _formData$ownershipCa3, _formData$ownershipCa4, _formData$cpt18, _formData$ownershipCa5, _formData$ownershipCa6;
    if ((formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa3 = formData.ownershipCategory) === null || _formData$ownershipCa3 === void 0 ? void 0 : _formData$ownershipCa3.isSameAsPropertyOwner) == true || (formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa4 = formData.ownershipCategory) === null || _formData$ownershipCa4 === void 0 ? void 0 : _formData$ownershipCa4.isSameAsPropertyOwner) == "true" && formData !== null && formData !== void 0 && (_formData$cpt18 = formData.cpt) !== null && _formData$cpt18 !== void 0 && _formData$cpt18.details) {
      sessionStorage.setItem("ownersFromProperty", JSON.stringify(getOwnersForNewApplication(formData, t)));
    } else if ((formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa5 = formData.ownershipCategory) === null || _formData$ownershipCa5 === void 0 ? void 0 : _formData$ownershipCa5.isSameAsPropertyOwner) == false || (formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa6 = formData.ownershipCategory) === null || _formData$ownershipCa6 === void 0 ? void 0 : _formData$ownershipCa6.isSameAsPropertyOwner) === "false") {
      if (sessionStorage.getItem("ownersFromProperty")) sessionStorage.removeItem("ownersFromProperty");
    }
  }, [formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa7 = formData.ownershipCategory) === null || _formData$ownershipCa7 === void 0 ? void 0 : _formData$ownershipCa7.isSameAsPropertyOwner, isSameAsPropertyOwner, formData === null || formData === void 0 ? void 0 : (_formData$cpt19 = formData.cpt) === null || _formData$cpt19 === void 0 ? void 0 : (_formData$cpt19$detai = _formData$cpt19.details) === null || _formData$cpt19$detai === void 0 ? void 0 : _formData$cpt19$detai.propertyId, formData === null || formData === void 0 ? void 0 : (_formData$cptId = formData.cptId) === null || _formData$cptId === void 0 ? void 0 : _formData$cptId.id]);
  const onSkip = () => onSelect();
  function goNext() {
    sessionStorage.setItem("ownershipCategory", ownershipCategory === null || ownershipCategory === void 0 ? void 0 : ownershipCategory.value);
    sessionStorage.setItem("isSameAsPropertyOwner", isSameAsPropertyOwner);
    onSelect(config.key, {
      ...ownershipCategory,
      isSameAsPropertyOwner: isSameAsPropertyOwner
    });
  }
  useEffect(() => {
    if (userType === "employee") {
      if (!(ownershipCategory !== null && ownershipCategory !== void 0 && ownershipCategory.code)) setError(config.key, {
        type: "required",
        message: t(`REQUIRED_FIELD`)
      });else clearErrors(config.key);
      goNext();
    }
  }, [ownershipCategory]);
  if (userType === "employee") {
    var _formData$tradedetils, _formData$tradedetils2, _formData$tradedetils3, _formData$cpt20, _formState$touched, _formState$errors$con, _formState$touched2, _formState$errors$con2;
    let isRenewal = window.location.href.includes("tl/renew-application-details");
    if (window.location.href.includes("tl/edit-application-details")) isRenewal = true;
    return /*#__PURE__*/React.createElement(React.Fragment, null, !((formData === null || formData === void 0 ? void 0 : (_formData$tradedetils = formData.tradedetils) === null || _formData$tradedetils === void 0 ? void 0 : (_formData$tradedetils2 = _formData$tradedetils[0]) === null || _formData$tradedetils2 === void 0 ? void 0 : (_formData$tradedetils3 = _formData$tradedetils2.structureType) === null || _formData$tradedetils3 === void 0 ? void 0 : _formData$tradedetils3.code) === "MOVABLE") && (formData === null || formData === void 0 ? void 0 : (_formData$cpt20 = formData.cpt) === null || _formData$cpt20 === void 0 ? void 0 : _formData$cpt20.details) && (isEmpNewApplication || isEmpRenewLicense || isEmpEdit) && /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement("div", {
      className: "field"
    }, /*#__PURE__*/React.createElement(CheckBox, {
      label: t("TL_COMMON_SAME_AS_PROPERTY_OWNERS"),
      onChange: selectisSameAsPropertyOwner,
      value: isSameAsPropertyOwner,
      checked: isSameAsPropertyOwner || false,
      style: {
        marginBottom: "20px"
      },
      disable: isRenewal
    }))), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      className: "card-label-smaller",
      style: editScreen ? {
        color: "#B1B4B6"
      } : {}
    }, `${t("TL_NEW_OWNER_DETAILS_OWNERSHIP_TYPE_LABEL")} * `), /*#__PURE__*/React.createElement(Dropdown, {
      className: "form-field",
      selected: ownershipCategory !== null && ownershipCategory !== void 0 && ownershipCategory.code ? ownershipCategory : {},
      errorStyle: (_formState$touched = formState.touched) !== null && _formState$touched !== void 0 && _formState$touched[config.key] && (_formState$errors$con = formState.errors[config.key]) !== null && _formState$errors$con !== void 0 && _formState$errors$con.message ? true : false,
      disable: isRenewal && (ownershipCategory === null || ownershipCategory === void 0 ? void 0 : ownershipCategory.code) || isSameAsPropertyOwner,
      option: dropdownData,
      select: selectedValue,
      optionKey: "i18nKey",
      onBlur: onBlur,
      t: t
    })), (_formState$touched2 = formState.touched) !== null && _formState$touched2 !== void 0 && _formState$touched2[config.key] ? /*#__PURE__*/React.createElement(CardLabelError, {
      style: {
        width: "70%",
        marginLeft: "30%",
        fontSize: "12px",
        marginTop: "-21px"
      }
    }, (_formState$errors$con2 = formState.errors[config.key]) === null || _formState$errors$con2 === void 0 ? void 0 : _formState$errors$con2.message) : null);
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, {
    currentStep: 2
  }) : null, /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !(ownershipCategory !== null && ownershipCategory !== void 0 && ownershipCategory.code)
  }, !((formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail = formData.TradeDetails) === null || _formData$TradeDetail === void 0 ? void 0 : (_formData$TradeDetail2 = _formData$TradeDetail.StructureType) === null || _formData$TradeDetail2 === void 0 ? void 0 : _formData$TradeDetail2.code) === "MOVABLE") && (formData === null || formData === void 0 ? void 0 : (_formData$cpt21 = formData.cpt) === null || _formData$cpt21 === void 0 ? void 0 : _formData$cpt21.details) && /*#__PURE__*/React.createElement(CheckBox, {
    label: t("TL_COMMON_SAME_AS_PROPERTY_OWNERS"),
    onChange: selectisSameAsPropertyOwner,
    value: isSameAsPropertyOwner,
    checked: isSameAsPropertyOwner || false,
    style: {
      marginBottom: "20px"
    },
    disable: isEdit
  }), /*#__PURE__*/React.createElement(RadioButtons, {
    isMandatory: config.isMandatory,
    options: dropdownData ? dropdownData : [],
    selectedOption: ownershipCategory,
    optionsKey: "i18nKey",
    onSelect: selectedValue,
    value: ownershipCategory,
    labelKey: "PT_OWNERSHIP",
    isDependent: true,
    disabled: isEdit,
    isTLFlow: true
  })));
};

const SelectOwnerDetails = ({
  t,
  config,
  onSelect,
  userType,
  formData
}) => {
  var _formData$owners;
  let {
    ownershipCategory: {
      code: keyToSearchOwnershipSubtype
    } = {}
  } = formData;
  const typeOfOwner = useMemo(() => {
    var _formData$ownershipCa, _formData$ownershipCa2;
    if (formData !== null && formData !== void 0 && (_formData$ownershipCa = formData.ownershipCategory) !== null && _formData$ownershipCa !== void 0 && _formData$ownershipCa.code.includes("SINGLEOWNER")) return "SINGLEOWNER";
    if (formData !== null && formData !== void 0 && (_formData$ownershipCa2 = formData.ownershipCategory) !== null && _formData$ownershipCa2 !== void 0 && _formData$ownershipCa2.code.includes("INSTITUTIONAL")) return "INSTITUTIONAL";else return "MULTIOWNER";
  }, [formData === null || formData === void 0 ? void 0 : formData.ownershipCategory]);
  const storedOwnerData = formData === null || formData === void 0 ? void 0 : (_formData$owners = formData.owners) === null || _formData$owners === void 0 ? void 0 : _formData$owners.owners;
  const initFn = initData => {
    var _initData$, _initData$2, _initData$3, _initData$4, _initData$5, _initData$6, _initData$7, _initData$8, _initData$9, _initData$10, _initData$11, _initData$12, _initData$13, _initData$14, _initData$15, _initData$16, _initData$17;
    switch (typeOfOwner) {
      case "SINGLEOWNER":
        return [{
          name: (initData === null || initData === void 0 ? void 0 : (_initData$ = initData[0]) === null || _initData$ === void 0 ? void 0 : _initData$.name) || "",
          gender: initData === null || initData === void 0 ? void 0 : (_initData$2 = initData[0]) === null || _initData$2 === void 0 ? void 0 : _initData$2.gender,
          mobilenumber: initData === null || initData === void 0 ? void 0 : (_initData$3 = initData[0]) === null || _initData$3 === void 0 ? void 0 : _initData$3.mobilenumber,
          isprimaryowner: true,
          fatherOrHusbandName: (initData === null || initData === void 0 ? void 0 : (_initData$4 = initData[0]) === null || _initData$4 === void 0 ? void 0 : _initData$4.fatherOrHusbandName) || "",
          emailId: (initData === null || initData === void 0 ? void 0 : (_initData$5 = initData[0]) === null || _initData$5 === void 0 ? void 0 : _initData$5.emailId) || "",
          relationship: (initData === null || initData === void 0 ? void 0 : (_initData$6 = initData[0]) === null || _initData$6 === void 0 ? void 0 : _initData$6.relationship) || "",
          id: (initData === null || initData === void 0 ? void 0 : (_initData$7 = initData[0]) === null || _initData$7 === void 0 ? void 0 : _initData$7.id) || "",
          uuid: (initData === null || initData === void 0 ? void 0 : (_initData$8 = initData[0]) === null || _initData$8 === void 0 ? void 0 : _initData$8.uuid) || ""
        }];
      case "MULTIOWNER":
        return (initData === null || initData === void 0 ? void 0 : initData.length) > 1 ? initData === null || initData === void 0 ? void 0 : initData.map(owner => ({
          name: (owner === null || owner === void 0 ? void 0 : owner.name) || "",
          gender: owner === null || owner === void 0 ? void 0 : owner.gender,
          mobilenumber: owner === null || owner === void 0 ? void 0 : owner.mobilenumber,
          isprimaryowner: owner === null || owner === void 0 ? void 0 : owner.isprimaryowner,
          fatherOrHusbandName: (owner === null || owner === void 0 ? void 0 : owner.fatherOrHusbandName) || "",
          emailId: (initData === null || initData === void 0 ? void 0 : initData.emailId) || "",
          relationship: (owner === null || owner === void 0 ? void 0 : owner.relationship) || "",
          id: owner.id || "",
          uuid: owner.uuid || ""
        })) : [{
          name: null,
          gender: null,
          mobilenumber: null,
          isprimaryowner: true,
          fatherOrHusbandName: null,
          emailId: null,
          relationship: null
        }];
      case "INSTITUTIONAL":
        return [{
          name: (initData === null || initData === void 0 ? void 0 : (_initData$9 = initData[0]) === null || _initData$9 === void 0 ? void 0 : _initData$9.name) || "",
          mobilenumber: initData === null || initData === void 0 ? void 0 : (_initData$10 = initData[0]) === null || _initData$10 === void 0 ? void 0 : _initData$10.mobilenumber,
          institutionName: (initData === null || initData === void 0 ? void 0 : (_initData$11 = initData[0]) === null || _initData$11 === void 0 ? void 0 : _initData$11.institutionName) || "",
          subOwnerShipCategory: (initData === null || initData === void 0 ? void 0 : (_initData$12 = initData[0]) === null || _initData$12 === void 0 ? void 0 : _initData$12.subOwnerShipCategory) || "",
          designation: (initData === null || initData === void 0 ? void 0 : (_initData$13 = initData[0]) === null || _initData$13 === void 0 ? void 0 : _initData$13.designation) || "",
          altContactNumber: (initData === null || initData === void 0 ? void 0 : (_initData$14 = initData[0]) === null || _initData$14 === void 0 ? void 0 : _initData$14.altContactNumber) || "",
          emailId: (initData === null || initData === void 0 ? void 0 : (_initData$15 = initData[0]) === null || _initData$15 === void 0 ? void 0 : _initData$15.emailId) || "",
          id: (initData === null || initData === void 0 ? void 0 : (_initData$16 = initData[0]) === null || _initData$16 === void 0 ? void 0 : _initData$16.id) || "",
          uuid: (initData === null || initData === void 0 ? void 0 : (_initData$17 = initData[0]) === null || _initData$17 === void 0 ? void 0 : _initData$17.uuid) || ""
        }];
    }
  };
  const reducer = (state, action) => {
    var _action$payload2;
    switch (action.type) {
      case "ADD_NEW_OWNER":
        return [...state, {
          name: "",
          gender: null,
          mobilenumber: null,
          relationship: "",
          fatherOrHusbandName: "",
          emailId: "",
          isprimaryowner: false
        }];
      case "REMOVE_THIS_OWNER":
        return state.filter((e, i) => {
          var _action$payload;
          return i !== (action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.index);
        });
      case "SET_PRIMARY_OWNER":
        if ((action === null || action === void 0 ? void 0 : (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.index) >= 0) {
          return state.map((ownerData, i) => {
            var _action$payload3;
            if (i === (action === null || action === void 0 ? void 0 : (_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.index)) {
              return {
                ...ownerData,
                isprimaryowner: true
              };
            } else {
              return {
                ...ownerData,
                isprimaryowner: false
              };
            }
          });
        } else {
          return state;
        }
      case "EDIT_CURRENT_OWNER_PROPERTY":
        return state.map((data, __index) => {
          if (__index === action.payload.index) {
            return {
              ...data,
              [action.payload.key]: action.payload.value
            };
          } else {
            return data;
          }
        });
    }
  };
  const [formState, dispatch] = useReducer(reducer, storedOwnerData, initFn);
  const relationshipMenu = [{
    code: "FATHER",
    i18nKey: "COMMON_RELATION_FATHER"
  }, {
    code: "HUSBAND",
    i18nKey: "COMMON_RELATION_HUSBAND"
  }];
  const stateId = Digit.ULBService.getStateId();
  const isEdit = window.location.href.includes("/edit-application/") || window.location.href.includes("/renew-trade/");
  const {
    data: Menu,
    isLoading: isGenderLoading
  } = Digit.Hooks.tl.useTLGenderMDMS(stateId, "common-masters", "GenderType");
  if (isEdit) keyToSearchOwnershipSubtype = keyToSearchOwnershipSubtype.split(".")[0];
  const {
    data: institutionOwnershipTypeOptions
  } = Digit.Hooks.tl.useTradeLicenseMDMS(stateId, "common-masters", "TradeOwnershipSubType", {
    keyToSearchOwnershipSubtype
  });
  let TLmenu = [];
  Menu && Menu.map(genders => {
    TLmenu.push({
      i18nKey: `TL_GENDER_${genders.code}`,
      code: `${genders.code}`
    });
  });
  function handleTextInputField(index, e, key) {
    dispatch({
      type: "EDIT_CURRENT_OWNER_PROPERTY",
      payload: {
        index,
        key,
        value: e.target.value
      }
    });
  }
  function handleRadioButtonInput(index, value, key) {
    dispatch({
      type: "EDIT_CURRENT_OWNER_PROPERTY",
      payload: {
        index,
        key,
        value
      }
    });
  }
  function handleDropdownInputField(index, value, key) {
    dispatch({
      type: "EDIT_CURRENT_OWNER_PROPERTY",
      payload: {
        index,
        key,
        value
      }
    });
  }
  const [error, setError] = useState(null);
  function checkMandatoryFieldsForEachOwner(ownersData) {
    if (typeOfOwner === "INSTITUTIONAL") {
      var _ownersData$, _ownersData$2, _ownersData$3;
      if ((_ownersData$ = ownersData[0]) !== null && _ownersData$ !== void 0 && _ownersData$.name && (_ownersData$2 = ownersData[0]) !== null && _ownersData$2 !== void 0 && _ownersData$2.subOwnerShipCategory && (_ownersData$3 = ownersData[0]) !== null && _ownersData$3 !== void 0 && _ownersData$3.mobilenumber) {
        setError("TL_ERROR_FILL_ALL_MANDATORY_DETAILS");
        return false;
      } else return true;
    } else if (typeOfOwner === "SINGLEOWNER") {
      var _ownersData$4, _ownersData$5, _ownersData$6;
      if ((_ownersData$4 = ownersData[0]) !== null && _ownersData$4 !== void 0 && _ownersData$4.name && (_ownersData$5 = ownersData[0]) !== null && _ownersData$5 !== void 0 && _ownersData$5.gender && (_ownersData$6 = ownersData[0]) !== null && _ownersData$6 !== void 0 && _ownersData$6.mobilenumber) {
        setError("TL_ERROR_FILL_ALL_MANDATORY_DETAILS");
        return false;
      } else return true;
    } else if (typeOfOwner === "MULTIOWNER") {
      return ownersData.reduce((acc, ownerData) => {
        if (ownerData !== null && ownerData !== void 0 && ownerData.name && ownerData !== null && ownerData !== void 0 && ownerData.gender && ownerData !== null && ownerData !== void 0 && ownerData.mobilenumber) {
          setError("TL_ERROR_FILL_ALL_MANDATORY_DETAILS");
          return false;
        }
      }, true);
    }
  }
  const goNext = () => {
    if (!checkMandatoryFieldsForEachOwner(formState)) {
      let owner = formData.owners;
      let ownerStep;
      ownerStep = {
        ...owner,
        owners: formState
      };
      onSelect(config.key, ownerStep);
    }
  };
  const onSkip = () => onSelect();
  if (typeOfOwner === "INSTITUTIONAL") {
    return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, {
      currentStep: 2
    }) : null, /*#__PURE__*/React.createElement(FormStep, {
      config: config,
      onSelect: goNext,
      onSkip: onSkip,
      t: t,
      isDisabled: false,
      forcedError: t(error)
    }, formState.map((field, index) => {
      return /*#__PURE__*/React.createElement("div", {
        key: `${field}-${index}`
      }, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_INSTITUTION_NAME_LABEL")}*`), /*#__PURE__*/React.createElement(TextInput, Object.assign({
        t: t,
        type: "text",
        isMandatory: false,
        name: "institutionName",
        value: field.institutionName,
        ValidationRequired: true,
        onChange: e => handleTextInputField(index, e, "institutionName")
      }, {
        validation: {
          isRequired: true,
          pattern: "^[a-z0-9]+( [a-z0-9]+)*$",
          type: "text",
          title: t("TL_NAME_ERROR_MESSAGE")
        }
      })), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_INSTITUTION_TYPE_LABEL")}*`), /*#__PURE__*/React.createElement(Dropdown, {
        t: t,
        option: institutionOwnershipTypeOptions,
        selected: field.subOwnerShipCategory,
        select: value => {
          handleDropdownInputField(index, value, "subOwnerShipCategory");
        },
        optionKey: "i18nKey"
      }), /*#__PURE__*/React.createElement(CardHeader, null, t("TL_AUTHORIZED_PERSON_DETAILS")), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_NEW_OWNER_DETAILS_NAME_LABEL")}`), /*#__PURE__*/React.createElement(TextInput, Object.assign({
        t: t,
        type: "text",
        isMandatory: false,
        name: "name",
        value: field.name,
        onChange: e => handleTextInputField(index, e, "name"),
        ValidationRequired: true
      }, {
        validation: {
          pattern: "^[a-z0-9]+( [a-z0-9]+)*$",
          type: "text",
          title: t("TL_NAME_ERROR_MESSAGE")
        }
      })), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_NEW_OWNER_DESIG_LABEL")}`), /*#__PURE__*/React.createElement(TextInput, Object.assign({
        t: t,
        type: "text",
        isMandatory: false,
        name: "designation",
        value: field.designation,
        onChange: e => handleTextInputField(index, e, "designation"),
        ValidationRequired: true
      }, {
        validation: {
          pattern: "^[a-z0-9]+( [a-z0-9]+)*$",
          type: "text",
          title: t("TL_NAME_ERROR_MESSAGE")
        }
      })), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_MOBILE_NUMBER_LABEL")}*`), /*#__PURE__*/React.createElement("div", {
        className: "field-container"
      }, /*#__PURE__*/React.createElement("span", {
        className: "employee-card-input employee-card-input--front",
        style: {
          marginTop: "-1px"
        }
      }, "+91"), /*#__PURE__*/React.createElement(TextInput, Object.assign({
        type: "text",
        t: t,
        isMandatory: false,
        name: "mobilenumber",
        value: field.mobilenumber,
        onChange: e => handleTextInputField(index, e, "mobilenumber"),
        ValidationRequired: true
      }, {
        validation: {
          isRequired: true,
          pattern: "[6-9]{1}[0-9]{9}",
          type: "tel",
          title: t("CORE_COMMON_APPLICANT_MOBILE_NUMBER_INVALID")
        }
      }))), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_TELEPHONE_NUMBER_LABEL")}`), /*#__PURE__*/React.createElement("div", {
        className: "field-container"
      }, /*#__PURE__*/React.createElement("span", {
        className: "employee-card-input employee-card-input--front",
        style: {
          marginTop: "-1px"
        }
      }, "+91"), /*#__PURE__*/React.createElement(TextInput, Object.assign({
        type: "text",
        t: t,
        isMandatory: false,
        name: "altContactNumber",
        value: field.altContactNumber,
        onChange: e => handleTextInputField(index, e, "altContactNumber"),
        ValidationRequired: true
      }, {
        validation: {
          pattern: "[0][1-9][0-9]{9}|[1-9][0-9]{9}",
          type: "tel",
          title: t("CORE_COMMON_APPLICANT_MOBILE_NUMBER_INVALID")
        }
      }))), /*#__PURE__*/React.createElement(CardLabel, null, `${t("NOC_APPLICANT_EMAIL_LABEL")}`), /*#__PURE__*/React.createElement(TextInput, Object.assign({
        t: t,
        type: "text",
        isMandatory: false,
        name: "emailId",
        value: field.emailId,
        onChange: e => handleTextInputField(index, e, "emailId"),
        ValidationRequired: true
      }, {
        validation: {
          type: "text",
          title: t("TL_EMAIL_ERROR_MESSAGE")
        }
      }))));
    })));
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, {
    currentStep: 2
  }) : null, /*#__PURE__*/React.createElement(FormStep, {
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    t: t,
    isDisabled: false,
    forcedError: t(error)
  }, formState.map((field, index) => {
    return /*#__PURE__*/React.createElement("div", {
      key: `${field}-${index}`
    }, /*#__PURE__*/React.createElement("div", {
      style: typeOfOwner === "MULTIOWNER" ? {
        border: "solid",
        borderRadius: "5px",
        padding: "10px",
        paddingTop: "20px",
        marginTop: "10px",
        borderColor: "#f3f3f3",
        background: "#FAFAFA"
      } : {}
    }, /*#__PURE__*/React.createElement(CardLabel, {
      style: {}
    }, `${t("TL_NEW_OWNER_DETAILS_NAME_LABEL")}*`), typeOfOwner === "MULTIOWNER" && /*#__PURE__*/React.createElement(LinkButton, {
      label: /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement("svg", {
        style: {
          float: "right",
          position: "relative",
          bottom: "5px"
        },
        width: "24",
        height: "24",
        viewBox: "0 0 24 24",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
      }, /*#__PURE__*/React.createElement("path", {
        d: "M1 16C1 17.1 1.9 18 3 18H11C12.1 18 13 17.1 13 16V4H1V16ZM14 1H10.5L9.5 0H4.5L3.5 1H0V3H14V1Z",
        fill: !(formState.length == 1) ? "#494848" : "#FAFAFA"
      })))),
      style: {
        width: "100px",
        display: "inline"
      },
      onClick: e => dispatch({
        type: "REMOVE_THIS_OWNER",
        payload: {
          index
        }
      })
    }), /*#__PURE__*/React.createElement(TextInput, Object.assign({
      style: typeOfOwner === "MULTIOWNER" ? {
        background: "#FAFAFA"
      } : {},
      t: t,
      type: "text",
      isMandatory: false,
      optionKey: "i18nKey",
      name: "name",
      value: field.name,
      onChange: e => handleTextInputField(index, e, "name"),
      ValidationRequired: true
    }, {
      validation: {
        isRequired: true,
        pattern: "[a-zA-Z][a-zA-Z ]+[a-zA-Z]$",
        type: "text",
        title: t("TL_NAME_ERROR_MESSAGE")
      }
    })), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_NEW_OWNER_DETAILS_GENDER_LABEL")}*`), !isGenderLoading ? /*#__PURE__*/React.createElement(RadioButtons, {
      t: t,
      options: TLmenu,
      optionsKey: "i18nKey",
      name: `gender-${index}`,
      selectedOption: field.gender,
      onSelect: e => handleRadioButtonInput(index, e, "gender"),
      labelKey: "",
      isPTFlow: true
    }) : /*#__PURE__*/React.createElement(Loader, null), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_MOBILE_NUMBER_LABEL")}*`), /*#__PURE__*/React.createElement("div", {
      className: "field-container"
    }, /*#__PURE__*/React.createElement("span", {
      className: "employee-card-input employee-card-input--front",
      style: {
        marginTop: "-1px"
      }
    }, "+91"), /*#__PURE__*/React.createElement(TextInput, Object.assign({
      style: typeOfOwner === "MULTIOWNER" ? {
        background: "#FAFAFA",
        maxWidth: "500px"
      } : {
        maxWidth: "500px"
      },
      type: "text",
      t: t,
      isMandatory: false,
      optionKey: "i18nKey",
      name: "mobilenumber",
      value: field.mobilenumber,
      onChange: e => handleTextInputField(index, e, "mobilenumber"),
      ValidationRequired: true
    }, {
      validation: {
        isRequired: true,
        pattern: "[6-9]{1}[0-9]{9}",
        type: "tel",
        title: t("CORE_COMMON_APPLICANT_MOBILE_NUMBER_INVALID")
      }
    }))), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_NEW_OWNER_DETAILS_GUARDIAN_LABEL")}*`), /*#__PURE__*/React.createElement(TextInput, Object.assign({
      style: typeOfOwner === "MULTIOWNER" ? {
        background: "#FAFAFA"
      } : {},
      t: t,
      type: "text",
      isMandatory: false,
      name: "fatherOrHusbandName",
      value: field.fatherOrHusbandName,
      onChange: e => handleTextInputField(index, e, "fatherOrHusbandName"),
      ValidationRequired: true
    }, {
      validation: {
        isRequired: true,
        pattern: "[a-zA-Z][a-zA-Z ]+[a-zA-Z]$",
        type: "text",
        title: t("TL_NAME_ERROR_MESSAGE")
      }
    })), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_RELATIONSHIP_WITH_GUARDIAN_LABEL")}*`), /*#__PURE__*/React.createElement(RadioButtons, {
      t: t,
      options: relationshipMenu,
      optionsKey: "i18nKey",
      name: `relationship-${index}`,
      value: field.relationship,
      selectedOption: field.relationship,
      onSelect: e => handleRadioButtonInput(index, e, "relationship"),
      labelKey: "",
      isPTFlow: true
    }), typeOfOwner === "MULTIOWNER" && /*#__PURE__*/React.createElement(CheckBox, {
      label: t("TL_PRIMARY_OWNER_LABEL"),
      onChange: e => dispatch({
        type: "SET_PRIMARY_OWNER",
        payload: {
          index
        }
      }),
      value: field.isprimaryowner,
      checked: field.isprimaryowner,
      style: {
        paddingTop: "10px"
      },
      name: `multiowner-checkbox-${index}`
    })));
  }), typeOfOwner === "MULTIOWNER" && /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
    style: {
      justifyContent: "center",
      display: "flex",
      paddingBottom: "15px",
      color: "#FF8C00"
    }
  }, /*#__PURE__*/React.createElement("button", {
    type: "button",
    style: {
      paddingTop: "10px"
    },
    onClick: () => dispatch({
      type: "ADD_NEW_OWNER"
    })
  }, t("TL_ADD_OWNER_LABEL"))))));
};

const SelectOwnerAddress = ({
  t,
  config,
  onSelect,
  userType,
  formData
}) => {
  var _formData$owners, _formData$owners2, _formData$ownershipCa, _formData$cpt9, _formData$cpt9$detail, _formData$TradeDetail, _formData$TradeDetail2;
  const [permanentAddress, setPermanentAddress] = useState((formData === null || formData === void 0 ? void 0 : (_formData$owners = formData.owners) === null || _formData$owners === void 0 ? void 0 : _formData$owners.permanentAddress) || "");
  const [isCorrespondenceAddress, setIsCorrespondenceAddress] = useState(formData === null || formData === void 0 ? void 0 : (_formData$owners2 = formData.owners) === null || _formData$owners2 === void 0 ? void 0 : _formData$owners2.isCorrespondenceAddress);
  let isedittrade = window.location.href.includes("edit-application");
  let isrenewtrade = window.location.href.includes("renew-trade");
  const {
    pathname: url
  } = useLocation();
  const editScreen = url.includes("/modify-application/");
  let ismultiple = formData !== null && formData !== void 0 && (_formData$ownershipCa = formData.ownershipCategory) !== null && _formData$ownershipCa !== void 0 && _formData$ownershipCa.code.includes("SINGLEOWNER") ? false : true;
  useEffect(() => {
    var _formData$owners3;
    if ((formData === null || formData === void 0 ? void 0 : (_formData$owners3 = formData.owners) === null || _formData$owners3 === void 0 ? void 0 : _formData$owners3.permanentAddress) == null && isrenewtrade && permanentAddress === "") {
      var _formData$address, _formData$address2, _formData$address3, _formData$address4, _formData$address5, _formData$address5$lo, _formData$address6, _formData$address6$ci, _formData$address6$ci2, _formData$address7;
      let obj = {
        doorNo: formData === null || formData === void 0 ? void 0 : (_formData$address = formData.address) === null || _formData$address === void 0 ? void 0 : _formData$address.doorNo,
        street: (formData === null || formData === void 0 ? void 0 : (_formData$address2 = formData.address) === null || _formData$address2 === void 0 ? void 0 : _formData$address2.street) || (formData === null || formData === void 0 ? void 0 : (_formData$address3 = formData.address) === null || _formData$address3 === void 0 ? void 0 : _formData$address3.buildingName),
        landmark: formData === null || formData === void 0 ? void 0 : (_formData$address4 = formData.address) === null || _formData$address4 === void 0 ? void 0 : _formData$address4.landmark,
        locality: formData === null || formData === void 0 ? void 0 : (_formData$address5 = formData.address) === null || _formData$address5 === void 0 ? void 0 : (_formData$address5$lo = _formData$address5.locality) === null || _formData$address5$lo === void 0 ? void 0 : _formData$address5$lo.name,
        city: formData === null || formData === void 0 ? void 0 : (_formData$address6 = formData.address) === null || _formData$address6 === void 0 ? void 0 : (_formData$address6$ci = _formData$address6.city) === null || _formData$address6$ci === void 0 ? void 0 : (_formData$address6$ci2 = _formData$address6$ci.code) === null || _formData$address6$ci2 === void 0 ? void 0 : _formData$address6$ci2.split(".")[1],
        pincode: formData === null || formData === void 0 ? void 0 : (_formData$address7 = formData.address) === null || _formData$address7 === void 0 ? void 0 : _formData$address7.pincode
      };
      let addressDetails = "";
      for (const key in obj) {
        if (key == "pincode" || !obj["pincode"] && key == "city") addressDetails += obj[key] ? obj[key] : "";else if (obj[key]) addressDetails += obj[key] ? t(`${obj[key]}`) + ", " : "";
      }
      setPermanentAddress(addressDetails);
    }
  }, [formData]);
  useEffect(() => {
    var _formData$cpt;
    if (formData !== null && formData !== void 0 && (_formData$cpt = formData.cpt) !== null && _formData$cpt !== void 0 && _formData$cpt.details && permanentAddress && isCorrespondenceAddress && window.location.href.includes("/tl/tradelicence/new-application")) {
      var _formData$cpt2, _formData$cpt2$detail, _formData$cpt2$detail2, _formData$cpt3, _formData$cpt3$detail, _formData$cpt3$detail2, _formData$cpt4, _formData$cpt4$detail, _formData$cpt4$detail2, _formData$cpt5, _formData$cpt5$detail, _formData$cpt5$detail2, _formData$cpt6, _formData$cpt6$detail, _formData$cpt6$detail2, _formData$cpt6$detail3, _formData$cpt7, _formData$cpt7$detail, _formData$cpt7$detail2, _formData$cpt8, _formData$cpt8$detail, _formData$cpt8$detail2, _formData$address8;
      let obj = {
        doorNo: formData === null || formData === void 0 ? void 0 : (_formData$cpt2 = formData.cpt) === null || _formData$cpt2 === void 0 ? void 0 : (_formData$cpt2$detail = _formData$cpt2.details) === null || _formData$cpt2$detail === void 0 ? void 0 : (_formData$cpt2$detail2 = _formData$cpt2$detail.address) === null || _formData$cpt2$detail2 === void 0 ? void 0 : _formData$cpt2$detail2.doorNo,
        street: (formData === null || formData === void 0 ? void 0 : (_formData$cpt3 = formData.cpt) === null || _formData$cpt3 === void 0 ? void 0 : (_formData$cpt3$detail = _formData$cpt3.details) === null || _formData$cpt3$detail === void 0 ? void 0 : (_formData$cpt3$detail2 = _formData$cpt3$detail.address) === null || _formData$cpt3$detail2 === void 0 ? void 0 : _formData$cpt3$detail2.street) || (formData === null || formData === void 0 ? void 0 : (_formData$cpt4 = formData.cpt) === null || _formData$cpt4 === void 0 ? void 0 : (_formData$cpt4$detail = _formData$cpt4.details) === null || _formData$cpt4$detail === void 0 ? void 0 : (_formData$cpt4$detail2 = _formData$cpt4$detail.address) === null || _formData$cpt4$detail2 === void 0 ? void 0 : _formData$cpt4$detail2.buildingName),
        landmark: formData === null || formData === void 0 ? void 0 : (_formData$cpt5 = formData.cpt) === null || _formData$cpt5 === void 0 ? void 0 : (_formData$cpt5$detail = _formData$cpt5.details) === null || _formData$cpt5$detail === void 0 ? void 0 : (_formData$cpt5$detail2 = _formData$cpt5$detail.address) === null || _formData$cpt5$detail2 === void 0 ? void 0 : _formData$cpt5$detail2.landmark,
        locality: formData === null || formData === void 0 ? void 0 : (_formData$cpt6 = formData.cpt) === null || _formData$cpt6 === void 0 ? void 0 : (_formData$cpt6$detail = _formData$cpt6.details) === null || _formData$cpt6$detail === void 0 ? void 0 : (_formData$cpt6$detail2 = _formData$cpt6$detail.address) === null || _formData$cpt6$detail2 === void 0 ? void 0 : (_formData$cpt6$detail3 = _formData$cpt6$detail2.locality) === null || _formData$cpt6$detail3 === void 0 ? void 0 : _formData$cpt6$detail3.name,
        city: (formData === null || formData === void 0 ? void 0 : (_formData$cpt7 = formData.cpt) === null || _formData$cpt7 === void 0 ? void 0 : (_formData$cpt7$detail = _formData$cpt7.details) === null || _formData$cpt7$detail === void 0 ? void 0 : (_formData$cpt7$detail2 = _formData$cpt7$detail.address) === null || _formData$cpt7$detail2 === void 0 ? void 0 : _formData$cpt7$detail2.city) || t(formData === null || formData === void 0 ? void 0 : (_formData$cpt8 = formData.cpt) === null || _formData$cpt8 === void 0 ? void 0 : (_formData$cpt8$detail = _formData$cpt8.details) === null || _formData$cpt8$detail === void 0 ? void 0 : (_formData$cpt8$detail2 = _formData$cpt8$detail.address) === null || _formData$cpt8$detail2 === void 0 ? void 0 : _formData$cpt8$detail2.tenantId),
        pincode: formData === null || formData === void 0 ? void 0 : (_formData$address8 = formData.address) === null || _formData$address8 === void 0 ? void 0 : _formData$address8.pincode
      };
      let addressDetails = "";
      for (const key in obj) {
        if (key == "pincode" || !obj["pincode"] && key == "city") addressDetails += obj[key] ? obj[key] : "";else if (obj[key]) addressDetails += obj[key] ? t(`${obj[key]}`) + ", " : "";
      }
      setPermanentAddress(addressDetails);
    }
  }, [formData === null || formData === void 0 ? void 0 : (_formData$cpt9 = formData.cpt) === null || _formData$cpt9 === void 0 ? void 0 : (_formData$cpt9$detail = _formData$cpt9.details) === null || _formData$cpt9$detail === void 0 ? void 0 : _formData$cpt9$detail.propertyId]);
  function setOwnerPermanentAddress(e) {
    setPermanentAddress(e.target.value);
  }
  function setCorrespondenceAddress(e) {
    var _formData$cpt10, _formData$cpt11;
    if (formData !== null && formData !== void 0 && (_formData$cpt10 = formData.cpt) !== null && _formData$cpt10 !== void 0 && _formData$cpt10.details && Object.keys(formData === null || formData === void 0 ? void 0 : (_formData$cpt11 = formData.cpt) === null || _formData$cpt11 === void 0 ? void 0 : _formData$cpt11.details).length > 0 && e.target.checked == true) {
      var _formData$cpt12, _formData$cpt12$detai, _formData$cpt12$detai2, _formData$cpt13, _formData$cpt13$detai, _formData$cpt13$detai2, _formData$cpt14, _formData$cpt14$detai, _formData$cpt14$detai2, _formData$cpt15, _formData$cpt15$detai, _formData$cpt15$detai2, _formData$cpt16, _formData$cpt16$detai, _formData$cpt16$detai2, _formData$cpt16$detai3, _formData$cpt17, _formData$cpt17$detai, _formData$cpt17$detai2, _formData$address9;
      let obj = {
        doorNo: formData === null || formData === void 0 ? void 0 : (_formData$cpt12 = formData.cpt) === null || _formData$cpt12 === void 0 ? void 0 : (_formData$cpt12$detai = _formData$cpt12.details) === null || _formData$cpt12$detai === void 0 ? void 0 : (_formData$cpt12$detai2 = _formData$cpt12$detai.address) === null || _formData$cpt12$detai2 === void 0 ? void 0 : _formData$cpt12$detai2.doorNo,
        street: (formData === null || formData === void 0 ? void 0 : (_formData$cpt13 = formData.cpt) === null || _formData$cpt13 === void 0 ? void 0 : (_formData$cpt13$detai = _formData$cpt13.details) === null || _formData$cpt13$detai === void 0 ? void 0 : (_formData$cpt13$detai2 = _formData$cpt13$detai.address) === null || _formData$cpt13$detai2 === void 0 ? void 0 : _formData$cpt13$detai2.street) || (formData === null || formData === void 0 ? void 0 : (_formData$cpt14 = formData.cpt) === null || _formData$cpt14 === void 0 ? void 0 : (_formData$cpt14$detai = _formData$cpt14.details) === null || _formData$cpt14$detai === void 0 ? void 0 : (_formData$cpt14$detai2 = _formData$cpt14$detai.address) === null || _formData$cpt14$detai2 === void 0 ? void 0 : _formData$cpt14$detai2.buildingName),
        landmark: formData === null || formData === void 0 ? void 0 : (_formData$cpt15 = formData.cpt) === null || _formData$cpt15 === void 0 ? void 0 : (_formData$cpt15$detai = _formData$cpt15.details) === null || _formData$cpt15$detai === void 0 ? void 0 : (_formData$cpt15$detai2 = _formData$cpt15$detai.address) === null || _formData$cpt15$detai2 === void 0 ? void 0 : _formData$cpt15$detai2.landmark,
        locality: formData === null || formData === void 0 ? void 0 : (_formData$cpt16 = formData.cpt) === null || _formData$cpt16 === void 0 ? void 0 : (_formData$cpt16$detai = _formData$cpt16.details) === null || _formData$cpt16$detai === void 0 ? void 0 : (_formData$cpt16$detai2 = _formData$cpt16$detai.address) === null || _formData$cpt16$detai2 === void 0 ? void 0 : (_formData$cpt16$detai3 = _formData$cpt16$detai2.locality) === null || _formData$cpt16$detai3 === void 0 ? void 0 : _formData$cpt16$detai3.name,
        city: formData === null || formData === void 0 ? void 0 : (_formData$cpt17 = formData.cpt) === null || _formData$cpt17 === void 0 ? void 0 : (_formData$cpt17$detai = _formData$cpt17.details) === null || _formData$cpt17$detai === void 0 ? void 0 : (_formData$cpt17$detai2 = _formData$cpt17$detai.address) === null || _formData$cpt17$detai2 === void 0 ? void 0 : _formData$cpt17$detai2.city,
        pincode: formData === null || formData === void 0 ? void 0 : (_formData$address9 = formData.address) === null || _formData$address9 === void 0 ? void 0 : _formData$address9.pincode
      };
      let addressDetails = "";
      for (const key in obj) {
        if (key == "pincode" || !obj["pincode"] && key == "city") addressDetails += obj[key] ? obj[key] : "";else if (obj[key]) addressDetails += obj[key] ? t(`${obj[key]}`) + ", " : "";
      }
      setPermanentAddress(addressDetails);
    } else if (e.target.checked == true) {
      var _formData$address10, _formData$address11, _formData$address12, _formData$address13, _formData$address14, _formData$address14$l, _formData$address15, _formData$address15$c, _formData$address16;
      let obj = {
        doorNo: formData === null || formData === void 0 ? void 0 : (_formData$address10 = formData.address) === null || _formData$address10 === void 0 ? void 0 : _formData$address10.doorNo,
        street: (formData === null || formData === void 0 ? void 0 : (_formData$address11 = formData.address) === null || _formData$address11 === void 0 ? void 0 : _formData$address11.street) || (formData === null || formData === void 0 ? void 0 : (_formData$address12 = formData.address) === null || _formData$address12 === void 0 ? void 0 : _formData$address12.buildingName),
        landmark: formData === null || formData === void 0 ? void 0 : (_formData$address13 = formData.address) === null || _formData$address13 === void 0 ? void 0 : _formData$address13.landmark,
        locality: formData === null || formData === void 0 ? void 0 : (_formData$address14 = formData.address) === null || _formData$address14 === void 0 ? void 0 : (_formData$address14$l = _formData$address14.locality) === null || _formData$address14$l === void 0 ? void 0 : _formData$address14$l.i18nkey,
        city: formData === null || formData === void 0 ? void 0 : (_formData$address15 = formData.address) === null || _formData$address15 === void 0 ? void 0 : (_formData$address15$c = _formData$address15.city) === null || _formData$address15$c === void 0 ? void 0 : _formData$address15$c.name,
        pincode: formData === null || formData === void 0 ? void 0 : (_formData$address16 = formData.address) === null || _formData$address16 === void 0 ? void 0 : _formData$address16.pincode
      };
      let addressDetails = "";
      for (const key in obj) {
        if (key == "pincode" || !obj["pincode"] && key == "city") addressDetails += obj[key] ? obj[key] : "";else if (obj[key]) addressDetails += obj[key] ? t(`${obj[key]}`) + ", " : "";
      }
      setPermanentAddress(addressDetails);
    } else {
      setPermanentAddress("");
    }
    setIsCorrespondenceAddress(e.target.checked);
  }
  const goNext = () => {
    if (userType === "employee") {
      onSelect(config.key, {
        ...formData[config.key],
        permanentAddress,
        isCorrespondenceAddress
      });
    } else {
      let ownerDetails = formData.owners;
      ownerDetails["permanentAddress"] = permanentAddress;
      ownerDetails["isCorrespondenceAddress"] = isCorrespondenceAddress;
      onSelect(config.key, ownerDetails);
    }
  };
  useEffect(() => {
    if (userType === "employee") {
      goNext();
    }
  }, [permanentAddress]);
  if (userType === "employee") {
    return /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      className: "card-label-smaller",
      style: editScreen ? {
        color: "#B1B4B6"
      } : {}
    }, t("PT_OWNERS_ADDRESS")), /*#__PURE__*/React.createElement("div", {
      className: "field"
    }, /*#__PURE__*/React.createElement(TextInput, {
      name: "address",
      onChange: setOwnerPermanentAddress,
      value: permanentAddress,
      disable: editScreen
    })));
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, {
    currentStep: 2
  }) : null, /*#__PURE__*/React.createElement(FormStep, {
    config: config,
    t: t,
    onSelect: goNext,
    isDisabled: isedittrade || isrenewtrade ? false : !permanentAddress
  }, /*#__PURE__*/React.createElement(TextArea, {
    isMandatory: false,
    optionKey: "i18nKey",
    t: t,
    name: "address",
    onChange: setOwnerPermanentAddress,
    value: permanentAddress
  }), (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail = formData.TradeDetails) === null || _formData$TradeDetail === void 0 ? void 0 : (_formData$TradeDetail2 = _formData$TradeDetail.StructureType) === null || _formData$TradeDetail2 === void 0 ? void 0 : _formData$TradeDetail2.code) !== "MOVABLE" && /*#__PURE__*/React.createElement(CheckBox, {
    label: t("TL_COMMON_SAME_AS_TRADE_ADDRESS"),
    onChange: setCorrespondenceAddress,
    value: isCorrespondenceAddress,
    checked: isCorrespondenceAddress || false,
    style: {
      paddingTop: "10px"
    }
  })), ismultiple ? /*#__PURE__*/React.createElement(CitizenInfoLabel, {
    info: t("CS_FILE_APPLICATION_INFO_LABEL"),
    text: t("TL_PRIMARY_ADDR_INFO_MSG")
  }) : "");
};

const SelectProofIdentity = ({
  t,
  config,
  onSelect,
  userType,
  formData
}) => {
  var _formData$owners, _formData$owners$docu, _formData$owners$docu2, _formData$owners2, _formData$owners2$doc, _formData$owners3, _formData$owners3$doc, _formData$owners3$doc2, _Documentsob$Property;
  const [uploadedFile, setUploadedFile] = useState((formData === null || formData === void 0 ? void 0 : (_formData$owners = formData.owners) === null || _formData$owners === void 0 ? void 0 : (_formData$owners$docu = _formData$owners.documents) === null || _formData$owners$docu === void 0 ? void 0 : (_formData$owners$docu2 = _formData$owners$docu.ProofOfIdentity) === null || _formData$owners$docu2 === void 0 ? void 0 : _formData$owners$docu2.fileStoreId) || null);
  const [file, setFile] = useState(formData === null || formData === void 0 ? void 0 : (_formData$owners2 = formData.owners) === null || _formData$owners2 === void 0 ? void 0 : (_formData$owners2$doc = _formData$owners2.documents) === null || _formData$owners2$doc === void 0 ? void 0 : _formData$owners2$doc.ProofOfIdentity);
  const [error, setError] = useState(null);
  const cityDetails = Digit.ULBService.getCurrentUlb();
  let acceptFormat = ".jpg,.png,.pdf,.jpeg";
  const [dropdownValue, setDropdownValue] = useState((formData === null || formData === void 0 ? void 0 : (_formData$owners3 = formData.owners) === null || _formData$owners3 === void 0 ? void 0 : (_formData$owners3$doc = _formData$owners3.documents) === null || _formData$owners3$doc === void 0 ? void 0 : (_formData$owners3$doc2 = _formData$owners3$doc.ProofOfIdentity) === null || _formData$owners3$doc2 === void 0 ? void 0 : _formData$owners3$doc2.documentType) || null);
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const stateId = Digit.ULBService.getStateId();
  const {
    data: Documentsob = {}
  } = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", "Documents");
  const docs = Documentsob === null || Documentsob === void 0 ? void 0 : (_Documentsob$Property = Documentsob.PropertyTax) === null || _Documentsob$Property === void 0 ? void 0 : _Documentsob$Property.Documents;
  const proofOfIdentity = Array.isArray(docs) && docs.filter(doc => doc.code.includes("ADDRESSPROOF"));
  const handleSubmit = () => {
    var _formData$ownershipCa, _formData$ownershipCa2;
    let fileStoreId = uploadedFile;
    let fileDetails = file;
    if (fileDetails) fileDetails.documentType = "OWNERIDPROOF";
    if (fileDetails) fileDetails.fileStoreId = fileStoreId ? fileStoreId : null;
    let owners = (formData === null || formData === void 0 ? void 0 : formData.owners) || {};
    if (owners && owners.documents) {
      owners.documents["ProofOfIdentity"] = fileDetails;
    } else {
      owners["documents"] = [];
      owners.documents["ProofOfIdentity"] = fileDetails;
    }
    if (window.location.href.includes("/citizen/tl") && ((formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa = formData.ownershipCategory) === null || _formData$ownershipCa === void 0 ? void 0 : _formData$ownershipCa.isSameAsPropertyOwner) == true || (formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa2 = formData.ownershipCategory) === null || _formData$ownershipCa2 === void 0 ? void 0 : _formData$ownershipCa2.isSameAsPropertyOwner) === "true")) {
      var _formData$cpt, _formData$cpt$details, _formData$cpt$details2, _formData$cpt$details3, _formData$cpt2, _formData$cpt2$detail, _formData$cpt2$detail2, _formData$cpt2$detail3;
      owners = {
        ...owners,
        owners: getOwnersfromProperty(formData),
        permanentAddress: (formData === null || formData === void 0 ? void 0 : (_formData$cpt = formData.cpt) === null || _formData$cpt === void 0 ? void 0 : (_formData$cpt$details = _formData$cpt.details) === null || _formData$cpt$details === void 0 ? void 0 : (_formData$cpt$details2 = _formData$cpt$details.owners) === null || _formData$cpt$details2 === void 0 ? void 0 : (_formData$cpt$details3 = _formData$cpt$details2[0]) === null || _formData$cpt$details3 === void 0 ? void 0 : _formData$cpt$details3.permanentAddress) || (formData === null || formData === void 0 ? void 0 : (_formData$cpt2 = formData.cpt) === null || _formData$cpt2 === void 0 ? void 0 : (_formData$cpt2$detail = _formData$cpt2.details) === null || _formData$cpt2$detail === void 0 ? void 0 : (_formData$cpt2$detail2 = _formData$cpt2$detail.owners) === null || _formData$cpt2$detail2 === void 0 ? void 0 : (_formData$cpt2$detail3 = _formData$cpt2$detail2[0]) === null || _formData$cpt2$detail3 === void 0 ? void 0 : _formData$cpt2$detail3.correspondenceAddress)
      };
    }
    onSelect(config.key, owners);
  };
  const onSkip = () => onSelect();
  function selectfile(e) {
    setUploadedFile(null);
    setFile(e.target.files[0]);
  }
  useEffect(() => {
    (async () => {
      setError(null);
      if (file && file !== null && file !== void 0 && file.type) {
        var _acceptFormat$split, _file$type, _file$type$split;
        if (!( (_acceptFormat$split = acceptFormat.split(",")) !== null && _acceptFormat$split !== void 0 && _acceptFormat$split.includes(`.${file === null || file === void 0 ? void 0 : (_file$type = file.type) === null || _file$type === void 0 ? void 0 : (_file$type$split = _file$type.split("/")) === null || _file$type$split === void 0 ? void 0 : _file$type$split.pop()}`))) {
          setError(t("PT_UPLOAD_FORMAT_NOT_SUPPORTED"));
        } else if (file.size >= 2000000) {
          setError(t("PT_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
        } else {
          try {
            var _response$data, _response$data$files;
            const response = await Digit.UploadServices.Filestorage("property-upload", file, Digit.ULBService.getStateId());
            if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
              var _response$data2, _response$data2$files;
              setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
            } else {
              setError(t("PT_FILE_UPLOAD_ERROR"));
            }
          } catch (err) {}
        }
      }
    })();
  }, [file]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, {
    currentStep: 3
  }) : null, /*#__PURE__*/React.createElement(FormStep, {
    config: config,
    onSelect: handleSubmit,
    onSkip: onSkip,
    t: t,
    isDisabled: !uploadedFile || error
  }, /*#__PURE__*/React.createElement(CardLabelDesc, {
    style: {
      fontWeight: "unset"
    }
  }, t(`TL_UPLOAD_RESTRICTIONS_TYPES`)), /*#__PURE__*/React.createElement(CardLabelDesc, {
    style: {
      fontWeight: "unset"
    }
  }, " ", t(`TL_UPLOAD_RESTRICTIONS_SIZE`)), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_CATEGORY_DOCUMENT_TYPE")}`), /*#__PURE__*/React.createElement(UploadFile, {
    id: "tl-doc",
    extraStyleName: "propertyCreate",
    accept: ".jpg,.png,.pdf,.jpeg",
    onUpload: selectfile,
    onDelete: () => {
      setUploadedFile(null);
    },
    message: uploadedFile ? `1 ${t(`TL_ACTION_FILEUPLOADED`)}` : t(`TL_ACTION_NO_FILEUPLOADED`),
    error: error
  }), error ? /*#__PURE__*/React.createElement("div", {
    style: {
      height: "20px",
      width: "100%",
      fontSize: "20px",
      color: "red",
      marginTop: "5px"
    }
  }, error) : "", /*#__PURE__*/React.createElement("div", {
    style: {
      disabled: "true",
      height: "20px",
      width: "100%"
    }
  })));
};

const SelectOwnershipProof = ({
  t,
  config,
  onSelect,
  userType,
  formData
}) => {
  var _formData$owners, _formData$owners$docu, _formData$owners$docu2, _formData$owners2, _formData$owners2$doc, _formData$owners3, _formData$owners3$doc, _formData$owners3$doc2, _Documentsob$Property;
  const [uploadedFile, setUploadedFile] = useState((formData === null || formData === void 0 ? void 0 : (_formData$owners = formData.owners) === null || _formData$owners === void 0 ? void 0 : (_formData$owners$docu = _formData$owners.documents) === null || _formData$owners$docu === void 0 ? void 0 : (_formData$owners$docu2 = _formData$owners$docu.ProofOfOwnership) === null || _formData$owners$docu2 === void 0 ? void 0 : _formData$owners$docu2.fileStoreId) || null);
  const [file, setFile] = useState(formData === null || formData === void 0 ? void 0 : (_formData$owners2 = formData.owners) === null || _formData$owners2 === void 0 ? void 0 : (_formData$owners2$doc = _formData$owners2.documents) === null || _formData$owners2$doc === void 0 ? void 0 : _formData$owners2$doc.ProofOfOwnership);
  const [error, setError] = useState(null);
  const cityDetails = Digit.ULBService.getCurrentUlb();
  let acceptFormat = ".jpg,.png,.pdf,.jpeg";
  const [dropdownValue, setDropdownValue] = useState((formData === null || formData === void 0 ? void 0 : (_formData$owners3 = formData.owners) === null || _formData$owners3 === void 0 ? void 0 : (_formData$owners3$doc = _formData$owners3.documents) === null || _formData$owners3$doc === void 0 ? void 0 : (_formData$owners3$doc2 = _formData$owners3$doc.ProofOfOwnership) === null || _formData$owners3$doc2 === void 0 ? void 0 : _formData$owners3$doc2.documentType) || null);
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const stateId = Digit.ULBService.getStateId();
  const {
    data: Documentsob = {}
  } = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", "Documents");
  const docs = Documentsob === null || Documentsob === void 0 ? void 0 : (_Documentsob$Property = Documentsob.PropertyTax) === null || _Documentsob$Property === void 0 ? void 0 : _Documentsob$Property.Documents;
  const proofOfOwnership = Array.isArray(docs) && docs.filter(doc => doc.code.includes("ADDRESSPROOF"));
  const handleSubmit = () => {
    let fileStoreId = uploadedFile;
    let fileDetails = file;
    if (fileDetails) fileDetails.documentType = "OWNERSHIPPROOF";
    if (fileDetails) fileDetails.fileStoreId = fileStoreId ? fileStoreId : null;
    let owners = formData === null || formData === void 0 ? void 0 : formData.owners;
    if (owners && owners.documents) {
      owners.documents["ProofOfOwnership"] = fileDetails;
    } else {
      owners["documents"] = [];
      owners.documents["ProofOfOwnership"] = fileDetails;
    }
    onSelect(config.key, owners);
  };
  const onSkip = () => onSelect();
  function selectfile(e) {
    setUploadedFile(null);
    setFile(e.target.files[0]);
  }
  useEffect(() => {
    (async () => {
      setError(null);
      if (file && file !== null && file !== void 0 && file.type) {
        var _acceptFormat$split, _file$type, _file$type$split;
        if (!( (_acceptFormat$split = acceptFormat.split(",")) !== null && _acceptFormat$split !== void 0 && _acceptFormat$split.includes(`.${file === null || file === void 0 ? void 0 : (_file$type = file.type) === null || _file$type === void 0 ? void 0 : (_file$type$split = _file$type.split("/")) === null || _file$type$split === void 0 ? void 0 : _file$type$split.pop()}`))) {
          setError(t("PT_UPLOAD_FORMAT_NOT_SUPPORTED"));
        } else if (file.size >= 2000000) {
          setError(t("PT_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
        } else {
          try {
            var _response$data, _response$data$files;
            const response = await Digit.UploadServices.Filestorage("property-upload", file, Digit.ULBService.getStateId());
            if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
              var _response$data2, _response$data2$files;
              setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
            } else {
              setError(t("PT_FILE_UPLOAD_ERROR"));
            }
          } catch (err) {}
        }
      }
    })();
  }, [file]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, {
    currentStep: 3
  }) : null, /*#__PURE__*/React.createElement(FormStep, {
    config: config,
    onSelect: handleSubmit,
    onSkip: onSkip,
    t: t,
    isDisabled: !uploadedFile || error
  }, /*#__PURE__*/React.createElement(CardLabelDesc, {
    style: {
      fontWeight: "unset"
    }
  }, t(`TL_UPLOAD_OWNERSHIP_RESTRICTIONS_TYPES`)), /*#__PURE__*/React.createElement(CardLabelDesc, {
    style: {
      fontWeight: "unset"
    }
  }, t(`TL_UPLOAD_RESTRICTIONS_SIZE`)), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_CATEGORY_DOCUMENT_TYPE")}`), /*#__PURE__*/React.createElement(UploadFile, {
    id: "tl-doc",
    extraStyleName: "propertyCreate",
    accept: ".jpg,.png,.pdf,.jpeg",
    onUpload: selectfile,
    onDelete: () => {
      setUploadedFile(null);
    },
    message: uploadedFile ? `1 ${t(`TL_ACTION_FILEUPLOADED`)}` : t(`TL_ACTION_NO_FILEUPLOADED`),
    error: error
  }), error ? /*#__PURE__*/React.createElement("div", {
    style: {
      height: "20px",
      width: "100%",
      fontSize: "20px",
      color: "red",
      marginTop: "5px"
    }
  }, error) : "", /*#__PURE__*/React.createElement("div", {
    style: {
      disabled: "true",
      height: "20px",
      width: "100%"
    }
  })));
};

const SelectTradeName = ({
  t,
  config,
  onSelect,
  value,
  userType,
  formData
}) => {
  var _formData$TradeDetail, _mdmsFinancialYear$so;
  let validation = {};
  const onSkip = () => onSelect();
  const [TradeName, setTradeName] = useState((_formData$TradeDetail = formData.TradeDetails) === null || _formData$TradeDetail === void 0 ? void 0 : _formData$TradeDetail.TradeName);
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const stateId = Digit.ULBService.getStateId();
  const isEdit = window.location.href.includes("/edit-application/") || window.location.href.includes("renew-trade");
  const {
    isLoading,
    data: fydata = {}
  } = Digit.Hooks.tl.useTradeLicenseMDMS(stateId, "egf-master", "FinancialYear");
  let mdmsFinancialYear = fydata["egf-master"] ? fydata["egf-master"].FinancialYear.filter(y => y.module === "TL") : [];
  let FY = mdmsFinancialYear && mdmsFinancialYear.length > 0 && ((_mdmsFinancialYear$so = mdmsFinancialYear.sort((x, y) => y.endingDate - x.endingDate)[0]) === null || _mdmsFinancialYear$so === void 0 ? void 0 : _mdmsFinancialYear$so.code);
  function setSelectTradeName(e) {
    setTradeName(e.target.value);
  }
  useEffect(() => {
    localStorage.setItem("TLAppSubmitEnabled", "true");
  }, []);
  const goNext = () => {
    sessionStorage.setItem("CurrentFinancialYear", currentFinancialYear());
    onSelect(config.key, {
      TradeName
    });
  };
  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, null) : null, /*#__PURE__*/React.createElement(FormStep, {
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    t: t,
    isDisabled: !TradeName
  }, /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_LOCALIZATION_TRADE_NAME")}`), /*#__PURE__*/React.createElement(TextInput, Object.assign({
    t: t,
    isMandatory: false,
    type: "text",
    optionKey: "i18nKey",
    name: "TradeName",
    value: TradeName,
    onChange: setSelectTradeName,
    disable: isEdit
  }, validation = {
    pattern: "^[a-zA-Z-0-9_@/#&+-.`' ]*$",
    isRequired: true,
    title: t("TL_INVALID_TRADE_NAME")
  }))), /*#__PURE__*/React.createElement(CitizenInfoLabel, {
    info: t("CS_FILE_APPLICATION_INFO_LABEL"),
    text: t("TL_LICENSE_ISSUE_YEAR_INFO_MSG") + FY
  }));
};

const SelectStructureType = ({
  t,
  config,
  onSelect,
  userType,
  formData
}) => {
  var _formData$TradeDetail;
  const [StructureType, setStructureType] = useState(formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail = formData.TradeDetails) === null || _formData$TradeDetail === void 0 ? void 0 : _formData$TradeDetail.StructureType);
  const isEdit = window.location.href.includes("/edit-application/") || window.location.href.includes("renew-trade");
  const menu = [{
    i18nKey: "TL_COMMON_YES",
    code: "IMMOVABLE"
  }, {
    i18nKey: "TL_COMMON_NO",
    code: "MOVABLE"
  }];
  const onSkip = () => onSelect();
  function selectStructuretype(value) {
    setStructureType(value);
  }
  function goNext() {
    sessionStorage.setItem("StructureType", StructureType.i18nKey);
    onSelect(config.key, {
      StructureType
    });
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, null) : null, /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !StructureType
  }, /*#__PURE__*/React.createElement(RadioButtons, {
    t: t,
    optionsKey: "i18nKey",
    isMandatory: config.isMandatory,
    options: menu,
    selectedOption: StructureType,
    onSelect: selectStructuretype,
    disabled: isEdit
  })));
};

let actions$1 = [];
const getAction$1 = flow => {
  switch (flow) {
    case "STAKEHOLDER":
      actions$1 = [];
      break;
    case "APPLY":
      actions$1 = ['FSM_TIMELINE_PROPERTY_DETAILS', 'FSM_GENDER_DETAILS', 'FSM_PAYMENT_DETAILS', 'FSM_TIMELINE_SUMMARY'];
      break;
    default:
      actions$1 = ['TL_COMMON_TR_DETAILS', 'TL_LOCATION_AND_OWNER_DETAILS', 'TL_DOCUMENT_DETAIL', 'TL_COMMON_SUMMARY'];
  }
};
const Timeline$1 = ({
  currentStep: _currentStep = 1,
  flow: _flow = ""
}) => {
  const {
    t
  } = useTranslation();
  const isMobile = window.Digit.Utils.browser.isMobile();
  getAction$1(_flow);
  return /*#__PURE__*/React.createElement("div", {
    className: "timeline-container",
    style: isMobile ? {} : {
      maxWidth: "960px",
      marginRight: "auto"
    }
  }, actions$1.map((action, index, arr) => /*#__PURE__*/React.createElement("div", {
    className: "timeline-checkpoint",
    key: index
  }, /*#__PURE__*/React.createElement("div", {
    className: "timeline-content"
  }, /*#__PURE__*/React.createElement("span", {
    className: `circle ${index <= _currentStep - 1 && 'active'}`
  }, index < _currentStep - 1 ? /*#__PURE__*/React.createElement(TickMark, null) : index + 1), /*#__PURE__*/React.createElement("span", {
    className: "secondary-color"
  }, t(action))), index < arr.length - 1 && /*#__PURE__*/React.createElement("span", {
    className: `line ${index < _currentStep - 1 && 'active'}`
  }))));
};

const SelectVehicleType = ({
  t,
  config,
  onSelect,
  userType,
  formData
}) => {
  var _formData$TradeDetail;
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const stateId = Digit.ULBService.getStateId();
  const [VehicleType, setVehicleType] = useState(formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail = formData.TradeDetails) === null || _formData$TradeDetail === void 0 ? void 0 : _formData$TradeDetail.VehicleType);
  const isEdit = window.location.href.includes("/edit-application/") || window.location.href.includes("renew-trade");
  const {
    isLoading,
    data: Menu = {}
  } = Digit.Hooks.tl.useTradeLicenseMDMS(stateId, "common-masters", "StructureType");
  let menu = [];
  Menu && Menu["common-masters"] && Menu["common-masters"].StructureType.map(ob => {
    if (!ob.code.includes("IMMOVABLE")) {
      menu.push({
        i18nKey: `COMMON_MASTERS_STRUCTURETYPE_${ob.code.replaceAll(".", "_")}`,
        code: `${ob.code}`
      });
    }
  });
  const onSkip = () => onSelect();
  function selectVehicleType(value) {
    setVehicleType(value);
  }
  function goNext() {
    onSelect(config.key, {
      VehicleType
    });
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, null) : null, /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !VehicleType
  }, !isLoading ? /*#__PURE__*/React.createElement(RadioButtons, {
    t: t,
    optionsKey: "i18nKey",
    isMandatory: config.isMandatory,
    options: menu,
    selectedOption: VehicleType,
    onSelect: selectVehicleType,
    disable: isEdit
  }) : /*#__PURE__*/React.createElement(Loader, null)));
};

const SelectBuildingType = ({
  t,
  config,
  onSelect,
  userType,
  formData
}) => {
  var _formData$TradeDetail;
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const stateId = Digit.ULBService.getStateId();
  const [BuildingType, setBuildingType] = useState(formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail = formData.TradeDetails) === null || _formData$TradeDetail === void 0 ? void 0 : _formData$TradeDetail.BuildingType);
  const {
    isLoading,
    data: Menu = {}
  } = Digit.Hooks.tl.useTradeLicenseMDMS(stateId, "common-masters", "StructureType");
  const isEdit = window.location.href.includes("/edit-application/") || window.location.href.includes("renew-trade");
  let menu = [];
  Menu && Menu["common-masters"] && Menu["common-masters"].StructureType.map(ob => {
    if (ob.code.includes("IMMOVABLE")) {
      menu.push({
        i18nKey: `COMMON_MASTERS_STRUCTURETYPE_${ob.code.replaceAll(".", "_")}`,
        code: `${ob.code}`
      });
    }
  });
  const onSkip = () => onSelect();
  function selectBuildingType(value) {
    setBuildingType(value);
  }
  function goNext() {
    onSelect(config.key, {
      BuildingType
    });
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, null) : null, /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !BuildingType
  }, !isLoading ? /*#__PURE__*/React.createElement(RadioButtons, {
    t: t,
    optionsKey: "i18nKey",
    isMandatory: config.isMandatory,
    options: menu,
    selectedOption: BuildingType,
    onSelect: selectBuildingType
  }) : /*#__PURE__*/React.createElement(Loader, null)), /*#__PURE__*/React.createElement(CitizenInfoLabel, {
    info: t("CS_FILE_APPLICATION_INFO_LABEL"),
    text: t("TL_BUILDING_TYPE_INFO_MSG")
  }), isEdit && /*#__PURE__*/React.createElement(CitizenInfoLabel, {
    info: t("CS_FILE_APPLICATION_INFO_LABEL"),
    text: t("Structure type cant be modified")
  }));
};

const SelectCommencementDate = ({
  t,
  config,
  onSelect,
  userType,
  formData
}) => {
  var _formData$TradeDetail;
  const [CommencementDate, setCommencementDate] = useState(formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail = formData.TradeDetails) === null || _formData$TradeDetail === void 0 ? void 0 : _formData$TradeDetail.CommencementDate);
  const isEdit = window.location.href.includes("/edit-application/") || window.location.href.includes("renew-trade");
  const onSkip = () => onSelect();
  useEffect(() => {
    var _formData$TradeDetail2;
    if (window.location.href.includes("/tl/tradelicence/renew-trade") || window.location.href.includes("/tl/tradelicence/edit-application") && formData !== null && formData !== void 0 && (_formData$TradeDetail2 = formData.TradeDetails) !== null && _formData$TradeDetail2 !== void 0 && _formData$TradeDetail2.CommencementDate) {
      let newdate = Date.parse(CommencementDate);
      newdate = new Date(newdate).getFullYear().toString() + "-" + `${new Date(newdate).getMonth() + 1 > 9 ? 1 : 0}` + (new Date(newdate).getMonth() + 1).toString() + "-" + `${new Date(newdate).getDate() > 9 ? '' : 0}` + new Date(newdate).getDate().toString();
      setCommencementDate(newdate);
    }
  }, [CommencementDate]);
  function selectCommencementDate(value) {
    setCommencementDate(value);
  }
  function goNext() {
    onSelect(config.key, {
      CommencementDate
    });
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, null) : null, /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !CommencementDate
  }, /*#__PURE__*/React.createElement(CardLabel, null, t("TL_NEW_TRADE_DETAILS_TRADE_COMM_DATE_LABEL")), /*#__PURE__*/React.createElement(DatePicker, {
    date: CommencementDate,
    name: "CommencementDate",
    onChange: selectCommencementDate,
    disabled: isEdit
  })));
};

const SelectTradeUnits = ({
  t,
  config,
  onSelect,
  userType,
  formData
}) => {
  var _formData$TadeDetails, _formData$TadeDetails2, _formData$TadeDetails3, _formData$TadeDetails4, _formData$TadeDetails5, _formData$TadeDetails6, _formData$TadeDetails7, _formData$TadeDetails8, _formData$TradeDetail;
  let validation = {};
  const [TradeCategory, setTradeCategory] = useState("");
  const [TradeType, setTradeType] = useState((formData === null || formData === void 0 ? void 0 : (_formData$TadeDetails = formData.TadeDetails) === null || _formData$TadeDetails === void 0 ? void 0 : (_formData$TadeDetails2 = _formData$TadeDetails.Units) === null || _formData$TadeDetails2 === void 0 ? void 0 : _formData$TadeDetails2.TradeType) || "");
  const [TradeSubType, setTradeSubType] = useState((formData === null || formData === void 0 ? void 0 : (_formData$TadeDetails3 = formData.TadeDetails) === null || _formData$TadeDetails3 === void 0 ? void 0 : (_formData$TadeDetails4 = _formData$TadeDetails3.Units) === null || _formData$TadeDetails4 === void 0 ? void 0 : _formData$TadeDetails4.TradeSubType) || "");
  const [UnitOfMeasure, setUnitOfMeasure] = useState((formData === null || formData === void 0 ? void 0 : (_formData$TadeDetails5 = formData.TadeDetails) === null || _formData$TadeDetails5 === void 0 ? void 0 : (_formData$TadeDetails6 = _formData$TadeDetails5.Units) === null || _formData$TadeDetails6 === void 0 ? void 0 : _formData$TadeDetails6.UnitOfMeasure) || "");
  const [UomValue, setUomValue] = useState((formData === null || formData === void 0 ? void 0 : (_formData$TadeDetails7 = formData.TadeDetails) === null || _formData$TadeDetails7 === void 0 ? void 0 : (_formData$TadeDetails8 = _formData$TadeDetails7.Units) === null || _formData$TadeDetails8 === void 0 ? void 0 : _formData$TadeDetails8.UomValue) || "");
  const [error, setError] = useState(null);
  const [fields, setFeilds] = useState((formData === null || formData === void 0 ? void 0 : formData.TradeDetails) && (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail = formData.TradeDetails) === null || _formData$TradeDetail === void 0 ? void 0 : _formData$TradeDetail.units) || [{
    tradecategory: "",
    tradetype: "",
    tradesubtype: "",
    unit: null,
    uom: null
  }]);
  const tenantId = Digit.ULBService.getCitizenCurrentTenant();
  const stateId = Digit.ULBService.getStateId();
  function handleAdd() {
    const values = [...fields];
    values.push({
      tradecategory: "",
      tradetype: "",
      tradesubtype: "",
      unit: null,
      uom: null
    });
    setFeilds(values);
  }
  function handleRemove(index) {
    const values = [...fields];
    if (values.length != 1) {
      values.splice(index, 1);
      setFeilds(values);
    }
  }
  const {
    isLoading,
    data: Data = {}
  } = Digit.Hooks.tl.useTradeLicenseMDMS(stateId, "TradeLicense", "TradeUnits", "[?(@.type=='TL')]");
  const {
    data: billingSlabTradeTypeData,
    isLoading: isBillingSlabLoading
  } = Digit.Hooks.tl.useTradeLicenseBillingslab({
    tenantId: tenantId,
    filters: {}
  }, {
    select: data => {
      return data === null || data === void 0 ? void 0 : data.billingSlab.filter(e => e.tradeType && e.applicationType === (window.location.href.includes("renew-trade") ? "RENEWAL" : "NEW") && e.licenseType === "PERMANENT" && e.uom);
    }
  });
  let TradeCategoryMenu = [];
  let TradeCategoryMenu2 = [];
  Data && Data.TradeLicense && Data.TradeLicense.TradeType.map(ob => {
    if (!TradeCategoryMenu2.some(TradeCategoryMenu => TradeCategoryMenu.code === `${ob.code.split(".")[0]}`)) {
      TradeCategoryMenu2.push({
        i18nKey: `TRADELICENSE_TRADETYPE_${ob.code.split(".")[0]}`,
        code: `${ob.code.split(".")[0]}`
      });
    }
  });
  billingSlabTradeTypeData && billingSlabTradeTypeData.length > 0 && billingSlabTradeTypeData.filter(e => {
    var _formData$TradeDetail2, _formData$TradeDetail3;
    return e.structureType === (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail2 = formData.TradeDetails) === null || _formData$TradeDetail2 === void 0 ? void 0 : (_formData$TradeDetail3 = _formData$TradeDetail2.BuildingType) === null || _formData$TradeDetail3 === void 0 ? void 0 : _formData$TradeDetail3.code.toString());
  }).map(ob => {
    if (!TradeCategoryMenu.some(TradeCategoryMenu => TradeCategoryMenu.code === `${ob.tradeType.split(".")[0]}`)) {
      TradeCategoryMenu.push({
        i18nKey: `TRADELICENSE_TRADETYPE_${ob.tradeType.split(".")[0]}`,
        code: `${ob.tradeType.split(".")[0]}`
      });
    }
  });
  billingSlabTradeTypeData && billingSlabTradeTypeData.length > 0 && billingSlabTradeTypeData.filter(e => {
    var _formData$TradeDetail4, _formData$TradeDetail5;
    return e.structureType === (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail4 = formData.TradeDetails) === null || _formData$TradeDetail4 === void 0 ? void 0 : (_formData$TradeDetail5 = _formData$TradeDetail4.VehicleType) === null || _formData$TradeDetail5 === void 0 ? void 0 : _formData$TradeDetail5.code.toString());
  }).map(ob => {
    if (!TradeCategoryMenu.some(TradeCategoryMenu => TradeCategoryMenu.code === `${ob.tradeType.split(".")[0]}`)) {
      TradeCategoryMenu.push({
        i18nKey: `TRADELICENSE_TRADETYPE_${ob.tradeType.split(".")[0]}`,
        code: `${ob.tradeType.split(".")[0]}`
      });
    }
  });
  function getTradeTypeMenu(TradeCategory) {
    var _Data$TradeLicense, _Data$TradeLicense$Tr;
    let TradeTypeMenu = [];
    if (TradeCategory && Data !== null && Data !== void 0 && Data.TradeLicense && (Data === null || Data === void 0 ? void 0 : (_Data$TradeLicense = Data.TradeLicense) === null || _Data$TradeLicense === void 0 ? void 0 : (_Data$TradeLicense$Tr = _Data$TradeLicense.TradeType) === null || _Data$TradeLicense$Tr === void 0 ? void 0 : _Data$TradeLicense$Tr.length) > 0) {
      var _Data$TradeLicense2, _Data$TradeLicense2$T;
      Data === null || Data === void 0 ? void 0 : (_Data$TradeLicense2 = Data.TradeLicense) === null || _Data$TradeLicense2 === void 0 ? void 0 : (_Data$TradeLicense2$T = _Data$TradeLicense2.TradeType) === null || _Data$TradeLicense2$T === void 0 ? void 0 : _Data$TradeLicense2$T.map(ob => {
        if (ob.code.split(".")[0] === TradeCategory.code && !TradeTypeMenu.some(TradeTypeMenu => TradeTypeMenu.code === `${ob.code.split(".")[1]}`)) {
          TradeTypeMenu.push({
            i18nKey: `TRADELICENSE_TRADETYPE_${ob.code.split(".")[1]}`,
            code: `${ob.code.split(".")[1]}`
          });
        }
      });
    }
    return TradeTypeMenu;
  }
  function getTradeSubTypeMenu(TradeType) {
    var _Data$TradeLicense3, _Data$TradeLicense3$T;
    let TradeSubTypeMenu = [];
    if (TradeType && Data !== null && Data !== void 0 && Data.TradeLicense && (Data === null || Data === void 0 ? void 0 : (_Data$TradeLicense3 = Data.TradeLicense) === null || _Data$TradeLicense3 === void 0 ? void 0 : (_Data$TradeLicense3$T = _Data$TradeLicense3.TradeType) === null || _Data$TradeLicense3$T === void 0 ? void 0 : _Data$TradeLicense3$T.length) > 0) {
      var _Data$TradeLicense4, _Data$TradeLicense4$T;
      Data === null || Data === void 0 ? void 0 : (_Data$TradeLicense4 = Data.TradeLicense) === null || _Data$TradeLicense4 === void 0 ? void 0 : (_Data$TradeLicense4$T = _Data$TradeLicense4.TradeType) === null || _Data$TradeLicense4$T === void 0 ? void 0 : _Data$TradeLicense4$T.map(ob => {
        if (ob.code.split(".")[1] === TradeType.code && !TradeSubTypeMenu.some(TradeSubTypeMenu => TradeSubTypeMenu.code === `${ob.code}`)) {
          TradeSubTypeMenu.push({
            i18nKey: `TL_${ob.code}`,
            code: `${ob.code}`
          });
        }
      });
    }
    return TradeSubTypeMenu;
  }
  const {
    pathname: url
  } = useLocation();
  const editScreen = url.includes("/modify-application/");
  function selectTradeCategory(i, value) {
    let units = [...fields];
    units[i].tradecategory = value;
    setTradeCategory(value);
    selectTradeType(i, null);
    selectTradeSubType(i, null);
    selectUomValue(i, "");
    setFeilds(units);
  }
  function selectTradeType(i, value) {
    let units = [...fields];
    units[i].tradetype = value;
    setTradeType(value);
    selectTradeSubType(i, null);
    selectUomValue(i, "");
    setFeilds(units);
  }
  function selectTradeSubType(i, value) {
    var _billingSlabTradeType;
    let units = [...fields];
    units[i].tradesubtype = value;
    setTradeSubType(value);
    selectUomValue(i, "");
    setError(null);
    if (value && (billingSlabTradeTypeData === null || billingSlabTradeTypeData === void 0 ? void 0 : (_billingSlabTradeType = billingSlabTradeTypeData.filter(ob => {
      var _formData$TradeDetail6, _formData$TradeDetail7, _formData$TradeDetail8, _formData$TradeDetail9;
      return (ob === null || ob === void 0 ? void 0 : ob.tradeType) === (value === null || value === void 0 ? void 0 : value.code) && ((ob === null || ob === void 0 ? void 0 : ob.structureType) === (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail6 = formData.TradeDetails) === null || _formData$TradeDetail6 === void 0 ? void 0 : (_formData$TradeDetail7 = _formData$TradeDetail6.VehicleType) === null || _formData$TradeDetail7 === void 0 ? void 0 : _formData$TradeDetail7.code) || (ob === null || ob === void 0 ? void 0 : ob.structureType) === (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail8 = formData.TradeDetails) === null || _formData$TradeDetail8 === void 0 ? void 0 : (_formData$TradeDetail9 = _formData$TradeDetail8.BuildingType) === null || _formData$TradeDetail9 === void 0 ? void 0 : _formData$TradeDetail9.code));
    })) === null || _billingSlabTradeType === void 0 ? void 0 : _billingSlabTradeType.length) <= 0) {
      setError("TL_BILLING_SLAB_NOT_FOUND_FOR_COMB");
      window.setTimeout(function () {
        window.scrollTo(0, 0);
      }, 0);
    }
    if (value == null) {
      units[i].unit = null;
      setUnitOfMeasure(null);
    }
    Array.from(document.querySelectorAll("input")).forEach(input => input.value = "");
    let uomFound = false;
    value && billingSlabTradeTypeData && (billingSlabTradeTypeData === null || billingSlabTradeTypeData === void 0 ? void 0 : billingSlabTradeTypeData.length) > 0 && billingSlabTradeTypeData.filter(e => {
      var _formData$TradeDetail10, _formData$TradeDetail11;
      return e.structureType === (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail10 = formData.TradeDetails) === null || _formData$TradeDetail10 === void 0 ? void 0 : (_formData$TradeDetail11 = _formData$TradeDetail10.BuildingType) === null || _formData$TradeDetail11 === void 0 ? void 0 : _formData$TradeDetail11.code.toString());
    }).map(ob => {
      if (value.code === ob.tradeType) {
        units[i].unit = ob.uom;
        uomFound = true;
        setUnitOfMeasure(ob.uom);
      }
    });
    value && billingSlabTradeTypeData && (billingSlabTradeTypeData === null || billingSlabTradeTypeData === void 0 ? void 0 : billingSlabTradeTypeData.length) > 0 && billingSlabTradeTypeData.filter(e => {
      var _formData$TradeDetail12, _formData$TradeDetail13;
      return e.structureType === (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail12 = formData.TradeDetails) === null || _formData$TradeDetail12 === void 0 ? void 0 : (_formData$TradeDetail13 = _formData$TradeDetail12.VehicleType) === null || _formData$TradeDetail13 === void 0 ? void 0 : _formData$TradeDetail13.code.toString());
    }).map(ob => {
      if (value.code === ob.tradeType) {
        units[i].unit = ob.uom;
        uomFound = true;
        setUnitOfMeasure(ob.uom);
      }
    });
    if (!uomFound) {
      units[i].unit = null;
      setUnitOfMeasure(null);
    }
    setFeilds(units);
  }
  function selectUnitOfMeasure(i, e) {
    let units = [...fields];
    units[i].unit = e.target.value;
    setUnitOfMeasure(e.target.value);
    setFeilds(units);
  }
  function selectUomValue(i, e) {
    var _e$target, _e$target2;
    let units = [...fields];
    units[i].uom = e == "" ? e : e.target.value;
    setError(null);
    let selectedtradesubType = billingSlabTradeTypeData === null || billingSlabTradeTypeData === void 0 ? void 0 : billingSlabTradeTypeData.filter(ob => {
      var _units$i, _units$i$tradesubtype, _formData$TradeDetail14, _formData$TradeDetail15, _formData$TradeDetail16, _formData$TradeDetail17;
      return (ob === null || ob === void 0 ? void 0 : ob.tradeType) === ((_units$i = units[i]) === null || _units$i === void 0 ? void 0 : (_units$i$tradesubtype = _units$i.tradesubtype) === null || _units$i$tradesubtype === void 0 ? void 0 : _units$i$tradesubtype.code) && ((ob === null || ob === void 0 ? void 0 : ob.structureType) === (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail14 = formData.TradeDetails) === null || _formData$TradeDetail14 === void 0 ? void 0 : (_formData$TradeDetail15 = _formData$TradeDetail14.BuildingType) === null || _formData$TradeDetail15 === void 0 ? void 0 : _formData$TradeDetail15.code) || (ob === null || ob === void 0 ? void 0 : ob.structureType) === (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail16 = formData.TradeDetails) === null || _formData$TradeDetail16 === void 0 ? void 0 : (_formData$TradeDetail17 = _formData$TradeDetail16.VehicleType) === null || _formData$TradeDetail17 === void 0 ? void 0 : _formData$TradeDetail17.code));
    });
    if (e && !(e !== null && e !== void 0 && (_e$target = e.target) !== null && _e$target !== void 0 && _e$target.value && parseFloat(e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.value) > 0)) {
      setError(t("TL_UOM_VALUE_GREATER_O"));
      window.setTimeout(function () {
        window.scrollTo(0, 0);
      }, 0);
    } else {
      var _selectedtradesubType, _selectedtradesubType5;
      if (Number.isInteger(selectedtradesubType === null || selectedtradesubType === void 0 ? void 0 : (_selectedtradesubType = selectedtradesubType[0]) === null || _selectedtradesubType === void 0 ? void 0 : _selectedtradesubType.fromUom)) {
        var _e$target3, _selectedtradesubType2;
        if (e && !(e !== null && e !== void 0 && (_e$target3 = e.target) !== null && _e$target3 !== void 0 && _e$target3.value && parseInt(e.target.value) >= (selectedtradesubType === null || selectedtradesubType === void 0 ? void 0 : (_selectedtradesubType2 = selectedtradesubType[0]) === null || _selectedtradesubType2 === void 0 ? void 0 : _selectedtradesubType2.fromUom))) {
          var _selectedtradesubType3, _selectedtradesubType4;
          setError(`${t("TL_FILL_CORRECT_UOM_VALUE")} ${selectedtradesubType === null || selectedtradesubType === void 0 ? void 0 : (_selectedtradesubType3 = selectedtradesubType[0]) === null || _selectedtradesubType3 === void 0 ? void 0 : _selectedtradesubType3.fromUom} - ${selectedtradesubType === null || selectedtradesubType === void 0 ? void 0 : (_selectedtradesubType4 = selectedtradesubType[0]) === null || _selectedtradesubType4 === void 0 ? void 0 : _selectedtradesubType4.toUom}`);
          window.setTimeout(function () {
            window.scrollTo(0, 0);
          }, 0);
        }
      }
      if (Number.isInteger(selectedtradesubType === null || selectedtradesubType === void 0 ? void 0 : (_selectedtradesubType5 = selectedtradesubType[0]) === null || _selectedtradesubType5 === void 0 ? void 0 : _selectedtradesubType5.toUom)) {
        var _e$target4, _selectedtradesubType6;
        if (e && !(e !== null && e !== void 0 && (_e$target4 = e.target) !== null && _e$target4 !== void 0 && _e$target4.value && parseInt(e.target.value) <= (selectedtradesubType === null || selectedtradesubType === void 0 ? void 0 : (_selectedtradesubType6 = selectedtradesubType[0]) === null || _selectedtradesubType6 === void 0 ? void 0 : _selectedtradesubType6.toUom))) {
          var _selectedtradesubType7, _selectedtradesubType8;
          setError(`${t("TL_FILL_CORRECT_UOM_VALUE")} ${selectedtradesubType === null || selectedtradesubType === void 0 ? void 0 : (_selectedtradesubType7 = selectedtradesubType[0]) === null || _selectedtradesubType7 === void 0 ? void 0 : _selectedtradesubType7.fromUom} - ${selectedtradesubType === null || selectedtradesubType === void 0 ? void 0 : (_selectedtradesubType8 = selectedtradesubType[0]) === null || _selectedtradesubType8 === void 0 ? void 0 : _selectedtradesubType8.toUom}`);
          window.setTimeout(function () {
            window.scrollTo(0, 0);
          }, 0);
        }
      }
    }
    setUomValue(e == "" ? e : e.target.value);
    setFeilds(units);
  }
  const goNext = () => {
    let units = formData.TradeDetails.Units;
    let unitsdata;
    if (!error) {
      setError(null);
      unitsdata = {
        ...units,
        units: fields
      };
      onSelect(config.key, unitsdata);
    }
  };
  useEffect(() => {
    if (window.location.href.includes("renew-trade") && fields) {
      fields.map(value => {
        var _billingSlabTradeType2;
        if (value && (billingSlabTradeTypeData === null || billingSlabTradeTypeData === void 0 ? void 0 : (_billingSlabTradeType2 = billingSlabTradeTypeData.filter(ob => {
          var _value$tradesubtype, _formData$TradeDetail18, _formData$TradeDetail19, _formData$TradeDetail20, _formData$TradeDetail21;
          return (ob === null || ob === void 0 ? void 0 : ob.tradeType) === (value === null || value === void 0 ? void 0 : (_value$tradesubtype = value.tradesubtype) === null || _value$tradesubtype === void 0 ? void 0 : _value$tradesubtype.code) && ((ob === null || ob === void 0 ? void 0 : ob.structureType) === (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail18 = formData.TradeDetails) === null || _formData$TradeDetail18 === void 0 ? void 0 : (_formData$TradeDetail19 = _formData$TradeDetail18.VehicleType) === null || _formData$TradeDetail19 === void 0 ? void 0 : _formData$TradeDetail19.code) || (ob === null || ob === void 0 ? void 0 : ob.structureType) === (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail20 = formData.TradeDetails) === null || _formData$TradeDetail20 === void 0 ? void 0 : (_formData$TradeDetail21 = _formData$TradeDetail20.BuildingType) === null || _formData$TradeDetail21 === void 0 ? void 0 : _formData$TradeDetail21.code));
        })) === null || _billingSlabTradeType2 === void 0 ? void 0 : _billingSlabTradeType2.length) <= 0) {
          setError("TL_BILLING_SLAB_NOT_FOUND_FOR_COMB");
        }
      });
    }
  }, []);
  const onSkip = () => onSelect();
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, null) : null, isLoading || isBillingSlabLoading ? /*#__PURE__*/React.createElement(Loader, null) : /*#__PURE__*/React.createElement(FormStep, {
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    t: t,
    forcedError: t(error),
    isDisabled: !fields[0].tradecategory || !fields[0].tradetype || !fields[0].tradesubtype
  }, fields.map((field, index) => {
    return /*#__PURE__*/React.createElement("div", {
      key: `${field}-${index}`
    }, /*#__PURE__*/React.createElement("div", {
      style: {
        border: "solid",
        borderRadius: "5px",
        padding: "10px",
        paddingTop: "20px",
        marginTop: "10px",
        borderColor: "#f3f3f3",
        background: "#FAFAFA"
      }
    }, /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_NEW_TRADE_DETAILS_TRADE_CAT_LABEL")}*`), /*#__PURE__*/React.createElement(LinkButton, {
      label: /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement("svg", {
        style: {
          float: "right",
          position: "relative",
          bottom: "32px"
        },
        width: "24",
        height: "24",
        viewBox: "0 0 24 24",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
      }, /*#__PURE__*/React.createElement("path", {
        d: "M1 16C1 17.1 1.9 18 3 18H11C12.1 18 13 17.1 13 16V4H1V16ZM14 1H10.5L9.5 0H4.5L3.5 1H0V3H14V1Z",
        fill: !(fields.length == 1) ? "#494848" : "#FAFAFA"
      })))),
      style: {
        width: "100px",
        display: "inline"
      },
      onClick: e => handleRemove(index)
    }), !isLoading || !isBillingSlabLoading ? /*#__PURE__*/React.createElement(RadioButtons, {
      t: t,
      options: TradeCategoryMenu2,
      optionsKey: "i18nKey",
      name: `TradeCategory-${index}`,
      value: field === null || field === void 0 ? void 0 : field.tradecategory,
      selectedOption: field === null || field === void 0 ? void 0 : field.tradecategory,
      onSelect: e => selectTradeCategory(index, e),
      labelKey: "",
      isPTFlow: true
    }) : /*#__PURE__*/React.createElement(Loader, null), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_NEW_TRADE_DETAILS_TRADE_TYPE_LABEL")}*`), /*#__PURE__*/React.createElement(Dropdown, {
      t: t,
      optionKey: "i18nKey",
      isMandatory: config.isMandatory,
      option: sortDropdownNames(getTradeTypeMenu(field === null || field === void 0 ? void 0 : field.tradecategory), "i18nKey", t),
      selected: field === null || field === void 0 ? void 0 : field.tradetype,
      select: e => selectTradeType(index, e)
    }), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_NEW_TRADE_DETAILS_TRADE_SUBTYPE_LABEL")}*`), /*#__PURE__*/React.createElement(Dropdown, {
      t: t,
      optionKey: "i18nKey",
      isMandatory: config.isMandatory,
      option: sortDropdownNames(getTradeSubTypeMenu(field === null || field === void 0 ? void 0 : field.tradetype), "i18nKey", t),
      selected: field === null || field === void 0 ? void 0 : field.tradesubtype,
      optionCardStyles: {
        maxHeight: "125px",
        overflow: "scroll"
      },
      select: e => selectTradeSubType(index, e)
    }), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_UNIT_OF_MEASURE_LABEL")}`), /*#__PURE__*/React.createElement(TextInput, {
      style: {
        background: "#FAFAFA"
      },
      t: t,
      type: "text",
      isMandatory: false,
      optionKey: "i18nKey",
      name: "UnitOfMeasure",
      value: field === null || field === void 0 ? void 0 : field.unit,
      onChange: e => selectUnitOfMeasure(index, e),
      disable: true
    }), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_NEW_TRADE_DETAILS_UOM_VALUE_LABEL")}${!field.unit ? "" : "*"}`), /*#__PURE__*/React.createElement(TextInput, Object.assign({
      style: {
        background: "#FAFAFA"
      },
      t: t,
      type: "text",
      isMandatory: false,
      optionKey: "i18nKey",
      name: "UomValue",
      value: field === null || field === void 0 ? void 0 : field.uom,
      onChange: e => selectUomValue(index, e),
      disable: !field.unit
    }, validation = {
      isRequired: true,
      pattern: "[0-9]+",
      type: "text",
      title: t("TL_WRONG_UOM_VALUE_ERROR")
    }))));
  }), /*#__PURE__*/React.createElement("div", {
    style: {
      justifyContent: "center",
      display: "flex",
      paddingBottom: "15px",
      color: "#FF8C00"
    }
  }, /*#__PURE__*/React.createElement("button", {
    type: "button",
    style: {
      paddingTop: "10px"
    },
    onClick: () => handleAdd()
  }, `${t("TL_ADD_MORE_TRADE_UNITS")}`))));
};

const SelectAccessories = ({
  t,
  config,
  onSelect,
  userType,
  formData
}) => {
  var _formData$TradeDetail;
  const [isAccessories, setisAccessories] = useState(formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail = formData.TradeDetails) === null || _formData$TradeDetail === void 0 ? void 0 : _formData$TradeDetail.isAccessories);
  const menu = [{
    i18nKey: "TL_COMMON_YES",
    code: "ACCESSORY"
  }, {
    i18nKey: "TL_COMMON_NO",
    code: "NONACCESSORY"
  }];
  const onSkip = () => onSelect();
  function selectisAccessories(value) {
    setisAccessories(value);
  }
  function goNext() {
    var _formData$TradeDetail2, _formData$TradeDetail3;
    sessionStorage.setItem("isAccessories", isAccessories.i18nKey);
    sessionStorage.setItem("VisitedisAccessories", true);
    onSelect(config.key, {
      isAccessories,
      accessories: formData !== null && formData !== void 0 && (_formData$TradeDetail2 = formData.TradeDetails) !== null && _formData$TradeDetail2 !== void 0 && _formData$TradeDetail2.accessories ? formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail3 = formData.TradeDetails) === null || _formData$TradeDetail3 === void 0 ? void 0 : _formData$TradeDetail3.accessories : []
    });
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, null) : null, /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !isAccessories
  }, /*#__PURE__*/React.createElement(RadioButtons, {
    t: t,
    optionsKey: "i18nKey",
    isMandatory: config.isMandatory,
    options: menu,
    selectedOption: isAccessories,
    onSelect: selectisAccessories
  })));
};

function isUndefined(value) {
  return value === undefined;
}
var isUndefined_1 = isUndefined;

const SelectAccessoriesDetails = ({
  t,
  config,
  onSelect,
  userType,
  formData
}) => {
  var _formData$TadeDetails, _formData$TadeDetails2, _formData$TadeDetails3, _formData$TadeDetails4, _formData$TadeDetails5, _formData$TadeDetails6, _formData$TadeDetails7, _formData$TadeDetails8, _formData$TradeDetail, _formData$TradeDetail2, _formData$TradeDetail3;
  let validation = {};
  const [Accessory, setAccessory] = useState((formData === null || formData === void 0 ? void 0 : (_formData$TadeDetails = formData.TadeDetails) === null || _formData$TadeDetails === void 0 ? void 0 : (_formData$TadeDetails2 = _formData$TadeDetails.accessories) === null || _formData$TadeDetails2 === void 0 ? void 0 : _formData$TadeDetails2.Accessory) || "");
  const [AccessoryCount, setAccessoryCount] = useState((formData === null || formData === void 0 ? void 0 : (_formData$TadeDetails3 = formData.TadeDetails) === null || _formData$TadeDetails3 === void 0 ? void 0 : (_formData$TadeDetails4 = _formData$TadeDetails3.accessories) === null || _formData$TadeDetails4 === void 0 ? void 0 : _formData$TadeDetails4.AccessoryCount) || "");
  const [UnitOfMeasure, setUnitOfMeasure] = useState((formData === null || formData === void 0 ? void 0 : (_formData$TadeDetails5 = formData.TadeDetails) === null || _formData$TadeDetails5 === void 0 ? void 0 : (_formData$TadeDetails6 = _formData$TadeDetails5.accessories) === null || _formData$TadeDetails6 === void 0 ? void 0 : _formData$TadeDetails6.UnitOfMeasure) || "");
  const [UomValue, setUomValue] = useState((formData === null || formData === void 0 ? void 0 : (_formData$TadeDetails7 = formData.TadeDetails) === null || _formData$TadeDetails7 === void 0 ? void 0 : (_formData$TadeDetails8 = _formData$TadeDetails7.accessories) === null || _formData$TadeDetails8 === void 0 ? void 0 : _formData$TadeDetails8.UomValue) || "");
  const [fields, setFeilds] = useState(formData !== null && formData !== void 0 && formData.TradeDetails && formData !== null && formData !== void 0 && (_formData$TradeDetail = formData.TradeDetails) !== null && _formData$TradeDetail !== void 0 && _formData$TradeDetail.accessories && (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail2 = formData.TradeDetails) === null || _formData$TradeDetail2 === void 0 ? void 0 : _formData$TradeDetail2.accessories.length) > 0 ? formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail3 = formData.TradeDetails) === null || _formData$TradeDetail3 === void 0 ? void 0 : _formData$TradeDetail3.accessories : [{
    accessory: "",
    accessorycount: "",
    unit: null,
    uom: null
  }]);
  const [AccCountError, setAccCountError] = useState(null);
  const [AccUOMError, setAccUOMError] = useState(null);
  const [enableUOM, setenableUOM] = useState(false);
  const TenantId = Digit.ULBService.getCitizenCurrentTenant();
  let isEditTrade = window.location.href.includes("edit-application");
  let isRenewTrade = window.location.href.includes("renew-trade");
  const {
    pathname: url
  } = useLocation();
  const editScreen = url.includes("/modify-application/");
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const stateId = Digit.ULBService.getStateId();
  const {
    isLoading,
    data: Data = {}
  } = Digit.Hooks.tl.useTradeLicenseMDMS(stateId, "TradeLicense", "AccessoryCategory");
  const [accessories, SetAccessories] = useState([]);
  const {
    data: billingSlabData
  } = Digit.Hooks.tl.useTradeLicenseBillingslab({
    tenantId: TenantId,
    filters: {}
  }, {
    select: data => {
      return data === null || data === void 0 ? void 0 : data.billingSlab.filter(e => e.accessoryCategory && (window.location.href.includes("renew-trade") ? "RENEWAL" : "NEW") && e.uom);
    }
  });
  useEffect(() => {
    if (billingSlabData && (billingSlabData === null || billingSlabData === void 0 ? void 0 : billingSlabData.length) > 0) {
      const processedData = billingSlabData && billingSlabData.reduce((acc, item) => {
        let accessory = {
          active: true
        };
        let tradeType = {
          active: true
        };
        if (item.accessoryCategory && item.tradeType === null) {
          accessory.code = item.accessoryCategory;
          accessory.uom = item.uom;
          accessory.rate = item.rate;
          item.rate && item.rate > 0 && acc.accessories.push(accessory);
          accessory.fromUom = item.fromUom;
          accessory.toUom = item.toUom;
        } else if (item.accessoryCategory === null && item.tradeType) {
          tradeType.code = item.tradeType;
          tradeType.uom = item.uom;
          tradeType.structureType = item.structureType;
          tradeType.licenseType = item.licenseType;
          tradeType.rate = item.rate;
          tradeType.fromUom = item.fromUom;
          tradeType.toUom = item.toUom;
          !isUndefined_1(item.rate) && item.rate !== null && acc.tradeTypeData.push(tradeType);
        }
        return acc;
      }, {
        accessories: [],
        tradeTypeData: []
      });
      const accessories = getUniqueItemsFromArray(processedData.accessories, "code");
      let structureTypes = getUniqueItemsFromArray(processedData.tradeTypeData, "structureType");
      structureTypes = commonTransform({
        StructureType: structureTypes.map(item => {
          return {
            code: item.structureType,
            active: true
          };
        })
      }, "StructureType");
      let licenseTypes = getUniqueItemsFromArray(processedData.tradeTypeData, "licenseType");
      licenseTypes = licenseTypes.map(item => {
        return {
          code: item.licenseType,
          active: true
        };
      });
      accessories.forEach(data => {
        var _data$code;
        data.i18nKey = t(`TRADELICENSE_ACCESSORIESCATEGORY_${stringReplaceAll(data === null || data === void 0 ? void 0 : (_data$code = data.code) === null || _data$code === void 0 ? void 0 : _data$code.toUpperCase(), "-", "_")}`);
      });
      SetAccessories(accessories);
    }
  }, [billingSlabData]);
  function handleAdd() {
    const values = [...fields];
    values.push({
      accessory: "",
      accessorycount: "",
      unit: null,
      uom: null
    });
    setFeilds(values);
  }
  function handleRemove(index) {
    const values = [...fields];
    if (values.length != 1) {
      values.splice(index, 1);
      setFeilds(values);
    }
  }
  function selectAccessory(i, value) {
    let acc = [...fields];
    acc[i].accessory = value;
    setAccessory(value);
    setFeilds(acc);
    acc[i].accessorycount = "";
    acc[i].uom = "";
    setenableUOM(true);
    acc[i].unit = (value === null || value === void 0 ? void 0 : value.uom) != null ? value.uom : "";
    Array.from(document.querySelectorAll("input")).forEach(input => input.value = "");
    setUnitOfMeasure((value === null || value === void 0 ? void 0 : value.uom) != null ? value.uom : null);
  }
  function selectAccessoryCount(i, e) {
    setAccCountError(null);
    if (isNaN(e.target.value)) setAccCountError("TL_ONLY_NUM_ALLOWED");
    let acc = [...fields];
    acc[i].accessorycount = e.target.value;
    setAccessoryCount(e.target.value);
    setFeilds(acc);
  }
  function selectUnitOfMeasure(i, e) {
    let acc = [...fields];
    acc[i].unit = e.target.value;
    setUnitOfMeasure(e.target.value);
    setFeilds(acc);
  }
  function selectUomValue(i, e) {
    setAccUOMError(null);
    if (isNaN(e.target.value)) setAccUOMError("TL_ONLY_NUM_ALLOWED");
    if (!(e.target.value && parseFloat(e.target.value) > 0)) {
      setAccUOMError(t("TL_UOM_VALUE_GREATER_O"));
      window.setTimeout(function () {
        window.scrollTo(0, 0);
      }, 0);
    } else {
      var _fields$i, _fields$i2, _fields$i2$accessory, _fields$i6, _fields$i7, _fields$i7$accessory;
      if (fields !== null && fields !== void 0 && (_fields$i = fields[i]) !== null && _fields$i !== void 0 && _fields$i.accessory && Number.isInteger(fields === null || fields === void 0 ? void 0 : (_fields$i2 = fields[i]) === null || _fields$i2 === void 0 ? void 0 : (_fields$i2$accessory = _fields$i2.accessory) === null || _fields$i2$accessory === void 0 ? void 0 : _fields$i2$accessory.fromUom)) {
        var _fields$i3, _fields$i3$accessory;
        if (!(e.target.value && parseInt(e.target.value) >= (fields === null || fields === void 0 ? void 0 : (_fields$i3 = fields[i]) === null || _fields$i3 === void 0 ? void 0 : (_fields$i3$accessory = _fields$i3.accessory) === null || _fields$i3$accessory === void 0 ? void 0 : _fields$i3$accessory.fromUom))) {
          var _fields$i4, _fields$i4$accessory, _fields$i5, _fields$i5$accessory;
          setAccUOMError(`${t("TL_FILL_CORRECT_UOM_VALUE")} ${fields === null || fields === void 0 ? void 0 : (_fields$i4 = fields[i]) === null || _fields$i4 === void 0 ? void 0 : (_fields$i4$accessory = _fields$i4.accessory) === null || _fields$i4$accessory === void 0 ? void 0 : _fields$i4$accessory.fromUom} - ${fields === null || fields === void 0 ? void 0 : (_fields$i5 = fields[i]) === null || _fields$i5 === void 0 ? void 0 : (_fields$i5$accessory = _fields$i5.accessory) === null || _fields$i5$accessory === void 0 ? void 0 : _fields$i5$accessory.toUom}`);
          window.setTimeout(function () {
            window.scrollTo(0, 0);
          }, 0);
        }
      }
      if (fields !== null && fields !== void 0 && (_fields$i6 = fields[i]) !== null && _fields$i6 !== void 0 && _fields$i6.accessory && Number.isInteger(fields === null || fields === void 0 ? void 0 : (_fields$i7 = fields[i]) === null || _fields$i7 === void 0 ? void 0 : (_fields$i7$accessory = _fields$i7.accessory) === null || _fields$i7$accessory === void 0 ? void 0 : _fields$i7$accessory.toUom)) {
        var _fields$i8, _fields$i8$accessory;
        if (!(e.target.value && parseInt(e.target.value) <= (fields === null || fields === void 0 ? void 0 : (_fields$i8 = fields[i]) === null || _fields$i8 === void 0 ? void 0 : (_fields$i8$accessory = _fields$i8.accessory) === null || _fields$i8$accessory === void 0 ? void 0 : _fields$i8$accessory.toUom))) {
          var _fields$i9, _fields$i9$accessory, _fields$i10, _fields$i10$accessory;
          setAccUOMError(`${t("TL_FILL_CORRECT_UOM_VALUE")} ${fields === null || fields === void 0 ? void 0 : (_fields$i9 = fields[i]) === null || _fields$i9 === void 0 ? void 0 : (_fields$i9$accessory = _fields$i9.accessory) === null || _fields$i9$accessory === void 0 ? void 0 : _fields$i9$accessory.fromUom} - ${fields === null || fields === void 0 ? void 0 : (_fields$i10 = fields[i]) === null || _fields$i10 === void 0 ? void 0 : (_fields$i10$accessory = _fields$i10.accessory) === null || _fields$i10$accessory === void 0 ? void 0 : _fields$i10$accessory.toUom}`);
          window.setTimeout(function () {
            window.scrollTo(0, 0);
          }, 0);
        }
      }
    }
    let acc = [...fields];
    acc[i].uom = e.target.value;
    setUomValue(e.target.value);
    setFeilds(acc);
  }
  const goNext = () => {
    let data = formData.TradeDetails;
    let formdata;
    sessionStorage.setItem("VisitedAccessoriesDetails", true);
    formdata = {
      ...data,
      accessories: fields
    };
    onSelect(config.key, formdata);
  };
  function canMoveNext() {
    var _fields$, _fields$2, _fields$3, _fields$4;
    if (!(fields !== null && fields !== void 0 && (_fields$ = fields[0]) !== null && _fields$ !== void 0 && _fields$.accessory) || !(fields !== null && fields !== void 0 && (_fields$2 = fields[0]) !== null && _fields$2 !== void 0 && _fields$2.accessorycount) || fields !== null && fields !== void 0 && (_fields$3 = fields[0]) !== null && _fields$3 !== void 0 && _fields$3.unit && !(fields !== null && fields !== void 0 && (_fields$4 = fields[0]) !== null && _fields$4 !== void 0 && _fields$4.uom) || AccCountError || AccUOMError) return true;else return false;
  }
  const onSkip = () => onSelect();
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, null) : null, isLoading ? /*#__PURE__*/React.createElement(Loader, null) : /*#__PURE__*/React.createElement(FormStep, {
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    t: t,
    forcedError: t(AccCountError) || t(AccUOMError),
    isDisabled: canMoveNext()
  }, fields.map((field, index) => {
    return /*#__PURE__*/React.createElement("div", {
      key: `${field}-${index}`
    }, /*#__PURE__*/React.createElement("div", {
      style: {
        border: "solid",
        borderRadius: "5px",
        padding: "10px",
        paddingTop: "20px",
        marginTop: "10px",
        borderColor: "#f3f3f3",
        background: "#FAFAFA"
      }
    }, /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_ACCESSORY_LABEL")}*`), /*#__PURE__*/React.createElement(LinkButton, {
      label: /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement("svg", {
        style: {
          float: "right",
          position: "relative",
          bottom: "32px"
        },
        width: "24",
        height: "24",
        viewBox: "0 0 24 24",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
      }, /*#__PURE__*/React.createElement("path", {
        d: "M1 16C1 17.1 1.9 18 3 18H11C12.1 18 13 17.1 13 16V4H1V16ZM14 1H10.5L9.5 0H4.5L3.5 1H0V3H14V1Z",
        fill: !(fields.length == 1) ? "#494848" : "#FAFAFA"
      })))),
      style: {
        width: "100px",
        display: "inline"
      },
      onClick: e => handleRemove(index)
    }), !isLoading ? /*#__PURE__*/React.createElement(RadioOrSelect, {
      t: t,
      optionKey: "i18nKey",
      isMandatory: config.isMandatory,
      options: sortDropdownNames(accessories, "i18nKey", t) || [],
      selectedOption: field.accessory,
      onSelect: e => selectAccessory(index, e),
      isPTFlow: true
    }) : /*#__PURE__*/React.createElement(Loader, null), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_ACCESSORY_COUNT_LABEL")}*`), /*#__PURE__*/React.createElement(TextInput, Object.assign({
      style: {
        background: "#FAFAFA"
      },
      t: t,
      type: "text",
      isMandatory: false,
      optionKey: "i18nKey",
      name: "AccessoryCount",
      value: field.accessorycount,
      onChange: e => selectAccessoryCount(index, e),
      disable: isRenewTrade || isEditTrade ? !enableUOM : false
    }, validation = {
      isRequired: true,
      pattern: "[0-9]+",
      type: "text",
      title: t("TL_WRONG_UOM_COUNT_ERROR")
    })), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_UNIT_OF_MEASURE_LABEL")}`), /*#__PURE__*/React.createElement(TextInput, {
      style: {
        background: "#FAFAFA"
      },
      t: t,
      type: "text",
      isMandatory: false,
      optionKey: "i18nKey",
      name: "UnitOfMeasure",
      value: field.unit,
      onChange: e => selectUnitOfMeasure(index, e),
      disable: true
    }), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_NEW_TRADE_DETAILS_UOM_VALUE_LABEL")}*`), /*#__PURE__*/React.createElement(TextInput, Object.assign({
      style: {
        background: "#FAFAFA"
      },
      t: t,
      type: "text",
      isMandatory: false,
      optionKey: "i18nKey",
      name: "UomValue",
      value: field.uom,
      onChange: e => selectUomValue(index, e),
      disable: isRenewTrade || isEditTrade ? !enableUOM : false
    }, validation = {
      isRequired: true,
      pattern: "[0-9]+",
      type: "text",
      title: t("TL_WRONG_UOM_VALUE_ERROR")
    }))));
  }), /*#__PURE__*/React.createElement("div", {
    style: {
      justifyContent: "center",
      display: "flex",
      paddingBottom: "15px",
      color: "#FF8C00"
    }
  }, /*#__PURE__*/React.createElement("button", {
    type: "button",
    style: {
      paddingTop: "10px"
    },
    onClick: () => handleAdd()
  }, `${t("TL_ADD_MORE_TRADE_ACC")}`))));
};

const PDFSvg = ({
  width: _width = 20,
  height: _height = 20,
  style
}) => /*#__PURE__*/React.createElement("svg", {
  style: style,
  xmlns: "http://www.w3.org/2000/svg",
  width: _width,
  height: _height,
  viewBox: "0 0 20 20",
  fill: "gray"
}, /*#__PURE__*/React.createElement("path", {
  d: "M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.5 7.5c0 .83-.67 1.5-1.5 1.5H9v2H7.5V7H10c.83 0 1.5.67 1.5 1.5v1zm5 2c0 .83-.67 1.5-1.5 1.5h-2.5V7H15c.83 0 1.5.67 1.5 1.5v3zm4-3H19v1h1.5V11H19v2h-1.5V7h3v1.5zM9 9.5h1v-1H9v1zM4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm10 5.5h1v-3h-1v3z"
}));
function TLDocument({
  value = {}
}) {
  var _value$tradeLicenseDe, _value$owners, _value$owners2, _value$owners3, _documents;
  const {
    t
  } = useTranslation();
  const {
    isLoading,
    isError,
    error,
    data
  } = Digit.Hooks.tl.useTLDocumentSearch({
    value
  }, {
    value
  });
  let documents = window.location.href.includes("/tl/tradelicence/application/") ? value === null || value === void 0 ? void 0 : (_value$tradeLicenseDe = value.tradeLicenseDetail) === null || _value$tradeLicenseDe === void 0 ? void 0 : _value$tradeLicenseDe.applicationDocuments : [];
  if (value !== null && value !== void 0 && value.workflowDocs) documents = value === null || value === void 0 ? void 0 : value.workflowDocs;
  if (value !== null && value !== void 0 && (_value$owners = value.owners) !== null && _value$owners !== void 0 && _value$owners.documents["ProofOfIdentity"]) documents.push(value.owners.documents["ProofOfIdentity"]);
  if (value !== null && value !== void 0 && (_value$owners2 = value.owners) !== null && _value$owners2 !== void 0 && _value$owners2.documents["ProofOfOwnership"]) documents.push(value.owners.documents["ProofOfOwnership"]);
  if (value !== null && value !== void 0 && (_value$owners3 = value.owners) !== null && _value$owners3 !== void 0 && _value$owners3.documents["OwnerPhotoProof"]) documents.push(value.owners.documents["OwnerPhotoProof"]);
  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }
  return /*#__PURE__*/React.createElement("div", {
    style: {
      marginTop: "19px"
    }
  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      display: "flex",
      flexWrap: "wrap"
    }
  }, (_documents = documents) === null || _documents === void 0 ? void 0 : _documents.map((document, index) => {
    let documentLink = pdfDownloadLink(data.pdfFiles, document === null || document === void 0 ? void 0 : document.fileStoreId);
    return /*#__PURE__*/React.createElement("a", {
      target: "_",
      href: documentLink,
      style: {
        minWidth: "100px",
        marginRight: "10px"
      },
      key: index
    }, /*#__PURE__*/React.createElement(PDFSvg, {
      width: 85,
      height: 100,
      style: {
        background: "#f6f6f6",
        padding: "8px"
      }
    }), /*#__PURE__*/React.createElement("p", {
      style: {
        marginTop: "8px",
        textAlign: "center"
      }
    }, value !== null && value !== void 0 && value.workflowDocs ? t(`${document === null || document === void 0 ? void 0 : document.documentType}`) : t(`TL_${document === null || document === void 0 ? void 0 : document.documentType}_LABEL`)));
  }))));
}

const getPath = (path, params) => {
  params && Object.keys(params).map(key => {
    path = path.replace(`:${key}`, params[key]);
  });
  return path;
};
const CheckPage = props => {
  if (localStorage.getItem("TLAppSubmitEnabled") !== "true") {
    window.location.replace("/digit-ui/citizen");
    return null;
  }
  return /*#__PURE__*/React.createElement(WrapCheckPage, props);
};
const WrapCheckPage = ({
  onSubmit,
  value
}) => {
  var _TradeDetails$Vehicle, _TradeDetails$Buildin, _TradeDetails$isAcces, _TradeDetails$isAcces2, _cpt$details$property, _cpt$details, _cpt$details$address, _cpt$details$address$, _cpt$details2, _cpt$details2$address, _cpt$details2$address2, _cpt$details3, _cpt$details3$address, _cpt$details3$address2, _cpt$details4, _cpt$details4$address, _cpt$details4$address2, _cpt$details5, _cpt$details5$address, _cpt$details5$address2, _cpt$details6, _cpt$details6$address, _cpt$details6$address2, _cpt$details7, _cpt$details7$address, _cpt$details7$address2, _cpt$details8, _cpt$details8$address, _cpt$details9, _cpt$details9$address, _cpt$details9$address2, _cpt$details10, _cpt$details10$addres, _cpt$details10$addres2, _address$doorNo, _address$doorNo2, _address$street, _address$street2, _address$locality, _address$pincode, _address$pincode2, _cpt$details11, _value$tradeLicenseDe, _value$tradeLicenseDe2, _cpt$details12;
  let isEdit = window.location.href.includes("renew-trade");
  const {
    t
  } = useTranslation();
  const history = useHistory();
  const match = useRouteMatch();
  const [toast, setToast] = useState(null);
  const {
    TradeDetails,
    address,
    owners,
    propertyType,
    subtype,
    pitType,
    pitDetail,
    isEditProperty,
    cpt,
    cptId
  } = value;
  const {
    data: billingSlabTradeTypeData,
    isLoading: isBillingSlabLoading
  } = Digit.Hooks.tl.useTradeLicenseBillingslab({
    tenantId: (value === null || value === void 0 ? void 0 : value.tenantId) || Digit.ULBService.getCurrentTenantId(),
    filters: {}
  }, {
    select: data => {
      return data === null || data === void 0 ? void 0 : data.billingSlab.filter(e => e.tradeType && e.applicationType === (window.location.href.includes("renew-trade") ? "RENEWAL" : "NEW") && e.licenseType === "PERMANENT" && e.uom);
    }
  });
  function getdate(date) {
    let newdate = Date.parse(date);
    return `${new Date(newdate).getDate().toString() + "/" + (new Date(newdate).getMonth() + 1).toString() + "/" + new Date(newdate).getFullYear().toString()}`;
  }
  useEffect(() => {
    return () => {
      localStorage.setItem("TLAppSubmitEnabled", "false");
    };
  }, []);
  function routeTo(jumpTo) {
    sessionStorage.getItem("isDirectRenewal") ? sessionStorage.removeItem("isDirectRenewal") : "";
    history.push(jumpTo);
  }
  useEffect(() => {
    if (sessionStorage.getItem("isCreateEnabledEmployee") === "true") {
      sessionStorage.removeItem("isCreateEnabledEmployee");
      history.replace("/employee");
    } else sessionStorage.removeItem("isCreateEnabledEmployee");
  });
  const CheckForBillingSlab = () => {
    if (window.location.href.includes("renew-trade") && value) {
      var _value$TradeDetails, _value$TradeDetails$u;
      let flag = true;
      value === null || value === void 0 ? void 0 : (_value$TradeDetails = value.TradeDetails) === null || _value$TradeDetails === void 0 ? void 0 : (_value$TradeDetails$u = _value$TradeDetails.units) === null || _value$TradeDetails$u === void 0 ? void 0 : _value$TradeDetails$u.map(val => {
        var _billingSlabTradeType;
        if (val && (billingSlabTradeTypeData === null || billingSlabTradeTypeData === void 0 ? void 0 : (_billingSlabTradeType = billingSlabTradeTypeData.filter(ob => {
          var _val$tradesubtype, _value$TradeDetails2, _value$TradeDetails2$, _value$TradeDetails3, _value$TradeDetails3$;
          return (ob === null || ob === void 0 ? void 0 : ob.tradeType) === (val === null || val === void 0 ? void 0 : (_val$tradesubtype = val.tradesubtype) === null || _val$tradesubtype === void 0 ? void 0 : _val$tradesubtype.code) && ((ob === null || ob === void 0 ? void 0 : ob.structureType) === (value === null || value === void 0 ? void 0 : (_value$TradeDetails2 = value.TradeDetails) === null || _value$TradeDetails2 === void 0 ? void 0 : (_value$TradeDetails2$ = _value$TradeDetails2.VehicleType) === null || _value$TradeDetails2$ === void 0 ? void 0 : _value$TradeDetails2$.code) || (ob === null || ob === void 0 ? void 0 : ob.structureType) === (value === null || value === void 0 ? void 0 : (_value$TradeDetails3 = value.TradeDetails) === null || _value$TradeDetails3 === void 0 ? void 0 : (_value$TradeDetails3$ = _value$TradeDetails3.BuildingType) === null || _value$TradeDetails3$ === void 0 ? void 0 : _value$TradeDetails3$.code));
        })) === null || _billingSlabTradeType === void 0 ? void 0 : _billingSlabTradeType.length) <= 0) {
          flag = false;
          setToast({
            key: "error",
            message: "TL_BILLING_SLAB_NOT_FOUND_FOR_COMB"
          });
        }
      });
      if (flag) onSubmit();
    } else onSubmit();
  };
  const typeOfApplication = !isEditProperty ? `new-application` : `renew-trade`;
  let routeLink = `/digit-ui/citizen/tl/tradelicence/${typeOfApplication}`;
  if (window.location.href.includes("edit-application") || window.location.href.includes("renew-trade")) {
    routeLink = `${getPath(match.path, match.params)}`;
    routeLink = routeLink.replace("/check", "");
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, {
    currentStep: 4
  }) : null, /*#__PURE__*/React.createElement(Header, {
    styles: {
      fontSize: "32px"
    }
  }, t("TL_COMMON_SUMMARY")), /*#__PURE__*/React.createElement(Card, {
    style: {
      paddingRight: "16px"
    }
  }, /*#__PURE__*/React.createElement(CardHeader, {
    styles: {
      fontSize: "28px"
    }
  }, t("TL_LOCALIZATION_TRADE_DETAILS")), /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(LinkButton, {
    label: /*#__PURE__*/React.createElement(EditIcon, {
      style: {
        marginTop: "-10px",
        float: "right",
        position: "relative",
        bottom: "32px"
      }
    }),
    style: {
      width: "100px",
      display: "inline"
    },
    onClick: () => routeTo(`${routeLink}/TradeName`)
  }), /*#__PURE__*/React.createElement(Row, {
    className: "border-none",
    textStyle: {
      marginRight: "-10px"
    },
    label: t("TL_LOCALIZATION_TRADE_NAME"),
    text: t(TradeDetails === null || TradeDetails === void 0 ? void 0 : TradeDetails.TradeName)
  }), /*#__PURE__*/React.createElement(Row, {
    className: "border-none",
    label: t("TL_STRUCTURE_TYPE"),
    text: t(`TL_${TradeDetails === null || TradeDetails === void 0 ? void 0 : TradeDetails.StructureType.code}`)
  }), /*#__PURE__*/React.createElement(Row, {
    className: "border-none",
    label: t("TL_STRUCTURE_SUB_TYPE"),
    text: t((TradeDetails === null || TradeDetails === void 0 ? void 0 : TradeDetails.StructureType.code) !== "IMMOVABLE" ? TradeDetails === null || TradeDetails === void 0 ? void 0 : (_TradeDetails$Vehicle = TradeDetails.VehicleType) === null || _TradeDetails$Vehicle === void 0 ? void 0 : _TradeDetails$Vehicle.i18nKey : TradeDetails === null || TradeDetails === void 0 ? void 0 : (_TradeDetails$Buildin = TradeDetails.BuildingType) === null || _TradeDetails$Buildin === void 0 ? void 0 : _TradeDetails$Buildin.i18nKey)
  }), /*#__PURE__*/React.createElement(Row, {
    className: "border-none",
    label: t("TL_TRADE_GST_NO"),
    text: (TradeDetails === null || TradeDetails === void 0 ? void 0 : TradeDetails.TradeGSTNumber) || t("CS_NA")
  }), /*#__PURE__*/React.createElement(Row, {
    className: "border-none",
    label: t("TL_OPERATIONAL_AREA"),
    text: (TradeDetails === null || TradeDetails === void 0 ? void 0 : TradeDetails.OperationalSqFtArea) || t("CS_NA")
  }), /*#__PURE__*/React.createElement(Row, {
    className: "border-none",
    label: t("TL_NO_OF_EMPLOYEES"),
    text: (TradeDetails === null || TradeDetails === void 0 ? void 0 : TradeDetails.NumberOfEmployees) || t("CS_NA")
  }), /*#__PURE__*/React.createElement(Row, {
    className: "border-none",
    label: t("TL_NEW_TRADE_DETAILS_TRADE_COMM_DATE_LABEL"),
    text: t(getdate(TradeDetails === null || TradeDetails === void 0 ? void 0 : TradeDetails.CommencementDate))
  }), TradeDetails === null || TradeDetails === void 0 ? void 0 : TradeDetails.units.map((unit, index) => {
    var _unit$tradecategory, _unit$tradetype, _unit$tradesubtype;
    return /*#__PURE__*/React.createElement("div", {
      key: index
    }, /*#__PURE__*/React.createElement(CardSubHeader, null, t("TL_UNIT_HEADER"), "-", index + 1), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_NEW_TRADE_DETAILS_TRADE_CAT_LABEL"),
      text: t(unit === null || unit === void 0 ? void 0 : (_unit$tradecategory = unit.tradecategory) === null || _unit$tradecategory === void 0 ? void 0 : _unit$tradecategory.i18nKey)
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_NEW_TRADE_DETAILS_TRADE_TYPE_LABEL"),
      text: t(unit === null || unit === void 0 ? void 0 : (_unit$tradetype = unit.tradetype) === null || _unit$tradetype === void 0 ? void 0 : _unit$tradetype.i18nKey)
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_NEW_TRADE_DETAILS_TRADE_SUBTYPE_LABEL"),
      text: t(unit === null || unit === void 0 ? void 0 : (_unit$tradesubtype = unit.tradesubtype) === null || _unit$tradesubtype === void 0 ? void 0 : _unit$tradesubtype.i18nKey)
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_UNIT_OF_MEASURE_LABEL"),
      text: `${unit !== null && unit !== void 0 && unit.unit ? t(unit === null || unit === void 0 ? void 0 : unit.unit) : t("CS_NA")}`
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_NEW_TRADE_DETAILS_UOM_VALUE_LABEL"),
      text: `${unit !== null && unit !== void 0 && unit.uom ? t(unit === null || unit === void 0 ? void 0 : unit.uom) : t("CS_NA")}`
    }));
  }), (TradeDetails === null || TradeDetails === void 0 ? void 0 : TradeDetails.accessories) && (TradeDetails === null || TradeDetails === void 0 ? void 0 : (_TradeDetails$isAcces = TradeDetails.isAccessories) === null || _TradeDetails$isAcces === void 0 ? void 0 : (_TradeDetails$isAcces2 = _TradeDetails$isAcces.i18nKey) === null || _TradeDetails$isAcces2 === void 0 ? void 0 : _TradeDetails$isAcces2.includes("YES")) && (TradeDetails === null || TradeDetails === void 0 ? void 0 : TradeDetails.accessories.map((acc, index) => {
    var _acc$accessory;
    return /*#__PURE__*/React.createElement("div", {
      key: index
    }, /*#__PURE__*/React.createElement(CardSubHeader, null, t("TL_ACCESSORY_LABEL"), "-", index + 1), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_TRADE_ACC_HEADER"),
      text: t(acc === null || acc === void 0 ? void 0 : (_acc$accessory = acc.accessory) === null || _acc$accessory === void 0 ? void 0 : _acc$accessory.i18nKey)
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_NEW_TRADE_ACCESSORY_COUNT"),
      text: t(acc === null || acc === void 0 ? void 0 : acc.accessorycount)
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_ACC_UOM_LABEL"),
      text: `${acc !== null && acc !== void 0 && acc.unit ? t(acc === null || acc === void 0 ? void 0 : acc.unit) : t("CS_NA")}`
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_ACC_UOM_VALUE_LABEL"),
      text: `${acc !== null && acc !== void 0 && acc.unit ? t(acc === null || acc === void 0 ? void 0 : acc.uom) : t("CS_NA")}`
    }));
  })))), !((TradeDetails === null || TradeDetails === void 0 ? void 0 : TradeDetails.StructureType.code) === "MOVABLE") && /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(CardHeader, {
    styles: {
      fontSize: "28px"
    }
  }, t("TL_NEW_TRADE_DETAILS_HEADER_TRADE_LOC_DETAILS")), cpt && cpt.details && cpt.details.propertyId ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LinkButton, {
    label: /*#__PURE__*/React.createElement(EditIcon, {
      style: {
        marginTop: "-10px",
        float: "right",
        position: "relative",
        bottom: "32px"
      }
    }),
    style: {
      width: "100px",
      display: "inline"
    },
    onClick: () => routeTo(`${routeLink}/know-your-property`)
  }), /*#__PURE__*/React.createElement(Row, {
    className: "border-none",
    textStyle: {
      marginRight: "-10px"
    },
    label: t("TL_PROPERTY_ID"),
    text: `${(_cpt$details$property = cpt.details.propertyId) === null || _cpt$details$property === void 0 ? void 0 : _cpt$details$property.trim()}`
  }), /*#__PURE__*/React.createElement(Row, {
    className: "border-none",
    label: t("TL_CHECK_ADDRESS"),
    text: `${(_cpt$details = cpt.details) !== null && _cpt$details !== void 0 && (_cpt$details$address = _cpt$details.address) !== null && _cpt$details$address !== void 0 && (_cpt$details$address$ = _cpt$details$address.doorNo) !== null && _cpt$details$address$ !== void 0 && _cpt$details$address$.trim() ? `${(_cpt$details2 = cpt.details) === null || _cpt$details2 === void 0 ? void 0 : (_cpt$details2$address = _cpt$details2.address) === null || _cpt$details2$address === void 0 ? void 0 : (_cpt$details2$address2 = _cpt$details2$address.doorNo) === null || _cpt$details2$address2 === void 0 ? void 0 : _cpt$details2$address2.trim()}, ` : ""} ${(_cpt$details3 = cpt.details) !== null && _cpt$details3 !== void 0 && (_cpt$details3$address = _cpt$details3.address) !== null && _cpt$details3$address !== void 0 && (_cpt$details3$address2 = _cpt$details3$address.street) !== null && _cpt$details3$address2 !== void 0 && _cpt$details3$address2.trim() ? `${(_cpt$details4 = cpt.details) === null || _cpt$details4 === void 0 ? void 0 : (_cpt$details4$address = _cpt$details4.address) === null || _cpt$details4$address === void 0 ? void 0 : (_cpt$details4$address2 = _cpt$details4$address.street) === null || _cpt$details4$address2 === void 0 ? void 0 : _cpt$details4$address2.trim()}, ` : ""} ${(_cpt$details5 = cpt.details) !== null && _cpt$details5 !== void 0 && (_cpt$details5$address = _cpt$details5.address) !== null && _cpt$details5$address !== void 0 && (_cpt$details5$address2 = _cpt$details5$address.buildingName) !== null && _cpt$details5$address2 !== void 0 && _cpt$details5$address2.trim() ? `${(_cpt$details6 = cpt.details) === null || _cpt$details6 === void 0 ? void 0 : (_cpt$details6$address = _cpt$details6.address) === null || _cpt$details6$address === void 0 ? void 0 : (_cpt$details6$address2 = _cpt$details6$address.buildingName) === null || _cpt$details6$address2 === void 0 ? void 0 : _cpt$details6$address2.trim()}, ` : ""}
              ${t((_cpt$details7 = cpt.details) === null || _cpt$details7 === void 0 ? void 0 : (_cpt$details7$address = _cpt$details7.address) === null || _cpt$details7$address === void 0 ? void 0 : (_cpt$details7$address2 = _cpt$details7$address.locality) === null || _cpt$details7$address2 === void 0 ? void 0 : _cpt$details7$address2.name)}, ${t((_cpt$details8 = cpt.details) === null || _cpt$details8 === void 0 ? void 0 : (_cpt$details8$address = _cpt$details8.address) === null || _cpt$details8$address === void 0 ? void 0 : _cpt$details8$address.city)} ${(_cpt$details9 = cpt.details) !== null && _cpt$details9 !== void 0 && (_cpt$details9$address = _cpt$details9.address) !== null && _cpt$details9$address !== void 0 && (_cpt$details9$address2 = _cpt$details9$address.pincode) !== null && _cpt$details9$address2 !== void 0 && _cpt$details9$address2.trim() ? `,${(_cpt$details10 = cpt.details) === null || _cpt$details10 === void 0 ? void 0 : (_cpt$details10$addres = _cpt$details10.address) === null || _cpt$details10$addres === void 0 ? void 0 : (_cpt$details10$addres2 = _cpt$details10$addres.pincode) === null || _cpt$details10$addres2 === void 0 ? void 0 : _cpt$details10$addres2.trim()}` : ""}`
  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LinkButton, {
    label: /*#__PURE__*/React.createElement(EditIcon, {
      style: {
        marginTop: "-10px",
        float: "right",
        position: "relative",
        bottom: "32px"
      }
    }),
    style: {
      width: "100px",
      display: "inline"
    },
    onClick: () => routeTo(`${routeLink}/map`)
  }), /*#__PURE__*/React.createElement(Row, {
    className: "border-none",
    label: t("TL_CHECK_ADDRESS"),
    text: `${address !== null && address !== void 0 && (_address$doorNo = address.doorNo) !== null && _address$doorNo !== void 0 && _address$doorNo.trim() ? `${address === null || address === void 0 ? void 0 : (_address$doorNo2 = address.doorNo) === null || _address$doorNo2 === void 0 ? void 0 : _address$doorNo2.trim()}, ` : ""} ${address !== null && address !== void 0 && (_address$street = address.street) !== null && _address$street !== void 0 && _address$street.trim() ? `${address === null || address === void 0 ? void 0 : (_address$street2 = address.street) === null || _address$street2 === void 0 ? void 0 : _address$street2.trim()}, ` : ""}${t(address === null || address === void 0 ? void 0 : (_address$locality = address.locality) === null || _address$locality === void 0 ? void 0 : _address$locality.i18nkey)}, ${t(address === null || address === void 0 ? void 0 : address.city.code)} ${address !== null && address !== void 0 && (_address$pincode = address.pincode) !== null && _address$pincode !== void 0 && _address$pincode.trim() ? `,${address === null || address === void 0 ? void 0 : (_address$pincode2 = address.pincode) === null || _address$pincode2 === void 0 ? void 0 : _address$pincode2.trim()}` : ""}`
  }))), /*#__PURE__*/React.createElement("div", {
    style: {
      textAlign: "left"
    }
  }, /*#__PURE__*/React.createElement(Link, {
    to: `/digit-ui/citizen/commonpt/view-property?propertyId=${(cpt === null || cpt === void 0 ? void 0 : (_cpt$details11 = cpt.details) === null || _cpt$details11 === void 0 ? void 0 : _cpt$details11.propertyId) || (cptId === null || cptId === void 0 ? void 0 : cptId.id) || (value === null || value === void 0 ? void 0 : (_value$tradeLicenseDe = value.tradeLicenseDetail) === null || _value$tradeLicenseDe === void 0 ? void 0 : (_value$tradeLicenseDe2 = _value$tradeLicenseDe.additionalDetail) === null || _value$tradeLicenseDe2 === void 0 ? void 0 : _value$tradeLicenseDe2.propertyId)}&tenantId=${(cpt === null || cpt === void 0 ? void 0 : (_cpt$details12 = cpt.details) === null || _cpt$details12 === void 0 ? void 0 : _cpt$details12.tenantId) || (value === null || value === void 0 ? void 0 : value.tenantId)}`
  }, /*#__PURE__*/React.createElement(LinkButton, {
    style: {
      textAlign: "left"
    },
    label: t("TL_VIEW_PROPERTY")
  })))), /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(CardHeader, {
    styles: {
      fontSize: "28px"
    }
  }, t("TL_NEW_OWNER_DETAILS_HEADER")), /*#__PURE__*/React.createElement(LinkButton, {
    label: /*#__PURE__*/React.createElement(EditIcon, {
      style: {
        marginTop: "-10px",
        float: "right",
        position: "relative",
        bottom: "32px"
      }
    }),
    style: {
      width: "100px",
      display: "inline"
    },
    onClick: () => routeTo(`${routeLink}/owner-details`)
  }), owners.owners && owners.owners.map((owner, index) => {
    var _owner$gender, _owner$relationship;
    return /*#__PURE__*/React.createElement("div", {
      key: index
    }, /*#__PURE__*/React.createElement(CardSubHeader, null, t("TL_PAYMENT_PAID_BY_PLACEHOLDER"), "-", index + 1), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_COMMON_TABLE_COL_OWN_NAME"),
      text: t(owner === null || owner === void 0 ? void 0 : owner.name)
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_NEW_OWNER_DETAILS_GENDER_LABEL"),
      text: t(owner === null || owner === void 0 ? void 0 : (_owner$gender = owner.gender) === null || _owner$gender === void 0 ? void 0 : _owner$gender.i18nKey) || t("CS_NA")
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_MOBILE_NUMBER_LABEL"),
      text: t(owner === null || owner === void 0 ? void 0 : owner.mobilenumber)
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_GUARDIAN_S_NAME_LABEL"),
      text: t(owner === null || owner === void 0 ? void 0 : owner.fatherOrHusbandName) || t("CS_NA")
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_RELATIONSHIP_WITH_GUARDIAN_LABEL"),
      text: t(owner === null || owner === void 0 ? void 0 : (_owner$relationship = owner.relationship) === null || _owner$relationship === void 0 ? void 0 : _owner$relationship.i18nKey) || t("CS_NA")
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_CORRESPONDENCE_ADDRESS"),
      labelStyle: {
        marginRight: "2px"
      },
      text: t(owners === null || owners === void 0 ? void 0 : owners.permanentAddress) || t("CS_NA")
    }));
  }))), /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(CardHeader, {
    styles: {
      fontSize: "28px"
    }
  }, t("TL_COMMON_DOCS")), /*#__PURE__*/React.createElement(LinkButton, {
    label: /*#__PURE__*/React.createElement(EditIcon, {
      style: {
        marginTop: "-10px",
        float: "right",
        position: "relative",
        bottom: "32px"
      }
    }),
    style: {
      width: "100px",
      display: "inline"
    },
    onClick: () => routeTo(`${routeLink}/proof-of-identity`)
  }), /*#__PURE__*/React.createElement("div", null, owners !== null && owners !== void 0 && owners.documents["OwnerPhotoProof"] || owners !== null && owners !== void 0 && owners.documents["ProofOfIdentity"] || owners !== null && owners !== void 0 && owners.documents["ProofOfOwnership"] ? /*#__PURE__*/React.createElement(TLDocument, {
    value: value
  }) : /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
    className: "border-none",
    text: t("TL_NO_DOCUMENTS_MSG")
  })))), toast && /*#__PURE__*/React.createElement(Toast, {
    error: toast.key === "error",
    label: t(toast.message),
    onClose: () => setToast(null),
    style: {
      maxWidth: "670px"
    },
    isDleteBtn: true
  }), /*#__PURE__*/React.createElement(SubmitBar, {
    label: t("CS_COMMON_SUBMIT"),
    onSubmit: CheckForBillingSlab
  })));
};

const capitalize = text => text.substr(0, 1).toUpperCase() + text.substr(1);
const ulbCamel = ulb => ulb.toLowerCase().split(" ").map(capitalize).join(" ");
const getOwnerDetails = (application, t) => {
  var _application$tradeLic, _application$tradeLic2, _application$tradeLic3;
  application.owners = (application === null || application === void 0 ? void 0 : (_application$tradeLic = application.tradeLicenseDetail) === null || _application$tradeLic === void 0 ? void 0 : (_application$tradeLic2 = _application$tradeLic.owners) === null || _application$tradeLic2 === void 0 ? void 0 : _application$tradeLic2.filter(owner => owner.active == true)) || [];
  if ((application === null || application === void 0 ? void 0 : (_application$tradeLic3 = application.tradeLicenseDetail) === null || _application$tradeLic3 === void 0 ? void 0 : _application$tradeLic3.subOwnerShipCategory) == "INDIVIDUAL.SINGLEOWNER") {
    var _application$tradeLic4, _application$tradeLic5, _application$tradeLic6, _application$tradeLic7, _application$tradeLic8, _application$tradeLic9, _application$tradeLic10, _application$tradeLic11, _application$tradeLic12, _application$tradeLic13, _application$tradeLic14, _application$tradeLic15, _application$tradeLic16, _application$tradeLic17;
    return {
      title: t("TL_OWNERSHIP_DETAILS_HEADER"),
      values: [{
        title: t("TL_OWNER_S_NAME_LABEL"),
        value: (application === null || application === void 0 ? void 0 : (_application$tradeLic4 = application.tradeLicenseDetail) === null || _application$tradeLic4 === void 0 ? void 0 : (_application$tradeLic5 = _application$tradeLic4.owners[0]) === null || _application$tradeLic5 === void 0 ? void 0 : _application$tradeLic5.name) || t("CS_NA")
      }, {
        title: t("TL_OWNER_S_MOBILE_NUM_LABEL"),
        value: (application === null || application === void 0 ? void 0 : (_application$tradeLic6 = application.tradeLicenseDetail) === null || _application$tradeLic6 === void 0 ? void 0 : (_application$tradeLic7 = _application$tradeLic6.owners[0]) === null || _application$tradeLic7 === void 0 ? void 0 : _application$tradeLic7.mobileNumber) || t("CS_NA")
      }, {
        title: t("TL_NEW_OWNER_DETAILS_GENDER_LABEL"),
        value: t(application === null || application === void 0 ? void 0 : (_application$tradeLic8 = application.tradeLicenseDetail) === null || _application$tradeLic8 === void 0 ? void 0 : (_application$tradeLic9 = _application$tradeLic8.owners[0]) === null || _application$tradeLic9 === void 0 ? void 0 : _application$tradeLic9.gender) || t("CS_NA")
      }, {
        title: t("TL_NEW_OWNER_DETAILS_EMAIL_LABEL"),
        value: (application === null || application === void 0 ? void 0 : (_application$tradeLic10 = application.tradeLicenseDetail) === null || _application$tradeLic10 === void 0 ? void 0 : (_application$tradeLic11 = _application$tradeLic10.owners[0]) === null || _application$tradeLic11 === void 0 ? void 0 : _application$tradeLic11.emailId) || t("CS_NA")
      }, {
        title: t("TL_OWNER_SPECIAL_CATEGORY"),
        value: application !== null && application !== void 0 && (_application$tradeLic12 = application.tradeLicenseDetail) !== null && _application$tradeLic12 !== void 0 && (_application$tradeLic13 = _application$tradeLic12.owners[0]) !== null && _application$tradeLic13 !== void 0 && _application$tradeLic13.ownerType ? t(`COMMON_MASTERS_OWNERTYPE_${application === null || application === void 0 ? void 0 : (_application$tradeLic14 = application.tradeLicenseDetail) === null || _application$tradeLic14 === void 0 ? void 0 : (_application$tradeLic15 = _application$tradeLic14.owners[0]) === null || _application$tradeLic15 === void 0 ? void 0 : _application$tradeLic15.ownerType}`) : t("CS_NA")
      }, {
        title: t("TL_NEW_OWNER_DETAILS_ADDR_LABEL"),
        value: (application === null || application === void 0 ? void 0 : (_application$tradeLic16 = application.tradeLicenseDetail) === null || _application$tradeLic16 === void 0 ? void 0 : (_application$tradeLic17 = _application$tradeLic16.owners[0]) === null || _application$tradeLic17 === void 0 ? void 0 : _application$tradeLic17.permanentAddress) || t("CS_NA")
      }]
    };
  } else {
    let values = [];
    application === null || application === void 0 ? void 0 : application.tradeLicenseDetail.owners.map(owner => {
      let indOwner = [{
        title: t("TL_OWNER_S_NAME_LABEL"),
        value: (owner === null || owner === void 0 ? void 0 : owner.name) || t("CS_NA")
      }, {
        title: t("TL_OWNER_S_MOBILE_NUM_LABEL"),
        value: (owner === null || owner === void 0 ? void 0 : owner.mobileNumber) || t("CS_NA")
      }, {
        title: t("TL_NEW_OWNER_DETAILS_GENDER_LABEL"),
        value: t(owner === null || owner === void 0 ? void 0 : owner.gender) || t("CS_NA")
      }, {
        title: t("TL_NEW_OWNER_DETAILS_EMAIL_LABEL"),
        value: (owner === null || owner === void 0 ? void 0 : owner.emailId) || t("CS_NA")
      }, {
        title: t("TL_OWNER_SPECIAL_CATEGORY"),
        value: owner !== null && owner !== void 0 && owner.ownerType ? t(`COMMON_MASTERS_OWNERTYPE_${owner === null || owner === void 0 ? void 0 : owner.ownerType}`) : t("CS_NA")
      }, {
        title: t("TL_NEW_OWNER_DETAILS_ADDR_LABEL"),
        value: (owner === null || owner === void 0 ? void 0 : owner.permanentAddress) || t("CS_NA")
      }];
      values.push(...indOwner);
    });
    return {
      title: t("TL_OWNERSHIP_DETAILS_HEADER"),
      values: values
    };
  }
};
const getTradeDetails = (application, t) => {
  var _application$tradeLic18, _application$tradeLic19, _application$tradeLic20, _application$tradeLic21, _application$tradeLic22, _application$tradeLic23, _application$tradeLic24, _application$tradeLic25, _application$tradeLic26;
  return {
    title: t("TL_COMMON_TR_DETAILS"),
    values: [{
      title: t("TL_APPLICATION_TYPE"),
      value: t(`TRADELICENSE_APPLICATIONTYPE_${application === null || application === void 0 ? void 0 : application.applicationType}`) || t("CS_NA")
    }, {
      title: t("TL_NEW_TRADE_DETAILS_LIC_TYPE_LABEL"),
      value: application !== null && application !== void 0 && application.licenseType ? t(`TRADELICENSE_LICENSETYPE_${application === null || application === void 0 ? void 0 : application.licenseType}`) : t("CS_NA")
    }, {
      title: t("TL_COMMON_TABLE_COL_TRD_NAME"),
      value: (application === null || application === void 0 ? void 0 : application.tradeName) || t("CS_NA")
    }, {
      title: t("reports.tl.fromDate"),
      value: application !== null && application !== void 0 && application.validFrom ? Digit.DateUtils.ConvertTimestampToDate(application === null || application === void 0 ? void 0 : application.validFrom, "dd/MM/yyyy") : t("CS_NA")
    }, {
      title: t("reports.tl.toDate"),
      value: application !== null && application !== void 0 && application.validTo ? Digit.DateUtils.ConvertTimestampToDate(application === null || application === void 0 ? void 0 : application.validTo, "dd/MM/yyyy") : t("CS_NA")
    }, {
      title: t("TL_NEW_TRADE_DETAILS_STRUCT_TYPE_LABEL"),
      value: application !== null && application !== void 0 && (_application$tradeLic18 = application.tradeLicenseDetail) !== null && _application$tradeLic18 !== void 0 && _application$tradeLic18.structureType ? t(`COMMON_MASTERS_STRUCTURETYPE_${application === null || application === void 0 ? void 0 : (_application$tradeLic19 = application.tradeLicenseDetail) === null || _application$tradeLic19 === void 0 ? void 0 : (_application$tradeLic20 = _application$tradeLic19.structureType) === null || _application$tradeLic20 === void 0 ? void 0 : _application$tradeLic20.split('.')[0]}`) : t("CS_NA")
    }, {
      title: t("TL_NEW_TRADE_DETAILS_STRUCT_SUB_TYPE_LABEL"),
      value: application !== null && application !== void 0 && (_application$tradeLic21 = application.tradeLicenseDetail) !== null && _application$tradeLic21 !== void 0 && _application$tradeLic21.structureType ? t(`COMMON_MASTERS_STRUCTURETYPE_${stringReplaceAll(application === null || application === void 0 ? void 0 : (_application$tradeLic22 = application.tradeLicenseDetail) === null || _application$tradeLic22 === void 0 ? void 0 : _application$tradeLic22.structureType, ".", "_")}`) : t("CS_NA")
    }, {
      title: t("TL_NEW_TRADE_DETAILS_TRADE_COMM_DATE_LABEL"),
      value: Digit.DateUtils.ConvertTimestampToDate(application === null || application === void 0 ? void 0 : application.commencementDate, "dd/MM/yyyy") || t("CS_NA")
    }, {
      title: t("TL_NEW_GST_NUMBER_LABEL"),
      value: (application === null || application === void 0 ? void 0 : (_application$tradeLic23 = application.tradeLicenseDetail) === null || _application$tradeLic23 === void 0 ? void 0 : (_application$tradeLic24 = _application$tradeLic23.additionalDetail) === null || _application$tradeLic24 === void 0 ? void 0 : _application$tradeLic24.tradeGstNo) || t("CS_NA")
    }, {
      title: t("TL_NEW_OPERATIONAL_SQ_FT_AREA_LABEL"),
      value: (application === null || application === void 0 ? void 0 : (_application$tradeLic25 = application.tradeLicenseDetail) === null || _application$tradeLic25 === void 0 ? void 0 : _application$tradeLic25.operationalArea) || t("CS_NA")
    }, {
      title: t("TL_NEW_NUMBER_OF_EMPLOYEES_LABEL"),
      value: (application === null || application === void 0 ? void 0 : (_application$tradeLic26 = application.tradeLicenseDetail) === null || _application$tradeLic26 === void 0 ? void 0 : _application$tradeLic26.noOfEmployees) || t("CS_NA")
    }]
  };
};
const getAccessoriesDetails = (application, t) => {
  var _application$tradeLic27, _application$tradeLic28, _application$tradeLic29;
  let values = [];
  (_application$tradeLic27 = application.tradeLicenseDetail) === null || _application$tradeLic27 === void 0 ? void 0 : (_application$tradeLic28 = _application$tradeLic27.accessories) === null || _application$tradeLic28 === void 0 ? void 0 : (_application$tradeLic29 = _application$tradeLic28.filter(ob => (ob === null || ob === void 0 ? void 0 : ob.active) !== false)) === null || _application$tradeLic29 === void 0 ? void 0 : _application$tradeLic29.map(accessory => {
    let accessoryCategory = t("CS_NA");
    if (accessory !== null && accessory !== void 0 && accessory.accessoryCategory) {
      accessoryCategory = stringReplaceAll(accessory === null || accessory === void 0 ? void 0 : accessory.accessoryCategory, ".", "_");
      accessoryCategory = t(`TRADELICENSE_ACCESSORIESCATEGORY_${stringReplaceAll(accessoryCategory, "-", "_")}`);
    }
    let value = [{
      title: t("TL_NEW_TRADE_DETAILS_ACC_LABEL"),
      value: accessoryCategory
    }, {
      title: t("TL_NEW_TRADE_DETAILS_UOM_UOM_PLACEHOLDER"),
      value: (accessory === null || accessory === void 0 ? void 0 : accessory.uom) || t("CS_NA")
    }, {
      title: t("TL_NEW_TRADE_DETAILS_UOM_VALUE_LABEL"),
      value: (accessory === null || accessory === void 0 ? void 0 : accessory.uomValue) || t("CS_NA")
    }, {
      title: t("TL_ACCESSORY_COUNT_LABEL"),
      value: (accessory === null || accessory === void 0 ? void 0 : accessory.count) || t("CS_NA")
    }];
    values.push(...value);
  });
  return {
    title: "",
    values: values
  };
};
const getTradeUnitsDetails = (application, t) => {
  var _application$tradeLic30, _application$tradeLic31;
  let values = [];
  (_application$tradeLic30 = application.tradeLicenseDetail) === null || _application$tradeLic30 === void 0 ? void 0 : (_application$tradeLic31 = _application$tradeLic30.tradeUnits) === null || _application$tradeLic31 === void 0 ? void 0 : _application$tradeLic31.map(unit => {
    var _unit$tradeType, _unit$tradeType2;
    let tradeSubType = stringReplaceAll(unit === null || unit === void 0 ? void 0 : unit.tradeType, ".", "_");
    tradeSubType = stringReplaceAll(tradeSubType, "-", "_");
    let value = [{
      title: t("TRADELICENSE_TRADECATEGORY_LABEL"),
      value: unit !== null && unit !== void 0 && unit.tradeType ? t(`TRADELICENSE_TRADETYPE_${unit === null || unit === void 0 ? void 0 : (_unit$tradeType = unit.tradeType) === null || _unit$tradeType === void 0 ? void 0 : _unit$tradeType.split('.')[0]}`) : t("CS_NA")
    }, {
      title: t("TRADELICENSE_TRADETYPE_LABEL"),
      value: unit !== null && unit !== void 0 && unit.tradeType ? t(`TRADELICENSE_TRADETYPE_${unit === null || unit === void 0 ? void 0 : (_unit$tradeType2 = unit.tradeType) === null || _unit$tradeType2 === void 0 ? void 0 : _unit$tradeType2.split('.')[1]}`) : t("CS_NA")
    }, {
      title: t("TL_NEW_TRADE_SUB_TYPE_LABEL"),
      value: tradeSubType ? t(`TRADELICENSE_TRADETYPE_${tradeSubType}`) : t("CS_NA")
    }, {
      title: t("TL_NEW_TRADE_DETAILS_UOM_UOM_PLACEHOLDER"),
      value: (unit === null || unit === void 0 ? void 0 : unit.uom) || t("CS_NA")
    }, {
      title: t("TL_NEW_TRADE_DETAILS_UOM_VALUE_LABEL"),
      value: (unit === null || unit === void 0 ? void 0 : unit.uomValue) || t("CS_NA")
    }, {
      title: "",
      value: ""
    }, {
      title: "",
      value: ""
    }, {
      title: "",
      value: ""
    }];
    values.push(...value);
  });
  return {
    title: "",
    values: values
  };
};
const getAddressDetails = (application, t) => {
  var _application$tradeLic32, _application$tradeLic33, _application$tradeLic34, _application$tradeLic35, _application$tradeLic36, _application$tradeLic37, _application$tradeLic38, _application$tradeLic39, _application$tradeLic40, _application$tradeLic41, _application$tradeLic42;
  return {
    title: "",
    values: [{
      title: t("TL_PROPERTY_ID"),
      value: (application === null || application === void 0 ? void 0 : (_application$tradeLic32 = application.tradeLicenseDetail) === null || _application$tradeLic32 === void 0 ? void 0 : (_application$tradeLic33 = _application$tradeLic32.additionalDetail) === null || _application$tradeLic33 === void 0 ? void 0 : _application$tradeLic33.propertyId) || t("CS_NA")
    }, {
      title: t("CORE_COMMON_PINCODE"),
      value: (application === null || application === void 0 ? void 0 : (_application$tradeLic34 = application.tradeLicenseDetail) === null || _application$tradeLic34 === void 0 ? void 0 : (_application$tradeLic35 = _application$tradeLic34.address) === null || _application$tradeLic35 === void 0 ? void 0 : _application$tradeLic35.pincode) || t("CS_NA")
    }, {
      title: t("MYCITY_CODE_LABEL"),
      value: t(application === null || application === void 0 ? void 0 : (_application$tradeLic36 = application.tradeLicenseDetail) === null || _application$tradeLic36 === void 0 ? void 0 : (_application$tradeLic37 = _application$tradeLic36.address) === null || _application$tradeLic37 === void 0 ? void 0 : _application$tradeLic37.city) || t("CS_NA")
    }, {
      title: t("TL_LOCALIZATION_LOCALITY"),
      value: t(getTransaltedLocality(application === null || application === void 0 ? void 0 : (_application$tradeLic38 = application.tradeLicenseDetail) === null || _application$tradeLic38 === void 0 ? void 0 : _application$tradeLic38.address)) || t("CS_NA")
    }, {
      title: t("TL_LOCALIZATION_BUILDING_NO"),
      value: (application === null || application === void 0 ? void 0 : (_application$tradeLic39 = application.tradeLicenseDetail) === null || _application$tradeLic39 === void 0 ? void 0 : (_application$tradeLic40 = _application$tradeLic39.address) === null || _application$tradeLic40 === void 0 ? void 0 : _application$tradeLic40.doorNo) || t("CS_NA")
    }, {
      title: t("TL_LOCALIZATION_STREET_NAME"),
      value: (application === null || application === void 0 ? void 0 : (_application$tradeLic41 = application.tradeLicenseDetail) === null || _application$tradeLic41 === void 0 ? void 0 : (_application$tradeLic42 = _application$tradeLic41.address) === null || _application$tradeLic42 === void 0 ? void 0 : _application$tradeLic42.street) || t("CS_NA")
    }]
  };
};
const getPTAcknowledgementData = async (application, tenantInfo, t) => {
  var _application$tradeLic43, _application$tradeLic44, _tenantInfo$city, _tenantInfo$city2, _application$tradeLic45, _application$tradeLic46, _application$tradeLic47;
  const filesArray = application === null || application === void 0 ? void 0 : (_application$tradeLic43 = application.tradeLicenseDetail) === null || _application$tradeLic43 === void 0 ? void 0 : (_application$tradeLic44 = _application$tradeLic43.applicationDocuments) === null || _application$tradeLic44 === void 0 ? void 0 : _application$tradeLic44.map(value => value === null || value === void 0 ? void 0 : value.fileStoreId);
  let res;
  if (filesArray) {
    res = await Digit.UploadServices.Filefetch(filesArray, Digit.ULBService.getStateId());
  }
  return {
    t: t,
    tenantId: tenantInfo === null || tenantInfo === void 0 ? void 0 : tenantInfo.code,
    title: `${t(tenantInfo === null || tenantInfo === void 0 ? void 0 : tenantInfo.i18nKey)} ${ulbCamel(t(`ULBGRADE_${tenantInfo === null || tenantInfo === void 0 ? void 0 : (_tenantInfo$city = tenantInfo.city) === null || _tenantInfo$city === void 0 ? void 0 : _tenantInfo$city.ulbGrade.toUpperCase().replace(" ", "_").replace(".", "_")}`))}`,
    name: `${t(tenantInfo === null || tenantInfo === void 0 ? void 0 : tenantInfo.i18nKey)} ${ulbCamel(t(`ULBGRADE_${tenantInfo === null || tenantInfo === void 0 ? void 0 : (_tenantInfo$city2 = tenantInfo.city) === null || _tenantInfo$city2 === void 0 ? void 0 : _tenantInfo$city2.ulbGrade.toUpperCase().replace(" ", "_").replace(".", "_")}`))}`,
    email: "",
    phoneNumber: "",
    details: [getTradeDetails(application, t), getTradeUnitsDetails(application, t), getAccessoriesDetails(application, t), getAddressDetails(application, t), getOwnerDetails(application, t), {
      title: t("TL_COMMON_DOCS"),
      values: (application === null || application === void 0 ? void 0 : (_application$tradeLic45 = application.tradeLicenseDetail) === null || _application$tradeLic45 === void 0 ? void 0 : (_application$tradeLic46 = _application$tradeLic45.applicationDocuments) === null || _application$tradeLic46 === void 0 ? void 0 : _application$tradeLic46.length) > 0 ? application === null || application === void 0 ? void 0 : (_application$tradeLic47 = application.tradeLicenseDetail) === null || _application$tradeLic47 === void 0 ? void 0 : _application$tradeLic47.applicationDocuments.map((document, index) => {
        var _res;
        let documentLink = pdfDownloadLink((_res = res) === null || _res === void 0 ? void 0 : _res.data, document === null || document === void 0 ? void 0 : document.fileStoreId);
        return {
          title: t(`TL_NEW_${document === null || document === void 0 ? void 0 : document.documentType}` || t("CS_NA")),
          value: pdfDocumentName(documentLink, index) || t("CS_NA")
        };
      }) : []
    }]
  };
};

const GetActionMessage = props => {
  const {
    t
  } = useTranslation();
  if (props.isSuccess) {
    return !window.location.href.includes("renew-trade") || !window.location.href.includes("edit-application") ? t("CS_TRADE_APPLICATION_SUCCESS") : t("CS_TRADE_UPDATE_APPLICATION_SUCCESS");
  } else if (props.isLoading) {
    return !window.location.href.includes("renew-trade") || !window.location.href.includes("edit-application") ? t("CS_TRADE_APPLICATION_SUCCESS") : t("CS_TRADE_UPDATE_APPLICATION_PENDING");
  } else if (!props.isSuccess) {
    return !window.location.href.includes("renew-trade") || !window.location.href.includes("edit-application") ? t("CS_TRADE_APPLICATION_FAILED") : t("CS_TRADE_UPDATE_APPLICATION_FAILED");
  }
};
const BannerPicker = props => {
  var _props$data, _props$data$Licenses$;
  return /*#__PURE__*/React.createElement(Banner, {
    message: GetActionMessage(props),
    applicationNumber: (_props$data = props.data) === null || _props$data === void 0 ? void 0 : (_props$data$Licenses$ = _props$data.Licenses[0]) === null || _props$data$Licenses$ === void 0 ? void 0 : _props$data$Licenses$.applicationNumber,
    info: props.isSuccess ? props.t("TL_REF_NO_LABEL") : "",
    successful: props.isSuccess
  });
};
const TLAcknowledgement = ({
  data,
  onSuccess,
  onUpdateSuccess
}) => {
  var _data$cpt, _data$cpt$details, _data$cpt$details$add, _data$cpt2, _data$cpt2$details, _data$cpt2$details$ad, _data$cpt3, _data$cpt3$details, _data$cpt3$details$ad, _data$cpt4, _data$cpt4$details, _data$cpt4$details$ad, _data$cpt5, _data$cpt5$details, _data$cpt5$details$ad, _data$cpt6, _data$cpt6$details, _data$cpt6$details$ad, _mutation2$data, _mutation2$data$Licen;
  const {
    t
  } = useTranslation();
  const [mutationHappened, setMutationHappened, clear] = Digit.Hooks.useSessionStorage("CITIZEN_TL_MUTATION_HAPPENED", false);
  const resubmit = window.location.href.includes("edit-application");
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const isRenewTrade = !window.location.href.includes("renew-trade");
  const mutation = Digit.Hooks.tl.useTradeLicenseAPI(data !== null && data !== void 0 && (_data$cpt = data.cpt) !== null && _data$cpt !== void 0 && (_data$cpt$details = _data$cpt.details) !== null && _data$cpt$details !== void 0 && (_data$cpt$details$add = _data$cpt$details.address) !== null && _data$cpt$details$add !== void 0 && _data$cpt$details$add.tenantId ? data === null || data === void 0 ? void 0 : (_data$cpt2 = data.cpt) === null || _data$cpt2 === void 0 ? void 0 : (_data$cpt2$details = _data$cpt2.details) === null || _data$cpt2$details === void 0 ? void 0 : (_data$cpt2$details$ad = _data$cpt2$details.address) === null || _data$cpt2$details$ad === void 0 ? void 0 : _data$cpt2$details$ad.tenantId : tenantId, isRenewTrade);
  const mutation1 = Digit.Hooks.tl.useTradeLicenseAPI(data !== null && data !== void 0 && (_data$cpt3 = data.cpt) !== null && _data$cpt3 !== void 0 && (_data$cpt3$details = _data$cpt3.details) !== null && _data$cpt3$details !== void 0 && (_data$cpt3$details$ad = _data$cpt3$details.address) !== null && _data$cpt3$details$ad !== void 0 && _data$cpt3$details$ad.tenantId ? data === null || data === void 0 ? void 0 : (_data$cpt4 = data.cpt) === null || _data$cpt4 === void 0 ? void 0 : (_data$cpt4$details = _data$cpt4.details) === null || _data$cpt4$details === void 0 ? void 0 : (_data$cpt4$details$ad = _data$cpt4$details.address) === null || _data$cpt4$details$ad === void 0 ? void 0 : _data$cpt4$details$ad.tenantId : tenantId, false);
  const mutation2 = Digit.Hooks.tl.useTradeLicenseAPI(data !== null && data !== void 0 && (_data$cpt5 = data.cpt) !== null && _data$cpt5 !== void 0 && (_data$cpt5$details = _data$cpt5.details) !== null && _data$cpt5$details !== void 0 && (_data$cpt5$details$ad = _data$cpt5$details.address) !== null && _data$cpt5$details$ad !== void 0 && _data$cpt5$details$ad.tenantId ? data === null || data === void 0 ? void 0 : (_data$cpt6 = data.cpt) === null || _data$cpt6 === void 0 ? void 0 : (_data$cpt6$details = _data$cpt6.details) === null || _data$cpt6$details === void 0 ? void 0 : (_data$cpt6$details$ad = _data$cpt6$details.address) === null || _data$cpt6$details$ad === void 0 ? void 0 : _data$cpt6$details$ad.tenantId : tenantId, false);
  const isEdit = window.location.href.includes("renew-trade");
  const {
    data: storeData
  } = Digit.Hooks.useStore.getInitData();
  const {
    tenants
  } = storeData || {};
  const stateId = Digit.ULBService.getStateId();
  const {
    isLoading,
    data: fydata = {}
  } = Digit.Hooks.tl.useTradeLicenseMDMS(stateId, "egf-master", "FinancialYear");
  let isDirectRenewal = sessionStorage.getItem("isDirectRenewal") ? stringToBoolean(sessionStorage.getItem("isDirectRenewal")) : null;
  useEffect(() => {
    const onSuccessedit = () => {
      setMutationHappened(true);
    };
    try {
      var _data$cpt7, _data$cpt7$details, _data$cpt7$details$ad, _data$cpt8, _data$cpt8$details, _data$cpt8$details$ad;
      let tenantId1 = data !== null && data !== void 0 && (_data$cpt7 = data.cpt) !== null && _data$cpt7 !== void 0 && (_data$cpt7$details = _data$cpt7.details) !== null && _data$cpt7$details !== void 0 && (_data$cpt7$details$ad = _data$cpt7$details.address) !== null && _data$cpt7$details$ad !== void 0 && _data$cpt7$details$ad.tenantId ? data === null || data === void 0 ? void 0 : (_data$cpt8 = data.cpt) === null || _data$cpt8 === void 0 ? void 0 : (_data$cpt8$details = _data$cpt8.details) === null || _data$cpt8$details === void 0 ? void 0 : (_data$cpt8$details$ad = _data$cpt8$details.address) === null || _data$cpt8$details$ad === void 0 ? void 0 : _data$cpt8$details$ad.tenantId : tenantId;
      data.tenantId = tenantId1;
      if (!resubmit) {
        var _formdata$Licenses$;
        let formdata = !isEdit ? convertToTrade(data) : convertToEditTrade(data, fydata["egf-master"] ? fydata["egf-master"].FinancialYear.filter(y => y.module === "TL") : []);
        formdata.Licenses[0].tenantId = (formdata === null || formdata === void 0 ? void 0 : (_formdata$Licenses$ = formdata.Licenses[0]) === null || _formdata$Licenses$ === void 0 ? void 0 : _formdata$Licenses$.tenantId) || tenantId1;
        if (!isEdit) {
          mutation.mutate(formdata, {
            onSuccess
          });
        } else {
          if (fydata["egf-master"] && fydata["egf-master"].FinancialYear.length > 0 && isDirectRenewal) {
            mutation2.mutate(formdata, {
              onUpdateSuccess
            });
          } else {
            mutation1.mutate(formdata, {
              onUpdateSuccess
            });
          }
        }
      } else {
        var _formdata$Licenses$2;
        let formdata = convertToResubmitTrade(data);
        formdata.Licenses[0].tenantId = (formdata === null || formdata === void 0 ? void 0 : (_formdata$Licenses$2 = formdata.Licenses[0]) === null || _formdata$Licenses$2 === void 0 ? void 0 : _formdata$Licenses$2.tenantId) || tenantId1;
        !mutation2.isLoading && !mutation2.isSuccess && !mutationHappened && mutation2.mutate(formdata, {
          onSuccessedit
        });
      }
    } catch (err) {}
  }, [fydata]);
  useEffect(() => {
    if (mutation.isSuccess || mutation1.isSuccess && isEdit && !isDirectRenewal) {
      try {
        let Licenses = !isEdit ? convertToUpdateTrade(mutation.data, data) : convertToUpdateTrade(mutation1.data, data);
        mutation2.mutate(Licenses, {
          onSuccess: onUpdateSuccess
        });
      } catch (er) {}
    }
  }, [mutation.isSuccess, mutation1.isSuccess]);
  const handleDownloadPdf = async () => {
    const {
      Licenses = []
    } = mutation.data || mutation1.data || mutation2.data;
    const License = Licenses && Licenses[0] || {};
    const tenantInfo = tenants.find(tenant => tenant.code === License.tenantId);
    let res = License;
    const data = getPTAcknowledgementData({
      ...res
    }, tenantInfo, t);
    data.then(ress => Digit.Utils.pdf.generate(ress));
  };
  let enableLoader = !resubmit ? !isEdit ? mutation.isIdle || mutation.isLoading : isDirectRenewal ? false : mutation1.isIdle || mutation1.isLoading : false;
  if (enableLoader) {
    return /*#__PURE__*/React.createElement(Loader, null);
  } else if (((mutation === null || mutation === void 0 ? void 0 : mutation.isSuccess) == false && (mutation === null || mutation === void 0 ? void 0 : mutation.isIdle) == false || (mutation1 === null || mutation1 === void 0 ? void 0 : mutation1.isSuccess) == false && (mutation1 === null || mutation1 === void 0 ? void 0 : mutation1.isIdle) == false) && !isDirectRenewal && !resubmit) {
    return /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(BannerPicker, {
      t: t,
      data: mutation.data || mutation1.data,
      isSuccess: mutation.isSuccess || mutation1.isSuccess,
      isLoading: (mutation === null || mutation === void 0 ? void 0 : mutation.isLoading) || (mutation1 === null || mutation1 === void 0 ? void 0 : mutation1.isLoading)
    }), /*#__PURE__*/React.createElement(CardText, null, t("TL_FILE_TRADE_FAILED_RESPONSE")), /*#__PURE__*/React.createElement(Link, {
      to: `/digit-ui/citizen`
    }, /*#__PURE__*/React.createElement(LinkButton, {
      label: t("CORE_COMMON_GO_TO_HOME")
    })));
  } else if (mutation2.isLoading || mutation2.isIdle) {
    return /*#__PURE__*/React.createElement(Loader, null);
  } else return /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(BannerPicker, {
    t: t,
    data: mutation2.data,
    isSuccess: mutation2.isSuccess,
    isLoading: mutation2.isIdle || mutation2.isLoading
  }), mutation2.isSuccess && /*#__PURE__*/React.createElement(CardText, null, !isDirectRenewal ? t("TL_FILE_TRADE_RESPONSE") : t("TL_FILE_TRADE_RESPONSE_DIRECT_REN")), !mutation2.isSuccess && /*#__PURE__*/React.createElement(CardText, null, t("TL_FILE_TRADE_FAILED_RESPONSE")), !isEdit && mutation2.isSuccess && /*#__PURE__*/React.createElement(SubmitBar, {
    label: t("TL_DOWNLOAD_ACK_FORM"),
    onSubmit: handleDownloadPdf
  }), mutation2.isSuccess && isEdit && /*#__PURE__*/React.createElement(LinkButton, {
    label: /*#__PURE__*/React.createElement("div", {
      className: "response-download-button"
    }, /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      fill: "#a82227"
    }, /*#__PURE__*/React.createElement("path", {
      d: "M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z"
    }))), /*#__PURE__*/React.createElement("span", {
      className: "download-button"
    }, t("TL_DOWNLOAD_ACK_FORM"))),
    onClick: handleDownloadPdf
  }), (mutation2 === null || mutation2 === void 0 ? void 0 : (_mutation2$data = mutation2.data) === null || _mutation2$data === void 0 ? void 0 : (_mutation2$data$Licen = _mutation2$data.Licenses[0]) === null || _mutation2$data$Licen === void 0 ? void 0 : _mutation2$data$Licen.status) === "PENDINGPAYMENT" && /*#__PURE__*/React.createElement(Link, {
    to: {
      pathname: `/digit-ui/citizen/payment/collect/${mutation2.data.Licenses[0].businessService}/${mutation2.data.Licenses[0].applicationNumber}`,
      state: {
        tenantId: mutation2.data.Licenses[0].tenantId
      }
    }
  }, /*#__PURE__*/React.createElement(SubmitBar, {
    label: t("COMMON_MAKE_PAYMENT")
  })), /*#__PURE__*/React.createElement(Link, {
    to: `/digit-ui/citizen`
  }, /*#__PURE__*/React.createElement(LinkButton, {
    label: t("CORE_COMMON_GO_TO_HOME")
  })));
};

const MyApplications = ({
  view
}) => {
  var _Digit$UserService$ge;
  const {
    t
  } = useTranslation();
  const {
    mobileNumber,
    tenantId
  } = ((_Digit$UserService$ge = Digit.UserService.getUser()) === null || _Digit$UserService$ge === void 0 ? void 0 : _Digit$UserService$ge.info) || {};
  const {
    isLoading,
    isError,
    data,
    error,
    ...rest
  } = view === "bills" ? Digit.Hooks.tl.useFetchBill({
    params: {
      businessService: "TL",
      tenantId,
      mobileNumber
    },
    config: {
      enabled: view === "bills"
    }
  }) : Digit.Hooks.tl.useTLSearchApplication({}, {
    enabled: view !== "bills"
  }, t);
  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, null, `${t("TL_MY_APPLICATIONS_HEADER")}`), data === null || data === void 0 ? void 0 : data.map(application => {
    var _application$raw, _application$raw2, _application$raw3;
    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Card, null, Object.keys(application).filter(e => e !== "raw" && application[e] !== null).map(item => /*#__PURE__*/React.createElement(KeyNote, {
      keyValue: t(item),
      note: t(application[item])
    })), /*#__PURE__*/React.createElement(Link, {
      to: `/digit-ui/citizen/tl/tradelicence/application/${application === null || application === void 0 ? void 0 : (_application$raw = application.raw) === null || _application$raw === void 0 ? void 0 : _application$raw.applicationNumber}/${(_application$raw2 = application.raw) === null || _application$raw2 === void 0 ? void 0 : _application$raw2.tenantId}`
    }, /*#__PURE__*/React.createElement(SubmitBar, {
      label: t((application === null || application === void 0 ? void 0 : (_application$raw3 = application.raw) === null || _application$raw3 === void 0 ? void 0 : _application$raw3.status) != "PENDINGPAYMENT" ? "TL_VIEW_DETAILS" : "TL_VIEW_DETAILS_PAY")
    })), " "));
  }));
};

function stackClear() {
  this.__data__ = new _ListCache();
  this.size = 0;
}
var _stackClear = stackClear;

function stackDelete(key) {
  var data = this.__data__,
    result = data['delete'](key);
  this.size = data.size;
  return result;
}
var _stackDelete = stackDelete;

function stackGet(key) {
  return this.__data__.get(key);
}
var _stackGet = stackGet;

function stackHas(key) {
  return this.__data__.has(key);
}
var _stackHas = stackHas;

var LARGE_ARRAY_SIZE = 200;
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof _ListCache) {
    var pairs = data.__data__;
    if (!_Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new _MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}
var _stackSet = stackSet;

function Stack(entries) {
  var data = this.__data__ = new _ListCache(entries);
  this.size = data.size;
}
Stack.prototype.clear = _stackClear;
Stack.prototype['delete'] = _stackDelete;
Stack.prototype.get = _stackGet;
Stack.prototype.has = _stackHas;
Stack.prototype.set = _stackSet;
var _Stack = Stack;

function arrayEach(array, iteratee) {
  var index = -1,
    length = array == null ? 0 : array.length;
  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}
var _arrayEach = arrayEach;

function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});
  var index = -1,
    length = props.length;
  while (++index < length) {
    var key = props[index];
    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;
    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      _baseAssignValue(object, key, newValue);
    } else {
      _assignValue(object, key, newValue);
    }
  }
  return object;
}
var _copyObject = copyObject;

function baseTimes(n, iteratee) {
  var index = -1,
    result = Array(n);
  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}
var _baseTimes = baseTimes;

var argsTag = '[object Arguments]';
function baseIsArguments(value) {
  return isObjectLike_1(value) && _baseGetTag(value) == argsTag;
}
var _baseIsArguments = baseIsArguments;

var objectProto$6 = Object.prototype;
var hasOwnProperty$5 = objectProto$6.hasOwnProperty;
var propertyIsEnumerable = objectProto$6.propertyIsEnumerable;
var isArguments = _baseIsArguments(function () {
  return arguments;
}()) ? _baseIsArguments : function (value) {
  return isObjectLike_1(value) && hasOwnProperty$5.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
};
var isArguments_1 = isArguments;

function stubFalse() {
  return false;
}
var stubFalse_1 = stubFalse;

var isBuffer_1 = createCommonjsModule(function (module, exports) {
  var freeExports =  exports && !exports.nodeType && exports;
  var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var Buffer = moduleExports ? _root.Buffer : undefined;
  var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;
  var isBuffer = nativeIsBuffer || stubFalse_1;
  module.exports = isBuffer;
});

var MAX_SAFE_INTEGER$1 = 9007199254740991;
function isLength(value) {
  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER$1;
}
var isLength_1 = isLength;

var argsTag$1 = '[object Arguments]',
  arrayTag = '[object Array]',
  boolTag = '[object Boolean]',
  dateTag = '[object Date]',
  errorTag = '[object Error]',
  funcTag$1 = '[object Function]',
  mapTag = '[object Map]',
  numberTag = '[object Number]',
  objectTag = '[object Object]',
  regexpTag = '[object RegExp]',
  setTag = '[object Set]',
  stringTag = '[object String]',
  weakMapTag = '[object WeakMap]';
var arrayBufferTag = '[object ArrayBuffer]',
  dataViewTag = '[object DataView]',
  float32Tag = '[object Float32Array]',
  float64Tag = '[object Float64Array]',
  int8Tag = '[object Int8Array]',
  int16Tag = '[object Int16Array]',
  int32Tag = '[object Int32Array]',
  uint8Tag = '[object Uint8Array]',
  uint8ClampedTag = '[object Uint8ClampedArray]',
  uint16Tag = '[object Uint16Array]',
  uint32Tag = '[object Uint32Array]';
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag$1] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag$1] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
function baseIsTypedArray(value) {
  return isObjectLike_1(value) && isLength_1(value.length) && !!typedArrayTags[_baseGetTag(value)];
}
var _baseIsTypedArray = baseIsTypedArray;

function baseUnary(func) {
  return function (value) {
    return func(value);
  };
}
var _baseUnary = baseUnary;

var _nodeUtil = createCommonjsModule(function (module, exports) {
  var freeExports =  exports && !exports.nodeType && exports;
  var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var freeProcess = moduleExports && _freeGlobal.process;
  var nodeUtil = function () {
    try {
      var types = freeModule && freeModule.require && freeModule.require('util').types;
      if (types) {
        return types;
      }
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }();
  module.exports = nodeUtil;
});

var nodeIsTypedArray = _nodeUtil && _nodeUtil.isTypedArray;
var isTypedArray = nodeIsTypedArray ? _baseUnary(nodeIsTypedArray) : _baseIsTypedArray;
var isTypedArray_1 = isTypedArray;

var objectProto$7 = Object.prototype;
var hasOwnProperty$6 = objectProto$7.hasOwnProperty;
function arrayLikeKeys(value, inherited) {
  var isArr = isArray_1(value),
    isArg = !isArr && isArguments_1(value),
    isBuff = !isArr && !isArg && isBuffer_1(value),
    isType = !isArr && !isArg && !isBuff && isTypedArray_1(value),
    skipIndexes = isArr || isArg || isBuff || isType,
    result = skipIndexes ? _baseTimes(value.length, String) : [],
    length = result.length;
  for (var key in value) {
    if ((inherited || hasOwnProperty$6.call(value, key)) && !(skipIndexes && (key == 'length' || isBuff && (key == 'offset' || key == 'parent') || isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || _isIndex(key, length)))) {
      result.push(key);
    }
  }
  return result;
}
var _arrayLikeKeys = arrayLikeKeys;

var objectProto$8 = Object.prototype;
function isPrototype(value) {
  var Ctor = value && value.constructor,
    proto = typeof Ctor == 'function' && Ctor.prototype || objectProto$8;
  return value === proto;
}
var _isPrototype = isPrototype;

function overArg(func, transform) {
  return function (arg) {
    return func(transform(arg));
  };
}
var _overArg = overArg;

var nativeKeys = _overArg(Object.keys, Object);
var _nativeKeys = nativeKeys;

var objectProto$9 = Object.prototype;
var hasOwnProperty$7 = objectProto$9.hasOwnProperty;
function baseKeys(object) {
  if (!_isPrototype(object)) {
    return _nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty$7.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}
var _baseKeys = baseKeys;

function isArrayLike(value) {
  return value != null && isLength_1(value.length) && !isFunction_1(value);
}
var isArrayLike_1 = isArrayLike;

function keys(object) {
  return isArrayLike_1(object) ? _arrayLikeKeys(object) : _baseKeys(object);
}
var keys_1 = keys;

function baseAssign(object, source) {
  return object && _copyObject(source, keys_1(source), object);
}
var _baseAssign = baseAssign;

function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}
var _nativeKeysIn = nativeKeysIn;

var objectProto$a = Object.prototype;
var hasOwnProperty$8 = objectProto$a.hasOwnProperty;
function baseKeysIn(object) {
  if (!isObject_1(object)) {
    return _nativeKeysIn(object);
  }
  var isProto = _isPrototype(object),
    result = [];
  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty$8.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}
var _baseKeysIn = baseKeysIn;

function keysIn(object) {
  return isArrayLike_1(object) ? _arrayLikeKeys(object, true) : _baseKeysIn(object);
}
var keysIn_1 = keysIn;

function baseAssignIn(object, source) {
  return object && _copyObject(source, keysIn_1(source), object);
}
var _baseAssignIn = baseAssignIn;

var _cloneBuffer = createCommonjsModule(function (module, exports) {
  var freeExports =  exports && !exports.nodeType && exports;
  var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var Buffer = moduleExports ? _root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;
  function cloneBuffer(buffer, isDeep) {
    if (isDeep) {
      return buffer.slice();
    }
    var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
    buffer.copy(result);
    return result;
  }
  module.exports = cloneBuffer;
});

function copyArray(source, array) {
  var index = -1,
    length = source.length;
  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}
var _copyArray = copyArray;

function arrayFilter(array, predicate) {
  var index = -1,
    length = array == null ? 0 : array.length,
    resIndex = 0,
    result = [];
  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}
var _arrayFilter = arrayFilter;

function stubArray() {
  return [];
}
var stubArray_1 = stubArray;

var objectProto$b = Object.prototype;
var propertyIsEnumerable$1 = objectProto$b.propertyIsEnumerable;
var nativeGetSymbols = Object.getOwnPropertySymbols;
var getSymbols = !nativeGetSymbols ? stubArray_1 : function (object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return _arrayFilter(nativeGetSymbols(object), function (symbol) {
    return propertyIsEnumerable$1.call(object, symbol);
  });
};
var _getSymbols = getSymbols;

function copySymbols(source, object) {
  return _copyObject(source, _getSymbols(source), object);
}
var _copySymbols = copySymbols;

function arrayPush(array, values) {
  var index = -1,
    length = values.length,
    offset = array.length;
  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}
var _arrayPush = arrayPush;

var getPrototype = _overArg(Object.getPrototypeOf, Object);
var _getPrototype = getPrototype;

var nativeGetSymbols$1 = Object.getOwnPropertySymbols;
var getSymbolsIn = !nativeGetSymbols$1 ? stubArray_1 : function (object) {
  var result = [];
  while (object) {
    _arrayPush(result, _getSymbols(object));
    object = _getPrototype(object);
  }
  return result;
};
var _getSymbolsIn = getSymbolsIn;

function copySymbolsIn(source, object) {
  return _copyObject(source, _getSymbolsIn(source), object);
}
var _copySymbolsIn = copySymbolsIn;

function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray_1(object) ? result : _arrayPush(result, symbolsFunc(object));
}
var _baseGetAllKeys = baseGetAllKeys;

function getAllKeys(object) {
  return _baseGetAllKeys(object, keys_1, _getSymbols);
}
var _getAllKeys = getAllKeys;

function getAllKeysIn(object) {
  return _baseGetAllKeys(object, keysIn_1, _getSymbolsIn);
}
var _getAllKeysIn = getAllKeysIn;

var DataView = _getNative(_root, 'DataView');
var _DataView = DataView;

var Promise$1 = _getNative(_root, 'Promise');
var _Promise = Promise$1;

var Set = _getNative(_root, 'Set');
var _Set = Set;

var WeakMap = _getNative(_root, 'WeakMap');
var _WeakMap = WeakMap;

var mapTag$1 = '[object Map]',
  objectTag$1 = '[object Object]',
  promiseTag = '[object Promise]',
  setTag$1 = '[object Set]',
  weakMapTag$1 = '[object WeakMap]';
var dataViewTag$1 = '[object DataView]';
var dataViewCtorString = _toSource(_DataView),
  mapCtorString = _toSource(_Map),
  promiseCtorString = _toSource(_Promise),
  setCtorString = _toSource(_Set),
  weakMapCtorString = _toSource(_WeakMap);
var getTag = _baseGetTag;
if (_DataView && getTag(new _DataView(new ArrayBuffer(1))) != dataViewTag$1 || _Map && getTag(new _Map()) != mapTag$1 || _Promise && getTag(_Promise.resolve()) != promiseTag || _Set && getTag(new _Set()) != setTag$1 || _WeakMap && getTag(new _WeakMap()) != weakMapTag$1) {
  getTag = function (value) {
    var result = _baseGetTag(value),
      Ctor = result == objectTag$1 ? value.constructor : undefined,
      ctorString = Ctor ? _toSource(Ctor) : '';
    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString:
          return dataViewTag$1;
        case mapCtorString:
          return mapTag$1;
        case promiseCtorString:
          return promiseTag;
        case setCtorString:
          return setTag$1;
        case weakMapCtorString:
          return weakMapTag$1;
      }
    }
    return result;
  };
}
var _getTag = getTag;

var objectProto$c = Object.prototype;
var hasOwnProperty$9 = objectProto$c.hasOwnProperty;
function initCloneArray(array) {
  var length = array.length,
    result = new array.constructor(length);
  if (length && typeof array[0] == 'string' && hasOwnProperty$9.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}
var _initCloneArray = initCloneArray;

var Uint8Array = _root.Uint8Array;
var _Uint8Array = Uint8Array;

function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new _Uint8Array(result).set(new _Uint8Array(arrayBuffer));
  return result;
}
var _cloneArrayBuffer = cloneArrayBuffer;

function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? _cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}
var _cloneDataView = cloneDataView;

var reFlags = /\w*$/;
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}
var _cloneRegExp = cloneRegExp;

var symbolProto$1 = _Symbol ? _Symbol.prototype : undefined,
  symbolValueOf = symbolProto$1 ? symbolProto$1.valueOf : undefined;
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}
var _cloneSymbol = cloneSymbol;

function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? _cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}
var _cloneTypedArray = cloneTypedArray;

var boolTag$1 = '[object Boolean]',
  dateTag$1 = '[object Date]',
  mapTag$2 = '[object Map]',
  numberTag$1 = '[object Number]',
  regexpTag$1 = '[object RegExp]',
  setTag$2 = '[object Set]',
  stringTag$1 = '[object String]',
  symbolTag$1 = '[object Symbol]';
var arrayBufferTag$1 = '[object ArrayBuffer]',
  dataViewTag$2 = '[object DataView]',
  float32Tag$1 = '[object Float32Array]',
  float64Tag$1 = '[object Float64Array]',
  int8Tag$1 = '[object Int8Array]',
  int16Tag$1 = '[object Int16Array]',
  int32Tag$1 = '[object Int32Array]',
  uint8Tag$1 = '[object Uint8Array]',
  uint8ClampedTag$1 = '[object Uint8ClampedArray]',
  uint16Tag$1 = '[object Uint16Array]',
  uint32Tag$1 = '[object Uint32Array]';
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag$1:
      return _cloneArrayBuffer(object);
    case boolTag$1:
    case dateTag$1:
      return new Ctor(+object);
    case dataViewTag$2:
      return _cloneDataView(object, isDeep);
    case float32Tag$1:
    case float64Tag$1:
    case int8Tag$1:
    case int16Tag$1:
    case int32Tag$1:
    case uint8Tag$1:
    case uint8ClampedTag$1:
    case uint16Tag$1:
    case uint32Tag$1:
      return _cloneTypedArray(object, isDeep);
    case mapTag$2:
      return new Ctor();
    case numberTag$1:
    case stringTag$1:
      return new Ctor(object);
    case regexpTag$1:
      return _cloneRegExp(object);
    case setTag$2:
      return new Ctor();
    case symbolTag$1:
      return _cloneSymbol(object);
  }
}
var _initCloneByTag = initCloneByTag;

var objectCreate = Object.create;
var baseCreate = function () {
  function object() {}
  return function (proto) {
    if (!isObject_1(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object();
    object.prototype = undefined;
    return result;
  };
}();
var _baseCreate = baseCreate;

function initCloneObject(object) {
  return typeof object.constructor == 'function' && !_isPrototype(object) ? _baseCreate(_getPrototype(object)) : {};
}
var _initCloneObject = initCloneObject;

var mapTag$3 = '[object Map]';
function baseIsMap(value) {
  return isObjectLike_1(value) && _getTag(value) == mapTag$3;
}
var _baseIsMap = baseIsMap;

var nodeIsMap = _nodeUtil && _nodeUtil.isMap;
var isMap = nodeIsMap ? _baseUnary(nodeIsMap) : _baseIsMap;
var isMap_1 = isMap;

var setTag$3 = '[object Set]';
function baseIsSet(value) {
  return isObjectLike_1(value) && _getTag(value) == setTag$3;
}
var _baseIsSet = baseIsSet;

var nodeIsSet = _nodeUtil && _nodeUtil.isSet;
var isSet = nodeIsSet ? _baseUnary(nodeIsSet) : _baseIsSet;
var isSet_1 = isSet;

var CLONE_DEEP_FLAG = 1,
  CLONE_FLAT_FLAG = 2,
  CLONE_SYMBOLS_FLAG = 4;
var argsTag$2 = '[object Arguments]',
  arrayTag$1 = '[object Array]',
  boolTag$2 = '[object Boolean]',
  dateTag$2 = '[object Date]',
  errorTag$1 = '[object Error]',
  funcTag$2 = '[object Function]',
  genTag$1 = '[object GeneratorFunction]',
  mapTag$4 = '[object Map]',
  numberTag$2 = '[object Number]',
  objectTag$2 = '[object Object]',
  regexpTag$2 = '[object RegExp]',
  setTag$4 = '[object Set]',
  stringTag$2 = '[object String]',
  symbolTag$2 = '[object Symbol]',
  weakMapTag$2 = '[object WeakMap]';
var arrayBufferTag$2 = '[object ArrayBuffer]',
  dataViewTag$3 = '[object DataView]',
  float32Tag$2 = '[object Float32Array]',
  float64Tag$2 = '[object Float64Array]',
  int8Tag$2 = '[object Int8Array]',
  int16Tag$2 = '[object Int16Array]',
  int32Tag$2 = '[object Int32Array]',
  uint8Tag$2 = '[object Uint8Array]',
  uint8ClampedTag$2 = '[object Uint8ClampedArray]',
  uint16Tag$2 = '[object Uint16Array]',
  uint32Tag$2 = '[object Uint32Array]';
var cloneableTags = {};
cloneableTags[argsTag$2] = cloneableTags[arrayTag$1] = cloneableTags[arrayBufferTag$2] = cloneableTags[dataViewTag$3] = cloneableTags[boolTag$2] = cloneableTags[dateTag$2] = cloneableTags[float32Tag$2] = cloneableTags[float64Tag$2] = cloneableTags[int8Tag$2] = cloneableTags[int16Tag$2] = cloneableTags[int32Tag$2] = cloneableTags[mapTag$4] = cloneableTags[numberTag$2] = cloneableTags[objectTag$2] = cloneableTags[regexpTag$2] = cloneableTags[setTag$4] = cloneableTags[stringTag$2] = cloneableTags[symbolTag$2] = cloneableTags[uint8Tag$2] = cloneableTags[uint8ClampedTag$2] = cloneableTags[uint16Tag$2] = cloneableTags[uint32Tag$2] = true;
cloneableTags[errorTag$1] = cloneableTags[funcTag$2] = cloneableTags[weakMapTag$2] = false;
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
    isDeep = bitmask & CLONE_DEEP_FLAG,
    isFlat = bitmask & CLONE_FLAT_FLAG,
    isFull = bitmask & CLONE_SYMBOLS_FLAG;
  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject_1(value)) {
    return value;
  }
  var isArr = isArray_1(value);
  if (isArr) {
    result = _initCloneArray(value);
    if (!isDeep) {
      return _copyArray(value, result);
    }
  } else {
    var tag = _getTag(value),
      isFunc = tag == funcTag$2 || tag == genTag$1;
    if (isBuffer_1(value)) {
      return _cloneBuffer(value, isDeep);
    }
    if (tag == objectTag$2 || tag == argsTag$2 || isFunc && !object) {
      result = isFlat || isFunc ? {} : _initCloneObject(value);
      if (!isDeep) {
        return isFlat ? _copySymbolsIn(value, _baseAssignIn(result, value)) : _copySymbols(value, _baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = _initCloneByTag(value, tag, isDeep);
    }
  }
  stack || (stack = new _Stack());
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);
  if (isSet_1(value)) {
    value.forEach(function (subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });
  } else if (isMap_1(value)) {
    value.forEach(function (subValue, key) {
      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });
  }
  var keysFunc = isFull ? isFlat ? _getAllKeysIn : _getAllKeys : isFlat ? keysIn_1 : keys_1;
  var props = isArr ? undefined : keysFunc(value);
  _arrayEach(props || value, function (subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    _assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}
var _baseClone = baseClone;

var CLONE_DEEP_FLAG$1 = 1,
  CLONE_SYMBOLS_FLAG$1 = 4;
function cloneDeep(value) {
  return _baseClone(value, CLONE_DEEP_FLAG$1 | CLONE_SYMBOLS_FLAG$1);
}
var cloneDeep_1 = cloneDeep;

const Urls = {
  MDMS: `/egov-mdms-service/v1/_search`,
  WorkFlow: `/egov-workflow-v2/egov-wf/businessservice/_search`,
  WorkFlowProcessSearch: `/egov-workflow-v2/egov-wf/process/_search`,
  localization: `/localization/messages/v1/_search`,
  location: {
    localities: `/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=ADMIN&boundaryType=Locality`,
    revenue_localities: `/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=REVENUE&boundaryType=Locality`
  },
  pgr_search: `/pgr-services/v2/request/_search`,
  pgr_update: `/pgr-services/v2/request/_update`,
  filter_data: `https://run.mocky.io/v3/597a50a0-90e5-4a45-b82e-8a2186b760bd`,
  FileStore: "/filestore/v1/files",
  FileFetch: "/filestore/v1/files/url",
  PGR_Create: `/pgr-services/v2/request/_create`,
  pgr_count: `/pgr-services/v2/request/_count`,
  OTP_Send: "/user-otp/v1/_send",
  Authenticate: "/user/oauth/token",
  RegisterUser: "/user/citizen/_create",
  ChangePassword: "/user/password/nologin/_update",
  ChangePassword1: "/user/password/_update",
  UserProfileUpdate: "/user/profile/_update",
  EmployeeSearch: "/egov-hrms/employees/_search",
  InboxSearch: "/inbox/v1/_search",
  UserSearch: "/user/_search",
  UserLogout: "/user/_logout",
  Shortener: "/egov-url-shortening/shortener",
  fsm: {
    search: "/fsm/v1/_search",
    create: "/fsm/v1/_create",
    update: "/fsm/v1/_update",
    vendorSearch: "/vendor/v1/_search",
    vehicleSearch: "/vehicle/v1/_search",
    audit: "/fsm/v1/_audit",
    vehicleTripSearch: "/vehicle/trip/v1/_search",
    billingSlabSearch: "/fsm-calculator/v1/billingSlab/_search",
    vehilceUpdate: "/vehicle/trip/v1/_update",
    createVendor: "/vendor/v1/_create",
    updateVendor: "/vendor/v1/_update",
    createVehicle: "/vehicle/v1/_create",
    updateVehicle: "/vehicle/v1/_update",
    driverSearch: "/vendor/driver/v1/_search",
    createDriver: "/vendor/driver/v1/_create",
    updateDriver: "/vendor/driver/v1/_update",
    vehicleTripCreate: "/vehicle/trip/v1/_create",
    advanceBalanceCalculate: "/fsm-calculator/v1/_advancebalancecalculate"
  },
  payment: {
    fetch_bill: "/billing-service/bill/v2/_fetchbill",
    demandSearch: "/billing-service/demand/_search",
    create_reciept: "/collection-services/payments/_create",
    print_reciept: "/collection-services/payments",
    generate_pdf: "/pdf-service/v1/_create",
    create_citizen_reciept: "/pg-service/transaction/v1/_create",
    update_citizen_reciept: "/pg-service/transaction/v1/_update",
    search_bill: "/billing-service/bill/v2/_search",
    reciept_search: "/collection-services/payments/:buisnessService/_search",
    obps_Reciept_Search: "/collection-services/payments/_search",
    billAmendmentSearch: "/billing-service/amendment/_search",
    getBulkPdfRecordsDetails: "/pdf-service/v1/_getBulkPdfRecordsDetails"
  },
  pt: {
    fectch_property: "/property-services/property/_search",
    fetch_payment_details: "/billing-service/bill/v2/_fetchbill",
    create: "/property-services/property/_create",
    search: "/property-services/property/_search",
    update: "/property-services/property/_update",
    pt_calculation_estimate: "/pt-calculator-v2/propertytax/v2/_estimate",
    assessment_create: "/property-services/assessment/_create",
    assessment_search: "/property-services/assessment/_search",
    payment_search: "/collection-services/payments/PT/_search",
    pt_calculate_mutation: "/pt-calculator-v2/propertytax/mutation/_calculate",
    cfcreate: "/service-request/service/v1/_create",
    cfdefinitionsearch: "/service-request/service/definition/v1/_search",
    cfsearch: "/service-request/service/v1/_search"
  },
  dss: {
    dashboardConfig: "/dashboard-analytics/dashboard/getDashboardConfig",
    getCharts: "/dashboard-analytics/dashboard/getChartV2"
  },
  mcollect: {
    search: "/echallan-services/eChallan/v1/_search",
    create: "/echallan-services/eChallan/v1/_create?",
    fetch_bill: "/billing-service/bill/v2/_fetchbill?",
    search_bill: "/egov-searcher/bill-genie/mcollectbills/_get",
    search_bill_pt: "/egov-searcher/bill-genie/billswithaddranduser/_get",
    update: "/echallan-services/eChallan/v1/_update",
    download_pdf: "/egov-pdf/download/UC/mcollect-challan",
    receipt_download: "/egov-pdf/download/PAYMENT/consolidatedreceipt",
    bill_download: "/egov-pdf/download/BILL/consolidatedbill",
    count: "/echallan-services/eChallan/v1/_count"
  },
  hrms: {
    search: "/egov-hrms/employees/_search",
    count: "/egov-hrms/employees/_count",
    create: "/egov-hrms/employees/_create",
    update: "/egov-hrms/employees/_update"
  },
  tl: {
    create: "/tl-services/v1/_create",
    search: "/tl-services/v1/_search",
    fetch_payment_details: "/billing-service/bill/v2/_fetchbill",
    download_pdf: "/egov-pdf/download/TL/",
    update: "/tl-services/v1/_update",
    billingslab: "/tl-calculator/billingslab/_search"
  },
  receipts: {
    receipt_download: "/egov-pdf/download/PAYMENT/consolidatedreceipt",
    payments: "/collection-services/payments",
    count: "/egov-hrms/employees/_count"
  },
  obps: {
    scrutinyDetails: "/edcr/rest/dcr/scrutinydetails",
    comparisionReport: "/edcr/rest/dcr/occomparison",
    create: "/bpa-services/v1/bpa/_create",
    nocSearch: "/noc-services/v1/noc/_search",
    updateNOC: "/noc-services/v1/noc/_update",
    update: "/bpa-services/v1/bpa/_update",
    bpaSearch: "/bpa-services/v1/bpa/_search",
    bpaRegSearch: "/tl-services/v1/BPAREG/_search",
    bpaRegCreate: "/tl-services/v1/BPAREG/_create",
    bpaRegGetBill: "/tl-calculator/v1/BPAREG/_getbill",
    bpaRegUpdate: "/tl-services/v1/BPAREG/_update",
    receipt_download: "/egov-pdf/download/PAYMENT/consolidatedreceipt",
    edcrreportdownload: "/bpa-services/v1/bpa/_permitorderedcr",
    getSearchDetails: "/inbox/v1/dss/_search"
  },
  edcr: {
    create: "/edcr/rest/dcr/scrutinize"
  },
  events: {
    search: "/egov-user-event/v1/events/_search",
    update: "/egov-user-event/v1/events/lat/_update",
    updateEvent: "/egov-user-event/v1/events/_update",
    updateEventCDG: "/egov-user-event/v1/events/lat/_update",
    count: "/egov-user-event/v1/events/notifications/_count",
    create: "/egov-user-event/v1/events/_create"
  },
  ws: {
    water_create: "/ws-services/wc/_create",
    sewarage_create: "/sw-services/swc/_create",
    water_search: "/ws-services/wc/_search",
    sewarage_search: "/sw-services/swc/_search",
    water_update: "/ws-services/wc/_update",
    sewarage_update: "/sw-services/swc/_update",
    ws_calculation_estimate: "/ws-calculator/waterCalculator/_estimate",
    sw_calculation_estimate: "/sw-calculator/sewerageCalculator/_estimate",
    ws_connection_search: "/ws-calculator/meterConnection/_search",
    sw_payment_search: "/collection-services/payments/SW/_search",
    ws_payment_search: "/collection-services/payments/WS/_search",
    billAmendmentCreate: "/billing-service/amendment/_create",
    billAmendmentUpdate: "/billing-service/amendment/_update",
    ws_meter_conncetion_create: "/ws-calculator/meterConnection/_create",
    sw_meter_conncetion_create: "/sw-calculator/meterConnection/_create",
    wns_group_bill: "/egov-pdf/download/WNS/wnsgroupbill",
    cancel_group_bill: "/pdf-service/v1/_cancelProcess",
    wns_generate_pdf: "/egov-pdf/download/WNS/wnsbill",
    water_applyAdhocTax: "/ws-calculator/waterCalculator/_applyAdhocTax",
    sewerage_applyAdhocTax: "/sw-calculator/sewerageCalculator/_applyAdhocTax",
    getSearchDetails: "/inbox/v1/dss/_search",
    disconnection_notice: "/pdf-service/v1/_createnosave"
  },
  engagement: {
    document: {
      search: "/egov-document-uploader/egov-du/document/_search",
      create: "/egov-document-uploader/egov-du/document/_create",
      delete: "/egov-document-uploader/egov-du/document/_delete",
      update: "/egov-document-uploader/egov-du/document/_update"
    },
    surveys: {
      create: "/egov-survey-services/egov-ss/survey/_create",
      update: "/egov-survey-services/egov-ss/survey/_update",
      search: "/egov-survey-services/egov-ss/survey/_search",
      delete: "/egov-survey-services/egov-ss/survey/_delete",
      submitResponse: "/egov-survey-services/egov-ss/survey/response/_submit",
      showResults: "/egov-survey-services/egov-ss/survey/response/_results"
    }
  },
  noc: {
    nocSearch: "/noc-services/v1/noc/_search"
  },
  reports: {
    reportSearch: "/report/"
  },
  bills: {
    cancelBill: "/billing-service/bill/v2/_cancelbill"
  },
  access_control: "/access/v1/actions/mdms/_get",
  billgenie: "/egov-searcher",
  audit: "/inbox/v1/elastic/_search"
};

var bind = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};

var toString$1 = Object.prototype.toString;
function isArray$1(val) {
  return toString$1.call(val) === '[object Array]';
}
function isUndefined$1(val) {
  return typeof val === 'undefined';
}
function isBuffer(val) {
  return val !== null && !isUndefined$1(val) && val.constructor !== null && !isUndefined$1(val.constructor) && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}
function isArrayBuffer(val) {
  return toString$1.call(val) === '[object ArrayBuffer]';
}
function isFormData(val) {
  return typeof FormData !== 'undefined' && val instanceof FormData;
}
function isArrayBufferView(val) {
  var result;
  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
    result = ArrayBuffer.isView(val);
  } else {
    result = val && val.buffer && val.buffer instanceof ArrayBuffer;
  }
  return result;
}
function isString(val) {
  return typeof val === 'string';
}
function isNumber(val) {
  return typeof val === 'number';
}
function isObject$1(val) {
  return val !== null && typeof val === 'object';
}
function isPlainObject(val) {
  if (toString$1.call(val) !== '[object Object]') {
    return false;
  }
  var prototype = Object.getPrototypeOf(val);
  return prototype === null || prototype === Object.prototype;
}
function isDate(val) {
  return toString$1.call(val) === '[object Date]';
}
function isFile(val) {
  return toString$1.call(val) === '[object File]';
}
function isBlob(val) {
  return toString$1.call(val) === '[object Blob]';
}
function isFunction$1(val) {
  return toString$1.call(val) === '[object Function]';
}
function isStream(val) {
  return isObject$1(val) && isFunction$1(val.pipe);
}
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' || navigator.product === 'NativeScript' || navigator.product === 'NS')) {
    return false;
  }
  return typeof window !== 'undefined' && typeof document !== 'undefined';
}
function forEach(obj, fn) {
  if (obj === null || typeof obj === 'undefined') {
    return;
  }
  if (typeof obj !== 'object') {
    obj = [obj];
  }
  if (isArray$1(obj)) {
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}
function merge() {
  var result = {};
  function assignValue(val, key) {
    if (isPlainObject(result[key]) && isPlainObject(val)) {
      result[key] = merge(result[key], val);
    } else if (isPlainObject(val)) {
      result[key] = merge({}, val);
    } else if (isArray$1(val)) {
      result[key] = val.slice();
    } else {
      result[key] = val;
    }
  }
  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}
function stripBOM(content) {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }
  return content;
}
var utils = {
  isArray: isArray$1,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject$1,
  isPlainObject: isPlainObject,
  isUndefined: isUndefined$1,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction$1,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim,
  stripBOM: stripBOM
};

function encode(val) {
  return encodeURIComponent(val).replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');
}
var buildURL = function buildURL(url, params, paramsSerializer) {
  if (!params) {
    return url;
  }
  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];
    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }
      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }
      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });
    serializedParams = parts.join('&');
  }
  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }
  return url;
};

function InterceptorManager() {
  this.handlers = [];
}
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};
var InterceptorManager_1 = InterceptorManager;

var transformData = function transformData(data, headers, fns) {
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });
  return data;
};

var isCancel = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};

var normalizeHeaderName = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};

var enhanceError = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }
  error.request = request;
  error.response = response;
  error.isAxiosError = true;
  error.toJSON = function toJSON() {
    return {
      message: this.message,
      name: this.name,
      description: this.description,
      number: this.number,
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      config: this.config,
      code: this.code
    };
  };
  return error;
};

var createError = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};

var settle = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError('Request failed with status code ' + response.status, response.config, null, response.request, response));
  }
};

var cookies = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
  return {
    write: function write(name, value, expires, path, domain, secure) {
      var cookie = [];
      cookie.push(name + '=' + encodeURIComponent(value));
      if (utils.isNumber(expires)) {
        cookie.push('expires=' + new Date(expires).toGMTString());
      }
      if (utils.isString(path)) {
        cookie.push('path=' + path);
      }
      if (utils.isString(domain)) {
        cookie.push('domain=' + domain);
      }
      if (secure === true) {
        cookie.push('secure');
      }
      document.cookie = cookie.join('; ');
    },
    read: function read(name) {
      var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
      return match ? decodeURIComponent(match[3]) : null;
    },
    remove: function remove(name) {
      this.write(name, '', Date.now() - 86400000);
    }
  };
}() : function nonStandardBrowserEnv() {
  return {
    write: function write() {},
    read: function read() {
      return null;
    },
    remove: function remove() {}
  };
}();

var isAbsoluteURL = function isAbsoluteURL(url) {
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};

var combineURLs = function combineURLs(baseURL, relativeURL) {
  return relativeURL ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '') : baseURL;
};

var buildFullPath = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};

var ignoreDuplicateOf = ['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent'];
var parseHeaders = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;
  if (!headers) {
    return parsed;
  }
  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));
    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });
  return parsed;
};

var isURLSameOrigin = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
  var msie = /(msie|trident)/i.test(navigator.userAgent);
  var urlParsingNode = document.createElement('a');
  var originURL;
  function resolveURL(url) {
    var href = url;
    if (msie) {
      urlParsingNode.setAttribute('href', href);
      href = urlParsingNode.href;
    }
    urlParsingNode.setAttribute('href', href);
    return {
      href: urlParsingNode.href,
      protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
      host: urlParsingNode.host,
      search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
      hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
      hostname: urlParsingNode.hostname,
      port: urlParsingNode.port,
      pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname
    };
  }
  originURL = resolveURL(window.location.href);
  return function isURLSameOrigin(requestURL) {
    var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
    return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
  };
}() : function nonStandardBrowserEnv() {
  return function isURLSameOrigin() {
    return true;
  };
}();

var xhr = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;
    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type'];
    }
    var request = new XMLHttpRequest();
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }
    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);
    request.timeout = config.timeout;
    request.onreadystatechange = function handleLoad() {
      if (!request || request.readyState !== 4) {
        return;
      }
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };
      settle(resolve, reject, response);
      request = null;
    };
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }
      reject(createError('Request aborted', config, 'ECONNABORTED', request));
      request = null;
    };
    request.onerror = function handleError() {
      reject(createError('Network Error', config, null, request));
      request = null;
    };
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED', request));
      request = null;
    };
    if (utils.isStandardBrowserEnv()) {
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;
      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          delete requestHeaders[key];
        } else {
          request.setRequestHeader(key, val);
        }
      });
    }
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }
    if (config.cancelToken) {
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }
        request.abort();
        reject(cancel);
        request = null;
      });
    }
    if (!requestData) {
      requestData = null;
    }
    request.send(requestData);
  });
};

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};
function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}
function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    adapter = xhr;
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    adapter = xhr;
  }
  return adapter;
}
var defaults = {
  adapter: getDefaultAdapter(),
  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],
  transformResponse: [function transformResponse(data) {
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) {}
    }
    return data;
  }],
  timeout: 0,
  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',
  maxContentLength: -1,
  maxBodyLength: -1,
  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};
defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};
utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});
utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});
var defaults_1 = defaults;

function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}
var dispatchRequest = function dispatchRequest(config) {
  throwIfCancellationRequested(config);
  config.headers = config.headers || {};
  config.data = transformData(config.data, config.headers, config.transformRequest);
  config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers);
  utils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function cleanHeaderConfig(method) {
    delete config.headers[method];
  });
  var adapter = config.adapter || defaults_1.adapter;
  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);
    response.data = transformData(response.data, response.headers, config.transformResponse);
    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);
      if (reason && reason.response) {
        reason.response.data = transformData(reason.response.data, reason.response.headers, config.transformResponse);
      }
    }
    return Promise.reject(reason);
  });
};

var mergeConfig = function mergeConfig(config1, config2) {
  config2 = config2 || {};
  var config = {};
  var valueFromConfig2Keys = ['url', 'method', 'data'];
  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];
  var defaultToConfig2Keys = ['baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer', 'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName', 'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress', 'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent', 'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'];
  var directMergeKeys = ['validateStatus'];
  function getMergedValue(target, source) {
    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
      return utils.merge(target, source);
    } else if (utils.isPlainObject(source)) {
      return utils.merge({}, source);
    } else if (utils.isArray(source)) {
      return source.slice();
    }
    return source;
  }
  function mergeDeepProperties(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  }
  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    }
  });
  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);
  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });
  utils.forEach(directMergeKeys, function merge(prop) {
    if (prop in config2) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (prop in config1) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });
  var axiosKeys = valueFromConfig2Keys.concat(mergeDeepPropertiesKeys).concat(defaultToConfig2Keys).concat(directMergeKeys);
  var otherKeys = Object.keys(config1).concat(Object.keys(config2)).filter(function filterAxiosKeys(key) {
    return axiosKeys.indexOf(key) === -1;
  });
  utils.forEach(otherKeys, mergeDeepProperties);
  return config;
};

function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager_1(),
    response: new InterceptorManager_1()
  };
}
Axios.prototype.request = function request(config) {
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }
  config = mergeConfig(this.defaults, config);
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);
  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });
  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });
  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }
  return promise;
};
Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  Axios.prototype[method] = function (url, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: (config || {}).data
    }));
  };
});
utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  Axios.prototype[method] = function (url, data, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});
var Axios_1 = Axios;

function Cancel(message) {
  this.message = message;
}
Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};
Cancel.prototype.__CANCEL__ = true;
var Cancel_1 = Cancel;

function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }
  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });
  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      return;
    }
    token.reason = new Cancel_1(message);
    resolvePromise(token.reason);
  });
}
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};
var CancelToken_1 = CancelToken;

var spread = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};

var isAxiosError = function isAxiosError(payload) {
  return typeof payload === 'object' && payload.isAxiosError === true;
};

function createInstance(defaultConfig) {
  var context = new Axios_1(defaultConfig);
  var instance = bind(Axios_1.prototype.request, context);
  utils.extend(instance, Axios_1.prototype, context);
  utils.extend(instance, context);
  return instance;
}
var axios = createInstance(defaults_1);
axios.Axios = Axios_1;
axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
};
axios.Cancel = Cancel_1;
axios.CancelToken = CancelToken_1;
axios.isCancel = isCancel;
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = spread;
axios.isAxiosError = isAxiosError;
var axios_1 = axios;
var _default = axios;
axios_1.default = _default;

var axios$1 = axios_1;

axios$1.interceptors.response.use(res => res, err => {
  var _err$response, _err$response$data;
  const isEmployee = window.location.pathname.split("/").includes("employee");
  if (err !== null && err !== void 0 && (_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && _err$response$data.Errors) {
    for (const error of err.response.data.Errors) {
      var _error$message, _error$message$toLowe, _error$message2, _error$message2$toLow;
      if (error.message.includes("InvalidAccessTokenException")) {
        localStorage.clear();
        sessionStorage.clear();
        window.location.href = (isEmployee ? "/digit-ui/employee/user/login" : "/digit-ui/citizen/login") + `?from=${encodeURIComponent(window.location.pathname + window.location.search)}`;
      } else if (error !== null && error !== void 0 && (_error$message = error.message) !== null && _error$message !== void 0 && (_error$message$toLowe = _error$message.toLowerCase()) !== null && _error$message$toLowe !== void 0 && _error$message$toLowe.includes("internal server error") || error !== null && error !== void 0 && (_error$message2 = error.message) !== null && _error$message2 !== void 0 && (_error$message2$toLow = _error$message2.toLowerCase()) !== null && _error$message2$toLow !== void 0 && _error$message2$toLow.includes("some error occured")) {
        window.location.href = (isEmployee ? "/digit-ui/employee/user/error" : "/digit-ui/citizen/error") + `?type=maintenance&from=${encodeURIComponent(window.location.pathname + window.location.search)}`;
      } else if (error.message.includes("ZuulRuntimeException")) {
        window.location.href = (isEmployee ? "/digit-ui/employee/user/error" : "/digit-ui/citizen/error") + `?type=notfound&from=${encodeURIComponent(window.location.pathname + window.location.search)}`;
      }
    }
  }
  throw err;
});
const requestInfo = () => {
  var _Digit$UserService$ge;
  return {
    authToken: ((_Digit$UserService$ge = Digit.UserService.getUser()) === null || _Digit$UserService$ge === void 0 ? void 0 : _Digit$UserService$ge.access_token) || null
  };
};
const authHeaders = () => {
  var _Digit$UserService$ge2;
  return {
    "auth-token": ((_Digit$UserService$ge2 = Digit.UserService.getUser()) === null || _Digit$UserService$ge2 === void 0 ? void 0 : _Digit$UserService$ge2.access_token) || null
  };
};
const userServiceData = () => {
  var _Digit$UserService$ge3;
  return {
    userInfo: (_Digit$UserService$ge3 = Digit.UserService.getUser()) === null || _Digit$UserService$ge3 === void 0 ? void 0 : _Digit$UserService$ge3.info
  };
};
window.Digit = window.Digit || {};
window.Digit = {
  ...window.Digit,
  RequestCache: window.Digit.RequestCache || {}
};
const Request = async ({
  method: _method = "POST",
  url,
  data: _data = {},
  headers: _headers = {},
  useCache: _useCache = false,
  params: _params = {},
  auth,
  urlParams: _urlParams = {},
  userService,
  locale: _locale = true,
  authHeader: _authHeader = false,
  setTimeParam: _setTimeParam = true,
  userDownload: _userDownload = false,
  noRequestInfo: _noRequestInfo = false,
  multipartFormData: _multipartFormData = false,
  multipartData: _multipartData = {},
  reqTimestamp: _reqTimestamp = false,
  plainAccessRequest: _plainAccessRequest = null
}) => {
  var _window, _window$globalConfigs, _window2, _window2$globalConfig, _res$response;
  if (_method.toUpperCase() === "POST") {
    var _Digit$UserService$ge4;
    const ts = new Date().getTime();
    _data.RequestInfo = {
      apiId: "Rainmaker"
    };
    if (auth || !!((_Digit$UserService$ge4 = Digit.UserService.getUser()) !== null && _Digit$UserService$ge4 !== void 0 && _Digit$UserService$ge4.access_token)) {
      _data.RequestInfo = {
        ..._data.RequestInfo,
        ...requestInfo()
      };
    }
    if (userService) {
      _data.RequestInfo = {
        ..._data.RequestInfo,
        ...userServiceData()
      };
    }
    if (_locale) {
      _data.RequestInfo = {
        ..._data.RequestInfo,
        msgId: `${ts}|${Digit.StoreData.getCurrentLanguage()}`
      };
    }
    if (_noRequestInfo) {
      delete _data.RequestInfo;
    }
    if (_reqTimestamp) {
      _data.RequestInfo = {
        ..._data.RequestInfo,
        ts: Number(ts)
      };
    }
    const privacy = Digit.Utils.getPrivacyObject();
    if (privacy && !url.includes("/edcr/rest/dcr/") && !_noRequestInfo) {
      _data.RequestInfo = {
        ..._data.RequestInfo,
        plainAccessRequest: {
          ...privacy
        }
      };
    }
    if (_plainAccessRequest) {
      _data.RequestInfo = {
        ..._data.RequestInfo,
        plainAccessRequest: _plainAccessRequest
      };
    }
  }
  const headers1 = {
    "Content-Type": "application/json",
    Accept: (_window = window) !== null && _window !== void 0 && (_window$globalConfigs = _window.globalConfigs) !== null && _window$globalConfigs !== void 0 && _window$globalConfigs.getConfig("ENABLE_SINGLEINSTANCE") ? "application/pdf,application/json" : "application/pdf"
  };
  if (_authHeader) _headers = {
    ..._headers,
    ...authHeaders()
  };
  if (_userDownload) _headers = {
    ..._headers,
    ...headers1
  };
  let key = "";
  if (_useCache) {
    key = `${_method.toUpperCase()}.${url}.${btoa(escape(JSON.stringify(_params, null, 0)))}.${btoa(escape(JSON.stringify(_data, null, 0)))}`;
    const value = window.Digit.RequestCache[key];
    if (value) {
      return value;
    }
  } else if (_setTimeParam) {
    _params._ = Date.now();
  }
  let _url = url.split("/").map(path => {
    var _path$split;
    let key = (_path$split = path.split(":")) === null || _path$split === void 0 ? void 0 : _path$split[1];
    return _urlParams[key] ? _urlParams[key] : path;
  }).join("/");
  if (_multipartFormData) {
    var _Digit$UserService$ge5;
    const multipartFormDataRes = await axios$1({
      method: _method,
      url: _url,
      data: _multipartData.data,
      params: _params,
      headers: {
        "Content-Type": "multipart/form-data",
        "auth-token": ((_Digit$UserService$ge5 = Digit.UserService.getUser()) === null || _Digit$UserService$ge5 === void 0 ? void 0 : _Digit$UserService$ge5.access_token) || null
      }
    });
    return multipartFormDataRes;
  }
  const tenantInfo = Digit.SessionStorage.get("userType") === "citizen" ? Digit.ULBService.getStateId() : Digit.ULBService.getCurrentTenantId() || Digit.ULBService.getStateId();
  if (!_params["tenantId"] && (_window2 = window) !== null && _window2 !== void 0 && (_window2$globalConfig = _window2.globalConfigs) !== null && _window2$globalConfig !== void 0 && _window2$globalConfig.getConfig("ENABLE_SINGLEINSTANCE")) {
    _params["tenantId"] = tenantInfo;
  }
  const res = _userDownload ? await axios$1({
    method: _method,
    url: _url,
    data: _data,
    params: _params,
    headers: _headers,
    responseType: "arraybuffer"
  }) : await axios$1({
    method: _method,
    url: _url,
    data: _data,
    params: _params,
    headers: _headers
  });
  if (_userDownload) return res;
  const returnData = (res === null || res === void 0 ? void 0 : res.data) || (res === null || res === void 0 ? void 0 : (_res$response = res.response) === null || _res$response === void 0 ? void 0 : _res$response.data) || {};
  if (_useCache && res !== null && res !== void 0 && res.data && Object.keys(returnData).length !== 0) {
    window.Digit.RequestCache[key] = returnData;
  }
  return returnData;
};

const TLService = {
  create: (details, tenantId) => Request({
    url: Urls.tl.create,
    data: details,
    useCache: false,
    setTimeParam: false,
    userService: true,
    method: "POST",
    params: {},
    auth: true
  }),
  search: details => Request({
    url: Urls.tl.search,
    useCache: false,
    setTimeParam: false,
    userService: true,
    method: "POST",
    params: details,
    auth: true
  }),
  search_bill: ({
    tenantId,
    filters
  }) => Request({
    url: filters.businesService !== "PT" ? Urls.mcollect.search_bill : Urls.mcollect.search_bill_pt,
    useCache: false,
    method: "POST",
    data: {
      searchCriteria: {
        tenantId,
        ...filters
      }
    },
    auth: true,
    userService: false
  }),
  TLsearch: ({
    tenantId,
    filters
  }) => Request({
    url: Urls.tl.search,
    useCache: false,
    method: "POST",
    auth: true,
    userService: false,
    params: {
      tenantId,
      ...filters
    }
  }),
  update: (details, tenantId) => Request({
    url: Urls.tl.update,
    data: details,
    useCache: false,
    setTimeParam: false,
    userService: true,
    method: "POST",
    params: {},
    auth: true
  }),
  billingslab: ({
    tenantId,
    filters,
    auth
  }) => Request({
    url: Urls.tl.billingslab,
    useCache: false,
    setTimeParam: false,
    userService: true,
    method: "POST",
    params: {
      tenantId
    },
    auth: true
  }),
  TLOpensearch: ({
    tenantId,
    filters
  }) => Request({
    url: Urls.tl.search,
    useCache: false,
    method: "POST",
    auth: false,
    userService: false,
    params: {
      tenantId,
      ...filters
    }
  })
};

const stringReplaceAll$1 = (str = "", searcher = "", replaceWith = "") => {
  if (searcher == "") return str;
  while (str.includes(searcher)) {
    str = str.replace(searcher, replaceWith);
  }
  return str;
};
const convertEpochToDate$1 = dateEpoch => {
  if (dateEpoch) {
    const dateFromApi = new Date(dateEpoch);
    let month = dateFromApi.getMonth() + 1;
    let day = dateFromApi.getDate();
    let year = dateFromApi.getFullYear();
    month = (month > 9 ? "" : "0") + month;
    day = (day > 9 ? "" : "0") + day;
    return `${day}/${month}/${year}`;
  } else {
    return null;
  }
};
const getAddress = (address, t) => {
  return `${address !== null && address !== void 0 && address.doorNo ? `${address === null || address === void 0 ? void 0 : address.doorNo}, ` : ""} ${address !== null && address !== void 0 && address.street ? `${address === null || address === void 0 ? void 0 : address.street}, ` : ""}${address !== null && address !== void 0 && address.landmark ? `${address === null || address === void 0 ? void 0 : address.landmark}, ` : ""}${t(Digit.Utils.pt.getMohallaLocale(address === null || address === void 0 ? void 0 : address.locality.code, address === null || address === void 0 ? void 0 : address.tenantId))}, ${t(Digit.Utils.pt.getCityLocale(address === null || address === void 0 ? void 0 : address.tenantId))}${address !== null && address !== void 0 && address.pincode && t(address === null || address === void 0 ? void 0 : address.pincode) ? `, ${address.pincode}` : " "}`;
};
const TLSearch = {
  all: async (tenantId, filters = {}) => {
    const response = await TLService.TLsearch({
      tenantId,
      filters
    });
    return response;
  },
  application: async (tenantId, filters = {}) => {
    const response = await TLService.TLsearch({
      tenantId,
      filters
    });
    return response.Licenses[0];
  },
  numberOfApplications: async (tenantId, filters = {}) => {
    const response = await TLService.TLsearch({
      tenantId,
      filters
    });
    return response.Licenses;
  },
  applicationDetails: async (t, tenantId, applicationNumber, userType) => {
    var _response$tradeLicens, _response$tradeLicens2, _response$tradeLicens3, _response$tradeLicens4, _response$tradeLicens5, _response$tradeLicens6, _applicationNoAndChan, _response$tradeLicens7, _response$tradeLicens8, _response$tradeLicens9, _response$tradeLicens10, _response$tradeLicens11, _response$tradeLicens12, _response$tradeLicens13, _response$tradeLicens14, _response$tradeLicens15, _response$tradeLicens16, _response$tradeLicens17, _response$tradeLicens18, _response$tradeLicens19, _response$tradeLicens20, _response$tradeLicens21, _propertyDetails$Prop2, _propertyDetails$Prop3, _propertyDetails$Prop4, _propertyDetails$Prop5, _propertyDetails$Prop6, _propertyDetails$Prop7, _propertyDetails$Prop8, _propertyDetails$Prop9, _propertyDetails$Prop10, _response$tradeLicens22, _response$tradeLicens23, _response$tradeLicens24, _response$tradeLicens25, _response$tradeLicens26, _response$tradeLicens27, _response$tradeLicens28, _response$tradeLicens29, _response$tradeLicens30, _response$tradeLicens31, _response$tradeLicens32, _response$tradeLicens33, _response$tradeLicens34, _response$tradeLicens35, _response$tradeLicens36, _response$tradeLicens37, _response$tradeLicens38, _response$tradeLicens39, _response$tradeLicens54, _response$tradeLicens55, _response$tradeLicens56, _response$tradeLicens57, _response$tradeLicens60, _response$tradeLicens61, _response$tradeLicens64, _response$tradeLicens65, _propertyDetails$Prop11, _propertyDetails$Prop12, _response$tradeLicens66;
    const filter = {
      applicationNumber
    };
    const response = await TLSearch.application(tenantId, filter);
    const propertyDetails = (response === null || response === void 0 ? void 0 : (_response$tradeLicens = response.tradeLicenseDetail) === null || _response$tradeLicens === void 0 ? void 0 : (_response$tradeLicens2 = _response$tradeLicens.additionalDetail) === null || _response$tradeLicens2 === void 0 ? void 0 : _response$tradeLicens2.propertyId) && (await Digit.PTService.search({
      tenantId,
      filters: {
        propertyIds: response === null || response === void 0 ? void 0 : (_response$tradeLicens3 = response.tradeLicenseDetail) === null || _response$tradeLicens3 === void 0 ? void 0 : (_response$tradeLicens4 = _response$tradeLicens3.additionalDetail) === null || _response$tradeLicens4 === void 0 ? void 0 : _response$tradeLicens4.propertyId
      }
    }));
    let numOfApplications = [];
    if (response !== null && response !== void 0 && response.licenseNumber) {
      const licenseNumbers = response === null || response === void 0 ? void 0 : response.licenseNumber;
      const filters = {
        licenseNumbers,
        offset: 0
      };
      numOfApplications = await TLSearch.numberOfApplications(tenantId, filters);
    }
    let propertyAddress = "";
    if (propertyDetails && propertyDetails !== null && propertyDetails !== void 0 && propertyDetails.Properties.length) {
      var _propertyDetails$Prop;
      propertyAddress = getAddress(propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop = propertyDetails.Properties[0]) === null || _propertyDetails$Prop === void 0 ? void 0 : _propertyDetails$Prop.address, t);
    }
    let employeeResponse = [];
    let applicationNoAndChannel = {
      title: " ",
      asSectionHeader: false,
      values: [{
        title: "TL_LOCALIZATION_APPLICATION_NO",
        value: response !== null && response !== void 0 && response.applicationNumber ? `${response === null || response === void 0 ? void 0 : response.applicationNumber}` : "NA"
      }, {
        title: "TL_APPLICATION_CHALLAN_LABEL",
        value: response !== null && response !== void 0 && (_response$tradeLicens5 = response.tradeLicenseDetail) !== null && _response$tradeLicens5 !== void 0 && _response$tradeLicens5.channel ? `TL_CHANNEL_${response === null || response === void 0 ? void 0 : (_response$tradeLicens6 = response.tradeLicenseDetail) === null || _response$tradeLicens6 === void 0 ? void 0 : _response$tradeLicens6.channel}` : "NA"
      }]
    };
    if (response !== null && response !== void 0 && response.licenseNumber && (applicationNoAndChannel === null || applicationNoAndChannel === void 0 ? void 0 : (_applicationNoAndChan = applicationNoAndChannel.values.filter(ob => (ob === null || ob === void 0 ? void 0 : ob.title) === "TL_LOCALIZATION_LICENSE_NO")) === null || _applicationNoAndChan === void 0 ? void 0 : _applicationNoAndChan.length) <= 0) {
      applicationNoAndChannel === null || applicationNoAndChannel === void 0 ? void 0 : applicationNoAndChannel.values.push({
        title: "TL_LOCALIZATION_LICENSE_NO",
        value: response !== null && response !== void 0 && response.licenseNumber ? `${response === null || response === void 0 ? void 0 : response.licenseNumber}` : "NA"
      });
    }
    const tradedetails = {
      title: "TL_COMMON_TR_DETAILS",
      asSectionHeader: true,
      values: [{
        title: "TL_FINANCIAL_YEAR_LABEL",
        value: response !== null && response !== void 0 && response.financialYear ? `FY${response === null || response === void 0 ? void 0 : response.financialYear}` : "NA"
      }, {
        title: "TL_NEW_TRADE_DETAILS_LIC_TYPE_LABEL",
        value: response !== null && response !== void 0 && response.licenseType ? `TRADELICENSE_LICENSETYPE_${response === null || response === void 0 ? void 0 : response.licenseType}` : "NA"
      }, {
        title: "TL_COMMON_TABLE_COL_TRD_NAME",
        value: response === null || response === void 0 ? void 0 : response.tradeName
      }, {
        title: "TL_NEW_TRADE_DETAILS_STRUCT_TYPE_LABEL",
        value: response !== null && response !== void 0 && (_response$tradeLicens7 = response.tradeLicenseDetail) !== null && _response$tradeLicens7 !== void 0 && _response$tradeLicens7.structureType ? `COMMON_MASTERS_STRUCTURETYPE_${response === null || response === void 0 ? void 0 : (_response$tradeLicens8 = response.tradeLicenseDetail) === null || _response$tradeLicens8 === void 0 ? void 0 : (_response$tradeLicens9 = _response$tradeLicens8.structureType) === null || _response$tradeLicens9 === void 0 ? void 0 : _response$tradeLicens9.split(".")[0]}` : "NA"
      }, {
        title: "TL_NEW_TRADE_DETAILS_STRUCT_SUB_TYPE_LABEL",
        value: response !== null && response !== void 0 && (_response$tradeLicens10 = response.tradeLicenseDetail) !== null && _response$tradeLicens10 !== void 0 && _response$tradeLicens10.structureType ? `COMMON_MASTERS_STRUCTURETYPE_${stringReplaceAll$1(response === null || response === void 0 ? void 0 : (_response$tradeLicens11 = response.tradeLicenseDetail) === null || _response$tradeLicens11 === void 0 ? void 0 : _response$tradeLicens11.structureType, ".", "_")}` : "NA"
      }, {
        title: "TL_NEW_TRADE_DETAILS_TRADE_COMM_DATE_LABEL",
        value: response !== null && response !== void 0 && response.commencementDate ? convertEpochToDate$1(response === null || response === void 0 ? void 0 : response.commencementDate) : "NA"
      }, {
        title: "TL_NEW_GST_NUMBER_LABEL",
        value: (response === null || response === void 0 ? void 0 : (_response$tradeLicens12 = response.tradeLicenseDetail) === null || _response$tradeLicens12 === void 0 ? void 0 : (_response$tradeLicens13 = _response$tradeLicens12.additionalDetail) === null || _response$tradeLicens13 === void 0 ? void 0 : _response$tradeLicens13.gstNo) || (response === null || response === void 0 ? void 0 : (_response$tradeLicens14 = response.tradeLicenseDetail) === null || _response$tradeLicens14 === void 0 ? void 0 : (_response$tradeLicens15 = _response$tradeLicens14.additionalDetail) === null || _response$tradeLicens15 === void 0 ? void 0 : _response$tradeLicens15.tradeGstNo) || "NA"
      }, {
        title: "TL_NEW_OPERATIONAL_SQ_FT_AREA_LABEL",
        value: (response === null || response === void 0 ? void 0 : (_response$tradeLicens16 = response.tradeLicenseDetail) === null || _response$tradeLicens16 === void 0 ? void 0 : _response$tradeLicens16.operationalArea) || "NA"
      }, {
        title: "TL_NEW_NUMBER_OF_EMPLOYEES_LABEL",
        value: (response === null || response === void 0 ? void 0 : (_response$tradeLicens17 = response.tradeLicenseDetail) === null || _response$tradeLicens17 === void 0 ? void 0 : _response$tradeLicens17.noOfEmployees) || "NA"
      }]
    };
    const tradeUnits = {
      title: "TL_TRADE_UNITS_HEADER",
      additionalDetails: {
        units: response === null || response === void 0 ? void 0 : (_response$tradeLicens18 = response.tradeLicenseDetail) === null || _response$tradeLicens18 === void 0 ? void 0 : (_response$tradeLicens19 = _response$tradeLicens18.tradeUnits) === null || _response$tradeLicens19 === void 0 ? void 0 : _response$tradeLicens19.map((unit, index) => {
          var _unit$tradeType, _unit$tradeType2;
          let tradeSubType = stringReplaceAll$1(unit === null || unit === void 0 ? void 0 : unit.tradeType, ".", "_");
          tradeSubType = stringReplaceAll$1(tradeSubType, "-", "_");
          return {
            title: "TL_UNIT_HEADER",
            values: [{
              title: "TRADELICENSE_TRADECATEGORY_LABEL",
              value: unit !== null && unit !== void 0 && unit.tradeType ? `TRADELICENSE_TRADETYPE_${unit === null || unit === void 0 ? void 0 : (_unit$tradeType = unit.tradeType) === null || _unit$tradeType === void 0 ? void 0 : _unit$tradeType.split(".")[0]}` : "NA"
            }, {
              title: "TRADELICENSE_TRADETYPE_LABEL",
              value: unit !== null && unit !== void 0 && unit.tradeType ? `TRADELICENSE_TRADETYPE_${unit === null || unit === void 0 ? void 0 : (_unit$tradeType2 = unit.tradeType) === null || _unit$tradeType2 === void 0 ? void 0 : _unit$tradeType2.split(".")[1]}` : "NA"
            }, {
              title: "TL_NEW_TRADE_SUB_TYPE_LABEL",
              value: tradeSubType ? `TRADELICENSE_TRADETYPE_${tradeSubType}` : "NA"
            }, {
              title: "TL_NEW_TRADE_DETAILS_UOM_UOM_PLACEHOLDER",
              value: (unit === null || unit === void 0 ? void 0 : unit.uom) || "NA"
            }, {
              title: "TL_NEW_TRADE_DETAILS_UOM_VALUE_LABEL",
              value: (unit === null || unit === void 0 ? void 0 : unit.uomValue) || "NA"
            }]
          };
        })
      }
    };
    const accessories = {
      title: "TL_NEW_TRADE_DETAILS_HEADER_ACC",
      additionalDetails: {
        accessories: response === null || response === void 0 ? void 0 : (_response$tradeLicens20 = response.tradeLicenseDetail) === null || _response$tradeLicens20 === void 0 ? void 0 : (_response$tradeLicens21 = _response$tradeLicens20.accessories) === null || _response$tradeLicens21 === void 0 ? void 0 : _response$tradeLicens21.map((unit, index) => {
          let accessoryCategory = "NA";
          if (unit !== null && unit !== void 0 && unit.accessoryCategory) {
            accessoryCategory = stringReplaceAll$1(unit === null || unit === void 0 ? void 0 : unit.accessoryCategory, ".", "_");
            accessoryCategory = `TRADELICENSE_ACCESSORIESCATEGORY_${stringReplaceAll$1(accessoryCategory, "-", "_")}`;
          }
          return {
            title: "TL_ACCESSORY_LABEL",
            values: [{
              title: "TL_NEW_TRADE_DETAILS_ACC_LABEL",
              value: accessoryCategory
            }, {
              title: "TL_NEW_TRADE_DETAILS_UOM_UOM_PLACEHOLDER",
              value: (unit === null || unit === void 0 ? void 0 : unit.uom) || "NA"
            }, {
              title: "TL_NEW_TRADE_DETAILS_UOM_VALUE_LABEL",
              value: (unit === null || unit === void 0 ? void 0 : unit.uomValue) || "NA"
            }, {
              title: "TL_ACCESSORY_COUNT_LABEL",
              value: (unit === null || unit === void 0 ? void 0 : unit.count) || "NA"
            }]
          };
        })
      }
    };
    const PropertyDetail = {
      title: "PT_DETAILS",
      values: [{
        title: "TL_PROPERTY_ID",
        value: (propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop2 = propertyDetails.Properties) === null || _propertyDetails$Prop2 === void 0 ? void 0 : (_propertyDetails$Prop3 = _propertyDetails$Prop2[0]) === null || _propertyDetails$Prop3 === void 0 ? void 0 : _propertyDetails$Prop3.propertyId) || "NA"
      }, {
        title: "PT_OWNER_NAME",
        value: (propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop4 = propertyDetails.Properties) === null || _propertyDetails$Prop4 === void 0 ? void 0 : (_propertyDetails$Prop5 = _propertyDetails$Prop4[0]) === null || _propertyDetails$Prop5 === void 0 ? void 0 : (_propertyDetails$Prop6 = _propertyDetails$Prop5.owners[0]) === null || _propertyDetails$Prop6 === void 0 ? void 0 : _propertyDetails$Prop6.name) || "NA"
      }, {
        title: "PROPERTY_ADDRESS",
        value: propertyAddress || "NA"
      }, {
        title: "TL_VIEW_PROPERTY_DETAIL",
        to: `/digit-ui/employee/commonpt/view-property?propertyId=${propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop7 = propertyDetails.Properties) === null || _propertyDetails$Prop7 === void 0 ? void 0 : (_propertyDetails$Prop8 = _propertyDetails$Prop7[0]) === null || _propertyDetails$Prop8 === void 0 ? void 0 : _propertyDetails$Prop8.propertyId}&tenantId=${propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop9 = propertyDetails.Properties) === null || _propertyDetails$Prop9 === void 0 ? void 0 : (_propertyDetails$Prop10 = _propertyDetails$Prop9[0]) === null || _propertyDetails$Prop10 === void 0 ? void 0 : _propertyDetails$Prop10.tenantId}&from=TL_APPLICATION_DETAILS_LABEL`,
        value: "",
        isLink: true
      }]
    };
    const cityOfApp = cloneDeep_1(response === null || response === void 0 ? void 0 : (_response$tradeLicens22 = response.tradeLicenseDetail) === null || _response$tradeLicens22 === void 0 ? void 0 : (_response$tradeLicens23 = _response$tradeLicens22.address) === null || _response$tradeLicens23 === void 0 ? void 0 : _response$tradeLicens23.city);
    const localityCode = cloneDeep_1(response === null || response === void 0 ? void 0 : (_response$tradeLicens24 = response.tradeLicenseDetail) === null || _response$tradeLicens24 === void 0 ? void 0 : (_response$tradeLicens25 = _response$tradeLicens24.address) === null || _response$tradeLicens25 === void 0 ? void 0 : (_response$tradeLicens26 = _response$tradeLicens25.locality) === null || _response$tradeLicens26 === void 0 ? void 0 : _response$tradeLicens26.code);
    const tradeAddress = {
      title: "TL_CHECK_ADDRESS",
      values: [{
        title: "CORE_COMMON_PINCODE",
        value: (response === null || response === void 0 ? void 0 : (_response$tradeLicens27 = response.tradeLicenseDetail) === null || _response$tradeLicens27 === void 0 ? void 0 : (_response$tradeLicens28 = _response$tradeLicens27.address) === null || _response$tradeLicens28 === void 0 ? void 0 : _response$tradeLicens28.pincode) || "NA"
      }, {
        title: "MYCITY_CODE_LABEL",
        value: (response === null || response === void 0 ? void 0 : (_response$tradeLicens29 = response.tradeLicenseDetail) === null || _response$tradeLicens29 === void 0 ? void 0 : (_response$tradeLicens30 = _response$tradeLicens29.address) === null || _response$tradeLicens30 === void 0 ? void 0 : _response$tradeLicens30.city) || "NA"
      }, {
        title: "TL_LOCALIZATION_LOCALITY",
        value: `${stringReplaceAll$1(cityOfApp === null || cityOfApp === void 0 ? void 0 : cityOfApp.toUpperCase(), ".", "_")}_REVENUE_${localityCode}`
      }, {
        title: "TL_LOCALIZATION_BUILDING_NO",
        value: (response === null || response === void 0 ? void 0 : (_response$tradeLicens31 = response.tradeLicenseDetail) === null || _response$tradeLicens31 === void 0 ? void 0 : (_response$tradeLicens32 = _response$tradeLicens31.address) === null || _response$tradeLicens32 === void 0 ? void 0 : _response$tradeLicens32.doorNo) || "NA"
      }, {
        title: "TL_LOCALIZATION_STREET_NAME",
        value: (response === null || response === void 0 ? void 0 : (_response$tradeLicens33 = response.tradeLicenseDetail) === null || _response$tradeLicens33 === void 0 ? void 0 : (_response$tradeLicens34 = _response$tradeLicens33.address) === null || _response$tradeLicens34 === void 0 ? void 0 : _response$tradeLicens34.street) || "NA"
      }]
    };
    const checkOwnerLength = (response === null || response === void 0 ? void 0 : (_response$tradeLicens35 = response.tradeLicenseDetail) === null || _response$tradeLicens35 === void 0 ? void 0 : (_response$tradeLicens36 = _response$tradeLicens35.owners) === null || _response$tradeLicens36 === void 0 ? void 0 : _response$tradeLicens36.length) || 1;
    const owners = response !== null && response !== void 0 && (_response$tradeLicens37 = response.tradeLicenseDetail) !== null && _response$tradeLicens37 !== void 0 && _response$tradeLicens37.subOwnerShipCategory.includes("INSTITUTIONAL") ? {
      title: "ES_NEW_APPLICATION_OWNERSHIP_DETAILS",
      additionalDetails: {
        owners: response === null || response === void 0 ? void 0 : (_response$tradeLicens38 = response.tradeLicenseDetail) === null || _response$tradeLicens38 === void 0 ? void 0 : (_response$tradeLicens39 = _response$tradeLicens38.owners) === null || _response$tradeLicens39 === void 0 ? void 0 : _response$tradeLicens39.map((owner, index) => {
          var _response$tradeLicens40, _response$tradeLicens41, _response$tradeLicens42, _response$tradeLicens43, _response$tradeLicens44, _response$tradeLicens45, _response$tradeLicens46, _response$tradeLicens47, _response$tradeLicens48, _response$tradeLicens49, _response$tradeLicens50, _response$tradeLicens51, _response$tradeLicens52, _response$tradeLicens53;
          let subOwnerShipCategory = response !== null && response !== void 0 && (_response$tradeLicens40 = response.tradeLicenseDetail) !== null && _response$tradeLicens40 !== void 0 && _response$tradeLicens40.subOwnerShipCategory ? `COMMON_MASTERS_OWNERSHIPCATEGORY_${stringReplaceAll$1(response === null || response === void 0 ? void 0 : (_response$tradeLicens41 = response.tradeLicenseDetail) === null || _response$tradeLicens41 === void 0 ? void 0 : _response$tradeLicens41.subOwnerShipCategory, ".", "_")}` : "NA";
          return {
            title: Number(checkOwnerLength) > 1 ? "TL_PAYMENT_PAID_BY_PLACEHOLDER" : "",
            values: [{
              title: "TL_NEW_OWNER_DETAILS_OWNERSHIP_TYPE_LABEL",
              value: subOwnerShipCategory
            }, {
              title: "TL_INSTITUTION_NAME_LABEL",
              value: (response === null || response === void 0 ? void 0 : (_response$tradeLicens42 = response.tradeLicenseDetail) === null || _response$tradeLicens42 === void 0 ? void 0 : (_response$tradeLicens43 = _response$tradeLicens42.institution) === null || _response$tradeLicens43 === void 0 ? void 0 : _response$tradeLicens43.instituionName) || "NA"
            }, {
              title: "TL_NEW_OWNER_DESIG_LABEL",
              value: (response === null || response === void 0 ? void 0 : (_response$tradeLicens44 = response.tradeLicenseDetail) === null || _response$tradeLicens44 === void 0 ? void 0 : (_response$tradeLicens45 = _response$tradeLicens44.institution) === null || _response$tradeLicens45 === void 0 ? void 0 : _response$tradeLicens45.designation) || "NA"
            }, {
              title: "TL_TELEPHONE_NUMBER_LABEL",
              value: response !== null && response !== void 0 && (_response$tradeLicens46 = response.tradeLicenseDetail) !== null && _response$tradeLicens46 !== void 0 && (_response$tradeLicens47 = _response$tradeLicens46.institution) !== null && _response$tradeLicens47 !== void 0 && _response$tradeLicens47.contactNo || (response === null || response === void 0 ? void 0 : (_response$tradeLicens48 = response.tradeLicenseDetail) === null || _response$tradeLicens48 === void 0 ? void 0 : (_response$tradeLicens49 = _response$tradeLicens48.institution) === null || _response$tradeLicens49 === void 0 ? void 0 : _response$tradeLicens49.contactNo) !== "" ? response === null || response === void 0 ? void 0 : (_response$tradeLicens50 = response.tradeLicenseDetail) === null || _response$tradeLicens50 === void 0 ? void 0 : (_response$tradeLicens51 = _response$tradeLicens50.institution) === null || _response$tradeLicens51 === void 0 ? void 0 : _response$tradeLicens51.contactNo : "NA"
            }, {
              title: "TL_OWNER_S_MOBILE_NUM_LABEL",
              value: (owner === null || owner === void 0 ? void 0 : owner.mobileNumber) || "NA"
            }, {
              title: "TL_NEW_OWNER_DETAILS_NAME_LABEL",
              value: (response === null || response === void 0 ? void 0 : (_response$tradeLicens52 = response.tradeLicenseDetail) === null || _response$tradeLicens52 === void 0 ? void 0 : (_response$tradeLicens53 = _response$tradeLicens52.institution) === null || _response$tradeLicens53 === void 0 ? void 0 : _response$tradeLicens53.name) || "NA"
            }, {
              title: "TL_NEW_OWNER_DETAILS_EMAIL_LABEL",
              value: owner !== null && owner !== void 0 && owner.emailId || (owner === null || owner === void 0 ? void 0 : owner.emailId) !== "" ? owner === null || owner === void 0 ? void 0 : owner.emailId : "NA"
            }]
          };
        }),
        documents: [{
          title: "PT_COMMON_DOCS",
          values: response === null || response === void 0 ? void 0 : (_response$tradeLicens54 = response.tradeLicenseDetail) === null || _response$tradeLicens54 === void 0 ? void 0 : (_response$tradeLicens55 = _response$tradeLicens54.applicationDocuments) === null || _response$tradeLicens55 === void 0 ? void 0 : _response$tradeLicens55.map(document => {
            return {
              title: `TL_NEW_${document === null || document === void 0 ? void 0 : document.documentType.replace(".", "_")}`,
              documentType: document === null || document === void 0 ? void 0 : document.documentType,
              documentUid: document === null || document === void 0 ? void 0 : document.documentUid,
              fileStoreId: document === null || document === void 0 ? void 0 : document.fileStoreId
            };
          })
        }]
      }
    } : {
      title: "ES_NEW_APPLICATION_OWNERSHIP_DETAILS",
      additionalDetails: {
        owners: response === null || response === void 0 ? void 0 : (_response$tradeLicens56 = response.tradeLicenseDetail) === null || _response$tradeLicens56 === void 0 ? void 0 : (_response$tradeLicens57 = _response$tradeLicens56.owners) === null || _response$tradeLicens57 === void 0 ? void 0 : _response$tradeLicens57.map((owner, index) => {
          var _response$tradeLicens58, _response$tradeLicens59;
          let subOwnerShipCategory = response !== null && response !== void 0 && (_response$tradeLicens58 = response.tradeLicenseDetail) !== null && _response$tradeLicens58 !== void 0 && _response$tradeLicens58.subOwnerShipCategory ? `COMMON_MASTERS_OWNERSHIPCATEGORY_${stringReplaceAll$1(response === null || response === void 0 ? void 0 : (_response$tradeLicens59 = response.tradeLicenseDetail) === null || _response$tradeLicens59 === void 0 ? void 0 : _response$tradeLicens59.subOwnerShipCategory, ".", "_")}` : "NA";
          return {
            title: Number(checkOwnerLength) > 1 ? "TL_PAYMENT_PAID_BY_PLACEHOLDER" : "",
            values: [{
              title: "TL_NEW_OWNER_DETAILS_OWNERSHIP_TYPE_LABEL",
              value: subOwnerShipCategory
            }, {
              title: "TL_OWNER_S_NAME_LABEL",
              value: (owner === null || owner === void 0 ? void 0 : owner.name) || "NA"
            }, {
              title: "TL_OWNER_S_MOBILE_NUM_LABEL",
              value: (owner === null || owner === void 0 ? void 0 : owner.mobileNumber) || "NA"
            }, {
              title: "TL_GUARDIAN_S_NAME_LABEL",
              value: (owner === null || owner === void 0 ? void 0 : owner.fatherOrHusbandName) || "NA"
            }, {
              title: "TL_RELATIONSHIP_WITH_GUARDIAN_LABEL",
              value: (owner === null || owner === void 0 ? void 0 : owner.relationship) || "NA"
            }, {
              title: "TL_NEW_OWNER_DETAILS_GENDER_LABEL",
              value: (owner === null || owner === void 0 ? void 0 : owner.gender) || "NA"
            }, {
              title: "TL_NEW_OWNER_DETAILS_EMAIL_LABEL",
              value: (owner === null || owner === void 0 ? void 0 : owner.emailId) || "NA"
            }, {
              title: "TL_OWNER_SPECIAL_CATEGORY",
              value: owner !== null && owner !== void 0 && owner.ownerType ? `COMMON_MASTERS_OWNERTYPE_${owner === null || owner === void 0 ? void 0 : owner.ownerType}` : "NA"
            }, {
              title: "TL_NEW_OWNER_DETAILS_ADDR_LABEL",
              value: (owner === null || owner === void 0 ? void 0 : owner.permanentAddress) || "NA"
            }]
          };
        }),
        documents: [{
          title: "PT_COMMON_DOCS",
          values: response === null || response === void 0 ? void 0 : (_response$tradeLicens60 = response.tradeLicenseDetail) === null || _response$tradeLicens60 === void 0 ? void 0 : (_response$tradeLicens61 = _response$tradeLicens60.applicationDocuments) === null || _response$tradeLicens61 === void 0 ? void 0 : _response$tradeLicens61.map(document => {
            return {
              title: `TL_NEW_${document === null || document === void 0 ? void 0 : document.documentType.replace(".", "_")}`,
              documentType: document === null || document === void 0 ? void 0 : document.documentType,
              documentUid: document === null || document === void 0 ? void 0 : document.documentUid,
              fileStoreId: document === null || document === void 0 ? void 0 : document.fileStoreId
            };
          })
        }]
      }
    };
    if ((response === null || response === void 0 ? void 0 : response.workflowCode) == "NewTL" && (response === null || response === void 0 ? void 0 : response.status) !== "APPROVED") {
      var _response$tradeLicens62, _response$tradeLicens63;
      const details = {
        title: "",
        values: [{
          title: "TL_COMMON_TABLE_COL_APP_NO",
          value: (response === null || response === void 0 ? void 0 : response.applicationNumber) || "NA"
        }, {
          title: "TL_APPLICATION_CHALLAN_LABEL",
          value: (response === null || response === void 0 ? void 0 : (_response$tradeLicens62 = response.tradeLicenseDetail) === null || _response$tradeLicens62 === void 0 ? void 0 : _response$tradeLicens62.channel) && `TL_CHANNEL_${response === null || response === void 0 ? void 0 : (_response$tradeLicens63 = response.tradeLicenseDetail) === null || _response$tradeLicens63 === void 0 ? void 0 : _response$tradeLicens63.channel}` || "NA"
        }]
      };
      response && employeeResponse.push(details);
    }
    response && employeeResponse.push(applicationNoAndChannel);
    response && employeeResponse.push(tradedetails);
    (response === null || response === void 0 ? void 0 : (_response$tradeLicens64 = response.tradeLicenseDetail) === null || _response$tradeLicens64 === void 0 ? void 0 : _response$tradeLicens64.tradeUnits) && employeeResponse.push(tradeUnits);
    (response === null || response === void 0 ? void 0 : (_response$tradeLicens65 = response.tradeLicenseDetail) === null || _response$tradeLicens65 === void 0 ? void 0 : _response$tradeLicens65.accessories) && employeeResponse.push(accessories);
    (propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop11 = propertyDetails.Properties) === null || _propertyDetails$Prop11 === void 0 ? void 0 : _propertyDetails$Prop11.length) > 0 && employeeResponse.push(PropertyDetail);
    response && !((propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop12 = propertyDetails.Properties) === null || _propertyDetails$Prop12 === void 0 ? void 0 : _propertyDetails$Prop12.length) > 0) && employeeResponse.push(tradeAddress);
    (response === null || response === void 0 ? void 0 : (_response$tradeLicens66 = response.tradeLicenseDetail) === null || _response$tradeLicens66 === void 0 ? void 0 : _response$tradeLicens66.owners) && employeeResponse.push(owners);
    return {
      tenantId: response.tenantId,
      applicationDetails: employeeResponse,
      additionalDetails: response === null || response === void 0 ? void 0 : response.additionalDetails,
      applicationData: response,
      numOfApplications: numOfApplications
    };
  }
};

const TradeLicenseList = ({
  application
}) => {
  var _application$tradeLic;
  sessionStorage.setItem("isDirectRenewal", true);
  const history = useHistory();
  const owners = application === null || application === void 0 ? void 0 : (_application$tradeLic = application.tradeLicenseDetail) === null || _application$tradeLic === void 0 ? void 0 : _application$tradeLic.owners;
  const {
    t
  } = useTranslation();
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const stateId = Digit.ULBService.getStateId();
  const [allowedToNextYear, setAllowedToNextYear] = useState(false);
  const [oldRenewalAppNo, setoldRenewalAppNo] = useState("");
  const [showToast, setShowToast] = useState(null);
  const [latestRenewalYearofAPP, setlatestRenewalYearofAPP] = useState("");
  const [numOfApplications, setNumberOfApplications] = useState([]);
  const {
    isLoading,
    data: fydata = {}
  } = Digit.Hooks.tl.useTradeLicenseMDMS(stateId, "egf-master", "FinancialYear");
  let mdmsFinancialYear = fydata["egf-master"] ? fydata["egf-master"].FinancialYear.filter(y => y.module === "TL") : [];
  let isrenewalspresent = false;
  const getToastMessages = () => {
    if (isrenewalspresent) {
      setShowToast({
        error: true,
        label: `${t("TL_RENEWAL_PRESENT_ERROR")}`
      });
    } else if (allowedToNextYear == false && oldRenewalAppNo && (application === null || application === void 0 ? void 0 : application.status) !== "MANUALEXPIRED") {
      setShowToast({
        error: true,
        label: `${t("TL_ERROR_TOAST_RENEWAL_1")} ${oldRenewalAppNo} ${t("TL_ERROR_TOAST_RENEWAL_2")}`
      });
    } else if ((application === null || application === void 0 ? void 0 : application.status) === "CANCELLED") {
      setShowToast({
        error: true,
        label: `${t("TL_ERROR_TOAST_RENEWAL_CANCEL")}`
      });
    } else if ((application === null || application === void 0 ? void 0 : application.status) === "MANUALEXPIRED") {
      setShowToast({
        error: true,
        label: `${t("TL_ERROR_TOAST_MUTUALLY_EXPIRED")}`
      });
    }
  };
  const onsubmit = async () => {
    var _numOfApplications$fi;
    const licenseNumbers = application === null || application === void 0 ? void 0 : application.licenseNumber;
    const filters = {
      licenseNumbers,
      offset: 0
    };
    let numOfApplications = await TLSearch.numberOfApplications(application === null || application === void 0 ? void 0 : application.tenantId, filters);
    let allowedToNextYear = false;
    isrenewalspresent = false;
    let financialYear = cloneDeep_1(application === null || application === void 0 ? void 0 : application.financialYear);
    const financialYearDate = financialYear === null || financialYear === void 0 ? void 0 : financialYear.split('-')[1];
    const finalFinancialYear = `20${Number(financialYearDate)}-${Number(financialYearDate) + 1}`;
    const latestFinancialYear = Math.max.apply(Math, numOfApplications === null || numOfApplications === void 0 ? void 0 : (_numOfApplications$fi = numOfApplications.filter(ob => ob.licenseNumber === (application === null || application === void 0 ? void 0 : application.licenseNumber))) === null || _numOfApplications$fi === void 0 ? void 0 : _numOfApplications$fi.map(function (o) {
      return parseInt(o.financialYear.split("-")[0]);
    }));
    const isAllowedToNextYear = numOfApplications === null || numOfApplications === void 0 ? void 0 : numOfApplications.filter(data => data.financialYear == finalFinancialYear && (data === null || data === void 0 ? void 0 : data.status) !== "REJECTED");
    let FY = getvalidfromdate("", mdmsFinancialYear).finYearRange;
    numOfApplications && numOfApplications.map(ob => {
      if (ob.financialYear === FY) {
        isrenewalspresent = true;
      }
    });
    if ((isAllowedToNextYear === null || isAllowedToNextYear === void 0 ? void 0 : isAllowedToNextYear.length) > 0) {
      var _isAllowedToNextYear$;
      setAllowedToNextYear(false);
      setoldRenewalAppNo(isAllowedToNextYear === null || isAllowedToNextYear === void 0 ? void 0 : (_isAllowedToNextYear$ = isAllowedToNextYear[0]) === null || _isAllowedToNextYear$ === void 0 ? void 0 : _isAllowedToNextYear$.applicationNumber);
    }
    if (!(application !== null && application !== void 0 && application.financialYear.includes(`${latestFinancialYear}`))) {
      setlatestRenewalYearofAPP(application === null || application === void 0 ? void 0 : application.financialYear);
    }
    if (!isAllowedToNextYear || (isAllowedToNextYear === null || isAllowedToNextYear === void 0 ? void 0 : isAllowedToNextYear.length) == 0) {
      allowedToNextYear = true;
      setAllowedToNextYear(true);
    }
    setNumberOfApplications(numOfApplications);
    if (isrenewalspresent || allowedToNextYear == false || (application === null || application === void 0 ? void 0 : application.status) === "CANCELLED" || (application === null || application === void 0 ? void 0 : application.status) === "MANUALEXPIRED") getToastMessages();else history.push(`/digit-ui/citizen/tl/tradelicence/renew-trade/${application.licenseNumber}/${application.tenantId}`);
  };
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(KeyNote, {
    keyValue: t("TL_LOCALIZATION_TRADE_NAME"),
    note: application.tradeName
  }), /*#__PURE__*/React.createElement(KeyNote, {
    keyValue: t("TL_LICENSE_NUMBERL_LABEL"),
    note: application.licenseNumber
  }), /*#__PURE__*/React.createElement(KeyNote, {
    keyValue: t("TL_LOCALIZATION_OWNER_NAME"),
    note: owners.map((owners, index) => /*#__PURE__*/React.createElement("div", {
      key: "index"
    }, index == owners.length - 1 ? (owners === null || owners === void 0 ? void 0 : owners.name) + "," : owners.name))
  }), /*#__PURE__*/React.createElement(KeyNote, {
    keyValue: t("TL_LOCALIZATION_LICENSE_STATUS"),
    note: application.status === "APPROVED" ? t("TL_ACTIVE_STATUS_MSG") + " " + convertEpochToDateCitizen(application.validTo) : t("TL_EXPIRED_STATUS_MSG") + convertEpochToDateCitizen(application.validTo) + " " + t("TL_EXPIRED_STATUS_MSG_1")
  }), /*#__PURE__*/React.createElement(SubmitBar, {
    label: t("TL_RENEW_LABEL"),
    onSubmit: onsubmit
  })), showToast && /*#__PURE__*/React.createElement(Toast, {
    isDleteBtn: true,
    error: showToast.error,
    warning: showToast.warning,
    label: t(showToast.label),
    onClose: () => {
      setShowToast(null);
    }
  }));
};

const TLWFReason = ({
  headComment,
  otherComment
}) => /*#__PURE__*/React.createElement("div", {
  className: "checkpoint-comments-wrap"
}, /*#__PURE__*/React.createElement("h4", null, headComment), /*#__PURE__*/React.createElement("p", null, otherComment));

const TLWFCaption = ({
  data
}) => {
  var _data$wfComment, _data$thumbnailsToSho, _data$thumbnailsToSho2;
  const {
    t
  } = useTranslation();
  return /*#__PURE__*/React.createElement("div", null, data.date && /*#__PURE__*/React.createElement("p", null, data.date), /*#__PURE__*/React.createElement("p", null, data.name), data.mobileNumber && /*#__PURE__*/React.createElement(TelePhone, {
    mobile: data.mobileNumber
  }), data.source && /*#__PURE__*/React.createElement("p", null, t("ES_APPLICATION_DETAILS_APPLICATION_CHANNEL_" + data.source.toUpperCase())), data.comment && /*#__PURE__*/React.createElement(TLWFReason, {
    otherComment: data === null || data === void 0 ? void 0 : data.otherComment,
    headComment: data === null || data === void 0 ? void 0 : data.comment
  }), data !== null && data !== void 0 && data.wfComment ? /*#__PURE__*/React.createElement("div", null, data === null || data === void 0 ? void 0 : (_data$wfComment = data.wfComment) === null || _data$wfComment === void 0 ? void 0 : _data$wfComment.map(e => /*#__PURE__*/React.createElement("div", {
    className: "TLComments"
  }, /*#__PURE__*/React.createElement("h3", null, t("WF_COMMON_COMMENTS")), /*#__PURE__*/React.createElement("p", null, e)))) : null, (data === null || data === void 0 ? void 0 : (_data$thumbnailsToSho = data.thumbnailsToShow) === null || _data$thumbnailsToSho === void 0 ? void 0 : (_data$thumbnailsToSho2 = _data$thumbnailsToSho.thumbs) === null || _data$thumbnailsToSho2 === void 0 ? void 0 : _data$thumbnailsToSho2.length) > 0 ? /*#__PURE__*/React.createElement("div", {
    className: "TLComments"
  }, /*#__PURE__*/React.createElement("h3", null, t("CS_COMMON_ATTACHMENTS")), /*#__PURE__*/React.createElement(DisplayPhotos, {
    srcs: data === null || data === void 0 ? void 0 : data.thumbnailsToShow.thumbs,
    onClick: (src, index) => {
      OpenImage(src, index, data === null || data === void 0 ? void 0 : data.thumbnailsToShow);
    }
  })) : null);
};

const TLWFApplicationTimeline = props => {
  var _props$application, _props$application2, _data$timeline, _data$timeline2, _data$timeline$;
  const {
    t
  } = useTranslation();
  const businessService = (_props$application = props.application) === null || _props$application === void 0 ? void 0 : _props$application.businessService;
  const {
    isLoading,
    data
  } = Digit.Hooks.useWorkflowDetails({
    tenantId: (_props$application2 = props.application) === null || _props$application2 === void 0 ? void 0 : _props$application2.tenantId,
    id: props.id,
    moduleCode: businessService
  });
  function OpenImage(imageSource, index, thumbnailsToShow) {
    var _thumbnailsToShow$ful;
    window.open(thumbnailsToShow === null || thumbnailsToShow === void 0 ? void 0 : (_thumbnailsToShow$ful = thumbnailsToShow.fullImage) === null || _thumbnailsToShow$ful === void 0 ? void 0 : _thumbnailsToShow$ful[0], "_blank");
  }
  const getTimelineCaptions = checkpoint => {
    if (checkpoint.state === "INITIATE") {
      var _props$application3, _props$application3$a, _props$application4, _props$application4$t;
      const caption = {
        date: Digit.DateUtils.ConvertTimestampToDate((_props$application3 = props.application) === null || _props$application3 === void 0 ? void 0 : (_props$application3$a = _props$application3.auditDetails) === null || _props$application3$a === void 0 ? void 0 : _props$application3$a.createdTime),
        source: ((_props$application4 = props.application) === null || _props$application4 === void 0 ? void 0 : (_props$application4$t = _props$application4.tradeLicenseDetail) === null || _props$application4$t === void 0 ? void 0 : _props$application4$t.channel) || ""
      };
      return /*#__PURE__*/React.createElement(TLWFCaption, {
        data: caption
      });
    } else {
      var _checkpoint$auditDeta, _checkpoint$assignes, _checkpoint$assignes$, _checkpoint$assignes2, _checkpoint$assignes3;
      const caption = {
        date: checkpoint === null || checkpoint === void 0 ? void 0 : (_checkpoint$auditDeta = checkpoint.auditDetails) === null || _checkpoint$auditDeta === void 0 ? void 0 : _checkpoint$auditDeta.lastModified,
        name: checkpoint === null || checkpoint === void 0 ? void 0 : (_checkpoint$assignes = checkpoint.assignes) === null || _checkpoint$assignes === void 0 ? void 0 : (_checkpoint$assignes$ = _checkpoint$assignes[0]) === null || _checkpoint$assignes$ === void 0 ? void 0 : _checkpoint$assignes$.name,
        mobileNumber: checkpoint === null || checkpoint === void 0 ? void 0 : (_checkpoint$assignes2 = checkpoint.assignes) === null || _checkpoint$assignes2 === void 0 ? void 0 : (_checkpoint$assignes3 = _checkpoint$assignes2[0]) === null || _checkpoint$assignes3 === void 0 ? void 0 : _checkpoint$assignes3.mobileNumber,
        comment: t(checkpoint === null || checkpoint === void 0 ? void 0 : checkpoint.comment),
        wfComment: checkpoint.wfComment,
        thumbnailsToShow: checkpoint === null || checkpoint === void 0 ? void 0 : checkpoint.thumbnailsToShow
      };
      return /*#__PURE__*/React.createElement(TLWFCaption, {
        data: caption,
        OpenImage: OpenImage
      });
    }
  };
  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, !isLoading && /*#__PURE__*/React.createElement(Fragment$1, null, (data === null || data === void 0 ? void 0 : (_data$timeline = data.timeline) === null || _data$timeline === void 0 ? void 0 : _data$timeline.length) > 0 && /*#__PURE__*/React.createElement(CardSectionHeader, {
    style: {
      marginBottom: "16px",
      marginTop: "32px"
    }
  }, t("CS_APPLICATION_DETAILS_APPLICATION_TIMELINE")), data !== null && data !== void 0 && data.timeline && (data === null || data === void 0 ? void 0 : (_data$timeline2 = data.timeline) === null || _data$timeline2 === void 0 ? void 0 : _data$timeline2.length) === 1 ? /*#__PURE__*/React.createElement(CheckPoint, {
    isCompleted: true,
    label: t((data === null || data === void 0 ? void 0 : (_data$timeline$ = data.timeline[0]) === null || _data$timeline$ === void 0 ? void 0 : _data$timeline$.state) && `WF_${businessService}_${data.timeline[0].state}` || "NA"),
    customChild: getTimelineCaptions(data === null || data === void 0 ? void 0 : data.timeline[0])
  }) : /*#__PURE__*/React.createElement(ConnectingCheckPoints, null, (data === null || data === void 0 ? void 0 : data.timeline) && (data === null || data === void 0 ? void 0 : data.timeline.map((checkpoint, index, arr) => {
    return /*#__PURE__*/React.createElement(React.Fragment, {
      key: index
    }, /*#__PURE__*/React.createElement(CheckPoint, {
      keyValue: index,
      isCompleted: index === 0,
      label: checkpoint.state ? t(`WF_NEW${businessService}_${checkpoint.state}`) : "NA",
      customChild: getTimelineCaptions(checkpoint)
    }));
  })))));
};

const SelectOtherTradeDetails = ({
  t,
  config,
  onSelect,
  value,
  userType,
  formData
}) => {
  var _formData$TradeDetail, _formData$TradeDetail2, _formData$TradeDetail3;
  let validation = {};
  const onSkip = () => onSelect();
  const [TradeGSTNumber, setTradeGSTNumber] = useState((_formData$TradeDetail = formData.TradeDetails) === null || _formData$TradeDetail === void 0 ? void 0 : _formData$TradeDetail.TradeGSTNumber);
  const [OperationalSqFtArea, setOperationalSqFtArea] = useState((_formData$TradeDetail2 = formData.TradeDetails) === null || _formData$TradeDetail2 === void 0 ? void 0 : _formData$TradeDetail2.OperationalSqFtArea);
  const [NumberOfEmployees, setNumberOfEmployees] = useState((_formData$TradeDetail3 = formData.TradeDetails) === null || _formData$TradeDetail3 === void 0 ? void 0 : _formData$TradeDetail3.NumberOfEmployees);
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const stateId = Digit.ULBService.getStateId();
  const isEdit = window.location.href.includes("/edit-application/") || window.location.href.includes("renew-trade");
  const {
    isLoading,
    data: fydata = {}
  } = Digit.Hooks.tl.useTradeLicenseMDMS(stateId, "egf-master", "FinancialYear");
  function selectTradeGSTNumber(e) {
    setTradeGSTNumber(e.target.value);
  }
  function selectOperationalSqFtArea(e) {
    setOperationalSqFtArea(e.target.value);
  }
  function selectNumberOfEmployees(e) {
    setNumberOfEmployees(e.target.value);
  }
  const goNext = () => {
    onSelect(config.key, {
      TradeGSTNumber,
      OperationalSqFtArea,
      NumberOfEmployees
    });
  };
  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, null) : null, /*#__PURE__*/React.createElement(FormStep, {
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    t: t
  }, /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_TRADE_GST_NO")}`), /*#__PURE__*/React.createElement(TextInput, Object.assign({
    t: t,
    isMandatory: false,
    type: "text",
    optionKey: "i18nKey",
    name: "TradeGSTNumber",
    value: TradeGSTNumber,
    onChange: selectTradeGSTNumber
  }, validation = {
    pattern: "^[a-zA-Z-0-9_@/#&+-.`' ]*$",
    isRequired: false,
    title: t("TL_INVALID_TRADE_GST_NO")
  })), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_OPERATIONAL_AREA")}`), /*#__PURE__*/React.createElement(TextInput, {
    t: t,
    isMandatory: false,
    type: "number",
    optionKey: "i18nKey",
    name: "OperationalSqFtArea",
    value: OperationalSqFtArea,
    onChange: selectOperationalSqFtArea
  }), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_NO_OF_EMPLOYEES")}`), /*#__PURE__*/React.createElement(TextInput, {
    t: t,
    isMandatory: false,
    type: "number",
    optionKey: "i18nKey",
    name: "NumberOfEmployees",
    value: NumberOfEmployees,
    onChange: selectNumberOfEmployees
  })));
};

const TLSelectStreet = ({
  t,
  config,
  onSelect,
  userType,
  formData,
  formState,
  setError,
  clearErrors
}) => {
  var _formData$cpt6;
  const onSkip = () => onSelect();
  const [focusIndex, setFocusIndex] = useState({
    index: -1,
    type: ""
  });
  const {
    control,
    formState: localFormState,
    watch,
    setError: setLocalError,
    clearErrors: clearLocalErrors,
    setValue,
    getValues,
    trigger
  } = useForm();
  const formValue = watch();
  const {
    errors
  } = localFormState;
  const checkLocation = window.location.href.includes("tl/new-application") || window.location.href.includes("tl/renew-application-details");
  const isRenewal = window.location.href.includes("edit-application") || window.location.href.includes("tl/renew-application-details");
  let inputs;
  if (window.location.href.includes("tl")) {
    inputs = config.inputs;
    config.inputs[0].disable = window.location.href.includes("edit-application");
    config.inputs[1].disable = window.location.href.includes("edit-application");
    inputs[0].validation = {
      minLength: 0,
      maxLength: 256
    };
    inputs[1].validation = {
      minLength: 0,
      maxLength: 256
    };
  } else {
    inputs = [{
      label: "PT_PROPERTY_ADDRESS_STREET_NAME",
      type: "text",
      name: "street",
      validation: {
        pattern: "[a-zA-Z0-9 ]{1,255}",
        title: t("CORE_COMMON_STREET_INVALID")
      }
    }, {
      label: "PT_PROPERTY_ADDRESS_HOUSE_NO",
      type: "text",
      name: "doorNo",
      validation: {
        pattern: "[A-Za-z0-9#,/ -]{1,63}",
        title: t("CORE_COMMON_DOOR_INVALID")
      }
    }];
  }
  const convertValidationToRules = ({
    validation,
    name,
    messages
  }) => {
    if (validation) {
      let {
        pattern: valPattern,
        maxlength,
        minlength,
        required: valReq
      } = validation || {};
      let pattern = value => {
        if (valPattern) {
          var _RegExp;
          if (valPattern instanceof RegExp) return valPattern.test(value) ? true : (messages === null || messages === void 0 ? void 0 : messages.pattern) || `${name.toUpperCase()}_PATTERN`;else if (typeof valPattern === "string") return (_RegExp = new RegExp(valPattern)) !== null && _RegExp !== void 0 && _RegExp.test(value) ? true : (messages === null || messages === void 0 ? void 0 : messages.pattern) || `${name.toUpperCase()}_PATTERN`;
        }
        return true;
      };
      let maxLength = value => maxlength ? (value === null || value === void 0 ? void 0 : value.length) <= maxlength ? true : (messages === null || messages === void 0 ? void 0 : messages.maxlength) || `${name.toUpperCase()}_MAXLENGTH` : true;
      let minLength = value => minlength ? (value === null || value === void 0 ? void 0 : value.length) >= minlength ? true : (messages === null || messages === void 0 ? void 0 : messages.minlength) || `${name.toUpperCase()}_MINLENGTH` : true;
      let required = value => valReq ? !!value ? true : (messages === null || messages === void 0 ? void 0 : messages.required) || `${name.toUpperCase()}_REQUIRED` : true;
      return {
        pattern,
        required,
        minLength,
        maxLength
      };
    }
    return {};
  };
  useEffect(() => {
    trigger();
  }, []);
  useEffect(() => {
    if (userType === "employee") {
      var _formState$errors$con;
      if (Object.keys(errors).length && !lodash.isEqual(((_formState$errors$con = formState.errors[config.key]) === null || _formState$errors$con === void 0 ? void 0 : _formState$errors$con.type) || {}, errors)) setError(config.key, {
        type: errors
      });else if (!Object.keys(errors).length && formState.errors[config.key]) clearErrors(config.key);
    }
  }, [errors]);
  useEffect(() => {
    const keys = Object.keys(formValue);
    const part = {};
    keys.forEach(key => {
      var _formData$config$key;
      return part[key] = (_formData$config$key = formData[config.key]) === null || _formData$config$key === void 0 ? void 0 : _formData$config$key[key];
    });
    if (!lodash.isEqual(formValue, part)) {
      onSelect(config.key, {
        ...formData[config.key],
        ...formValue
      });
      trigger();
    }
  }, [formValue]);
  useEffect(() => {
    var _formData$cpt;
    if (formData !== null && formData !== void 0 && (_formData$cpt = formData.cpt) !== null && _formData$cpt !== void 0 && _formData$cpt.details && window.location.href.includes("tl")) {
      var _inputs;
      (_inputs = inputs) === null || _inputs === void 0 ? void 0 : _inputs.map(input => {
        var _formData$cpt2, _formData$cpt2$detail, _formData$cpt2$detail2;
        if (getValues(input.name) !== (formData === null || formData === void 0 ? void 0 : (_formData$cpt2 = formData.cpt) === null || _formData$cpt2 === void 0 ? void 0 : (_formData$cpt2$detail = _formData$cpt2.details) === null || _formData$cpt2$detail === void 0 ? void 0 : (_formData$cpt2$detail2 = _formData$cpt2$detail.address) === null || _formData$cpt2$detail2 === void 0 ? void 0 : _formData$cpt2$detail2[input.name])) {
          var _formData$cpt3, _formData$cpt3$detail, _formData$cpt3$detail2, _formData$cpt4, _formData$cpt4$detail, _formData$cpt4$detail2, _formData$address, _formData$address2, _formData$cpt5, _formData$cpt5$detail, _formData$cpt5$detail2;
          setValue(input.name, (formData === null || formData === void 0 ? void 0 : (_formData$cpt3 = formData.cpt) === null || _formData$cpt3 === void 0 ? void 0 : (_formData$cpt3$detail = _formData$cpt3.details) === null || _formData$cpt3$detail === void 0 ? void 0 : (_formData$cpt3$detail2 = _formData$cpt3$detail.address) === null || _formData$cpt3$detail2 === void 0 ? void 0 : _formData$cpt3$detail2[input.name]) === null || (formData === null || formData === void 0 ? void 0 : (_formData$cpt4 = formData.cpt) === null || _formData$cpt4 === void 0 ? void 0 : (_formData$cpt4$detail = _formData$cpt4.details) === null || _formData$cpt4$detail === void 0 ? void 0 : (_formData$cpt4$detail2 = _formData$cpt4$detail.address) === null || _formData$cpt4$detail2 === void 0 ? void 0 : _formData$cpt4$detail2[input.name]) === "" ? formData !== null && formData !== void 0 && (_formData$address = formData.address) !== null && _formData$address !== void 0 && _formData$address[input.name] ? formData === null || formData === void 0 ? void 0 : (_formData$address2 = formData.address) === null || _formData$address2 === void 0 ? void 0 : _formData$address2[input.name] : "" : formData === null || formData === void 0 ? void 0 : (_formData$cpt5 = formData.cpt) === null || _formData$cpt5 === void 0 ? void 0 : (_formData$cpt5$detail = _formData$cpt5.details) === null || _formData$cpt5$detail === void 0 ? void 0 : (_formData$cpt5$detail2 = _formData$cpt5$detail.address) === null || _formData$cpt5$detail2 === void 0 ? void 0 : _formData$cpt5$detail2[input.name]);
        }
      });
    }
  }, [formData === null || formData === void 0 ? void 0 : (_formData$cpt6 = formData.cpt) === null || _formData$cpt6 === void 0 ? void 0 : _formData$cpt6.details]);
  if (userType === "employee") {
    var _inputs2;
    return (_inputs2 = inputs) === null || _inputs2 === void 0 ? void 0 : _inputs2.map((input, index) => {
      var _formData$cpt7, _formData$cpt7$detail, _formData$cpt7$detail2, _formData$address3;
      return /*#__PURE__*/React.createElement(LabelFieldPair, {
        key: index
      }, /*#__PURE__*/React.createElement(CardLabel, {
        className: "card-label-smaller"
      }, t(input.label), config.isMandatory ? " * " : null), /*#__PURE__*/React.createElement("div", {
        className: "field"
      }, /*#__PURE__*/React.createElement(Controller, {
        control: control,
        defaultValue: (formData === null || formData === void 0 ? void 0 : (_formData$cpt7 = formData.cpt) === null || _formData$cpt7 === void 0 ? void 0 : (_formData$cpt7$detail = _formData$cpt7.details) === null || _formData$cpt7$detail === void 0 ? void 0 : (_formData$cpt7$detail2 = _formData$cpt7$detail.address) === null || _formData$cpt7$detail2 === void 0 ? void 0 : _formData$cpt7$detail2[input.name]) || (formData === null || formData === void 0 ? void 0 : (_formData$address3 = formData.address) === null || _formData$address3 === void 0 ? void 0 : _formData$address3[input.name]),
        name: input.name,
        rules: {
          validate: convertValidationToRules(input)
        },
        render: _props => {
          var _formData$cpt8, _formData$cpt8$detail, _formData$cpt8$detail2, _props$value, _formData$cpt9, _formData$cpt9$detail, _formData$cpt9$detail2, _formData$cpt9$detail3, _formData$cpt10, _formData$cpt10$detai, _formData$cpt10$detai2, _formData$cpt10$detai3, _formData$cpt11, _formData$cpt11$detai, _formData$cpt12, _formData$cpt12$detai;
          return /*#__PURE__*/React.createElement("div", {
            style: {
              display: "flex",
              alignItems: "baseline",
              marginRight: "unset"
            }
          }, /*#__PURE__*/React.createElement(TextInput, Object.assign({
            id: input.name,
            key: input.name,
            value: _props.value,
            onChange: e => {
              setFocusIndex({
                index
              });
              _props.onChange(e.target.value);
            },
            onBlur: _props.onBlur,
            disable: formData !== null && formData !== void 0 && (_formData$cpt8 = formData.cpt) !== null && _formData$cpt8 !== void 0 && (_formData$cpt8$detail = _formData$cpt8.details) !== null && _formData$cpt8$detail !== void 0 && (_formData$cpt8$detail2 = _formData$cpt8$detail.address) !== null && _formData$cpt8$detail2 !== void 0 && _formData$cpt8$detail2[input.name] ? true : false,
            autoFocus: (focusIndex === null || focusIndex === void 0 ? void 0 : focusIndex.index) == index
          }, input === null || input === void 0 ? void 0 : input.validation)), /*#__PURE__*/React.createElement("div", {
            style: {
              marginRight: "-50px",
              marginLeft: "10px"
            }
          }, /*#__PURE__*/React.createElement(WrapUnMaskComponent, {
            unmaskField: e => {
              _props.onChange(e);
            },
            iseyevisible: (_props.value ? (_props$value = _props.value) === null || _props$value === void 0 ? void 0 : _props$value.includes("*") : formData === null || formData === void 0 ? void 0 : (_formData$cpt9 = formData.cpt) === null || _formData$cpt9 === void 0 ? void 0 : (_formData$cpt9$detail = _formData$cpt9.details) === null || _formData$cpt9$detail === void 0 ? void 0 : (_formData$cpt9$detail2 = _formData$cpt9$detail.address) === null || _formData$cpt9$detail2 === void 0 ? void 0 : (_formData$cpt9$detail3 = _formData$cpt9$detail2[input.name]) === null || _formData$cpt9$detail3 === void 0 ? void 0 : _formData$cpt9$detail3.includes("*")) ? true : false,
            privacy: {
              uuid: formData === null || formData === void 0 ? void 0 : (_formData$cpt10 = formData.cpt) === null || _formData$cpt10 === void 0 ? void 0 : (_formData$cpt10$detai = _formData$cpt10.details) === null || _formData$cpt10$detai === void 0 ? void 0 : (_formData$cpt10$detai2 = _formData$cpt10$detai.owners) === null || _formData$cpt10$detai2 === void 0 ? void 0 : (_formData$cpt10$detai3 = _formData$cpt10$detai2[0]) === null || _formData$cpt10$detai3 === void 0 ? void 0 : _formData$cpt10$detai3.uuid,
              fieldName: [input.name],
              model: "Property",
              loadData: {
                serviceName: "/property-services/property/_search",
                requestBody: {},
                requestParam: {
                  tenantId: formData === null || formData === void 0 ? void 0 : (_formData$cpt11 = formData.cpt) === null || _formData$cpt11 === void 0 ? void 0 : (_formData$cpt11$detai = _formData$cpt11.details) === null || _formData$cpt11$detai === void 0 ? void 0 : _formData$cpt11$detai.tenantId,
                  propertyIds: formData === null || formData === void 0 ? void 0 : (_formData$cpt12 = formData.cpt) === null || _formData$cpt12 === void 0 ? void 0 : (_formData$cpt12$detai = _formData$cpt12.details) === null || _formData$cpt12$detai === void 0 ? void 0 : _formData$cpt12$detai.propertyId
                },
                jsonPath: `Properties[0].address.${input.name}`,
                isArray: false
              }
            }
          })));
        }
      })));
    });
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/tl") ? /*#__PURE__*/React.createElement(Timeline$1, {
    currentStep: 2
  }) : /*#__PURE__*/React.createElement(Timeline$1, {
    currentStep: 1,
    flow: "APPLY"
  }), /*#__PURE__*/React.createElement(FormStep, {
    config: {
      ...config,
      inputs
    },
    _defaultValues: {
      street: formData === null || formData === void 0 ? void 0 : formData.address.street,
      doorNo: formData === null || formData === void 0 ? void 0 : formData.address.doorNo
    },
    onSelect: data => onSelect(config.key, data),
    onSkip: onSkip,
    t: t
  }));
};

const TLSelectLandmark = ({
  t,
  config,
  onSelect,
  formData,
  userType
}) => {
  var _formData$address2;
  const [landmark, setLandmark] = useState();
  const [error, setError] = useState("");
  const inputs = [{
    label: "ES_NEW_APPLICATION_LOCATION_LANDMARK",
    type: "textarea",
    name: "landmark",
    validation: {
      maxLength: 1024
    }
  }];
  useEffect(() => {
    var _formData$address;
    setLandmark(formData === null || formData === void 0 ? void 0 : (_formData$address = formData.address) === null || _formData$address === void 0 ? void 0 : _formData$address.landmark);
  }, [formData === null || formData === void 0 ? void 0 : (_formData$address2 = formData.address) === null || _formData$address2 === void 0 ? void 0 : _formData$address2.landmark]);
  function onChange(e) {
    if (e.target.value.length > 1024) {
      setError("CS_COMMON_LANDMARK_MAX_LENGTH");
    } else {
      setError(null);
      setLandmark(e.target.value);
      if (userType === "employee") {
        onSelect(config.key, {
          ...formData[config.key],
          landmark: e.target.value
        });
      }
    }
  }
  if (userType === "employee") {
    return inputs === null || inputs === void 0 ? void 0 : inputs.map((input, index) => {
      return /*#__PURE__*/React.createElement(LabelFieldPair, {
        key: index
      }, /*#__PURE__*/React.createElement(CardLabel, {
        className: "card-label-smaller"
      }, t(input.label), config.isMandatory ? " * " : null), /*#__PURE__*/React.createElement(TextArea, Object.assign({
        className: "form-field",
        id: input.name,
        value: landmark,
        onChange: onChange,
        name: input.name || ""
      }, input.validation)));
    });
  }
  const onSkip = () => onSelect();
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/tl") ? /*#__PURE__*/React.createElement(Timeline$1, {
    currentStep: 2
  }) : /*#__PURE__*/React.createElement(Timeline$1, {
    currentStep: 1,
    flow: "APPLY"
  }), /*#__PURE__*/React.createElement(FormStep, {
    config: {
      ...config,
      inputs
    },
    value: landmark,
    onChange: onChange,
    onSelect: data => onSelect(config.key, {
      ...formData[config.key],
      ...data
    }),
    onSkip: onSkip,
    t: t,
    forcedError: t(error)
  }));
};

const TLSelectOwnerAddress = ({
  t,
  config,
  onSelect,
  userType,
  formData
}) => {
  var _formData$owners, _formData$owners2, _formData$ownershipCa, _formData$cpt9, _formData$cpt9$detail, _formData$TradeDetail, _formData$TradeDetail2;
  const [permanentAddress, setPermanentAddress] = useState((formData === null || formData === void 0 ? void 0 : (_formData$owners = formData.owners) === null || _formData$owners === void 0 ? void 0 : _formData$owners.permanentAddress) || "");
  const [isCorrespondenceAddress, setIsCorrespondenceAddress] = useState(formData === null || formData === void 0 ? void 0 : (_formData$owners2 = formData.owners) === null || _formData$owners2 === void 0 ? void 0 : _formData$owners2.isCorrespondenceAddress);
  let isedittrade = window.location.href.includes("edit-application");
  let isrenewtrade = window.location.href.includes("renew-trade");
  const {
    pathname: url
  } = useLocation();
  const editScreen = url.includes("/modify-application/");
  let ismultiple = formData !== null && formData !== void 0 && (_formData$ownershipCa = formData.ownershipCategory) !== null && _formData$ownershipCa !== void 0 && _formData$ownershipCa.code.includes("SINGLEOWNER") ? false : true;
  useEffect(() => {
    var _formData$owners3;
    if ((formData === null || formData === void 0 ? void 0 : (_formData$owners3 = formData.owners) === null || _formData$owners3 === void 0 ? void 0 : _formData$owners3.permanentAddress) == null && isrenewtrade && permanentAddress === "") {
      var _formData$address, _formData$address2, _formData$address3, _formData$address4, _formData$address5, _formData$address5$lo, _formData$address6, _formData$address6$ci, _formData$address6$ci2, _formData$address7;
      let obj = {
        doorNo: formData === null || formData === void 0 ? void 0 : (_formData$address = formData.address) === null || _formData$address === void 0 ? void 0 : _formData$address.doorNo,
        street: (formData === null || formData === void 0 ? void 0 : (_formData$address2 = formData.address) === null || _formData$address2 === void 0 ? void 0 : _formData$address2.street) || (formData === null || formData === void 0 ? void 0 : (_formData$address3 = formData.address) === null || _formData$address3 === void 0 ? void 0 : _formData$address3.buildingName),
        landmark: formData === null || formData === void 0 ? void 0 : (_formData$address4 = formData.address) === null || _formData$address4 === void 0 ? void 0 : _formData$address4.landmark,
        locality: formData === null || formData === void 0 ? void 0 : (_formData$address5 = formData.address) === null || _formData$address5 === void 0 ? void 0 : (_formData$address5$lo = _formData$address5.locality) === null || _formData$address5$lo === void 0 ? void 0 : _formData$address5$lo.name,
        city: formData === null || formData === void 0 ? void 0 : (_formData$address6 = formData.address) === null || _formData$address6 === void 0 ? void 0 : (_formData$address6$ci = _formData$address6.city) === null || _formData$address6$ci === void 0 ? void 0 : (_formData$address6$ci2 = _formData$address6$ci.code) === null || _formData$address6$ci2 === void 0 ? void 0 : _formData$address6$ci2.split(".")[1],
        pincode: formData === null || formData === void 0 ? void 0 : (_formData$address7 = formData.address) === null || _formData$address7 === void 0 ? void 0 : _formData$address7.pincode
      };
      let addressDetails = "";
      for (const key in obj) {
        if (key == "pincode" || !obj["pincode"] && key == "city") addressDetails += obj[key] ? obj[key] : "";else if (obj[key]) addressDetails += obj[key] ? t(`${obj[key]}`) + ", " : "";
      }
      setPermanentAddress(addressDetails);
    }
  }, [formData]);
  useEffect(() => {
    var _formData$cpt;
    if (formData !== null && formData !== void 0 && (_formData$cpt = formData.cpt) !== null && _formData$cpt !== void 0 && _formData$cpt.details && permanentAddress && isCorrespondenceAddress && window.location.href.includes("/tl/tradelicence/new-application")) {
      var _formData$cpt2, _formData$cpt2$detail, _formData$cpt2$detail2, _formData$cpt3, _formData$cpt3$detail, _formData$cpt3$detail2, _formData$cpt4, _formData$cpt4$detail, _formData$cpt4$detail2, _formData$cpt5, _formData$cpt5$detail, _formData$cpt5$detail2, _formData$cpt6, _formData$cpt6$detail, _formData$cpt6$detail2, _formData$cpt6$detail3, _formData$cpt7, _formData$cpt7$detail, _formData$cpt7$detail2, _formData$cpt8, _formData$cpt8$detail, _formData$cpt8$detail2, _formData$address8;
      let obj = {
        doorNo: formData === null || formData === void 0 ? void 0 : (_formData$cpt2 = formData.cpt) === null || _formData$cpt2 === void 0 ? void 0 : (_formData$cpt2$detail = _formData$cpt2.details) === null || _formData$cpt2$detail === void 0 ? void 0 : (_formData$cpt2$detail2 = _formData$cpt2$detail.address) === null || _formData$cpt2$detail2 === void 0 ? void 0 : _formData$cpt2$detail2.doorNo,
        street: (formData === null || formData === void 0 ? void 0 : (_formData$cpt3 = formData.cpt) === null || _formData$cpt3 === void 0 ? void 0 : (_formData$cpt3$detail = _formData$cpt3.details) === null || _formData$cpt3$detail === void 0 ? void 0 : (_formData$cpt3$detail2 = _formData$cpt3$detail.address) === null || _formData$cpt3$detail2 === void 0 ? void 0 : _formData$cpt3$detail2.street) || (formData === null || formData === void 0 ? void 0 : (_formData$cpt4 = formData.cpt) === null || _formData$cpt4 === void 0 ? void 0 : (_formData$cpt4$detail = _formData$cpt4.details) === null || _formData$cpt4$detail === void 0 ? void 0 : (_formData$cpt4$detail2 = _formData$cpt4$detail.address) === null || _formData$cpt4$detail2 === void 0 ? void 0 : _formData$cpt4$detail2.buildingName),
        landmark: formData === null || formData === void 0 ? void 0 : (_formData$cpt5 = formData.cpt) === null || _formData$cpt5 === void 0 ? void 0 : (_formData$cpt5$detail = _formData$cpt5.details) === null || _formData$cpt5$detail === void 0 ? void 0 : (_formData$cpt5$detail2 = _formData$cpt5$detail.address) === null || _formData$cpt5$detail2 === void 0 ? void 0 : _formData$cpt5$detail2.landmark,
        locality: formData === null || formData === void 0 ? void 0 : (_formData$cpt6 = formData.cpt) === null || _formData$cpt6 === void 0 ? void 0 : (_formData$cpt6$detail = _formData$cpt6.details) === null || _formData$cpt6$detail === void 0 ? void 0 : (_formData$cpt6$detail2 = _formData$cpt6$detail.address) === null || _formData$cpt6$detail2 === void 0 ? void 0 : (_formData$cpt6$detail3 = _formData$cpt6$detail2.locality) === null || _formData$cpt6$detail3 === void 0 ? void 0 : _formData$cpt6$detail3.name,
        city: (formData === null || formData === void 0 ? void 0 : (_formData$cpt7 = formData.cpt) === null || _formData$cpt7 === void 0 ? void 0 : (_formData$cpt7$detail = _formData$cpt7.details) === null || _formData$cpt7$detail === void 0 ? void 0 : (_formData$cpt7$detail2 = _formData$cpt7$detail.address) === null || _formData$cpt7$detail2 === void 0 ? void 0 : _formData$cpt7$detail2.city) || t(formData === null || formData === void 0 ? void 0 : (_formData$cpt8 = formData.cpt) === null || _formData$cpt8 === void 0 ? void 0 : (_formData$cpt8$detail = _formData$cpt8.details) === null || _formData$cpt8$detail === void 0 ? void 0 : (_formData$cpt8$detail2 = _formData$cpt8$detail.address) === null || _formData$cpt8$detail2 === void 0 ? void 0 : _formData$cpt8$detail2.tenantId),
        pincode: formData === null || formData === void 0 ? void 0 : (_formData$address8 = formData.address) === null || _formData$address8 === void 0 ? void 0 : _formData$address8.pincode
      };
      let addressDetails = "";
      for (const key in obj) {
        if (key == "pincode" || !obj["pincode"] && key == "city") addressDetails += obj[key] ? obj[key] : "";else if (obj[key]) addressDetails += obj[key] ? t(`${obj[key]}`) + ", " : "";
      }
      setPermanentAddress(addressDetails);
    }
  }, [formData === null || formData === void 0 ? void 0 : (_formData$cpt9 = formData.cpt) === null || _formData$cpt9 === void 0 ? void 0 : (_formData$cpt9$detail = _formData$cpt9.details) === null || _formData$cpt9$detail === void 0 ? void 0 : _formData$cpt9$detail.propertyId]);
  function setOwnerPermanentAddress(e) {
    setPermanentAddress(e.target.value);
  }
  function setCorrespondenceAddress(e) {
    var _formData$cpt10, _formData$cpt11;
    if (formData !== null && formData !== void 0 && (_formData$cpt10 = formData.cpt) !== null && _formData$cpt10 !== void 0 && _formData$cpt10.details && Object.keys(formData === null || formData === void 0 ? void 0 : (_formData$cpt11 = formData.cpt) === null || _formData$cpt11 === void 0 ? void 0 : _formData$cpt11.details).length > 0 && e.target.checked == true) {
      var _formData$cpt12, _formData$cpt12$detai, _formData$cpt12$detai2, _formData$cpt13, _formData$cpt13$detai, _formData$cpt13$detai2, _formData$cpt14, _formData$cpt14$detai, _formData$cpt14$detai2, _formData$cpt15, _formData$cpt15$detai, _formData$cpt15$detai2, _formData$cpt16, _formData$cpt16$detai, _formData$cpt16$detai2, _formData$cpt16$detai3, _formData$cpt17, _formData$cpt17$detai, _formData$cpt17$detai2, _formData$address9;
      let obj = {
        doorNo: formData === null || formData === void 0 ? void 0 : (_formData$cpt12 = formData.cpt) === null || _formData$cpt12 === void 0 ? void 0 : (_formData$cpt12$detai = _formData$cpt12.details) === null || _formData$cpt12$detai === void 0 ? void 0 : (_formData$cpt12$detai2 = _formData$cpt12$detai.address) === null || _formData$cpt12$detai2 === void 0 ? void 0 : _formData$cpt12$detai2.doorNo,
        street: (formData === null || formData === void 0 ? void 0 : (_formData$cpt13 = formData.cpt) === null || _formData$cpt13 === void 0 ? void 0 : (_formData$cpt13$detai = _formData$cpt13.details) === null || _formData$cpt13$detai === void 0 ? void 0 : (_formData$cpt13$detai2 = _formData$cpt13$detai.address) === null || _formData$cpt13$detai2 === void 0 ? void 0 : _formData$cpt13$detai2.street) || (formData === null || formData === void 0 ? void 0 : (_formData$cpt14 = formData.cpt) === null || _formData$cpt14 === void 0 ? void 0 : (_formData$cpt14$detai = _formData$cpt14.details) === null || _formData$cpt14$detai === void 0 ? void 0 : (_formData$cpt14$detai2 = _formData$cpt14$detai.address) === null || _formData$cpt14$detai2 === void 0 ? void 0 : _formData$cpt14$detai2.buildingName),
        landmark: formData === null || formData === void 0 ? void 0 : (_formData$cpt15 = formData.cpt) === null || _formData$cpt15 === void 0 ? void 0 : (_formData$cpt15$detai = _formData$cpt15.details) === null || _formData$cpt15$detai === void 0 ? void 0 : (_formData$cpt15$detai2 = _formData$cpt15$detai.address) === null || _formData$cpt15$detai2 === void 0 ? void 0 : _formData$cpt15$detai2.landmark,
        locality: formData === null || formData === void 0 ? void 0 : (_formData$cpt16 = formData.cpt) === null || _formData$cpt16 === void 0 ? void 0 : (_formData$cpt16$detai = _formData$cpt16.details) === null || _formData$cpt16$detai === void 0 ? void 0 : (_formData$cpt16$detai2 = _formData$cpt16$detai.address) === null || _formData$cpt16$detai2 === void 0 ? void 0 : (_formData$cpt16$detai3 = _formData$cpt16$detai2.locality) === null || _formData$cpt16$detai3 === void 0 ? void 0 : _formData$cpt16$detai3.name,
        city: formData === null || formData === void 0 ? void 0 : (_formData$cpt17 = formData.cpt) === null || _formData$cpt17 === void 0 ? void 0 : (_formData$cpt17$detai = _formData$cpt17.details) === null || _formData$cpt17$detai === void 0 ? void 0 : (_formData$cpt17$detai2 = _formData$cpt17$detai.address) === null || _formData$cpt17$detai2 === void 0 ? void 0 : _formData$cpt17$detai2.city,
        pincode: formData === null || formData === void 0 ? void 0 : (_formData$address9 = formData.address) === null || _formData$address9 === void 0 ? void 0 : _formData$address9.pincode
      };
      let addressDetails = "";
      for (const key in obj) {
        if (key == "pincode" || !obj["pincode"] && key == "city") addressDetails += obj[key] ? obj[key] : "";else if (obj[key]) addressDetails += obj[key] ? t(`${obj[key]}`) + ", " : "";
      }
      setPermanentAddress(addressDetails);
    } else if (e.target.checked == true) {
      var _formData$address10, _formData$address11, _formData$address12, _formData$address13, _formData$address14, _formData$address14$l, _formData$address15, _formData$address15$c, _formData$address16;
      let obj = {
        doorNo: formData === null || formData === void 0 ? void 0 : (_formData$address10 = formData.address) === null || _formData$address10 === void 0 ? void 0 : _formData$address10.doorNo,
        street: (formData === null || formData === void 0 ? void 0 : (_formData$address11 = formData.address) === null || _formData$address11 === void 0 ? void 0 : _formData$address11.street) || (formData === null || formData === void 0 ? void 0 : (_formData$address12 = formData.address) === null || _formData$address12 === void 0 ? void 0 : _formData$address12.buildingName),
        landmark: formData === null || formData === void 0 ? void 0 : (_formData$address13 = formData.address) === null || _formData$address13 === void 0 ? void 0 : _formData$address13.landmark,
        locality: formData === null || formData === void 0 ? void 0 : (_formData$address14 = formData.address) === null || _formData$address14 === void 0 ? void 0 : (_formData$address14$l = _formData$address14.locality) === null || _formData$address14$l === void 0 ? void 0 : _formData$address14$l.i18nkey,
        city: formData === null || formData === void 0 ? void 0 : (_formData$address15 = formData.address) === null || _formData$address15 === void 0 ? void 0 : (_formData$address15$c = _formData$address15.city) === null || _formData$address15$c === void 0 ? void 0 : _formData$address15$c.name,
        pincode: formData === null || formData === void 0 ? void 0 : (_formData$address16 = formData.address) === null || _formData$address16 === void 0 ? void 0 : _formData$address16.pincode
      };
      let addressDetails = "";
      for (const key in obj) {
        if (key == "pincode" || !obj["pincode"] && key == "city") addressDetails += obj[key] ? obj[key] : "";else if (obj[key]) addressDetails += obj[key] ? t(`${obj[key]}`) + ", " : "";
      }
      setPermanentAddress(addressDetails);
    } else {
      setPermanentAddress("");
    }
    setIsCorrespondenceAddress(e.target.checked);
  }
  const goNext = () => {
    if (userType === "employee") {
      onSelect(config.key, {
        ...formData[config.key],
        permanentAddress,
        isCorrespondenceAddress
      });
    } else {
      let ownerDetails = formData.owners;
      ownerDetails["permanentAddress"] = permanentAddress;
      ownerDetails["isCorrespondenceAddress"] = isCorrespondenceAddress;
      onSelect(config.key, ownerDetails);
    }
  };
  useEffect(() => {
    if (userType === "employee") {
      goNext();
    }
  }, [permanentAddress]);
  if (userType === "employee") {
    return /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      className: "card-label-smaller",
      style: editScreen ? {
        color: "#B1B4B6"
      } : {}
    }, t("PT_OWNERS_ADDRESS")), /*#__PURE__*/React.createElement("div", {
      className: "field"
    }, /*#__PURE__*/React.createElement(TextInput, {
      name: "address",
      onChange: setOwnerPermanentAddress,
      value: permanentAddress,
      disable: editScreen
    })));
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, {
    currentStep: 2
  }) : null, /*#__PURE__*/React.createElement(FormStep, {
    config: config,
    t: t,
    onSelect: goNext,
    isDisabled: isedittrade || isrenewtrade ? false : !permanentAddress
  }, /*#__PURE__*/React.createElement(TextArea, {
    isMandatory: false,
    optionKey: "i18nKey",
    t: t,
    name: "address",
    onChange: setOwnerPermanentAddress,
    value: permanentAddress
  }), (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail = formData.TradeDetails) === null || _formData$TradeDetail === void 0 ? void 0 : (_formData$TradeDetail2 = _formData$TradeDetail.StructureType) === null || _formData$TradeDetail2 === void 0 ? void 0 : _formData$TradeDetail2.code) !== "MOVABLE" && /*#__PURE__*/React.createElement(CheckBox, {
    label: t("TL_COMMON_SAME_AS_TRADE_ADDRESS"),
    onChange: setCorrespondenceAddress,
    value: isCorrespondenceAddress,
    checked: isCorrespondenceAddress || false,
    style: {
      paddingTop: "10px"
    }
  })), ismultiple ? /*#__PURE__*/React.createElement(CitizenInfoLabel, {
    info: t("CS_FILE_APPLICATION_INFO_LABEL"),
    text: t("TL_PRIMARY_ADDR_INFO_MSG")
  }) : "");
};

const createOwnerDetails = () => ({
  name: "",
  designation: "",
  mobileNumber: "",
  altContactNumber: "",
  instituionName: "",
  fatherOrHusbandName: "",
  relationship: "",
  emailId: "",
  permanentAddress: "",
  ownerType: "",
  gender: "",
  subOwnerShipCategory: "",
  correspondenceAddress: "",
  key: Date.now()
});
const OwnerForm = _props => {
  var _genderTypeData$commo, _genderTypeData$commo2, _formData$cpt2, _formData$cpt2$detail, _formData$cptId, _formData$ownershipCa5, _errors$instituionNam2, _errors$subOwnerShipC2, _errors$name2, _errors$designation2, _errors$mobileNumber2, _errors$altContactNum2, _errors$emailId2, _errors$name4, _errors$mobileNumber4, _errors$fatherOrHusba2, _errors$relationship2, _errors$gender2, _errors$emailId4, _errors$ownerType2, _errors$permanentAddr2;
  const {
    owner,
    index,
    focusIndex,
    allOwners,
    setFocusIndex,
    removeOwner,
    setOwners,
    t,
    mdmsData,
    formData,
    config,
    setError,
    clearErrors,
    formState,
    setIsErrors,
    isErrors,
    isRenewal,
    isSameAsPropertyOwner,
    previousLicenseDetails,
    setPreviousLicenseDetails,
    genderTypeData
  } = _props;
  const {
    control,
    formState: localFormState,
    watch,
    setError: setLocalError,
    clearErrors: clearLocalErrors,
    setValue,
    trigger
  } = useForm();
  const formValue = watch();
  const {
    errors
  } = localFormState;
  const stateId = Digit.ULBService.getStateId();
  const [part, setPart] = useState({});
  const {
    ownershipCategory: {
      code: keyToSearchOwnershipSubtype
    } = {}
  } = formData;
  const {
    data: institutionOwnershipTypeOptions
  } = Digit.Hooks.tl.useTradeLicenseMDMS(stateId, "common-masters", "TradeOwnershipSubType", {
    keyToSearchOwnershipSubtype: keyToSearchOwnershipSubtype ? keyToSearchOwnershipSubtype.split(".")[0] : undefined
  });
  const typeOfOwner = useMemo(() => {
    var _formData$ownershipCa, _formData$ownershipCa2, _formData$ownershipCa3, _formData$ownershipCa4;
    if (formData !== null && formData !== void 0 && (_formData$ownershipCa = formData.ownershipCategory) !== null && _formData$ownershipCa !== void 0 && (_formData$ownershipCa2 = _formData$ownershipCa.code) !== null && _formData$ownershipCa2 !== void 0 && _formData$ownershipCa2.includes("SINGLEOWNER")) return "SINGLEOWNER";
    if (formData !== null && formData !== void 0 && (_formData$ownershipCa3 = formData.ownershipCategory) !== null && _formData$ownershipCa3 !== void 0 && (_formData$ownershipCa4 = _formData$ownershipCa3.code) !== null && _formData$ownershipCa4 !== void 0 && _formData$ownershipCa4.includes("INSTITUTIONAL")) return "INSTITUTIONAL";else return "MULTIOWNER";
  }, [formData === null || formData === void 0 ? void 0 : formData.ownershipCategory]);
  const ownerTypesMenu = useMemo(() => {
    var _mdmsData$PropertyTax, _mdmsData$PropertyTax2, _mdmsData$PropertyTax3;
    return (mdmsData === null || mdmsData === void 0 ? void 0 : (_mdmsData$PropertyTax = mdmsData.PropertyTax) === null || _mdmsData$PropertyTax === void 0 ? void 0 : (_mdmsData$PropertyTax2 = _mdmsData$PropertyTax.OwnerType) === null || _mdmsData$PropertyTax2 === void 0 ? void 0 : (_mdmsData$PropertyTax3 = _mdmsData$PropertyTax2.map) === null || _mdmsData$PropertyTax3 === void 0 ? void 0 : _mdmsData$PropertyTax3.call(_mdmsData$PropertyTax2, e => ({
      i18nKey: `${e.code.replaceAll("PROPERTY", "COMMON_MASTERS").replaceAll(".", "_")}`,
      code: e.code,
      name: e.name
    }))) || [];
  }, [mdmsData]);
  const genderFilterTypeMenu = genderTypeData && ((_genderTypeData$commo = genderTypeData["common-masters"]) === null || _genderTypeData$commo === void 0 ? void 0 : (_genderTypeData$commo2 = _genderTypeData$commo.GenderType) === null || _genderTypeData$commo2 === void 0 ? void 0 : _genderTypeData$commo2.filter(e => e.active));
  const genderTypeMenu = useMemo(() => {
    var _genderFilterTypeMenu;
    return (genderFilterTypeMenu === null || genderFilterTypeMenu === void 0 ? void 0 : (_genderFilterTypeMenu = genderFilterTypeMenu.map) === null || _genderFilterTypeMenu === void 0 ? void 0 : _genderFilterTypeMenu.call(genderFilterTypeMenu, e => ({
      i18nKey: `TL_GENDER_${e.code}`,
      code: e.code
    }))) || [];
  }, [genderFilterTypeMenu]);
  useEffect(() => {
    trigger();
  }, []);
  useEffect(() => {
    var _formData$cpt;
    if (window.location.href.includes("tl/renew-application-details") && formData !== null && formData !== void 0 && (_formData$cpt = formData.cpt) !== null && _formData$cpt !== void 0 && _formData$cpt.details) {
      if (typeOfOwner === "INSTITUTIONAL") {
        setValue("instituionName", owner === null || owner === void 0 ? void 0 : owner.instituionName);
        setValue("subOwnerShipCategory", owner === null || owner === void 0 ? void 0 : owner.subOwnerShipCategory);
        setValue("name", owner === null || owner === void 0 ? void 0 : owner.name);
        setValue("designation", owner === null || owner === void 0 ? void 0 : owner.designation);
        setValue("mobileNumber", owner === null || owner === void 0 ? void 0 : owner.mobileNumber);
        setValue("altContactNumber", owner === null || owner === void 0 ? void 0 : owner.altContactNumber);
        setValue("emailId", owner === null || owner === void 0 ? void 0 : owner.emailId);
        setValue("emailId", owner === null || owner === void 0 ? void 0 : owner.emailId);
      } else {
        setValue("name", owner === null || owner === void 0 ? void 0 : owner.name);
        setValue("mobileNumber", owner === null || owner === void 0 ? void 0 : owner.mobileNumber);
        setValue("fatherOrHusbandName", owner === null || owner === void 0 ? void 0 : owner.fatherOrHusbandName);
        setValue("relationship", owner === null || owner === void 0 ? void 0 : owner.relationship);
        setValue("gender", owner === null || owner === void 0 ? void 0 : owner.gender);
        setValue("emailId", owner === null || owner === void 0 ? void 0 : owner.emailId);
        setValue("ownerType", owner === null || owner === void 0 ? void 0 : owner.ownerType);
        setValue("permanentAddress", owner === null || owner === void 0 ? void 0 : owner.permanentAddress);
      }
    }
  }, [formData === null || formData === void 0 ? void 0 : (_formData$cpt2 = formData.cpt) === null || _formData$cpt2 === void 0 ? void 0 : (_formData$cpt2$detail = _formData$cpt2.details) === null || _formData$cpt2$detail === void 0 ? void 0 : _formData$cpt2$detail.propertyId, formData === null || formData === void 0 ? void 0 : (_formData$cptId = formData.cptId) === null || _formData$cptId === void 0 ? void 0 : _formData$cptId.Id, formData]);
  useEffect(() => {
    if (!lodash.isEqual(formValue, part)) {
      setPart({
        ...formValue
      });
      Object.keys(formValue).map(data => {
        if (data != "key" && formValue[data] != undefined && formValue[data] != "" && formValue[data] != null && !isErrors) {
          setIsErrors(true);
        }
      });
      setOwners(prev => prev.map(o => {
        return o.key && o.key === owner.key ? {
          ...o,
          ...formValue
        } : {
          ...o
        };
      }));
      trigger();
    }
  }, [formValue]);
  useEffect(() => {
    var _formState$errors$con;
    if (Object.keys(errors).length && !lodash.isEqual(((_formState$errors$con = formState.errors[config.key]) === null || _formState$errors$con === void 0 ? void 0 : _formState$errors$con.type) || {}, errors)) {
      setError(config.key, {
        type: errors
      });
    } else if (!Object.keys(errors).length && formState.errors[config.key] && isErrors) {
      clearErrors(config.key);
    }
  }, [errors]);
  const errorStyle = {
    width: "70%",
    marginLeft: "30%",
    fontSize: "12px",
    marginTop: "-21px"
  };
  let isMulitpleOwners = false;
  if ((formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa5 = formData.ownershipCategory) === null || _formData$ownershipCa5 === void 0 ? void 0 : _formData$ownershipCa5.code) === "INDIVIDUAL.MULTIPLEOWNERS") isMulitpleOwners = true;
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      marginBottom: "16px"
    }
  }, /*#__PURE__*/React.createElement("div", {
    style: typeOfOwner === "MULTIOWNER" ? {
      border: "1px solid #D6D5D4",
      padding: "16px",
      marginTop: "8px",
      borderRadius: "4px",
      background: "#FAFAFA"
    } : {}
  }, (allOwners === null || allOwners === void 0 ? void 0 : allOwners.length) > 1 ? /*#__PURE__*/React.createElement("div", {
    style: {
      display: "flex",
      justifyContent: "flex-end"
    }
  }, /*#__PURE__*/React.createElement("div", {
    onClick: () => removeOwner(owner),
    style: {
      padding: "5px",
      cursor: "pointer",
      textAlign: "right"
    }
  }, /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement("svg", {
    style: {
      float: "right",
      position: "relative",
      bottom: "5px"
    },
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M1 16C1 17.1 1.9 18 3 18H11C12.1 18 13 17.1 13 16V4H1V16ZM14 1H10.5L9.5 0H4.5L3.5 1H0V3H14V1Z",
    fill: "#494848"
  }))))) : null, typeOfOwner === "INSTITUTIONAL" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_INSTITUTION_NAME_LABEL")}*`), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "instituionName",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.instituionName,
    rules: {
      required: t("REQUIRED_FIELD"),
      validate: {
        pattern: val => /^\w+( +\w+)*$/.test(val) ? true : t("TL_NAME_ERROR_MESSAGE")
      }
    },
    render: props => {
      var _errors$instituionNam;
      return /*#__PURE__*/React.createElement(TextInput, {
        t: t,
        type: "text",
        isMandatory: false,
        value: props.value,
        disable: isSameAsPropertyOwner,
        autoFocus: focusIndex.index === (owner === null || owner === void 0 ? void 0 : owner.key) && focusIndex.type === "instituionName",
        errorStyle: localFormState.touched.instituionName && errors !== null && errors !== void 0 && (_errors$instituionNam = errors.instituionName) !== null && _errors$instituionNam !== void 0 && _errors$instituionNam.message ? true : false,
        onChange: e => {
          if (e != (owner === null || owner === void 0 ? void 0 : owner.instituionName) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          props.onChange(e);
          setFocusIndex({
            index: owner.key,
            type: "instituionName"
          });
        },
        onBlur: props.onBlur
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, " ", localFormState.touched.instituionName ? errors === null || errors === void 0 ? void 0 : (_errors$instituionNam2 = errors.instituionName) === null || _errors$instituionNam2 === void 0 ? void 0 : _errors$instituionNam2.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_INSTITUTION_TYPE_LABEL")}*`), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "subOwnerShipCategory",
    defaultValue: window.location.href.includes("tl/edit-application-details") || window.location.href.includes("tl/renew-application-details/") ? owner === null || owner === void 0 ? void 0 : owner.subOwnerShipCategory : "",
    render: props => {
      var _errors$subOwnerShipC;
      return /*#__PURE__*/React.createElement(Dropdown, {
        t: t,
        option: institutionOwnershipTypeOptions,
        errorStyle: localFormState.touched.subOwnerShipCategory && errors !== null && errors !== void 0 && (_errors$subOwnerShipC = errors.subOwnerShipCategory) !== null && _errors$subOwnerShipC !== void 0 && _errors$subOwnerShipC.message ? true : false,
        autoFocus: focusIndex.index === (owner === null || owner === void 0 ? void 0 : owner.key) && focusIndex.type === "subOwnerShipCategory",
        selected: props.value,
        disable: isSameAsPropertyOwner,
        select: e => {
          var _owner$subOwnerShipCa;
          if ((e === null || e === void 0 ? void 0 : e.code) != (owner === null || owner === void 0 ? void 0 : (_owner$subOwnerShipCa = owner.subOwnerShipCategory) === null || _owner$subOwnerShipCa === void 0 ? void 0 : _owner$subOwnerShipCa.code) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          props.onChange(e);
          setFocusIndex({
            index: owner.key,
            type: "subOwnerShipCategory"
          });
        },
        onBlur: props.onBlur,
        optionKey: "i18nKey"
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.subOwnerShipCategory ? errors === null || errors === void 0 ? void 0 : (_errors$subOwnerShipC2 = errors.subOwnerShipCategory) === null || _errors$subOwnerShipC2 === void 0 ? void 0 : _errors$subOwnerShipC2.message : ""), /*#__PURE__*/React.createElement(CardSectionHeader, null, t("TL_AUTHORIZED_PERSON_DETAILS")), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_NEW_OWNER_DETAILS_NAME_LABEL")}*`), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.name,
    name: "name",
    rules: {
      required: t("REQUIRED_FIELD"),
      validate: {
        pattern: val => /^[a-zA-Z-.`' ]*$/.test(val) ? true : t("TL_NAME_ERROR_MESSAGE")
      }
    },
    render: props => {
      var _errors$name;
      return /*#__PURE__*/React.createElement(TextInput, {
        t: t,
        type: "text",
        isMandatory: false,
        name: "name",
        value: props.value,
        disable: isSameAsPropertyOwner,
        errorStyle: localFormState.touched.name && errors !== null && errors !== void 0 && (_errors$name = errors.name) !== null && _errors$name !== void 0 && _errors$name.message ? true : false,
        autoFocus: focusIndex.index === (owner === null || owner === void 0 ? void 0 : owner.key) && focusIndex.type === "name",
        onChange: e => {
          if (e != (owner === null || owner === void 0 ? void 0 : owner.name) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          props.onChange(e);
          setFocusIndex({
            index: owner.key,
            type: "name"
          });
        },
        onBlur: props.onBlur
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.name ? errors === null || errors === void 0 ? void 0 : (_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_NEW_OWNER_DESIG_LABEL")}`), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "designation",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.designation,
    rules: {
      validate: {
        pattern: val => /^[a-zA-Z-.`' ]*$/.test(val) ? true : t("TL_NAME_ERROR_MESSAGE")
      }
    },
    render: props => {
      var _errors$designation;
      return /*#__PURE__*/React.createElement(TextInput, {
        t: t,
        type: "text",
        isMandatory: false,
        name: "designation",
        value: props.value,
        disable: isSameAsPropertyOwner,
        errorStyle: localFormState.touched.designation && errors !== null && errors !== void 0 && (_errors$designation = errors.designation) !== null && _errors$designation !== void 0 && _errors$designation.message ? true : false,
        autoFocus: focusIndex.index === (owner === null || owner === void 0 ? void 0 : owner.key) && focusIndex.type === "designation",
        onChange: e => {
          if (e != (owner === null || owner === void 0 ? void 0 : owner.designation) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          props.onChange(e);
          setFocusIndex({
            index: owner.key,
            type: "designation"
          });
        },
        onBlur: props.onBlur
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.designation ? errors === null || errors === void 0 ? void 0 : (_errors$designation2 = errors.designation) === null || _errors$designation2 === void 0 ? void 0 : _errors$designation2.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_MOBILE_NUMBER_LABEL")}*`), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "mobileNumber",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.mobileNumber,
    rules: {
      required: t("REQUIRED_FIELD"),
      validate: {
        pattern: val => /^([6-9]{1}[0-9]{9})$/.test(val) ? true : t("CORE_COMMON_APPLICANT_MOBILE_NUMBER_INVALID")
      }
    },
    render: props => {
      var _errors$mobileNumber;
      return /*#__PURE__*/React.createElement(MobileNumber, {
        type: "",
        t: t,
        isMandatory: false,
        name: "mobileNumber",
        value: props.value,
        disable: isSameAsPropertyOwner,
        errorStyle: localFormState.touched.mobileNumber && errors !== null && errors !== void 0 && (_errors$mobileNumber = errors.mobileNumber) !== null && _errors$mobileNumber !== void 0 && _errors$mobileNumber.message ? true : false,
        autoFocus: focusIndex.index === (owner === null || owner === void 0 ? void 0 : owner.key) && focusIndex.type === "mobileNumber",
        onChange: e => {
          if (e != (owner === null || owner === void 0 ? void 0 : owner.mobileNumber) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          props.onChange(e);
          setFocusIndex({
            index: owner.key,
            type: "mobileNumber"
          });
        },
        onBlur: props.onBlur
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.mobileNumber ? errors === null || errors === void 0 ? void 0 : (_errors$mobileNumber2 = errors.mobileNumber) === null || _errors$mobileNumber2 === void 0 ? void 0 : _errors$mobileNumber2.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_TELEPHONE_NUMBER_LABEL")}`), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "altContactNumber",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.altContactNumber,
    rules: {
      validate: {
        pattern: val => /^$|^[0][1-9][0-9]{9}$|^[1-9][0-9]{9}$/.test(val) ? false : t("CORE_COMMON_APPLICANT_MOBILE_NUMBER_INVALID")
      }
    },
    render: props => {
      var _errors$altContactNum;
      return /*#__PURE__*/React.createElement(MobileNumber, {
        type: "text",
        t: t,
        isMandatory: false,
        maxLength: 11,
        name: "altContactNumber",
        value: owner.altContactNumber,
        disable: isSameAsPropertyOwner,
        errorStyle: localFormState.touched.altContactNumber && errors !== null && errors !== void 0 && (_errors$altContactNum = errors.altContactNumber) !== null && _errors$altContactNum !== void 0 && _errors$altContactNum.message ? true : false,
        autoFocus: focusIndex.index === (owner === null || owner === void 0 ? void 0 : owner.key) && focusIndex.type === "altContactNumber",
        onChange: e => {
          if (e != (owner === null || owner === void 0 ? void 0 : owner.altContactNumber) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          props.onChange(e);
          setFocusIndex({
            index: owner.key,
            type: "altContactNumber"
          });
        },
        onBlur: props.onBlur
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.altContactNumber ? errors === null || errors === void 0 ? void 0 : (_errors$altContactNum2 = errors.altContactNumber) === null || _errors$altContactNum2 === void 0 ? void 0 : _errors$altContactNum2.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, null, `${t("NOC_APPLICANT_EMAIL_LABEL")}`), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.emailId,
    name: "emailId",
    rules: {
      validate: {
        pattern: val => /^$|^(?=^.{1,64}$)((([^<>()\[\]\\.,;:\s$*@'"]+(\.[^<>()\[\]\\.,;:\s@'"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,})))$/.test(val) ? true : t("TL_EMAIL_ERROR_MESSAGE")
      }
    },
    render: props => {
      var _errors$emailId;
      return /*#__PURE__*/React.createElement(TextInput, {
        t: t,
        type: "text",
        isMandatory: false,
        name: "emailId",
        value: props.value,
        disable: isSameAsPropertyOwner,
        errorStyle: localFormState.touched.emailId && errors !== null && errors !== void 0 && (_errors$emailId = errors.emailId) !== null && _errors$emailId !== void 0 && _errors$emailId.message ? true : false,
        autoFocus: focusIndex.index === (owner === null || owner === void 0 ? void 0 : owner.key) && focusIndex.type === "emailId",
        onChange: e => {
          if (e != (owner === null || owner === void 0 ? void 0 : owner.emailId) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          props.onChange(e);
          setFocusIndex({
            index: owner.key,
            type: "emailId"
          });
        },
        onBlur: props.onBlur
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.emailId ? errors === null || errors === void 0 ? void 0 : (_errors$emailId2 = errors.emailId) === null || _errors$emailId2 === void 0 ? void 0 : _errors$emailId2.message : "")), typeOfOwner !== "INSTITUTIONAL" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TL_OWNER_S_NAME_LABEL")} * `), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "name",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.name,
    rules: {
      required: t("REQUIRED_FIELD"),
      validate: {
        pattern: val => /^\w+( +\w+)*$/.test(val) ? true : t("INVALID_NAME")
      }
    },
    render: props => {
      var _errors$name3;
      return /*#__PURE__*/React.createElement(TextInput, {
        value: props.value,
        autoFocus: focusIndex.index === (owner === null || owner === void 0 ? void 0 : owner.key) && focusIndex.type === "name",
        errorStyle: localFormState.touched.name && errors !== null && errors !== void 0 && (_errors$name3 = errors.name) !== null && _errors$name3 !== void 0 && _errors$name3.message ? true : false,
        onChange: e => {
          if (e.target.value != (owner === null || owner === void 0 ? void 0 : owner.name) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          props.onChange(e.target.value);
          setFocusIndex({
            index: owner.key,
            type: "name"
          });
        },
        onBlur: e => {
          setFocusIndex({
            index: -1
          });
          props.onBlur(e);
        },
        disable: isSameAsPropertyOwner,
        style: isMulitpleOwners ? {
          background: "#FAFAFA"
        } : ""
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.name ? errors === null || errors === void 0 ? void 0 : (_errors$name4 = errors.name) === null || _errors$name4 === void 0 ? void 0 : _errors$name4.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TL_OWNER_S_MOBILE_NUM_LABEL")} * `), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "mobileNumber",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.mobileNumber,
    rules: {
      required: t("REQUIRED_FIELD"),
      validate: v => /^[6789]\d{9}$/.test(v) ? true : t("INVALID_NUMBER")
    },
    render: props => {
      var _errors$mobileNumber3;
      return /*#__PURE__*/React.createElement(MobileNumber, {
        value: props.value,
        autoFocus: focusIndex.index === (owner === null || owner === void 0 ? void 0 : owner.key) && focusIndex.type === "mobileNumber",
        onChange: e => {
          if (e != (owner === null || owner === void 0 ? void 0 : owner.mobileNumber) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          props.onChange(e);
          setFocusIndex({
            index: owner.key,
            type: "mobileNumber"
          });
        },
        labelStyle: {
          marginTop: "unset",
          border: "1px solid #464646",
          borderRight: "none"
        },
        onBlur: props.onBlur,
        disable: isSameAsPropertyOwner,
        errorStyle: localFormState.touched.mobileNumber && errors !== null && errors !== void 0 && (_errors$mobileNumber3 = errors.mobileNumber) !== null && _errors$mobileNumber3 !== void 0 && _errors$mobileNumber3.message ? true : false,
        style: isMulitpleOwners ? {
          background: "#FAFAFA"
        } : ""
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.mobileNumber ? errors === null || errors === void 0 ? void 0 : (_errors$mobileNumber4 = errors.mobileNumber) === null || _errors$mobileNumber4 === void 0 ? void 0 : _errors$mobileNumber4.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TL_GUARDIAN_S_NAME_LABEL")} * `), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "fatherOrHusbandName",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.fatherOrHusbandName,
    rules: {
      required: "NAME_REQUIRED",
      validate: {
        pattern: val => /^\w+( +\w+)*$/.test(val) ? true : t("INVALID_NAME")
      }
    },
    render: props => {
      var _errors$fatherOrHusba;
      return /*#__PURE__*/React.createElement(TextInput, {
        value: props.value,
        autoFocus: focusIndex.index === (owner === null || owner === void 0 ? void 0 : owner.key) && focusIndex.type === "fatherOrHusbandName",
        errorStyle: localFormState.touched.fatherOrHusbandName && errors !== null && errors !== void 0 && (_errors$fatherOrHusba = errors.fatherOrHusbandName) !== null && _errors$fatherOrHusba !== void 0 && _errors$fatherOrHusba.message ? true : false,
        onChange: e => {
          if (e.target.value != (owner === null || owner === void 0 ? void 0 : owner.fatherOrHusbandName) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          props.onChange(e.target.value);
          setFocusIndex({
            index: owner.key,
            type: "fatherOrHusbandName"
          });
        },
        disable: isSameAsPropertyOwner,
        onBlur: props.onBlur
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.fatherOrHusbandName ? errors === null || errors === void 0 ? void 0 : (_errors$fatherOrHusba2 = errors.fatherOrHusbandName) === null || _errors$fatherOrHusba2 === void 0 ? void 0 : _errors$fatherOrHusba2.message : "", " "), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TL_RELATIONSHIP_WITH_GUARDIAN_LABEL")} * `), /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "relationship",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.relationship,
    rules: {
      required: "RelationShip Required"
    },
    render: props => {
      var _errors$relationship;
      return /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: props.value,
        errorStyle: localFormState.touched.relationship && errors !== null && errors !== void 0 && (_errors$relationship = errors.relationship) !== null && _errors$relationship !== void 0 && _errors$relationship.message ? true : false,
        select: e => {
          var _owner$relationship;
          if ((e === null || e === void 0 ? void 0 : e.code) != (owner === null || owner === void 0 ? void 0 : (_owner$relationship = owner.relationship) === null || _owner$relationship === void 0 ? void 0 : _owner$relationship.code) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          props.onChange(e);
        },
        onBlur: props.onBlur,
        disable: isSameAsPropertyOwner,
        option: [{
          i18nKey: "COMMON_RELATION_FATHER",
          code: "FATHER"
        }, {
          i18nKey: "COMMON_RELATION_HUSBAND",
          code: "HUSBAND"
        }],
        optionKey: "i18nKey",
        t: t
      });
    }
  })), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.relationship ? errors === null || errors === void 0 ? void 0 : (_errors$relationship2 = errors.relationship) === null || _errors$relationship2 === void 0 ? void 0 : _errors$relationship2.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TL_NEW_OWNER_DETAILS_GENDER_LABEL")} * `), /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "gender",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.gender,
    rules: {
      required: t("REQUIRED_FIELD")
    },
    render: props => {
      var _errors$gender;
      return /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: props.value,
        disable: isSameAsPropertyOwner,
        errorStyle: localFormState.touched.gender && errors !== null && errors !== void 0 && (_errors$gender = errors.gender) !== null && _errors$gender !== void 0 && _errors$gender.message ? true : false,
        select: e => {
          var _owner$gender;
          if ((e === null || e === void 0 ? void 0 : e.code) != (owner === null || owner === void 0 ? void 0 : (_owner$gender = owner.gender) === null || _owner$gender === void 0 ? void 0 : _owner$gender.code) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          props.onChange(e);
        },
        onBlur: props.onBlur,
        option: genderTypeMenu,
        optionKey: "i18nKey",
        t: t
      });
    }
  })), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.gender ? errors === null || errors === void 0 ? void 0 : (_errors$gender2 = errors.gender) === null || _errors$gender2 === void 0 ? void 0 : _errors$gender2.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TL_NEW_OWNER_DETAILS_EMAIL_LABEL")} `), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "emailId",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.emailId,
    render: props => {
      var _errors$emailId3;
      return /*#__PURE__*/React.createElement(TextInput, {
        value: props.value,
        autoFocus: focusIndex.index === (owner === null || owner === void 0 ? void 0 : owner.key) && focusIndex.type === "emailId",
        errorStyle: localFormState.touched.emailId && errors !== null && errors !== void 0 && (_errors$emailId3 = errors.emailId) !== null && _errors$emailId3 !== void 0 && _errors$emailId3.message ? true : false,
        onChange: e => {
          if (e.target.value != (owner === null || owner === void 0 ? void 0 : owner.emailId) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          props.onChange(e.target.value);
          setFocusIndex({
            index: owner.key,
            type: "emailId"
          });
        },
        labelStyle: {
          marginTop: "unset"
        },
        onBlur: props.onBlur,
        disable: isSameAsPropertyOwner,
        style: isMulitpleOwners ? {
          background: "#FAFAFA"
        } : ""
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.emailId ? errors === null || errors === void 0 ? void 0 : (_errors$emailId4 = errors.emailId) === null || _errors$emailId4 === void 0 ? void 0 : _errors$emailId4.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TL_OWNER_SPECIAL_CATEGORY")} `), /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "ownerType",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.ownerType,
    render: props => {
      var _errors$ownerType;
      return /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: props.value,
        errorStyle: localFormState.touched.ownerType && errors !== null && errors !== void 0 && (_errors$ownerType = errors.ownerType) !== null && _errors$ownerType !== void 0 && _errors$ownerType.message ? true : false,
        select: e => {
          var _owner$ownerType;
          if ((e === null || e === void 0 ? void 0 : e.code) != (owner === null || owner === void 0 ? void 0 : (_owner$ownerType = owner.ownerType) === null || _owner$ownerType === void 0 ? void 0 : _owner$ownerType.code) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          props.onChange(e);
        },
        onBlur: props.onBlur,
        disable: isSameAsPropertyOwner,
        option: ownerTypesMenu ? ownerTypesMenu.sort((a, b) => a.name.localeCompare(b.name)) : [],
        optionKey: "i18nKey",
        t: t
      });
    }
  })), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.ownerType ? errors === null || errors === void 0 ? void 0 : (_errors$ownerType2 = errors.ownerType) === null || _errors$ownerType2 === void 0 ? void 0 : _errors$ownerType2.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TL_NEW_OWNER_DETAILS_ADDR_LABEL")} `), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "permanentAddress",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.permanentAddress,
    render: props => {
      var _errors$permanentAddr;
      return /*#__PURE__*/React.createElement(TextInput, {
        value: props.value,
        autoFocus: focusIndex.index === (owner === null || owner === void 0 ? void 0 : owner.key) && focusIndex.type === "permanentAddress",
        errorStyle: localFormState.touched.permanentAddress && errors !== null && errors !== void 0 && (_errors$permanentAddr = errors.permanentAddress) !== null && _errors$permanentAddr !== void 0 && _errors$permanentAddr.message ? true : false,
        onChange: e => {
          if (e.target.value != (owner === null || owner === void 0 ? void 0 : owner.permanentAddress) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          props.onChange(e.target.value);
          setFocusIndex({
            index: owner.key,
            type: "permanentAddress"
          });
        },
        onBlur: props.onBlur,
        disable: isSameAsPropertyOwner,
        style: isMulitpleOwners ? {
          background: "#FAFAFA"
        } : ""
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.permanentAddress ? errors === null || errors === void 0 ? void 0 : (_errors$permanentAddr2 = errors.permanentAddress) === null || _errors$permanentAddr2 === void 0 ? void 0 : _errors$permanentAddr2.message : "")))));
};
const TLOwnerDetailsEmployee = ({
  config,
  onSelect,
  userType,
  formData,
  setError,
  formState,
  clearErrors
}) => {
  var _formData$ownershipCa6, _formData$cpt3, _formData$cpt3$detail, _formData$ownershipCa14, _formData$tradeUnits2, _formData$tradeUnits3, _formData$tradeUnits4, _formData$ownershipCa15, _formState$errors, _formState$errors$mul;
  const {
    t
  } = useTranslation();
  const {
    pathname
  } = useLocation();
  const isEditScreen = pathname.includes("/modify-application/");
  let isSameAsPropertyOwner = formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa6 = formData.ownershipCategory) === null || _formData$ownershipCa6 === void 0 ? void 0 : _formData$ownershipCa6.isSameAsPropertyOwner;
  const [owners, setOwners] = useState((formData === null || formData === void 0 ? void 0 : formData.owners) || [createOwnerDetails()]);
  const [focusIndex, setFocusIndex] = useState({
    index: -1,
    type: ""
  });
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const stateId = Digit.ULBService.getStateId();
  const [isErrors, setIsErrors] = useState(false);
  const [previousLicenseDetails, setPreviousLicenseDetails] = useState((formData === null || formData === void 0 ? void 0 : formData.tradedetils1) || []);
  const {
    data: mdmsData,
    isLoading
  } = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", ["UsageCategory", "OccupancyType", "Floor", "OwnerType", "OwnerShipCategory", "Documents", "SubOwnerShipCategory", "OwnerShipCategory"]);
  const {
    data: genderTypeData
  } = Digit.Hooks.tl.useTradeLicenseMDMS(stateId, "common-masters", ["GenderType"]);
  const addNewOwner = () => {
    const newOwner = createOwnerDetails();
    setOwners(prev => [...prev, newOwner]);
  };
  const removeOwner = owner => {
    setOwners(prev => prev.filter(o => o.key != owner.key));
  };
  useEffect(() => {
    var _formData$ownershipCa7, _formData$ownershipCa8, _owners$;
    if (formData !== null && formData !== void 0 && (_formData$ownershipCa7 = formData.ownershipCategory) !== null && _formData$ownershipCa7 !== void 0 && (_formData$ownershipCa8 = _formData$ownershipCa7.code) !== null && _formData$ownershipCa8 !== void 0 && _formData$ownershipCa8.includes("INSTITUTIONAL") && owners.length == 1 && formData !== null && formData !== void 0 && formData.tradedetils1 && !(owners !== null && owners !== void 0 && (_owners$ = owners[0]) !== null && _owners$ !== void 0 && _owners$.subOwnerShipCategory)) {
      setOwners([{
        ...owners[0],
        subOwnerShipCategory: formData === null || formData === void 0 ? void 0 : formData.ownershipCategory
      }]);
    }
  }, [owners]);
  useEffect(() => {
    var _formData$ownershipCa9, _formData$ownershipCa10;
    if (((formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa9 = formData.ownershipCategory) === null || _formData$ownershipCa9 === void 0 ? void 0 : _formData$ownershipCa9.isSameAsPropertyOwner) == true || (formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa10 = formData.ownershipCategory) === null || _formData$ownershipCa10 === void 0 ? void 0 : _formData$ownershipCa10.isSameAsPropertyOwner) === "true") && JSON.parse(sessionStorage.getItem("ownersFromProperty")) && !lodash.isEqual(owners, JSON.parse(sessionStorage.getItem("ownersFromProperty")))) {
      setOwners([...JSON.parse(sessionStorage.getItem("ownersFromProperty"))]);
    }
  }, [formData, formData === null || formData === void 0 ? void 0 : (_formData$cpt3 = formData.cpt) === null || _formData$cpt3 === void 0 ? void 0 : (_formData$cpt3$detail = _formData$cpt3.details) === null || _formData$cpt3$detail === void 0 ? void 0 : _formData$cpt3$detail.propertyId]);
  useEffect(() => {
    var _formData$ownershipCa11, _formData$ownershipCa12;
    if ((formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa11 = formData.ownershipCategory) === null || _formData$ownershipCa11 === void 0 ? void 0 : _formData$ownershipCa11.code) == "INDIVIDUAL.MULTIPLEOWNERS" && owners.length > 1) clearErrors("mulipleOwnerError");
    if ((formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa12 = formData.ownershipCategory) === null || _formData$ownershipCa12 === void 0 ? void 0 : _formData$ownershipCa12.code) == "INDIVIDUAL.MULTIPLEOWNERS" && owners.length == 1) setError("mulipleOwnerError", {
      type: "owner_missing",
      message: `TL_ERROR_MULTIPLE_OWNER`
    });
    const data = owners.map(e => {
      return e;
    });
    onSelect(config === null || config === void 0 ? void 0 : config.key, data);
  }, [owners]);
  useEffect(() => {
    onSelect("tradedetils1", previousLicenseDetails);
  }, [previousLicenseDetails]);
  useEffect(() => {
    if (window.location.href.includes("tl/new-application")) {
      var _formData$ownershipCa13;
      setOwners([createOwnerDetails()]);
      if ((formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa13 = formData.ownershipCategory) === null || _formData$ownershipCa13 === void 0 ? void 0 : _formData$ownershipCa13.code) == "INDIVIDUAL.MULTIPLEOWNERS") setError("mulipleOwnerError", {
        type: "owner_missing",
        message: `TL_ERROR_MULTIPLE_OWNER`
      });
    }
  }, [formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa14 = formData.ownershipCategory) === null || _formData$ownershipCa14 === void 0 ? void 0 : _formData$ownershipCa14.code]);
  let isRenewal = window.location.href.includes("tl/renew-application-details");
  if (window.location.href.includes("tl/edit-application-details")) isRenewal = true;
  useEffect(() => {
    var _formData$tradeUnits;
    if ((formData === null || formData === void 0 ? void 0 : (_formData$tradeUnits = formData.tradeUnits) === null || _formData$tradeUnits === void 0 ? void 0 : _formData$tradeUnits.length) > 0 && !isRenewal) {
      let flag = true;
      owners.map(data => {
        Object.keys(data).map(dta => {
          if (dta != "key" && data[dta]) flag = false;
        });
      });
      formData === null || formData === void 0 ? void 0 : formData.tradeUnits.map(data => {
        Object.keys(data).map(dta => {
          if (dta != "key" && data[dta] != undefined && data[data] != "" && data[data] != null) ; else {
            if (flag) setOwners([createOwnerDetails()]);
            flag = false;
          }
        });
      });
    }
  }, [formData === null || formData === void 0 ? void 0 : (_formData$tradeUnits2 = formData.tradeUnits) === null || _formData$tradeUnits2 === void 0 ? void 0 : (_formData$tradeUnits3 = _formData$tradeUnits2[0]) === null || _formData$tradeUnits3 === void 0 ? void 0 : (_formData$tradeUnits4 = _formData$tradeUnits3.tradeCategory) === null || _formData$tradeUnits4 === void 0 ? void 0 : _formData$tradeUnits4.code]);
  const commonProps = {
    focusIndex,
    allOwners: owners,
    setFocusIndex,
    removeOwner,
    formData,
    formState,
    setOwners,
    mdmsData,
    t,
    setError,
    clearErrors,
    config,
    setIsErrors,
    isErrors,
    isRenewal,
    isSameAsPropertyOwner,
    previousLicenseDetails,
    setPreviousLicenseDetails,
    genderTypeData
  };
  if (isEditScreen) {
    return /*#__PURE__*/React.createElement(React.Fragment, null);
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, owners.map((owner, index) => /*#__PURE__*/React.createElement(OwnerForm, Object.assign({
    key: owner.key,
    index: index,
    owner: owner
  }, commonProps))), (formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa15 = formData.ownershipCategory) === null || _formData$ownershipCa15 === void 0 ? void 0 : _formData$ownershipCa15.code) === "INDIVIDUAL.MULTIPLEOWNERS" ? /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(LinkButton, {
    label: t("TL_NEW_OWNER_DETAILS_ADD_OWN"),
    onClick: addNewOwner,
    style: {
      color: "#a82227",
      width: "fit-content"
    }
  }), /*#__PURE__*/React.createElement(CardLabelError, {
    style: {
      width: "70%",
      marginLeft: "30%",
      fontSize: "12px",
      marginTop: "-24px"
    }
  }, t(((_formState$errors = formState.errors) === null || _formState$errors === void 0 ? void 0 : (_formState$errors$mul = _formState$errors.mulipleOwnerError) === null || _formState$errors$mul === void 0 ? void 0 : _formState$errors$mul.message) || ""))) : null);
};

const defaultFinancialYear = () => {
  const data = convertEpochToDate(Date.now());
  const splitData = data.split("-")[0];
  const year = splitData.slice(2, 4);
  let monthNo = Number(data.split("-")[1]);
  const currentFinancialYear = monthNo < 4 ? `${Number(splitData) - 1}-${Number(year)}` : `${Number(splitData)}-${Number(year) + 1}`;
  return {
    code: currentFinancialYear,
    i18nKey: `FY${currentFinancialYear}`,
    id: currentFinancialYear === null || currentFinancialYear === void 0 ? void 0 : currentFinancialYear.split('-')[0]
  };
};
const createTradeDetailsDetails = () => ({
  financialYear: defaultFinancialYear(),
  licenseType: "",
  structureType: "",
  structureSubType: "",
  commencementDate: "",
  gstNo: "",
  operationalArea: "",
  noOfEmployees: "",
  key: Date.now()
});
const TLTradeDetailsEmployee = ({
  config,
  onSelect,
  userType,
  formData,
  setError,
  formState,
  clearErrors
}) => {
  var _formData$tradedetils, _formData$tradedetils2;
  const {
    t
  } = useTranslation();
  const {
    pathname
  } = useLocation();
  const isEditScreen = pathname.includes("/modify-application/");
  const [tradedetils, setTradedetils] = useState((formData === null || formData === void 0 ? void 0 : formData.tradedetils) || [createTradeDetailsDetails()]);
  const [previousLicenseDetails, setPreviousLicenseDetails] = useState((formData === null || formData === void 0 ? void 0 : formData.tradedetils1) || []);
  const [structureSubTypeOptions, setStructureSubTypeOptions] = useState([]);
  const [owners, setOwners] = useState((formData === null || formData === void 0 ? void 0 : formData.owners) || [createTradeDetailsDetails()]);
  const [focusIndex, setFocusIndex] = useState({
    index: -1,
    type: ""
  });
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const stateId = Digit.ULBService.getStateId();
  const [isErrors, setIsErrors] = useState(false);
  const [licenseTypeList, setLicenseTypeList] = useState([]);
  const [licenseTypeValue, setLicenseTypeValue] = useState([]);
  const {
    isLoading: menuLoading,
    data: Menu = {}
  } = Digit.Hooks.tl.useTradeLicenseMDMS(stateId, "common-masters", "StructureType");
  const {
    data: FinaceMenu = {}
  } = Digit.Hooks.tl.useTradeLicenseMDMS(stateId, "egf-master", ["FinancialYear"]);
  const {
    data: billingSlabData
  } = Digit.Hooks.tl.useTradeLicenseBillingslab({
    tenantId,
    filters: {}
  });
  const removeOwner = owner => {
    setOwners(prev => prev.filter(o => o.key != owner.key));
  };
  useEffect(() => {
    const data = tradedetils.map(e => {
      return e;
    });
    onSelect(config === null || config === void 0 ? void 0 : config.key, data);
  }, [tradedetils]);
  useEffect(() => {
    onSelect("tradedetils1", previousLicenseDetails);
  }, [previousLicenseDetails]);
  useEffect(() => {
    setOwners([createTradeDetailsDetails()]);
  }, [formData === null || formData === void 0 ? void 0 : (_formData$tradedetils = formData.tradedetils) === null || _formData$tradedetils === void 0 ? void 0 : (_formData$tradedetils2 = _formData$tradedetils[0]) === null || _formData$tradedetils2 === void 0 ? void 0 : _formData$tradedetils2.key]);
  const commonProps = {
    focusIndex,
    allOwners: tradedetils,
    setFocusIndex,
    removeOwner,
    formData,
    formState,
    setOwners,
    t,
    setError,
    clearErrors,
    config,
    setTradedetils,
    FinaceMenu,
    setStructureSubTypeOptions,
    structureSubTypeOptions,
    Menu,
    setIsErrors,
    isErrors,
    billingSlabData,
    licenseTypeList,
    setLicenseTypeList,
    previousLicenseDetails,
    setPreviousLicenseDetails,
    licenseTypeValue,
    setLicenseTypeValue,
    menuLoading
  };
  if (isEditScreen) {
    return /*#__PURE__*/React.createElement(React.Fragment, null);
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, tradedetils.map((tradedetail, index) => /*#__PURE__*/React.createElement(OwnerForm1, Object.assign({
    key: tradedetail.key,
    index: index,
    tradedetail: tradedetail
  }, commonProps))));
};
const OwnerForm1 = _props => {
  var _errors$financialYear2, _errors$tradeName2, _errors$structureType2, _errors$structureSubT2, _errors$commencementD, _errors$gstNo2, _errors$operationalAr2, _errors$noOfEmployees2;
  const {
    tradedetail,
    index,
    focusIndex,
    allOwners,
    setFocusIndex,
    removeOwner,
    setOwners,
    t,
    formData,
    config,
    setError,
    clearErrors,
    formState,
    setTradedetils,
    FinaceMenu,
    setStructureSubTypeOptions,
    structureSubTypeOptions,
    Menu,
    setIsErrors,
    isErrors,
    billingSlabData,
    licenseTypeList,
    setLicenseTypeList,
    previousLicenseDetails,
    setPreviousLicenseDetails,
    licenseTypeValue,
    setLicenseTypeValue,
    menuLoading
  } = _props;
  const {
    control,
    formState: localFormState,
    watch,
    setError: setLocalError,
    clearErrors: clearLocalErrors,
    setValue,
    trigger,
    getValues
  } = useForm();
  const formValue = watch();
  const {
    errors
  } = localFormState;
  useEffect(() => {
    var _billingSlabData$bill;
    if (billingSlabData && billingSlabData !== null && billingSlabData !== void 0 && billingSlabData.billingSlab && (billingSlabData === null || billingSlabData === void 0 ? void 0 : (_billingSlabData$bill = billingSlabData.billingSlab) === null || _billingSlabData$bill === void 0 ? void 0 : _billingSlabData$bill.length) > 0) {
      const processedData = billingSlabData.billingSlab && billingSlabData.billingSlab.reduce((acc, item) => {
        let accessory = {
          active: true
        };
        let tradeType = {
          active: true
        };
        if (item.accessoryCategory && item.tradeType === null) {
          accessory.code = item.accessoryCategory;
          accessory.uom = item.uom;
          accessory.rate = item.rate;
          item.rate && item.rate > 0 && acc.accessories.push(accessory);
        } else if (item.accessoryCategory === null && item.tradeType) {
          tradeType.code = item.tradeType;
          tradeType.uom = item.uom;
          tradeType.structureType = item.structureType;
          tradeType.licenseType = item.licenseType;
          tradeType.rate = item.rate;
          !isUndefined_1(item.rate) && item.rate !== null && acc.tradeTypeData.push(tradeType);
        }
        return acc;
      }, {
        accessories: [],
        tradeTypeData: []
      });
      let licenseTypes = getUniqueItemsFromArray(processedData.tradeTypeData, "licenseType");
      licenseTypes = licenseTypes.map(item => {
        return {
          code: item.licenseType,
          active: true
        };
      });
      if (licenseTypes && licenseTypes.length > 0) {
        licenseTypes.forEach(data => {
          data.i18nKey = `TRADELICENSE_LICENSETYPE_${data.code}`;
        });
      }
      let licenseTypeValue = [];
      if (licenseTypes && licenseTypes.length > 0) {
        licenseTypes.map(data => {
          if (data.code == "PERMANENT") licenseTypeValue.push(data);
        });
      }
      setLicenseTypeValue(licenseTypeValue[0]);
      setLicenseTypeList(licenseTypes);
    }
  }, [billingSlabData]);
  let financialYearOptions = [];
  FinaceMenu && FinaceMenu["egf-master"] && FinaceMenu["egf-master"].FinancialYear.map(data => {
    if (data.module == "TL") financialYearOptions.push({
      code: data.name,
      i18nKey: `FY${data.name}`,
      id: data.name.split('-')[0]
    });
  });
  if (financialYearOptions && financialYearOptions.length > 0) {
    financialYearOptions.sort(function (a, b) {
      return Number(a.id) - Number(b.id);
    });
  }
  let structureTypeOptions = [];
  structureTypeOptions = Menu && Menu["common-masters"] && Menu["common-masters"].StructureType.map(e => {
    let code = e === null || e === void 0 ? void 0 : e.code.split('.')[0];
    return {
      i18nKey: t(`COMMON_MASTERS_STRUCTURETYPE_${stringReplaceAll(code === null || code === void 0 ? void 0 : code.toUpperCase(), ".", "_")}`),
      label: code,
      ...e
    };
  }) || [];
  let selectedStructureTypeOptions = [];
  if (structureTypeOptions && structureTypeOptions.length > 0) {
    var flags = [],
      l = structureTypeOptions.length,
      i;
    for (i = 0; i < l; i++) {
      var _structureTypeOptions, _structureTypeOptions2;
      if (flags[structureTypeOptions[i].label]) continue;
      flags[structureTypeOptions[i].label] = true;
      selectedStructureTypeOptions.push({
        code: structureTypeOptions[i].label,
        i18nKey: t(`COMMON_MASTERS_STRUCTURETYPE_${stringReplaceAll((_structureTypeOptions = structureTypeOptions[i]) === null || _structureTypeOptions === void 0 ? void 0 : (_structureTypeOptions2 = _structureTypeOptions.label) === null || _structureTypeOptions2 === void 0 ? void 0 : _structureTypeOptions2.toUpperCase(), ".", "_")}`)
      });
    }
  }
  let isRenewal = window.location.href.includes("renew-application-details");
  if (window.location.href.includes("edit-application-details")) isRenewal = true;
  useEffect(() => {
    var _structureTypeOptions3;
    if (isRenewal && ((_structureTypeOptions3 = structureTypeOptions) === null || _structureTypeOptions3 === void 0 ? void 0 : _structureTypeOptions3.length) > 0 && !menuLoading) {
      var _tradedetail$structur, _tradedetail$structur2;
      let selectedOption = tradedetail === null || tradedetail === void 0 ? void 0 : (_tradedetail$structur = tradedetail.structureType) === null || _tradedetail$structur === void 0 ? void 0 : (_tradedetail$structur2 = _tradedetail$structur.code) === null || _tradedetail$structur2 === void 0 ? void 0 : _tradedetail$structur2.split('.')[0];
      let structureSubTypeOption = [];
      structureTypeOptions.map(data => {
        var _data$code;
        if (selectedOption === (data === null || data === void 0 ? void 0 : (_data$code = data.code) === null || _data$code === void 0 ? void 0 : _data$code.split('.')[0])) {
          var _data$code2;
          structureSubTypeOption.push({
            code: data === null || data === void 0 ? void 0 : data.code,
            i18nKey: t(`COMMON_MASTERS_STRUCTURETYPE_${stringReplaceAll(data === null || data === void 0 ? void 0 : (_data$code2 = data.code) === null || _data$code2 === void 0 ? void 0 : _data$code2.toUpperCase(), ".", "_")}`)
          });
        }
      });
      setStructureSubTypeOptions(structureSubTypeOption);
    }
  }, [tradedetail === null || tradedetail === void 0 ? void 0 : tradedetail.structureType, !menuLoading]);
  useEffect(() => {
    trigger();
  }, []);
  useEffect(() => {
    const keys = Object.keys(formValue);
    const part = {};
    keys.forEach(key => part[key] = tradedetail[key]);
    let _ownerType = {};
    if (!lodash.isEqual(formValue, part)) {
      Object.keys(formValue).map(data => {
        if (data != "key" && formValue[data] != undefined && formValue[data] != "" && formValue[data] != null && !isErrors) {
          setIsErrors(true);
        }
      });
      setTradedetils(prev => prev.map(o => {
        return o.key && o.key === tradedetail.key ? {
          ...o,
          ...formValue,
          ..._ownerType
        } : {
          ...o
        };
      }));
      trigger();
    }
  }, [formValue]);
  useEffect(() => {
    var _formState$errors$con;
    if (Object.keys(errors).length && !lodash.isEqual(((_formState$errors$con = formState.errors[config.key]) === null || _formState$errors$con === void 0 ? void 0 : _formState$errors$con.type) || {}, errors)) {
      setError(config.key, {
        type: errors
      });
    } else if (!Object.keys(errors).length && formState.errors[config.key] && isErrors) {
      clearErrors(config.key);
    }
  }, [errors]);
  const errorStyle = {
    width: "70%",
    marginLeft: "30%",
    fontSize: "12px",
    marginTop: "-21px"
  };
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      marginBottom: "16px"
    }
  }, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TL_FINANCIAL_YEAR_LABEL")} * `), /*#__PURE__*/React.createElement(Controller, {
    name: "financialYear",
    rules: {
      required: t("REQUIRED_FIELD")
    },
    defaultValue: tradedetail === null || tradedetail === void 0 ? void 0 : tradedetail.financialYear,
    control: control,
    render: props => {
      var _errors$financialYear;
      return /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: props.value,
        errorStyle: localFormState.touched.financialYear && errors !== null && errors !== void 0 && (_errors$financialYear = errors.financialYear) !== null && _errors$financialYear !== void 0 && _errors$financialYear.message ? true : false,
        option: financialYearOptions,
        select: props.onChange,
        optionKey: "i18nKey",
        onBlur: props.onBlur,
        disable: isRenewal,
        t: t
      });
    }
  })), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.financialYear ? errors === null || errors === void 0 ? void 0 : (_errors$financialYear2 = errors.financialYear) === null || _errors$financialYear2 === void 0 ? void 0 : _errors$financialYear2.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TL_NEW_TRADE_DETAILS_LIC_TYPE_LABEL")} * `), /*#__PURE__*/React.createElement(Controller, {
    name: "licenseType",
    defaultValue: tradedetail === null || tradedetail === void 0 ? void 0 : tradedetail.licenseType,
    control: control,
    render: props => {
      var _errors$licenseType;
      return /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: licenseTypeValue,
        disable: true,
        option: licenseTypeList,
        select: props.onChange,
        optionKey: "i18nKey",
        onBlur: props.onBlur,
        t: t,
        errorStyle: localFormState.touched.licenseType && errors !== null && errors !== void 0 && (_errors$licenseType = errors.licenseType) !== null && _errors$licenseType !== void 0 && _errors$licenseType.message ? true : false
      });
    }
  })), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TL_COMMON_TABLE_COL_TRD_NAME")} * `), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "tradeName",
    defaultValue: tradedetail === null || tradedetail === void 0 ? void 0 : tradedetail.tradeName,
    rules: {
      required: t("REQUIRED_FIELD"),
      validate: {
        pattern: val => /^[-@.\/#&+\w\s]*$/.test(val) ? true : t("INVALID_NAME")
      }
    },
    render: props => {
      var _errors$tradeName;
      return /*#__PURE__*/React.createElement(TextInput, {
        value: props.value,
        autoFocus: focusIndex.index === (tradedetail === null || tradedetail === void 0 ? void 0 : tradedetail.key) && focusIndex.type === "name",
        errorStyle: localFormState.touched.tradeName && errors !== null && errors !== void 0 && (_errors$tradeName = errors.tradeName) !== null && _errors$tradeName !== void 0 && _errors$tradeName.message ? true : false,
        onChange: e => {
          props.onChange(e.target.value);
          setFocusIndex({
            index: tradedetail.key,
            type: "tradeName"
          });
        },
        onBlur: e => {
          setFocusIndex({
            index: -1
          });
          props.onBlur(e);
        },
        disable: isRenewal
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.tradeName ? errors === null || errors === void 0 ? void 0 : (_errors$tradeName2 = errors.tradeName) === null || _errors$tradeName2 === void 0 ? void 0 : _errors$tradeName2.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TL_NEW_TRADE_DETAILS_STRUCT_TYPE_LABEL")} * `), /*#__PURE__*/React.createElement(Controller, {
    name: "structureType",
    rules: {
      required: t("REQUIRED_FIELD")
    },
    defaultValue: tradedetail === null || tradedetail === void 0 ? void 0 : tradedetail.structureType,
    control: control,
    render: props => {
      var _errors$structureType;
      return /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: props.value,
        disable: isRenewal,
        option: selectedStructureTypeOptions,
        errorStyle: localFormState.touched.structureType && errors !== null && errors !== void 0 && (_errors$structureType = errors.structureType) !== null && _errors$structureType !== void 0 && _errors$structureType.message ? true : false,
        select: e => {
          var _e$code;
          let selectedOption = e === null || e === void 0 ? void 0 : (_e$code = e.code) === null || _e$code === void 0 ? void 0 : _e$code.split('.')[0];
          let structureSubTypeOption = [];
          structureTypeOptions.map(data => {
            var _data$code3;
            if (selectedOption === (data === null || data === void 0 ? void 0 : (_data$code3 = data.code) === null || _data$code3 === void 0 ? void 0 : _data$code3.split('.')[0])) {
              var _data$code4;
              structureSubTypeOption.push({
                code: data === null || data === void 0 ? void 0 : data.code,
                i18nKey: t(`COMMON_MASTERS_STRUCTURETYPE_${stringReplaceAll(data === null || data === void 0 ? void 0 : (_data$code4 = data.code) === null || _data$code4 === void 0 ? void 0 : _data$code4.toUpperCase(), ".", "_")}`)
              });
            }
          });
          setValue("structureSubType", "");
          setStructureSubTypeOptions(structureSubTypeOption);
          props.onChange(e);
        },
        optionKey: "i18nKey",
        onBlur: props.onBlur,
        t: t
      });
    }
  })), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.structureType ? errors === null || errors === void 0 ? void 0 : (_errors$structureType2 = errors.structureType) === null || _errors$structureType2 === void 0 ? void 0 : _errors$structureType2.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TL_NEW_TRADE_DETAILS_STRUCT_SUB_TYPE_LABEL")} * `), /*#__PURE__*/React.createElement(Controller, {
    name: "structureSubType",
    rules: {
      required: t("REQUIRED_FIELD")
    },
    defaultValue: tradedetail === null || tradedetail === void 0 ? void 0 : tradedetail.structureSubType,
    control: control,
    render: props => {
      var _errors$structureSubT;
      return /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: getValues("structureSubType"),
        disable: false,
        option: structureSubTypeOptions,
        select: e => {
          var _tradedetail$structur3;
          if ((e === null || e === void 0 ? void 0 : e.code) != (tradedetail === null || tradedetail === void 0 ? void 0 : (_tradedetail$structur3 = tradedetail.structureSubType) === null || _tradedetail$structur3 === void 0 ? void 0 : _tradedetail$structur3.code) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          props.onChange(e);
        },
        optionKey: "i18nKey",
        onBlur: props.onBlur,
        t: t,
        errorStyle: localFormState.touched.structureSubType && errors !== null && errors !== void 0 && (_errors$structureSubT = errors.structureSubType) !== null && _errors$structureSubT !== void 0 && _errors$structureSubT.message ? true : false
      });
    }
  })), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.structureSubType ? errors === null || errors === void 0 ? void 0 : (_errors$structureSubT2 = errors.structureSubType) === null || _errors$structureSubT2 === void 0 ? void 0 : _errors$structureSubT2.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TL_NEW_TRADE_DETAILS_TRADE_COMM_DATE_LABEL")} * `), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    name: "commencementDate",
    rules: {
      required: t("REQUIRED_FIELD")
    },
    defaultValue: tradedetail === null || tradedetail === void 0 ? void 0 : tradedetail.commencementDate,
    control: control,
    render: props => /*#__PURE__*/React.createElement(DatePicker, {
      date: props.value,
      name: "CommencementDate",
      onChange: props.onChange,
      disabled: isRenewal
    })
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.commencementDate ? errors === null || errors === void 0 ? void 0 : (_errors$commencementD = errors.commencementDate) === null || _errors$commencementD === void 0 ? void 0 : _errors$commencementD.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TL_NEW_GST_NUMBER_LABEL")} `), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "gstNo",
    defaultValue: tradedetail === null || tradedetail === void 0 ? void 0 : tradedetail.gstNo,
    rules: {
      validate: e => e && getPattern("GSTNo").test(e) || !e ? true : t("ERR_DEFAULT_INPUT_FIELD_MSG")
    },
    render: props => {
      var _errors$gstNo;
      return /*#__PURE__*/React.createElement(TextInput, {
        value: props.value,
        autoFocus: focusIndex.index === (tradedetail === null || tradedetail === void 0 ? void 0 : tradedetail.key) && focusIndex.type === "gstNo",
        errorStyle: localFormState.touched.gstNo && errors !== null && errors !== void 0 && (_errors$gstNo = errors.gstNo) !== null && _errors$gstNo !== void 0 && _errors$gstNo.message ? true : false,
        onChange: e => {
          props.onChange(e.target.value);
          setFocusIndex({
            index: tradedetail === null || tradedetail === void 0 ? void 0 : tradedetail.key,
            type: "gstNo"
          });
        },
        labelStyle: {
          marginTop: "unset"
        },
        onBlur: props.onBlur,
        disable: isRenewal
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.gstNo ? errors === null || errors === void 0 ? void 0 : (_errors$gstNo2 = errors.gstNo) === null || _errors$gstNo2 === void 0 ? void 0 : _errors$gstNo2.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TL_NEW_OPERATIONAL_SQ_FT_AREA_LABEL")} `), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    name: "operationalArea",
    rules: {
      validate: e => e && getPattern("OperationalArea").test(e) || !e ? true : t("ERR_DEFAULT_INPUT_FIELD_MSG")
    },
    defaultValue: tradedetail === null || tradedetail === void 0 ? void 0 : tradedetail.operationalArea,
    control: control,
    render: props => {
      var _errors$operationalAr;
      return /*#__PURE__*/React.createElement(TextInput, {
        onChange: e => {
          props.onChange(e.target.value);
          setFocusIndex({
            index: tradedetail === null || tradedetail === void 0 ? void 0 : tradedetail.key,
            type: "operationalArea"
          });
        },
        value: props.value,
        autoFocus: focusIndex.index === (tradedetail === null || tradedetail === void 0 ? void 0 : tradedetail.key) && focusIndex.type === "operationalArea",
        errorStyle: localFormState.touched.operationalArea && errors !== null && errors !== void 0 && (_errors$operationalAr = errors.operationalArea) !== null && _errors$operationalAr !== void 0 && _errors$operationalAr.message ? true : false,
        onBlur: props.onBlur,
        disable: isRenewal
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.operationalArea ? errors === null || errors === void 0 ? void 0 : (_errors$operationalAr2 = errors.operationalArea) === null || _errors$operationalAr2 === void 0 ? void 0 : _errors$operationalAr2.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TL_NEW_NUMBER_OF_EMPLOYEES_LABEL")} `), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    name: "noOfEmployees",
    rules: {
      validate: e => e && getPattern("NoOfEmp").test(e) || !e ? true : t("ERR_DEFAULT_INPUT_FIELD_MSG")
    },
    defaultValue: tradedetail === null || tradedetail === void 0 ? void 0 : tradedetail.noOfEmployees,
    control: control,
    render: props => {
      var _errors$noOfEmployees;
      return /*#__PURE__*/React.createElement(TextInput, {
        onChange: e => {
          props.onChange(e.target.value);
          setFocusIndex({
            index: tradedetail === null || tradedetail === void 0 ? void 0 : tradedetail.key,
            type: "noOfEmployees"
          });
        },
        value: props.value,
        autoFocus: focusIndex.index === (tradedetail === null || tradedetail === void 0 ? void 0 : tradedetail.key) && focusIndex.type === "noOfEmployees",
        errorStyle: localFormState.touched.noOfEmployees && errors !== null && errors !== void 0 && (_errors$noOfEmployees = errors.noOfEmployees) !== null && _errors$noOfEmployees !== void 0 && _errors$noOfEmployees.message ? true : false,
        onBlur: props.onBlur,
        disable: isRenewal
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.noOfEmployees ? errors === null || errors === void 0 ? void 0 : (_errors$noOfEmployees2 = errors.noOfEmployees) === null || _errors$noOfEmployees2 === void 0 ? void 0 : _errors$noOfEmployees2.message : ""))));
};

const createUnitDetails = () => ({
  tradeType: "",
  tradeSubType: "",
  tradeCategory: "",
  uom: "",
  uomValue: "",
  key: Date.now()
});
const TLTradeUnitsEmployee = ({
  config,
  onSelect,
  userType,
  formData,
  setError,
  formState,
  clearErrors
}) => {
  const {
    t
  } = useTranslation();
  const {
    pathname
  } = useLocation();
  const isEditScreen = pathname.includes("/modify-application/");
  const [units, setUnits] = useState((formData === null || formData === void 0 ? void 0 : formData.tradeUnits) || [createUnitDetails()]);
  const [focusIndex, setFocusIndex] = useState({
    index: -1,
    type: ""
  });
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const stateId = Digit.ULBService.getStateId();
  const [tradeTypeMdmsData, setTradeTypeMdmsData] = useState([]);
  const [tradeCategoryValues, setTradeCategoryValues] = useState([]);
  const [tradeTypeOptionsList, setTradeTypeOptionsList] = useState([]);
  const [tradeSubTypeOptionsList, setTradeSubTypeOptionsList] = useState([]);
  const [isErrors, setIsErrors] = useState(false);
  const [previousLicenseDetails, setPreviousLicenseDetails] = useState((formData === null || formData === void 0 ? void 0 : formData.tradedetils1) || []);
  let isRenewal = window.location.href.includes("tl/renew-application-details");
  if (window.location.href.includes("tl/renew-application-details")) isRenewal = true;
  const applicationType = isRenewal ? "RENEWAL" : "NEW";
  const {
    data: tradeMdmsData,
    isLoading
  } = Digit.Hooks.tl.useTradeLicenseMDMS(stateId, "TradeLicense", "TradeUnits", "[?(@.type=='TL')]");
  const {
    data: billingSlabTradeTypeData,
    isLoading: isbillingSlabLoading
  } = Digit.Hooks.tl.useTradeLicenseBillingslab({
    tenantId,
    filters: {}
  }, {
    select: data => {
      return data === null || data === void 0 ? void 0 : data.billingSlab.filter(e => e.tradeType && e.applicationType === applicationType && e.licenseType === "PERMANENT" && e.uom);
    }
  });
  const addNewUnits = () => {
    const newUnit = createUnitDetails();
    setUnits(prev => [...prev, newUnit]);
  };
  const removeUnit = unit => {
    setUnits(prev => prev.filter(o => o.key != unit.key));
  };
  useEffect(() => {
    const data = units.map(e => {
      return e;
    });
    onSelect(config === null || config === void 0 ? void 0 : config.key, data);
  }, [units]);
  useEffect(() => {
    onSelect("tradedetils1", previousLicenseDetails);
  }, [previousLicenseDetails]);
  const commonProps = {
    focusIndex,
    allUnits: units,
    setFocusIndex,
    removeUnit,
    formData,
    formState,
    setUnits,
    t,
    setError,
    clearErrors,
    config,
    tradeCategoryValues,
    tradeTypeOptionsList,
    setTradeTypeOptionsList,
    tradeTypeMdmsData,
    tradeSubTypeOptionsList,
    setTradeSubTypeOptionsList,
    setTradeTypeMdmsData,
    setTradeCategoryValues,
    billingSlabTradeTypeData,
    isErrors,
    setIsErrors,
    previousLicenseDetails,
    setPreviousLicenseDetails,
    isRenewal,
    isLoading,
    isbillingSlabLoading,
    tradeMdmsData
  };
  if (isEditScreen) {
    return /*#__PURE__*/React.createElement(React.Fragment, null);
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, units.map((unit, index) => /*#__PURE__*/React.createElement(TradeUnitForm, Object.assign({
    key: unit.key,
    index: index,
    unit: unit
  }, commonProps))), /*#__PURE__*/React.createElement(LinkButton, {
    label: t("TL_ADD_TRADE_UNIT"),
    onClick: addNewUnits,
    style: {
      color: "#a82227",
      width: "fit-content"
    }
  }));
};
const TradeUnitForm = _props => {
  var _formData$ownershipCa3, _formData$tradedetils7, _formData$tradedetils8, _formData$tradedetils9, _formData$tradedetils10, _formData$tradedetils11, _formData$tradedetils12, _errors$tradeCategory2, _errors$tradeType2, _errors$tradeSubType2, _unit$tradeSubType3, _unit$tradeSubType4, _errors$uom2, _unit$tradeSubType5, _unit$tradeSubType6, _errors$uomValue2;
  const {
    unit,
    index,
    focusIndex,
    allUnits,
    setFocusIndex,
    removeUnit,
    setUnits,
    t,
    formData,
    config,
    setError,
    clearErrors,
    formState,
    tradeCategoryValues,
    tradeTypeOptionsList,
    setTradeTypeOptionsList,
    tradeTypeMdmsData,
    tradeSubTypeOptionsList,
    setTradeSubTypeOptionsList,
    setTradeTypeMdmsData,
    setTradeCategoryValues,
    billingSlabTradeTypeData,
    isErrors,
    setIsErrors,
    previousLicenseDetails,
    setPreviousLicenseDetails,
    isRenewal,
    isLoading,
    isbillingSlabLoading,
    tradeMdmsData
  } = _props;
  const {
    control,
    formState: localFormState,
    watch,
    setError: setLocalError,
    clearErrors: clearLocalErrors,
    setValue,
    trigger,
    getValues
  } = useForm();
  const formValue = watch();
  const {
    errors
  } = localFormState;
  const isIndividualTypeOwner = useMemo(() => {
    var _formData$ownershipCa, _formData$ownershipCa2;
    return formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa = formData.ownershipCategory) === null || _formData$ownershipCa === void 0 ? void 0 : (_formData$ownershipCa2 = _formData$ownershipCa.code) === null || _formData$ownershipCa2 === void 0 ? void 0 : _formData$ownershipCa2.includes("INDIVIDUAL");
  }, [formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa3 = formData.ownershipCategory) === null || _formData$ownershipCa3 === void 0 ? void 0 : _formData$ownershipCa3.code]);
  useEffect(() => {
    var _formData$tradedetils, _formData$tradedetils2, _formData$tradedetils3, _formData$tradedetils4, _formData$tradedetils5, _formData$tradedetils6;
    if (tradeMdmsData && (billingSlabTradeTypeData === null || billingSlabTradeTypeData === void 0 ? void 0 : billingSlabTradeTypeData.length) > 0 && formData !== null && formData !== void 0 && (_formData$tradedetils = formData.tradedetils) !== null && _formData$tradedetils !== void 0 && (_formData$tradedetils2 = _formData$tradedetils["0"]) !== null && _formData$tradedetils2 !== void 0 && (_formData$tradedetils3 = _formData$tradedetils2.structureType) !== null && _formData$tradedetils3 !== void 0 && _formData$tradedetils3.code && formData !== null && formData !== void 0 && (_formData$tradedetils4 = formData.tradedetils) !== null && _formData$tradedetils4 !== void 0 && (_formData$tradedetils5 = _formData$tradedetils4["0"]) !== null && _formData$tradedetils5 !== void 0 && (_formData$tradedetils6 = _formData$tradedetils5.structureSubType) !== null && _formData$tradedetils6 !== void 0 && _formData$tradedetils6.code) {
      let filteredTradeDetails = tradeMdmsData === null || tradeMdmsData === void 0 ? void 0 : tradeMdmsData.TradeLicense.TradeType;
      filteredTradeDetails = filteredTradeDetails.map(ob => {
        return {
          ...ob,
          tradeType: ob === null || ob === void 0 ? void 0 : ob.code
        };
      });
      setTradeTypeMdmsData(filteredTradeDetails);
      let tradeType = cloneDeep_1(filteredTradeDetails);
      let tradeCatogoryList = [];
      tradeType.map(data => {
        var _data$tradeType, _data$tradeType2;
        data.code = data === null || data === void 0 ? void 0 : (_data$tradeType = data.tradeType) === null || _data$tradeType === void 0 ? void 0 : _data$tradeType.split('.')[0];
        data.i18nKey = t(`TRADELICENSE_TRADETYPE_${data === null || data === void 0 ? void 0 : (_data$tradeType2 = data.tradeType) === null || _data$tradeType2 === void 0 ? void 0 : _data$tradeType2.split('.')[0]}`);
        tradeCatogoryList.push(data);
      });
      const filterTradeCategoryList = getUniqueItemsFromArray(tradeCatogoryList, "code");
      setTradeCategoryValues(filterTradeCategoryList);
    }
  }, [formData === null || formData === void 0 ? void 0 : (_formData$tradedetils7 = formData.tradedetils) === null || _formData$tradedetils7 === void 0 ? void 0 : (_formData$tradedetils8 = _formData$tradedetils7[0]) === null || _formData$tradedetils8 === void 0 ? void 0 : (_formData$tradedetils9 = _formData$tradedetils8.structureType) === null || _formData$tradedetils9 === void 0 ? void 0 : _formData$tradedetils9.code, !isLoading, billingSlabTradeTypeData, formData === null || formData === void 0 ? void 0 : (_formData$tradedetils10 = formData.tradedetils) === null || _formData$tradedetils10 === void 0 ? void 0 : (_formData$tradedetils11 = _formData$tradedetils10["0"]) === null || _formData$tradedetils11 === void 0 ? void 0 : (_formData$tradedetils12 = _formData$tradedetils11.structureSubType) === null || _formData$tradedetils12 === void 0 ? void 0 : _formData$tradedetils12.code]);
  useEffect(() => {
    trigger();
  }, []);
  useEffect(() => {
    const keys = Object.keys(formValue);
    const part = {};
    keys.forEach(key => part[key] = unit[key]);
    let _ownerType = isIndividualTypeOwner ? {} : {
      ownerType: {
        code: "NONE"
      }
    };
    if (!lodash.isEqual(formValue, part)) {
      Object.keys(formValue).map(data => {
        if (data != "key" && formValue[data] != undefined && formValue[data] != "" && formValue[data] != null && !isErrors) {
          setIsErrors(true);
        }
      });
      setUnits(prev => prev.map(o => o.key && o.key === unit.key ? {
        ...o,
        ...formValue,
        ..._ownerType
      } : {
        ...o
      }));
      trigger();
    }
  }, [formValue]);
  useEffect(() => {
    var _formState$errors$con;
    if (Object.keys(errors).length && !lodash.isEqual(((_formState$errors$con = formState.errors[config.key]) === null || _formState$errors$con === void 0 ? void 0 : _formState$errors$con.type) || {}, errors)) {
      setError(config.key, {
        type: errors
      });
    } else if (!Object.keys(errors).length && formState.errors[config.key] && isErrors) {
      clearErrors(config.key);
    }
  }, [errors]);
  let ckeckingLocation = window.location.href.includes("renew-application-details");
  if (window.location.href.includes("edit-application-details")) ckeckingLocation = true;
  useEffect(() => {
    if ((tradeTypeMdmsData === null || tradeTypeMdmsData === void 0 ? void 0 : tradeTypeMdmsData.length) > 0 && (ckeckingLocation || unit !== null && unit !== void 0 && unit.tradeCategory && tradeTypeOptionsList && (tradeTypeOptionsList === null || tradeTypeOptionsList === void 0 ? void 0 : tradeTypeOptionsList.length) == 0) && !isLoading && !isbillingSlabLoading) {
      let tradeType = cloneDeep_1(tradeTypeMdmsData);
      let filteredTradeType = tradeType.filter(data => {
        var _data$tradeType3, _unit$tradeCategory;
        return (data === null || data === void 0 ? void 0 : (_data$tradeType3 = data.tradeType) === null || _data$tradeType3 === void 0 ? void 0 : _data$tradeType3.split('.')[0]) === (unit === null || unit === void 0 ? void 0 : (_unit$tradeCategory = unit.tradeCategory) === null || _unit$tradeCategory === void 0 ? void 0 : _unit$tradeCategory.code);
      });
      filteredTradeType.map(data => {
        var _data$tradeType4, _data$tradeType5;
        data.code = data === null || data === void 0 ? void 0 : (_data$tradeType4 = data.tradeType) === null || _data$tradeType4 === void 0 ? void 0 : _data$tradeType4.split('.')[1];
        data.i18nKey = t(`TRADELICENSE_TRADETYPE_${data === null || data === void 0 ? void 0 : (_data$tradeType5 = data.tradeType) === null || _data$tradeType5 === void 0 ? void 0 : _data$tradeType5.split('.')[1]}`);
      });
      const filterTradeCategoryList = getUniqueItemsFromArray(filteredTradeType, "code");
      setTradeTypeOptionsList(filterTradeCategoryList);
    }
  }, [tradeTypeMdmsData, !isLoading, billingSlabTradeTypeData]);
  useEffect(() => {
    if ((tradeTypeMdmsData === null || tradeTypeMdmsData === void 0 ? void 0 : tradeTypeMdmsData.length) > 0 && (ckeckingLocation || unit !== null && unit !== void 0 && unit.tradeType && tradeSubTypeOptionsList && (tradeSubTypeOptionsList === null || tradeSubTypeOptionsList === void 0 ? void 0 : tradeSubTypeOptionsList.length) == 0) && !isLoading && !isbillingSlabLoading) {
      let tradeType = cloneDeep_1(tradeTypeMdmsData);
      let filteredTradeSubType = tradeType.filter(data => {
        var _data$tradeType6, _unit$tradeType;
        return (data === null || data === void 0 ? void 0 : (_data$tradeType6 = data.tradeType) === null || _data$tradeType6 === void 0 ? void 0 : _data$tradeType6.split('.')[1]) === (unit === null || unit === void 0 ? void 0 : (_unit$tradeType = unit.tradeType) === null || _unit$tradeType === void 0 ? void 0 : _unit$tradeType.code);
      });
      let tradeSubTypeOptions = [];
      filteredTradeSubType.map(data => {
        let code = stringReplaceAll(data === null || data === void 0 ? void 0 : data.tradeType, "-", "_");
        data.code = data === null || data === void 0 ? void 0 : data.tradeType;
        data.i18nKey = t(`TRADELICENSE_TRADETYPE_${stringReplaceAll(code, ".", "_")}`);
        tradeSubTypeOptions.push(data);
      });
      const filterTradeSubTypeList = getUniqueItemsFromArray(tradeSubTypeOptions, "code");
      setTradeSubTypeOptionsList(filterTradeSubTypeList);
    }
  }, [tradeTypeMdmsData, !isLoading, billingSlabTradeTypeData]);
  if (isLoading || isbillingSlabLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }
  function checkRangeForUomValue(e, fromUom, toUom) {
    var _billingSlabTradeType;
    let selectedtradesubType = billingSlabTradeTypeData === null || billingSlabTradeTypeData === void 0 ? void 0 : (_billingSlabTradeType = billingSlabTradeTypeData.filter(ob => {
      var _unit$tradeSubType, _formData$tradedetils13, _formData$tradedetils14, _formData$tradedetils15;
      return (ob === null || ob === void 0 ? void 0 : ob.tradeType) === (unit === null || unit === void 0 ? void 0 : (_unit$tradeSubType = unit.tradeSubType) === null || _unit$tradeSubType === void 0 ? void 0 : _unit$tradeSubType.code) && (ob === null || ob === void 0 ? void 0 : ob.structureType) === (formData === null || formData === void 0 ? void 0 : (_formData$tradedetils13 = formData.tradedetils) === null || _formData$tradedetils13 === void 0 ? void 0 : (_formData$tradedetils14 = _formData$tradedetils13[0]) === null || _formData$tradedetils14 === void 0 ? void 0 : (_formData$tradedetils15 = _formData$tradedetils14.structureSubType) === null || _formData$tradedetils15 === void 0 ? void 0 : _formData$tradedetils15.code);
    })) === null || _billingSlabTradeType === void 0 ? void 0 : _billingSlabTradeType[0];
    fromUom = fromUom ? fromUom : selectedtradesubType === null || selectedtradesubType === void 0 ? void 0 : selectedtradesubType.fromUom;
    toUom = toUom ? toUom : selectedtradesubType === null || selectedtradesubType === void 0 ? void 0 : selectedtradesubType.toUom;
    if (Number.isInteger(fromUom)) {
      if (!(e && parseFloat(e) >= fromUom)) {
        return false;
      }
    }
    if (Number.isInteger(toUom)) {
      if (!(e && parseFloat(e) <= toUom)) {
        return false;
      }
    }
    return true;
  }
  function getUomRange(type) {
    var _billingSlabTradeType2;
    let selectedtradesubType = billingSlabTradeTypeData === null || billingSlabTradeTypeData === void 0 ? void 0 : (_billingSlabTradeType2 = billingSlabTradeTypeData.filter(ob => {
      var _unit$tradeSubType2, _formData$tradedetils16, _formData$tradedetils17, _formData$tradedetils18;
      return (ob === null || ob === void 0 ? void 0 : ob.tradeType) === (unit === null || unit === void 0 ? void 0 : (_unit$tradeSubType2 = unit.tradeSubType) === null || _unit$tradeSubType2 === void 0 ? void 0 : _unit$tradeSubType2.code) && (ob === null || ob === void 0 ? void 0 : ob.structureType) === (formData === null || formData === void 0 ? void 0 : (_formData$tradedetils16 = formData.tradedetils) === null || _formData$tradedetils16 === void 0 ? void 0 : (_formData$tradedetils17 = _formData$tradedetils16[0]) === null || _formData$tradedetils17 === void 0 ? void 0 : (_formData$tradedetils18 = _formData$tradedetils17.structureSubType) === null || _formData$tradedetils18 === void 0 ? void 0 : _formData$tradedetils18.code);
    })) === null || _billingSlabTradeType2 === void 0 ? void 0 : _billingSlabTradeType2[0];
    if (type === "fromUom") return selectedtradesubType === null || selectedtradesubType === void 0 ? void 0 : selectedtradesubType.fromUom;else return selectedtradesubType === null || selectedtradesubType === void 0 ? void 0 : selectedtradesubType.toUom;
  }
  function checkBillingSlab(value) {
    var _billingSlabTradeType3;
    if (value && ((billingSlabTradeTypeData === null || billingSlabTradeTypeData === void 0 ? void 0 : (_billingSlabTradeType3 = billingSlabTradeTypeData.filter(ob => {
      var _formData$tradedetils19, _formData$tradedetils20, _formData$tradedetils21;
      return (ob === null || ob === void 0 ? void 0 : ob.tradeType) === (value === null || value === void 0 ? void 0 : value.code) && (ob === null || ob === void 0 ? void 0 : ob.structureType) === (formData === null || formData === void 0 ? void 0 : (_formData$tradedetils19 = formData.tradedetils) === null || _formData$tradedetils19 === void 0 ? void 0 : (_formData$tradedetils20 = _formData$tradedetils19[0]) === null || _formData$tradedetils20 === void 0 ? void 0 : (_formData$tradedetils21 = _formData$tradedetils20.structureSubType) === null || _formData$tradedetils21 === void 0 ? void 0 : _formData$tradedetils21.code);
    })) === null || _billingSlabTradeType3 === void 0 ? void 0 : _billingSlabTradeType3.length) <= 0 || (billingSlabTradeTypeData === null || billingSlabTradeTypeData === void 0 ? void 0 : billingSlabTradeTypeData.filter(ob => {
      var _formData$tradedetils22, _formData$tradedetils23, _formData$tradedetils24;
      return (ob === null || ob === void 0 ? void 0 : ob.tradeType) === (value === null || value === void 0 ? void 0 : value.code) && (ob === null || ob === void 0 ? void 0 : ob.structureType) === (formData === null || formData === void 0 ? void 0 : (_formData$tradedetils22 = formData.tradedetils) === null || _formData$tradedetils22 === void 0 ? void 0 : (_formData$tradedetils23 = _formData$tradedetils22[0]) === null || _formData$tradedetils23 === void 0 ? void 0 : (_formData$tradedetils24 = _formData$tradedetils23.structureSubType) === null || _formData$tradedetils24 === void 0 ? void 0 : _formData$tradedetils24.code);
    })) == undefined)) {
      sessionStorage.setItem("isBillingSlabError", true);
      return false;
    }
    sessionStorage.removeItem("isBillingSlabError");
    return true;
  }
  const errorStyle = {
    width: "70%",
    marginLeft: "30%",
    fontSize: "12px",
    marginTop: "-21px"
  };
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      marginBottom: "16px"
    }
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      border: "1px solid #D6D5D4",
      padding: "16px",
      marginTop: "8px",
      background: "#FAFAFA"
    }
  }, (allUnits === null || allUnits === void 0 ? void 0 : allUnits.length) > 1 ? /*#__PURE__*/React.createElement("div", {
    style: {
      display: "flex",
      justifyContent: "flex-end"
    }
  }, /*#__PURE__*/React.createElement("div", {
    onClick: () => removeUnit(unit),
    style: {
      padding: "5px",
      cursor: "pointer",
      textAlign: "right"
    }
  }, /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement("svg", {
    style: {
      float: "right",
      position: "relative",
      bottom: "5px"
    },
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M1 16C1 17.1 1.9 18 3 18H11C12.1 18 13 17.1 13 16V4H1V16ZM14 1H10.5L9.5 0H4.5L3.5 1H0V3H14V1Z",
    fill: "#494848"
  }))))) : null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TRADELICENSE_TRADECATEGORY_LABEL")} * `), /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "tradeCategory",
    defaultValue: unit === null || unit === void 0 ? void 0 : unit.tradeCategory,
    rules: {
      required: t("REQUIRED_FIELD")
    },
    render: props => {
      var _errors$tradeCategory;
      return /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: props.value,
        disable: false,
        option: tradeCategoryValues,
        errorStyle: localFormState.touched.tradeCategory && errors !== null && errors !== void 0 && (_errors$tradeCategory = errors.tradeCategory) !== null && _errors$tradeCategory !== void 0 && _errors$tradeCategory.message ? true : false,
        select: e => {
          var _props$value, _props$value2;
          if ((props === null || props === void 0 ? void 0 : (_props$value = props.value) === null || _props$value === void 0 ? void 0 : _props$value.code) == (e === null || e === void 0 ? void 0 : e.code)) return true;
          if ((e === null || e === void 0 ? void 0 : e.code) != (props === null || props === void 0 ? void 0 : (_props$value2 = props.value) === null || _props$value2 === void 0 ? void 0 : _props$value2.code) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          let selectedOption = e === null || e === void 0 ? void 0 : e.code;
          if ((tradeTypeMdmsData === null || tradeTypeMdmsData === void 0 ? void 0 : tradeTypeMdmsData.length) > 0) {
            let tradeType = cloneDeep_1(tradeTypeMdmsData);
            let filteredTradeType = tradeType.filter(data => {
              var _data$tradeType7;
              return (data === null || data === void 0 ? void 0 : (_data$tradeType7 = data.tradeType) === null || _data$tradeType7 === void 0 ? void 0 : _data$tradeType7.split('.')[0]) === selectedOption;
            });
            filteredTradeType.map(data => {
              var _data$tradeType8, _data$tradeType9;
              data.code = data === null || data === void 0 ? void 0 : (_data$tradeType8 = data.tradeType) === null || _data$tradeType8 === void 0 ? void 0 : _data$tradeType8.split('.')[1];
              data.i18nKey = t(`TRADELICENSE_TRADETYPE_${data === null || data === void 0 ? void 0 : (_data$tradeType9 = data.tradeType) === null || _data$tradeType9 === void 0 ? void 0 : _data$tradeType9.split('.')[1]}`);
            });
            const filterTradeCategoryList = getUniqueItemsFromArray(filteredTradeType, "code");
            setValue("tradeType", "");
            setValue("tradeSubType", "");
            setValue("uom", "");
            setValue("uomValue", "");
            setTradeTypeOptionsList(filterTradeCategoryList);
          }
          props.onChange(e);
        },
        optionKey: "i18nKey",
        onBlur: e => {
          setFocusIndex({
            index: -1
          });
          props.onBlur(e);
        },
        t: t
      });
    }
  })), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.tradeCategory ? errors === null || errors === void 0 ? void 0 : (_errors$tradeCategory2 = errors.tradeCategory) === null || _errors$tradeCategory2 === void 0 ? void 0 : _errors$tradeCategory2.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TRADELICENSE_TRADETYPE_LABEL")} * `), /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "tradeType",
    defaultValue: unit === null || unit === void 0 ? void 0 : unit.tradeType,
    rules: {
      required: t("REQUIRED_FIELD")
    },
    render: props => {
      var _errors$tradeType;
      return /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: getValues("tradeType"),
        disable: false,
        option: unit !== null && unit !== void 0 && unit.tradeCategory ? tradeTypeOptionsList : [],
        errorStyle: localFormState.touched.tradeType && errors !== null && errors !== void 0 && (_errors$tradeType = errors.tradeType) !== null && _errors$tradeType !== void 0 && _errors$tradeType.message ? true : false,
        select: e => {
          var _props$value3, _props$value4;
          if ((props === null || props === void 0 ? void 0 : (_props$value3 = props.value) === null || _props$value3 === void 0 ? void 0 : _props$value3.code) == (e === null || e === void 0 ? void 0 : e.code)) return true;
          if ((e === null || e === void 0 ? void 0 : e.code) != (props === null || props === void 0 ? void 0 : (_props$value4 = props.value) === null || _props$value4 === void 0 ? void 0 : _props$value4.code) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          let selectedOption = e === null || e === void 0 ? void 0 : e.code;
          if ((tradeTypeMdmsData === null || tradeTypeMdmsData === void 0 ? void 0 : tradeTypeMdmsData.length) > 0) {
            let tradeType = cloneDeep_1(tradeTypeMdmsData);
            let filteredTradeSubType = tradeType.filter(data => {
              var _data$tradeType10;
              return (data === null || data === void 0 ? void 0 : (_data$tradeType10 = data.tradeType) === null || _data$tradeType10 === void 0 ? void 0 : _data$tradeType10.split('.')[1]) === selectedOption;
            });
            let tradeSubTypeOptions = [];
            filteredTradeSubType.map(data => {
              let code = stringReplaceAll(data === null || data === void 0 ? void 0 : data.tradeType, "-", "_");
              data.code = data === null || data === void 0 ? void 0 : data.tradeType;
              data.i18nKey = t(`TRADELICENSE_TRADETYPE_${stringReplaceAll(code, ".", "_")}`);
              tradeSubTypeOptions.push(data);
            });
            const filterTradeSubTypeList = getUniqueItemsFromArray(tradeSubTypeOptions, "code");
            setValue("tradeSubType", "");
            setValue("uom", "");
            setValue("uomValue", "");
            setTradeSubTypeOptionsList(filterTradeSubTypeList);
          }
          props.onChange(e);
        },
        optionKey: "i18nKey",
        onBlur: props.onBlur,
        t: t
      });
    }
  })), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.tradeType ? errors === null || errors === void 0 ? void 0 : (_errors$tradeType2 = errors.tradeType) === null || _errors$tradeType2 === void 0 ? void 0 : _errors$tradeType2.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TL_NEW_TRADE_SUB_TYPE_LABEL")} * `), /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "tradeSubType",
    defaultValue: unit === null || unit === void 0 ? void 0 : unit.tradeSubType,
    rules: {
      required: t("REQUIRED_FIELD"),
      validate: {
        pattern: val => checkBillingSlab(val || (unit === null || unit === void 0 ? void 0 : unit.tradeSubType)) ? true : t("TL_BILLING_SLAB_NOT_FOUND_FOR_COMB")
      }
    },
    render: props => {
      var _errors$tradeSubType;
      return /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: getValues("tradeSubType"),
        disable: false,
        option: unit !== null && unit !== void 0 && unit.tradeType ? sortDropdownNames(tradeSubTypeOptionsList, "i18nKey", t) : [],
        errorStyle: localFormState.touched.tradeSubType && errors !== null && errors !== void 0 && (_errors$tradeSubType = errors.tradeSubType) !== null && _errors$tradeSubType !== void 0 && _errors$tradeSubType.message ? true : false,
        select: e => {
          var _props$value5, _props$value6;
          if ((props === null || props === void 0 ? void 0 : (_props$value5 = props.value) === null || _props$value5 === void 0 ? void 0 : _props$value5.code) == (e === null || e === void 0 ? void 0 : e.code)) return true;
          if ((e === null || e === void 0 ? void 0 : e.code) != (props === null || props === void 0 ? void 0 : (_props$value6 = props.value) === null || _props$value6 === void 0 ? void 0 : _props$value6.code) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          setValue("uom", e !== null && e !== void 0 && e.uom ? e === null || e === void 0 ? void 0 : e.uom : "");
          setValue("uomValue", "");
          props.onChange(e);
        },
        optionKey: "i18nKey",
        onBlur: props.onBlur,
        t: t
      });
    }
  })), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, " ", localFormState.touched.tradeSubType || localFormState.touched.uomValue || isRenewal && getValues("tradeSubType") ? errors === null || errors === void 0 ? void 0 : (_errors$tradeSubType2 = errors.tradeSubType) === null || _errors$tradeSubType2 === void 0 ? void 0 : _errors$tradeSubType2.message : "", " "), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, unit !== null && unit !== void 0 && (_unit$tradeSubType3 = unit.tradeSubType) !== null && _unit$tradeSubType3 !== void 0 && _unit$tradeSubType3.uom ? `${t("TL_NEW_TRADE_DETAILS_UOM_UOM_PLACEHOLDER")} * ` : `${t("TL_NEW_TRADE_DETAILS_UOM_UOM_PLACEHOLDER")}`), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "uom",
    defaultValue: unit === null || unit === void 0 ? void 0 : (_unit$tradeSubType4 = unit.tradeSubType) === null || _unit$tradeSubType4 === void 0 ? void 0 : _unit$tradeSubType4.uom,
    render: props => {
      var _errors$uom;
      return /*#__PURE__*/React.createElement(TextInput, {
        value: getValues("uom"),
        autoFocus: focusIndex.index === (unit === null || unit === void 0 ? void 0 : unit.key) && focusIndex.type === "uom",
        errorStyle: localFormState.touched.uom && errors !== null && errors !== void 0 && (_errors$uom = errors.uom) !== null && _errors$uom !== void 0 && _errors$uom.message ? true : false,
        onChange: e => {
          props.onChange(e);
          setFocusIndex({
            index: unit.key,
            type: "uom"
          });
        },
        disable: true,
        onBlur: props.onBlur,
        style: {
          background: "#FAFAFA"
        }
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.uom ? errors === null || errors === void 0 ? void 0 : (_errors$uom2 = errors.uom) === null || _errors$uom2 === void 0 ? void 0 : _errors$uom2.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, unit !== null && unit !== void 0 && (_unit$tradeSubType5 = unit.tradeSubType) !== null && _unit$tradeSubType5 !== void 0 && _unit$tradeSubType5.uom ? `${t("TL_NEW_TRADE_DETAILS_UOM_VALUE_LABEL")} * ` : `${t("TL_NEW_TRADE_DETAILS_UOM_VALUE_LABEL")} `), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "uomValue",
    defaultValue: unit === null || unit === void 0 ? void 0 : unit.uomValue,
    rules: (unit === null || unit === void 0 ? void 0 : (_unit$tradeSubType6 = unit.tradeSubType) === null || _unit$tradeSubType6 === void 0 ? void 0 : _unit$tradeSubType6.uom) && {
      required: t("REQUIRED_FIELD"),
      validate: {
        pattern: val => {
          var _unit$tradeSubType7, _unit$tradeSubType8;
          return val > 0 && val < 99999 ? checkRangeForUomValue(val, unit === null || unit === void 0 ? void 0 : (_unit$tradeSubType7 = unit.tradeSubType) === null || _unit$tradeSubType7 === void 0 ? void 0 : _unit$tradeSubType7.fromUom, unit === null || unit === void 0 ? void 0 : (_unit$tradeSubType8 = unit.tradeSubType) === null || _unit$tradeSubType8 === void 0 ? void 0 : _unit$tradeSubType8.toUom) ? true : `${t("ERR_WRONG_UOM_VALUE")} ${getUomRange("fromUom")} - ${getUomRange("toUom")}` : t("ERR_DEFAULT_INPUT_FIELD_MSG");
        }
      }
    },
    render: props => {
      var _errors$uomValue, _unit$tradeSubType9;
      return /*#__PURE__*/React.createElement(TextInput, {
        value: getValues("uomValue"),
        autoFocus: focusIndex.index === (unit === null || unit === void 0 ? void 0 : unit.key) && focusIndex.type === "uomValue",
        errorStyle: localFormState.touched.uomValue && errors !== null && errors !== void 0 && (_errors$uomValue = errors.uomValue) !== null && _errors$uomValue !== void 0 && _errors$uomValue.message ? true : false,
        onChange: e => {
          if (e.target.value != (unit === null || unit === void 0 ? void 0 : unit.uomValue) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          props.onChange(e);
          setFocusIndex({
            index: unit.key,
            type: "uomValue"
          });
        },
        disable: !(unit !== null && unit !== void 0 && (_unit$tradeSubType9 = unit.tradeSubType) !== null && _unit$tradeSubType9 !== void 0 && _unit$tradeSubType9.uom),
        onBlur: props.onBlur,
        style: {
          background: "#FAFAFA"
        }
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, " ", localFormState.touched.uomValue ? errors === null || errors === void 0 ? void 0 : (_errors$uomValue2 = errors.uomValue) === null || _errors$uomValue2 === void 0 ? void 0 : _errors$uomValue2.message : "", " "))));
};

const createAccessoriesDetails = () => ({
  accessoryCategory: "",
  count: "",
  uom: "",
  uomValue: "",
  key: Date.now()
});
const TLAccessoriesEmployee = ({
  config,
  onSelect,
  userType,
  formData,
  setError,
  formState,
  clearErrors
}) => {
  var _formData$accessories2, _formData$accessories3, _formData$accessories4;
  const {
    t
  } = useTranslation();
  const {
    pathname
  } = useLocation();
  const isEditScreen = pathname.includes("/modify-application/");
  const [accessoriesList, setAccessoriesList] = useState((formData === null || formData === void 0 ? void 0 : formData.accessories) || [createAccessoriesDetails()]);
  const [focusIndex, setFocusIndex] = useState({
    index: -1,
    type: ""
  });
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const [accessories, SetAccessories] = useState([]);
  const [isErrors, setIsErrors] = useState(false);
  const [flag, setFlag] = useState(true);
  const [uomvalues, setUomvalues] = useState("");
  const [enableUOM, setenableUOM] = useState(false);
  let isRenewal = window.location.href.includes("renew-application-details");
  if (window.location.href.includes("edit-application-details")) isRenewal = true;
  const {
    data: billingSlabData
  } = Digit.Hooks.tl.useTradeLicenseBillingslab({
    tenantId,
    filters: {}
  }, {
    select: data => {
      return data === null || data === void 0 ? void 0 : data.billingSlab.filter(e => e.accessoryCategory && e.applicationType === "NEW" && e.uom);
    }
  });
  const addAccessories = () => {
    const newAccessor = createAccessoriesDetails();
    setAccessoriesList(prev => [...prev, newAccessor]);
  };
  const removeAccessor = accessor => {
    setAccessoriesList(prev => prev.filter(o => o.key != accessor.key));
  };
  useEffect(() => {
    const data = accessoriesList.map(e => {
      return e;
    });
    onSelect(config === null || config === void 0 ? void 0 : config.key, data);
  }, [accessoriesList]);
  useEffect(() => {
    var _formData$accessories;
    if ((formData === null || formData === void 0 ? void 0 : (_formData$accessories = formData.accessories) === null || _formData$accessories === void 0 ? void 0 : _formData$accessories.length) > 0 && !isRenewal) {
      let flag = true;
      accessoriesList.map(data => {
        Object.keys(data).map(dta => {
          if (dta != "key" && data[dta]) flag = false;
        });
      });
      formData === null || formData === void 0 ? void 0 : formData.accessories.map(data => {
        Object.keys(data).map(dta => {
          if (dta != "key" && data[dta] != undefined && data[data] != "" && data[data] != null) ; else {
            formData.accessories[0].count = 1;
            if (flag) setAccessoriesList(formData === null || formData === void 0 ? void 0 : formData.accessories);
            formData.accessories[0].count = "";
            setAccessoriesList(formData === null || formData === void 0 ? void 0 : formData.accessories);
            flag = false;
          }
        });
      });
    }
  }, [formData === null || formData === void 0 ? void 0 : (_formData$accessories2 = formData.accessories) === null || _formData$accessories2 === void 0 ? void 0 : (_formData$accessories3 = _formData$accessories2[0]) === null || _formData$accessories3 === void 0 ? void 0 : (_formData$accessories4 = _formData$accessories3.accessoryCategory) === null || _formData$accessories4 === void 0 ? void 0 : _formData$accessories4.code]);
  const commonProps = {
    focusIndex,
    allAccessoriesList: accessoriesList,
    setFocusIndex,
    removeAccessor,
    formData,
    formState,
    setAccessoriesList,
    t,
    setError,
    clearErrors,
    config,
    accessories,
    setIsErrors,
    isErrors,
    SetAccessories,
    accessoriesList,
    billingSlabData,
    setUomvalues,
    uomvalues,
    isRenewal,
    enableUOM,
    setenableUOM
  };
  return /*#__PURE__*/React.createElement(React.Fragment, null, accessoriesList.map((accessor, index) => /*#__PURE__*/React.createElement(AccessoriersForm, Object.assign({
    key: accessor.key,
    index: index,
    accessor: accessor
  }, commonProps))), /*#__PURE__*/React.createElement(LinkButton, {
    label: `${t("TL_NEW_TRADE_DETAILS_NEW_ACCESSORIES")}`,
    onClick: addAccessories,
    style: {
      color: "#a82227",
      width: "fit-content"
    }
  }));
};
const AccessoriersForm = _props => {
  var _formData$ownershipCa3, _accessor$accessoryCa, _accessor$accessoryCa4, _accessor$accessoryCa5, _accessor$accessoryCa6, _errors$uomValue2, _accessor$accessoryCa11, _accessor$accessoryCa12, _errors$count2;
  const {
    accessor,
    index,
    focusIndex,
    allAccessoriesList,
    setFocusIndex,
    removeAccessor,
    setAccessoriesList,
    t,
    formData,
    config,
    setError,
    clearErrors,
    formState,
    accessories,
    setIsErrors,
    isErrors,
    SetAccessories,
    accessoriesList,
    billingSlabData,
    setUomvalues,
    uomvalues,
    isRenewal,
    enableUOM,
    setenableUOM
  } = _props;
  const {
    control,
    formState: localFormState,
    watch,
    setError: setLocalError,
    clearErrors: clearLocalErrors,
    setValue,
    trigger,
    getValues
  } = useForm();
  const formValue = watch();
  const {
    errors
  } = localFormState;
  const isIndividualTypeOwner = useMemo(() => {
    var _formData$ownershipCa, _formData$ownershipCa2;
    return formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa = formData.ownershipCategory) === null || _formData$ownershipCa === void 0 ? void 0 : (_formData$ownershipCa2 = _formData$ownershipCa.code) === null || _formData$ownershipCa2 === void 0 ? void 0 : _formData$ownershipCa2.includes("INDIVIDUAL");
  }, [formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa3 = formData.ownershipCategory) === null || _formData$ownershipCa3 === void 0 ? void 0 : _formData$ownershipCa3.code]);
  useEffect(() => {
    trigger();
  }, []);
  useEffect(() => {
    trigger();
  }, [accessor === null || accessor === void 0 ? void 0 : (_accessor$accessoryCa = accessor.accessoryCategory) === null || _accessor$accessoryCa === void 0 ? void 0 : _accessor$accessoryCa.uom, formData === null || formData === void 0 ? void 0 : formData.accessories]);
  useEffect(() => {
    if (billingSlabData && (billingSlabData === null || billingSlabData === void 0 ? void 0 : billingSlabData.length) > 0) {
      const processedData = billingSlabData && billingSlabData.reduce((acc, item) => {
        let accessory = {
          active: true
        };
        let tradeType = {
          active: true
        };
        if (item.accessoryCategory && item.tradeType === null) {
          accessory.code = item.accessoryCategory;
          accessory.uom = item.uom;
          accessory.rate = item.rate;
          accessory.fromUom = item.fromUom;
          accessory.toUom = item.toUom;
          item.rate && item.rate > 0 && acc.accessories.push(accessory);
        } else if (item.accessoryCategory === null && item.tradeType) {
          tradeType.code = item.tradeType;
          tradeType.uom = item.uom;
          tradeType.structureType = item.structureType;
          tradeType.licenseType = item.licenseType;
          tradeType.rate = item.rate;
          tradeType.fromUom = item.fromUom;
          tradeType.toUom = item.toUom;
          !isUndefined_1(item.rate) && item.rate !== null && acc.tradeTypeData.push(tradeType);
        }
        return acc;
      }, {
        accessories: [],
        tradeTypeData: []
      });
      const accessories = getUniqueItemsFromArray(processedData.accessories, "code");
      let structureTypes = getUniqueItemsFromArray(processedData.tradeTypeData, "structureType");
      structureTypes = commonTransform({
        StructureType: structureTypes.map(item => {
          return {
            code: item.structureType,
            active: true
          };
        })
      }, "StructureType");
      let licenseTypes = getUniqueItemsFromArray(processedData.tradeTypeData, "licenseType");
      licenseTypes = licenseTypes.map(item => {
        return {
          code: item.licenseType,
          active: true
        };
      });
      accessories.forEach(data => {
        var _data$code;
        data.i18nKey = t(`TRADELICENSE_ACCESSORIESCATEGORY_${stringReplaceAll(data === null || data === void 0 ? void 0 : (_data$code = data.code) === null || _data$code === void 0 ? void 0 : _data$code.toUpperCase(), "-", "_")}`);
      });
      SetAccessories(accessories);
    }
  }, [billingSlabData]);
  useEffect(() => {
    var _formValue$accessoryC;
    const keys = Object.keys(formValue);
    if (!(formValue !== null && formValue !== void 0 && (_formValue$accessoryC = formValue.accessoryCategory) !== null && _formValue$accessoryC !== void 0 && _formValue$accessoryC.uom)) {
      formValue.uomValue = "";
    }
    const part = {};
    keys.forEach(key => part[key] = accessor[key]);
    let _ownerType = isIndividualTypeOwner ? {} : {
      ownerType: {
        code: "NONE"
      }
    };
    if (!lodash.isEqual(formValue, part)) {
      Object.keys(formValue).map(data => {
        if (data != "key" && formValue[data] != undefined && formValue[data] != "" && formValue[data] != null && !isErrors) {
          setIsErrors(true);
        }
      });
      setAccessoriesList(prev => prev.map(o => {
        return o.key && o.key === accessor.key ? {
          ...o,
          ...formValue,
          ..._ownerType
        } : {
          ...o
        };
      }));
      trigger();
    }
  }, [formValue]);
  useEffect(() => {
    var _formState$errors$con;
    if (Object.keys(errors).length && !lodash.isEqual(((_formState$errors$con = formState.errors[config.key]) === null || _formState$errors$con === void 0 ? void 0 : _formState$errors$con.type) || {}, errors)) {
      setError(config.key, {
        type: errors
      });
    } else if (!Object.keys(errors).length && formState.errors[config.key] && isErrors) {
      clearErrors(config.key);
    }
  }, [errors]);
  function checkRangeForUomValue(e, fromUom, toUom) {
    if (Number.isInteger(fromUom)) {
      if (!(e && parseFloat(e) >= fromUom)) {
        return false;
      }
    }
    if (Number.isInteger(toUom)) {
      if (!(e && parseFloat(e) <= toUom)) {
        return false;
      }
    }
    return true;
  }
  const errorStyle = {
    width: "70%",
    marginLeft: "30%",
    fontSize: "12px",
    marginTop: "-21px"
  };
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      marginBottom: "16px"
    }
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      border: "1px solid #D6D5D4",
      padding: "16px",
      marginTop: "8px",
      background: "#FAFAFA"
    }
  }, (allAccessoriesList === null || allAccessoriesList === void 0 ? void 0 : allAccessoriesList.length) > 1 ? /*#__PURE__*/React.createElement("div", {
    style: {
      display: "flex",
      justifyContent: "flex-end"
    }
  }, /*#__PURE__*/React.createElement("div", {
    onClick: () => removeAccessor(accessor),
    style: {
      padding: "5px",
      cursor: "pointer",
      textAlign: "right"
    }
  }, /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement("svg", {
    style: {
      float: "right",
      position: "relative",
      bottom: "5px"
    },
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M1 16C1 17.1 1.9 18 3 18H11C12.1 18 13 17.1 13 16V4H1V16ZM14 1H10.5L9.5 0H4.5L3.5 1H0V3H14V1Z",
    fill: "#494848"
  }))))) : null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TL_NEW_TRADE_DETAILS_ACC_LABEL")} `), /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "accessoryCategory",
    defaultValue: accessor === null || accessor === void 0 ? void 0 : accessor.accessoryCategory,
    render: props => /*#__PURE__*/React.createElement(Dropdown, {
      className: "form-field",
      selected: props.value,
      select: e => {
        var _accessor$accessoryCa2, _accessor$accessoryCa3;
        setValue("uom", e !== null && e !== void 0 && e.uom ? e === null || e === void 0 ? void 0 : e.uom : "");
        if ((e === null || e === void 0 ? void 0 : e.uom) !== (accessor === null || accessor === void 0 ? void 0 : (_accessor$accessoryCa2 = accessor.accessoryCategory) === null || _accessor$accessoryCa2 === void 0 ? void 0 : _accessor$accessoryCa2.uom)) setValue("uomValue", "");
        props.onChange(e);
        setUomvalues(accessor === null || accessor === void 0 ? void 0 : (_accessor$accessoryCa3 = accessor.accessoryCategory) === null || _accessor$accessoryCa3 === void 0 ? void 0 : _accessor$accessoryCa3.uom);
        setenableUOM(true);
        setValue("uomValue", "");
        setValue("count", "");
      },
      onBlur: props.onBlur,
      option: sortDropdownNames(accessories, "i18nKey", t) || [],
      optionKey: "i18nKey",
      t: t
    })
  })), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, getValues("uom") ? `${t("TL_NEW_TRADE_DETAILS_UOM_UOM_PLACEHOLDER")} * ` : `${t("TL_NEW_TRADE_DETAILS_UOM_UOM_PLACEHOLDER")} `), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "uom",
    defaultValue: accessor === null || accessor === void 0 ? void 0 : (_accessor$accessoryCa4 = accessor.accessoryCategory) === null || _accessor$accessoryCa4 === void 0 ? void 0 : _accessor$accessoryCa4.uom,
    render: props => /*#__PURE__*/React.createElement(TextInput, {
      value: getValues("uom"),
      autoFocus: focusIndex.index === (accessor === null || accessor === void 0 ? void 0 : accessor.key) && focusIndex.type === "uom",
      onChange: e => {
        props.onChange(e.target.value);
        setFocusIndex({
          index: accessor.key,
          type: "uom"
        });
      },
      disable: true,
      onBlur: props.onBlur,
      style: {
        background: "#FAFAFA"
      }
    })
  }))), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, accessor !== null && accessor !== void 0 && (_accessor$accessoryCa5 = accessor.accessoryCategory) !== null && _accessor$accessoryCa5 !== void 0 && _accessor$accessoryCa5.uom ? `${t("TL_NEW_TRADE_DETAILS_UOM_VALUE_LABEL")} *  ` : `${t("TL_NEW_TRADE_DETAILS_UOM_VALUE_LABEL")}  `), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "uomValue",
    defaultValue: accessor === null || accessor === void 0 ? void 0 : accessor.uomValue,
    rules: (accessor === null || accessor === void 0 ? void 0 : (_accessor$accessoryCa6 = accessor.accessoryCategory) === null || _accessor$accessoryCa6 === void 0 ? void 0 : _accessor$accessoryCa6.uom) && {
      required: t("REQUIRED_FIELD"),
      validate: e => {
        var _accessor$accessoryCa7, _accessor$accessoryCa8, _accessor$accessoryCa9, _accessor$accessoryCa10;
        return e > 0 && e < 99999 ? checkRangeForUomValue(e, accessor === null || accessor === void 0 ? void 0 : (_accessor$accessoryCa7 = accessor.accessoryCategory) === null || _accessor$accessoryCa7 === void 0 ? void 0 : _accessor$accessoryCa7.fromUom, accessor === null || accessor === void 0 ? void 0 : (_accessor$accessoryCa8 = accessor.accessoryCategory) === null || _accessor$accessoryCa8 === void 0 ? void 0 : _accessor$accessoryCa8.toUom) ? true : `${t("ERR_WRONG_UOM_VALUE")} ${accessor === null || accessor === void 0 ? void 0 : (_accessor$accessoryCa9 = accessor.accessoryCategory) === null || _accessor$accessoryCa9 === void 0 ? void 0 : _accessor$accessoryCa9.fromUom} - ${accessor === null || accessor === void 0 ? void 0 : (_accessor$accessoryCa10 = accessor.accessoryCategory) === null || _accessor$accessoryCa10 === void 0 ? void 0 : _accessor$accessoryCa10.toUom}` : t("ERR_DEFAULT_INPUT_FIELD_MSG");
      }
    },
    render: props => {
      var _errors$uomValue;
      return /*#__PURE__*/React.createElement(TextInput, {
        value: getValues("uomValue"),
        autoFocus: focusIndex.index === (accessor === null || accessor === void 0 ? void 0 : accessor.key) && focusIndex.type === "uomValue",
        errorStyle: localFormState.touched.uomValue && errors !== null && errors !== void 0 && (_errors$uomValue = errors.uomValue) !== null && _errors$uomValue !== void 0 && _errors$uomValue.message ? true : false,
        onChange: e => {
          props.onChange(e.target.value);
          setFocusIndex({
            index: accessor.key,
            type: "uomValue"
          });
        },
        disable: isRenewal ? !enableUOM : false,
        onBlur: props.onBlur,
        style: {
          background: "#FAFAFA"
        }
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.uomValue ? errors === null || errors === void 0 ? void 0 : (_errors$uomValue2 = errors.uomValue) === null || _errors$uomValue2 === void 0 ? void 0 : _errors$uomValue2.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, accessor !== null && accessor !== void 0 && (_accessor$accessoryCa11 = accessor.accessoryCategory) !== null && _accessor$accessoryCa11 !== void 0 && _accessor$accessoryCa11.code ? `${t("TL_ACCESSORY_COUNT_LABEL")} * ` : `${t("TL_ACCESSORY_COUNT_LABEL")} `), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "count",
    defaultValue: accessor === null || accessor === void 0 ? void 0 : accessor.count,
    rules: (accessor === null || accessor === void 0 ? void 0 : (_accessor$accessoryCa12 = accessor.accessoryCategory) === null || _accessor$accessoryCa12 === void 0 ? void 0 : _accessor$accessoryCa12.code) && {
      required: t("REQUIRED_FIELD"),
      validate: e => e && getPattern("NoOfEmp").test(e) || !e ? true : t("ERR_DEFAULT_INPUT_FIELD_MSG")
    },
    render: props => {
      var _errors$count;
      return /*#__PURE__*/React.createElement(TextInput, {
        value: props.value,
        autoFocus: focusIndex.index === (accessor === null || accessor === void 0 ? void 0 : accessor.key) && focusIndex.type === "count",
        errorStyle: localFormState.touched.count && errors !== null && errors !== void 0 && (_errors$count = errors.count) !== null && _errors$count !== void 0 && _errors$count.message ? true : false,
        onChange: e => {
          props.onChange(e.target.value);
          setFocusIndex({
            index: accessor.key,
            type: "count"
          });
        },
        onBlur: props.onBlur,
        disable: isRenewal ? !enableUOM : false,
        style: {
          background: "#FAFAFA"
        }
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.count ? errors === null || errors === void 0 ? void 0 : (_errors$count2 = errors.count) === null || _errors$count2 === void 0 ? void 0 : _errors$count2.message : ""))));
};

const TLDocumentsEmployee = ({
  t,
  config,
  onSelect,
  userType,
  formData,
  setError: setFormError,
  clearErrors: clearFormErrors,
  formState
}) => {
  var _formData$documents, _documentsData$TradeL, _tlDocuments$;
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const stateId = Digit.ULBService.getStateId();
  const [documents, setDocuments] = useState((formData === null || formData === void 0 ? void 0 : (_formData$documents = formData.documents) === null || _formData$documents === void 0 ? void 0 : _formData$documents.documents) || []);
  const [error, setError] = useState(null);
  const [previousLicenseDetails, setPreviousLicenseDetails] = useState((formData === null || formData === void 0 ? void 0 : formData.tradedetils1) || []);
  let action = "create";
  const {
    pathname
  } = useLocation();
  const isEditScreen = pathname.includes("/modify-application/");
  if (isEditScreen) action = "update";
  const {
    isLoading,
    data: documentsData
  } = Digit.Hooks.pt.usePropertyMDMS(stateId, "TradeLicense", ["documentObj"]);
  const ckeckingLocation = window.location.href.includes("renew-application-details");
  const tlDocuments = documentsData === null || documentsData === void 0 ? void 0 : (_documentsData$TradeL = documentsData.TradeLicense) === null || _documentsData$TradeL === void 0 ? void 0 : _documentsData$TradeL.documentObj;
  const tlDocumentsList = tlDocuments === null || tlDocuments === void 0 ? void 0 : (_tlDocuments$ = tlDocuments["0"]) === null || _tlDocuments$ === void 0 ? void 0 : _tlDocuments$.allowedDocs;
  let finalTlDocumentsList = [];
  if (tlDocumentsList && tlDocumentsList.length > 0) {
    tlDocumentsList.map(data => {
      var _data$applicationType, _data$applicationType2;
      if ((!ckeckingLocation || (previousLicenseDetails === null || previousLicenseDetails === void 0 ? void 0 : previousLicenseDetails.action) == "SENDBACKTOCITIZEN") && data !== null && data !== void 0 && (_data$applicationType = data.applicationType) !== null && _data$applicationType !== void 0 && _data$applicationType.includes("NEW")) {
        finalTlDocumentsList.push(data);
      } else if (ckeckingLocation && (previousLicenseDetails === null || previousLicenseDetails === void 0 ? void 0 : previousLicenseDetails.action) != "SENDBACKTOCITIZEN" && data !== null && data !== void 0 && (_data$applicationType2 = data.applicationType) !== null && _data$applicationType2 !== void 0 && _data$applicationType2.includes("RENEWAL")) {
        finalTlDocumentsList.push(data);
      }
    });
  }
  const goNext = () => {
    onSelect(config.key, {
      documents
    });
  };
  useEffect(() => {
    goNext();
  }, [documents]);
  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }
  return /*#__PURE__*/React.createElement("div", null, finalTlDocumentsList === null || finalTlDocumentsList === void 0 ? void 0 : finalTlDocumentsList.map((document, index) => {
    return /*#__PURE__*/React.createElement(SelectDocument, {
      key: index,
      document: document,
      action: action,
      t: t,
      id: `tl-doc-${index}`,
      error: error,
      setError: setError,
      setDocuments: setDocuments,
      documents: documents,
      formData: formData,
      setFormError: setFormError,
      clearFormErrors: clearFormErrors,
      config: config,
      formState: formState
    });
  }), error && /*#__PURE__*/React.createElement(Toast, {
    label: error,
    onClose: () => setError(null),
    error: true
  }));
};
function SelectDocument({
  t,
  document: doc,
  setDocuments,
  error,
  setError,
  documents,
  action,
  formData,
  setFormError,
  clearFormErrors,
  config,
  formState,
  fromRawData,
  key,
  id
}) {
  const filteredDocument = documents === null || documents === void 0 ? void 0 : documents.filter(item => item === null || item === void 0 ? void 0 : item.documentType);
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const [selectedDocument, setSelectedDocument] = useState("");
  const [file, setFile] = useState(null);
  const [uploadedFile, setUploadedFile] = useState(() => (filteredDocument === null || filteredDocument === void 0 ? void 0 : filteredDocument.fileStoreId) || null);
  const acceptFormat = (doc === null || doc === void 0 ? void 0 : doc.documentType) === "OWNERPHOTO" ? ".jpg,.png,.jpeg" : ".jpg,.png,.pdf,.jpeg";
  function selectfile(e, key) {
    e.target.files[0].documentType = key;
    setSelectedDocument({
      documentType: key
    });
    setFile(e.target.files[0]);
  }
  const [isHidden, setHidden] = useState(false);
  const addError = () => {
    var _formState$errors, _formState$errors$con;
    let type = (_formState$errors = formState.errors) === null || _formState$errors === void 0 ? void 0 : (_formState$errors$con = _formState$errors[config.key]) === null || _formState$errors$con === void 0 ? void 0 : _formState$errors$con.type;
    if (!Array.isArray(type)) type = [];
    if (!type.includes(doc.documentType)) {
      type.push(doc.documentType);
      setFormError(config.key, {
        type
      });
    }
  };
  const removeError = () => {
    var _formState$errors2, _formState$errors2$co;
    let type = (_formState$errors2 = formState.errors) === null || _formState$errors2 === void 0 ? void 0 : (_formState$errors2$co = _formState$errors2[config.key]) === null || _formState$errors2$co === void 0 ? void 0 : _formState$errors2$co.type;
    if (!Array.isArray(type)) type = [];
    if (type.includes(doc === null || doc === void 0 ? void 0 : doc.documentType)) {
      type = type.filter(e => e != (doc === null || doc === void 0 ? void 0 : doc.documentType));
      if (!type.length) {
        clearFormErrors(config.key);
      } else {
        setFormError(config.key, {
          type
        });
      }
    }
  };
  useEffect(() => {
    if (selectedDocument !== null && selectedDocument !== void 0 && selectedDocument.documentType) {
      setDocuments(prev => {
        const filteredDocumentsByDocumentType = prev === null || prev === void 0 ? void 0 : prev.filter(item => (item === null || item === void 0 ? void 0 : item.documentType) !== (selectedDocument === null || selectedDocument === void 0 ? void 0 : selectedDocument.documentType));
        if ((uploadedFile === null || uploadedFile === void 0 ? void 0 : uploadedFile.length) === 0 || uploadedFile === null) {
          return filteredDocumentsByDocumentType;
        }
        const filteredDocumentsByFileStoreId = filteredDocumentsByDocumentType === null || filteredDocumentsByDocumentType === void 0 ? void 0 : filteredDocumentsByDocumentType.filter(item => (item === null || item === void 0 ? void 0 : item.fileStoreId) !== uploadedFile);
        if (selectedDocument !== null && selectedDocument !== void 0 && selectedDocument.id) {
          return [...filteredDocumentsByFileStoreId, {
            documentType: selectedDocument === null || selectedDocument === void 0 ? void 0 : selectedDocument.documentType,
            fileStoreId: uploadedFile,
            tenantId: tenantId,
            id: selectedDocument === null || selectedDocument === void 0 ? void 0 : selectedDocument.id
          }];
        } else {
          return [...filteredDocumentsByFileStoreId, {
            documentType: selectedDocument === null || selectedDocument === void 0 ? void 0 : selectedDocument.documentType,
            fileStoreId: uploadedFile,
            tenantId: tenantId
          }];
        }
      });
    }
    if (!isHidden) {
      const isRenewal = window.location.href.includes("renew-application-details");
      if (!isRenewal) {
        if (!uploadedFile || !(selectedDocument !== null && selectedDocument !== void 0 && selectedDocument.documentType)) {
          addError();
        } else if (uploadedFile && selectedDocument !== null && selectedDocument !== void 0 && selectedDocument.documentType) {
          removeError();
        }
      }
    } else if (isHidden) {
      removeError();
    }
  }, [uploadedFile, selectedDocument, isHidden]);
  useEffect(() => {
    (async () => {
      setError(null);
      if (file) {
        var _acceptFormat$split, _file$type, _file$type$split;
        if (!(acceptFormat !== null && acceptFormat !== void 0 && (_acceptFormat$split = acceptFormat.split(",")) !== null && _acceptFormat$split !== void 0 && _acceptFormat$split.includes(`.${file === null || file === void 0 ? void 0 : (_file$type = file.type) === null || _file$type === void 0 ? void 0 : (_file$type$split = _file$type.split("/")) === null || _file$type$split === void 0 ? void 0 : _file$type$split.pop()}`))) {
          setError(t("PT_UPLOAD_FORMAT_NOT_SUPPORTED"));
        } else if (file.size >= 5242880) {
          setError(t("CS_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
        } else {
          try {
            var _response$data, _response$data$files;
            setUploadedFile(null);
            const response = await Digit.UploadServices.Filestorage("TL", file, Digit.ULBService.getStateId());
            if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
              var _response$data2, _response$data2$files;
              setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
            } else {
              setError(t("CS_FILE_UPLOAD_ERROR"));
            }
          } catch (err) {
            setError(t("CS_FILE_UPLOAD_ERROR"));
          }
        }
      }
    })();
  }, [file]);
  useEffect(() => {
    var _formData$documents2, _formData$documents2$;
    if (doc && (formData === null || formData === void 0 ? void 0 : (_formData$documents2 = formData.documents) === null || _formData$documents2 === void 0 ? void 0 : (_formData$documents2$ = _formData$documents2.documents) === null || _formData$documents2$ === void 0 ? void 0 : _formData$documents2$.length) > 0) {
      for (let i = 0; i < (formData === null || formData === void 0 ? void 0 : (_formData$documents3 = formData.documents) === null || _formData$documents3 === void 0 ? void 0 : (_formData$documents3$ = _formData$documents3.documents) === null || _formData$documents3$ === void 0 ? void 0 : _formData$documents3$.length); i++) {
        var _formData$documents3, _formData$documents3$, _formData$documents4, _formData$documents4$, _formData$documents4$2;
        if ((doc === null || doc === void 0 ? void 0 : doc.documentType) === (formData === null || formData === void 0 ? void 0 : (_formData$documents4 = formData.documents) === null || _formData$documents4 === void 0 ? void 0 : (_formData$documents4$ = _formData$documents4.documents) === null || _formData$documents4$ === void 0 ? void 0 : (_formData$documents4$2 = _formData$documents4$[i]) === null || _formData$documents4$2 === void 0 ? void 0 : _formData$documents4$2.documentType)) {
          var _formData$documents5, _formData$documents5$, _formData$documents5$2, _formData$documents6, _formData$documents6$, _formData$documents6$2, _formData$documents7, _formData$documents7$, _formData$documents7$2;
          setSelectedDocument({
            documentType: formData === null || formData === void 0 ? void 0 : (_formData$documents5 = formData.documents) === null || _formData$documents5 === void 0 ? void 0 : (_formData$documents5$ = _formData$documents5.documents) === null || _formData$documents5$ === void 0 ? void 0 : (_formData$documents5$2 = _formData$documents5$[i]) === null || _formData$documents5$2 === void 0 ? void 0 : _formData$documents5$2.documentType,
            id: formData === null || formData === void 0 ? void 0 : (_formData$documents6 = formData.documents) === null || _formData$documents6 === void 0 ? void 0 : (_formData$documents6$ = _formData$documents6.documents) === null || _formData$documents6$ === void 0 ? void 0 : (_formData$documents6$2 = _formData$documents6$[i]) === null || _formData$documents6$2 === void 0 ? void 0 : _formData$documents6$2.id
          });
          setUploadedFile(formData === null || formData === void 0 ? void 0 : (_formData$documents7 = formData.documents) === null || _formData$documents7 === void 0 ? void 0 : (_formData$documents7$ = _formData$documents7.documents) === null || _formData$documents7$ === void 0 ? void 0 : (_formData$documents7$2 = _formData$documents7$[i]) === null || _formData$documents7$2 === void 0 ? void 0 : _formData$documents7$2.fileStoreId);
        }
      }
    }
  }, [doc]);
  return /*#__PURE__*/React.createElement("div", {
    style: {
      marginBottom: "24px"
    }
  }, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, (doc === null || doc === void 0 ? void 0 : doc.documentType) != "OLDLICENCENO" ? `${t(`TL_NEW_${doc === null || doc === void 0 ? void 0 : doc.documentType.replaceAll(".", "_")}`)} * ` : `${t(`TL_NEW_${doc === null || doc === void 0 ? void 0 : doc.documentType.replaceAll(".", "_")}`)} `), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(UploadFile, {
    id: id,
    onUpload: e => {
      selectfile(e, doc === null || doc === void 0 ? void 0 : doc.documentType.replaceAll(".", "_"));
    },
    onDelete: () => {
      setUploadedFile(null);
    },
    message: uploadedFile ? `1 ${t(`CS_ACTION_FILEUPLOADED`)}` : t(`CS_ACTION_NO_FILEUPLOADED`),
    textStyles: {
      width: "100%"
    },
    inputStyles: {
      width: "280px"
    },
    buttonType: "button"
  }))));
}

const TLCard = () => {
  sessionStorage.setItem("breadCrumbUrl", "home");
  if (!Digit.Utils.tlAccess()) {
    return null;
  }
  const {
    t
  } = useTranslation();
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const inboxSearchParams = {
    limit: 10,
    offset: 0
  };
  const {
    isLoading,
    data: inboxData
  } = Digit.Hooks.tl.useInbox({
    tenantId,
    filters: {
      ...inboxSearchParams
    },
    config: {}
  });
  const [isStateLocalisation, setIsStateLocalisation] = useState(true);
  useEffect(() => {
    if (tenantId && isStateLocalisation) {
      setIsStateLocalisation(false);
      Digit.LocalizationService.getLocale({
        modules: [`rainmaker-${tenantId}`],
        locale: Digit.StoreData.getCurrentLanguage(),
        tenantId: `${tenantId}`
      });
    }
  }, [tenantId]);
  let links = [{
    count: isLoading ? "-" : inboxData === null || inboxData === void 0 ? void 0 : inboxData.totalCount,
    label: t("ES_COMMON_INBOX"),
    link: `/digit-ui/employee/tl/inbox`
  }, {
    label: t("TL_NEW_APPLICATION"),
    link: "/digit-ui/employee/tl/new-application",
    role: "TL_CEMP"
  }, {
    label: t("TL_SEARCH_APPLICATIONS"),
    link: `/digit-ui/employee/tl/search/application`
  }, {
    label: t("TL_SEARCH_LICENSE"),
    link: `/digit-ui/employee/tl/search/license`,
    role: "TL_CEMP"
  }];
  links = links.filter(link => link.role ? checkForEmployee(link.role) : true);
  const propsForModuleCard = {
    Icon: /*#__PURE__*/React.createElement(CaseIcon, null),
    moduleName: t("TL_COMMON_TL"),
    kpis: [{
      count: isLoading ? "-" : inboxData === null || inboxData === void 0 ? void 0 : inboxData.totalCount,
      label: t("TOTAL_TL"),
      link: `/digit-ui/employee/tl/inbox`
    }, {
      count: isLoading ? "-" : inboxData === null || inboxData === void 0 ? void 0 : inboxData.nearingSlaCount,
      label: t("TOTAL_NEARING_SLA"),
      link: `/digit-ui/employee/tl/inbox`
    }],
    links: links
  };
  return /*#__PURE__*/React.createElement(EmployeeModuleCard, propsForModuleCard);
};

const TLInfoLabel = ({
  t,
  config,
  onSelect,
  userType,
  formData
}) => {
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      width: "80%"
    }
  }, /*#__PURE__*/React.createElement(CitizenInfoLabel, {
    info: t("CS_FILE_APPLICATION_INFO_LABEL"),
    text: t("TL_EDIT_INFO_CARD_INFORMATION_DETAILS_LABEL")
  })));
};

const SearchFields = ({
  register,
  control,
  reset,
  tenantId,
  t,
  previousPage
}) => {
  var _statusData$otherRole, _statusData$userRoleS;
  const {
    data: applicationTypes,
    isLoading: applicationTypesLoading
  } = Digit.Hooks.tl.useMDMS.applicationTypes(tenantId);
  const applicationType = useWatch({
    control,
    name: "applicationType"
  });
  let businessServices = [];
  if (applicationType && (applicationType === null || applicationType === void 0 ? void 0 : applicationType.code) === "RENEWAL") businessServices = ["EDITRENEWAL", "DIRECTRENEWAL"];else if (applicationType && (applicationType === null || applicationType === void 0 ? void 0 : applicationType.code) === "NEW") businessServices = ["NewTL"];else businessServices = ["EDITRENEWAL", "DIRECTRENEWAL", "NewTL"];
  const {
    data: statusData,
    isLoading
  } = Digit.Hooks.useApplicationStatusGeneral({
    businessServices,
    tenantId
  }, {});
  let applicationStatuses = [];
  statusData && (statusData === null || statusData === void 0 ? void 0 : (_statusData$otherRole = statusData.otherRoleStates) === null || _statusData$otherRole === void 0 ? void 0 : _statusData$otherRole.map(status => {
    let found = applicationStatuses.length > 0 ? applicationStatuses === null || applicationStatuses === void 0 ? void 0 : applicationStatuses.some(el => (el === null || el === void 0 ? void 0 : el.code) === status.applicationStatus) : false;
    if (!found) applicationStatuses.push({
      code: status === null || status === void 0 ? void 0 : status.applicationStatus,
      i18nKey: `WF_NEWTL_${status === null || status === void 0 ? void 0 : status.applicationStatus}`
    });
  }));
  statusData && (statusData === null || statusData === void 0 ? void 0 : (_statusData$userRoleS = statusData.userRoleStates) === null || _statusData$userRoleS === void 0 ? void 0 : _statusData$userRoleS.map(status => {
    let found = applicationStatuses.length > 0 ? applicationStatuses === null || applicationStatuses === void 0 ? void 0 : applicationStatuses.some(el => (el === null || el === void 0 ? void 0 : el.code) === status.applicationStatus) : false;
    if (!found) applicationStatuses.push({
      code: status === null || status === void 0 ? void 0 : status.applicationStatus,
      i18nKey: `WF_NEWTL_${status === null || status === void 0 ? void 0 : status.applicationStatus}`
    });
  }));
  return /*#__PURE__*/React.createElement(Fragment$1, null, /*#__PURE__*/React.createElement(SearchField, null, /*#__PURE__*/React.createElement("label", null, t("TL_HOME_SEARCH_RESULTS_APP_NO_LABEL")), /*#__PURE__*/React.createElement(TextInput, {
    name: "applicationNumber",
    inputRef: register({})
  })), applicationTypesLoading ? /*#__PURE__*/React.createElement(Loader, null) : /*#__PURE__*/React.createElement(SearchField, null, /*#__PURE__*/React.createElement("label", null, t("TL_LOCALIZATION_APPLICATION_TYPE")), /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "applicationType",
    render: props => /*#__PURE__*/React.createElement(Dropdown, {
      selected: props.value,
      select: props.onChange,
      onBlur: props.onBlur,
      option: applicationTypes,
      optionKey: "i18nKey",
      t: t
    })
  })), /*#__PURE__*/React.createElement(SearchField, null, /*#__PURE__*/React.createElement("label", null, t("TL_APPLICATION_FROM_DATE")), /*#__PURE__*/React.createElement(Controller, {
    render: props => /*#__PURE__*/React.createElement(DatePicker, {
      date: props.value,
      onChange: props.onChange
    }),
    name: "fromDate",
    control: control
  })), /*#__PURE__*/React.createElement(SearchField, null, /*#__PURE__*/React.createElement("label", null, t("TL_APPLICATION_TO_DATE")), /*#__PURE__*/React.createElement(Controller, {
    render: props => /*#__PURE__*/React.createElement(DatePicker, {
      date: props.value,
      onChange: props.onChange
    }),
    name: "toDate",
    control: control
  })), /*#__PURE__*/React.createElement(SearchField, null, /*#__PURE__*/React.createElement("label", null, t("TL_TRADE_LICENSE_LABEL")), /*#__PURE__*/React.createElement(TextInput, {
    name: "licenseNumbers",
    inputRef: register({})
  })), isLoading ? /*#__PURE__*/React.createElement(Loader, null) : /*#__PURE__*/React.createElement(SearchField, null, /*#__PURE__*/React.createElement("label", null, t("TL_HOME_SEARCH_RESULTS_APP_STATUS_LABEL")), /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "status",
    render: props => /*#__PURE__*/React.createElement(Dropdown, {
      selected: props.value,
      select: props.onChange,
      onBlur: props.onBlur,
      option: applicationStatuses,
      optionKey: "i18nKey",
      t: t
    })
  })), /*#__PURE__*/React.createElement(SearchField, null, /*#__PURE__*/React.createElement("label", null, t("TL_LOCALIZATION_TRADE_NAME")), /*#__PURE__*/React.createElement(TextInput, {
    name: "tradeName",
    inputRef: register({})
  })), /*#__PURE__*/React.createElement(SearchField, {
    className: "submit"
  }, /*#__PURE__*/React.createElement(SubmitBar, {
    label: t("ES_COMMON_SEARCH"),
    submit: true
  }), /*#__PURE__*/React.createElement("p", {
    onClick: () => {
      reset({
        applicationType: "",
        fromDate: "",
        toDate: "",
        licenseNumbers: "",
        status: "",
        tradeName: "",
        offset: 0,
        limit: 10,
        sortBy: "commencementDate",
        sortOrder: "DESC"
      });
      previousPage();
    }
  }, t(`ES_COMMON_CLEAR_ALL`))));
};

const MobileSearchApplication = ({
  Controller,
  register,
  control,
  t,
  reset,
  previousPage,
  handleSubmit,
  tenantId,
  data,
  onSubmit
}) => {
  function activateModal(state, action) {
    switch (action.type) {
      case "set":
        return action.payload;
      case "remove":
        return false;
    }
  }
  const [currentlyActiveMobileModal, setActiveMobileModal] = useReducer(activateModal, false);
  const closeMobilePopupModal = () => {
    setActiveMobileModal({
      type: "remove"
    });
  };
  const MobilePopUpCloseButton = () => /*#__PURE__*/React.createElement("div", {
    className: "InboxMobilePopupCloseButtonWrapper",
    onClick: closeMobilePopupModal
  }, /*#__PURE__*/React.createElement(CloseSvg, null));
  const searchFormFieldsComponentProps = {
    Controller,
    register,
    control,
    t,
    reset,
    previousPage
  };
  const MobileComponentDirectory = ({
    currentlyActiveMobileModal,
    searchFormFieldsComponentProps,
    tenantId,
    ...props
  }) => {
    const {
      closeMobilePopupModal
    } = props;
    switch (currentlyActiveMobileModal) {
      case "SearchFormComponent":
        return /*#__PURE__*/React.createElement(SearchForm, props, /*#__PURE__*/React.createElement(MobilePopUpCloseButton, null), /*#__PURE__*/React.createElement("div", {
          className: "MobilePopupHeadingWrapper"
        }, /*#__PURE__*/React.createElement("h2", null, t("ES_COMMON_SEARCH"), ":")), /*#__PURE__*/React.createElement(SearchFields, Object.assign({}, searchFormFieldsComponentProps, {
          closeMobilePopupModal,
          tenantId,
          t
        })));
      default:
        return /*#__PURE__*/React.createElement("span", null);
    }
  };
  const CurrentMobileModalComponent = useCallback(({
    currentlyActiveMobileModal,
    searchFormFieldsComponentProps,
    tenantId,
    ...props
  }) => MobileComponentDirectory({
    currentlyActiveMobileModal,
    searchFormFieldsComponentProps,
    tenantId,
    ...props
  }), [currentlyActiveMobileModal]);
  const propsMobileInboxCards = useMemo(() => {
    if (data !== null && data !== void 0 && data.display) {
      return [];
    }
    if (data === "") {
      return [];
    }
    return data === null || data === void 0 ? void 0 : data.map(data => {
      var _data$auditDetails, _data$tradeLicenseDet, _data$tradeLicenseDet2;
      return {
        [t("TL_COMMON_TABLE_COL_APP_NO")]: data.applicationNumber,
        [t("TL_COMMON_TABLE_COL_APP_DATE")]: convertEpochToDateDMY((_data$auditDetails = data.auditDetails) === null || _data$auditDetails === void 0 ? void 0 : _data$auditDetails.createdTime) || "",
        [t("TL_APPLICATION_TYPE_LABEL")]: data.applicationType ? t(`TL_LOCALIZATION_APPLICATIONTYPE_${data.applicationType}`) : "-",
        [t("TL_LICENSE_NUMBERL_LABEL")]: (data === null || data === void 0 ? void 0 : data.licenseNumber) || "-",
        [t("TL_LICENSE_YEAR_LABEL")]: data.financialYear || "",
        [t("TL_COMMON_TABLE_COL_TRD_NAME")]: data.tradeName || "",
        [t("TL_LOCALIZATION_TRADE_OWNER_NAME")]: (data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet = data.tradeLicenseDetail) === null || _data$tradeLicenseDet === void 0 ? void 0 : (_data$tradeLicenseDet2 = _data$tradeLicenseDet.owners) === null || _data$tradeLicenseDet2 === void 0 ? void 0 : _data$tradeLicenseDet2.map(o => o.name).join(",")) || "",
        [t("WF_INBOX_HEADER_CURRENT_OWNER")]: (data === null || data === void 0 ? void 0 : data.CurrentOwners[0].currentOwner) || "",
        [t("TL_COMMON_TABLE_COL_STATUS")]: data.workflowCode && data.state ? t(`WF_${data.workflowCode}_${data.state}`) : "NA"
      };
    });
  }, [data]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    className: "searchBox"
  }, /*#__PURE__*/React.createElement(SearchAction, Object.assign({
    text: t("ES_COMMON_SEARCH"),
    handleActionClick: () => setActiveMobileModal({
      type: "set",
      payload: "SearchFormComponent"
    })
  }, {
    tenantId,
    t
  }))), currentlyActiveMobileModal ? /*#__PURE__*/React.createElement(PopUp, null, /*#__PURE__*/React.createElement(CurrentMobileModalComponent, Object.assign({
    onSubmit: data => {
      setActiveMobileModal({
        type: "remove"
      });
      onSubmit(data);
    },
    handleSubmit: handleSubmit,
    id: "search-form",
    className: "rm-mb form-field-flex-one inboxPopupMobileWrapper"
  }, {
    searchFormFieldsComponentProps,
    currentlyActiveMobileModal,
    closeMobilePopupModal,
    tenantId
  }))) : null, data !== null && data !== void 0 && data.display ? /*#__PURE__*/React.createElement(Card, {
    style: {
      marginTop: 20
    }
  }, t(data === null || data === void 0 ? void 0 : data.display).split("\\n").map((text, index) => /*#__PURE__*/React.createElement("p", {
    key: index,
    style: {
      textAlign: "center"
    }
  }, text))) : /*#__PURE__*/React.createElement(DetailsCard, {
    data: propsMobileInboxCards,
    linkPrefix: `/digit-ui/employee/tl/application-details/`,
    serviceRequestIdKey: t("TL_COMMON_TABLE_COL_APP_NO")
  }));
};

const SearchApplication = ({
  tenantId,
  t,
  onSubmit,
  data,
  count
}) => {
  const initialValues = Digit.SessionStorage.get("SEARCH_APPLICATION_DETAIL") ? {
    ...Digit.SessionStorage.get("SEARCH_APPLICATION_DETAIL"),
    offset: 0,
    limit: 10,
    sortBy: "commencementDate",
    sortOrder: "DESC"
  } : {
    offset: 0,
    limit: 10,
    sortBy: "commencementDate",
    sortOrder: "DESC"
  };
  const {
    register,
    control,
    handleSubmit,
    setValue,
    getValues,
    reset
  } = useForm({
    defaultValues: initialValues
  });
  useEffect(() => {
    register("offset", 0);
    register("limit", 10);
    register("sortBy", "commencementDate");
    register("sortOrder", "DESC");
  }, [register]);
  const onSort = useCallback(args => {
    if (args.length === 0) return;
    setValue("sortBy", args.id);
    setValue("sortOrder", args.desc ? "DESC" : "ASC");
  }, []);
  function onPageSizeChange(e) {
    setValue("limit", Number(e.target.value));
    handleSubmit(onSubmit)();
  }
  function nextPage() {
    setValue("offset", getValues("offset") + getValues("limit"));
    handleSubmit(onSubmit)();
  }
  function previousPage() {
    setValue("offset", getValues("offset") - getValues("limit"));
    handleSubmit(onSubmit)();
  }
  const isMobile = window.Digit.Utils.browser.isMobile();
  if (isMobile) {
    return /*#__PURE__*/React.createElement(MobileSearchApplication, {
      Controller,
      register,
      control,
      t,
      reset,
      previousPage,
      handleSubmit,
      tenantId,
      data,
      onSubmit
    });
  }
  const GetCell = value => /*#__PURE__*/React.createElement("span", {
    className: "cell-text"
  }, value);
  const columns = useMemo(() => [{
    Header: t("TL_COMMON_TABLE_COL_APP_NO"),
    accessor: "applicationNo",
    disableSortBy: true,
    Cell: ({
      row
    }) => {
      return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("span", {
        className: "link"
      }, /*#__PURE__*/React.createElement(Link, {
        to: `/digit-ui/employee/tl/application-details/${row.original["applicationNumber"]}`
      }, row.original["applicationNumber"])));
    }
  }, {
    Header: t("TL_COMMON_TABLE_COL_APP_DATE"),
    disableSortBy: true,
    accessor: row => GetCell(row.auditDetails.createdTime ? convertEpochToDateDMY(row.auditDetails.createdTime) : "")
  }, {
    Header: t("TL_APPLICATION_TYPE_LABEL"),
    disableSortBy: true,
    accessor: row => GetCell(t(`TL_LOCALIZATION_APPLICATIONTYPE_${row === null || row === void 0 ? void 0 : row.workflowCode}`))
  }, {
    Header: t("TL_LICENSE_NUMBERL_LABEL"),
    disableSortBy: true,
    accessor: row => GetCell(row.licenseNumber || "-")
  }, {
    Header: t("TL_LICENSE_YEAR_LABEL"),
    disableSortBy: true,
    accessor: row => GetCell(row.financialYear)
  }, {
    Header: t("TL_COMMON_TABLE_COL_TRD_NAME"),
    disableSortBy: true,
    accessor: row => GetCell(row.tradeName || "")
  }, {
    Header: t("TL_LOCALIZATION_TRADE_OWNER_NAME"),
    accessor: row => GetCell(row.tradeLicenseDetail.owners.map(o => o.name).join(",") || ""),
    disableSortBy: true
  }, {
    Header: t("WF_INBOX_HEADER_CURRENT_OWNER"),
    accessor: row => {
      var _row$CurrentOwners$;
      return GetCell(((_row$CurrentOwners$ = row.CurrentOwners[0]) === null || _row$CurrentOwners$ === void 0 ? void 0 : _row$CurrentOwners$.currentOwner) || "");
    },
    disableSortBy: true
  }, {
    Header: t("TL_COMMON_TABLE_COL_STATUS"),
    accessor: row => {
      var _row$workflowCode;
      return GetCell(t((row === null || row === void 0 ? void 0 : row.workflowCode) && (row === null || row === void 0 ? void 0 : row.status) && `WF_${row === null || row === void 0 ? void 0 : (_row$workflowCode = row.workflowCode) === null || _row$workflowCode === void 0 ? void 0 : _row$workflowCode.toUpperCase()}_${row.status}` || "NA"));
    },
    disableSortBy: true
  }], []);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, null, t("TL_SEARCH_APPLICATIONS")), /*#__PURE__*/React.createElement(SearchForm, {
    onSubmit: onSubmit,
    handleSubmit: handleSubmit
  }, /*#__PURE__*/React.createElement(SearchFields, {
    register,
    control,
    reset,
    tenantId,
    t,
    previousPage
  })), data !== null && data !== void 0 && data.display ? /*#__PURE__*/React.createElement(Card, {
    style: {
      marginTop: 20
    }
  }, t(data.display).split("\\n").map((text, index) => /*#__PURE__*/React.createElement("p", {
    key: index,
    style: {
      textAlign: "center"
    }
  }, text))) : data !== "" && /*#__PURE__*/React.createElement(Table, {
    t: t,
    data: data,
    totalRecords: count,
    columns: columns,
    getCellProps: cellInfo => {
      return {
        style: {
          minWidth: cellInfo.column.Header === t("ES_INBOX_APPLICATION_NO") ? "240px" : "",
          padding: "20px 18px",
          fontSize: "16px"
        }
      };
    },
    onPageSizeChange: onPageSizeChange,
    currentPage: getValues("offset") / getValues("limit"),
    onNextPage: nextPage,
    onPrevPage: previousPage,
    pageSizeLimit: getValues("limit"),
    onSort: onSort,
    disableSort: false,
    sortParams: [{
      id: getValues("sortBy"),
      desc: getValues("sortOrder") === "DESC" ? true : false
    }]
  }));
};

const SearchFields$1 = ({
  register,
  control,
  reset,
  tenantId,
  t,
  previousPage
}) => {
  let validation = {};
  return /*#__PURE__*/React.createElement(Fragment$1, null, /*#__PURE__*/React.createElement(SearchField, null, /*#__PURE__*/React.createElement("label", null, t("TL_TRADE_LICENSE_LABEL")), /*#__PURE__*/React.createElement(TextInput, {
    name: "licenseNumbers",
    inputRef: register({})
  })), /*#__PURE__*/React.createElement(SearchField, null, /*#__PURE__*/React.createElement("label", null, t("TL_TRADE_OWNER_S_NUMBER_LABEL")), /*#__PURE__*/React.createElement(TextInput, Object.assign({
    name: "mobileNumber",
    inputRef: register({}),
    type: "mobileNumber",
    componentInFront: /*#__PURE__*/React.createElement("div", {
      className: "employee-card-input employee-card-input--front"
    }, "+91"),
    maxlength: 10
  }, validation = {
    pattern: "[6-9]{1}[0-9]{9}",
    type: "tel",
    title: t("CORE_COMMON_APPLICANT_MOBILE_NUMBER_INVALID")
  }))), /*#__PURE__*/React.createElement(SearchField, null, /*#__PURE__*/React.createElement("label", null, t("TL_SEARCH_TRADE_LICENSE_ISSUED_FROM")), /*#__PURE__*/React.createElement(Controller, {
    render: props => /*#__PURE__*/React.createElement(DatePicker, {
      date: props.value,
      onChange: props.onChange
    }),
    name: "fromDate",
    control: control
  })), /*#__PURE__*/React.createElement(SearchField, null, /*#__PURE__*/React.createElement("label", null, t("TL_SEARCH_TRADE_LICENSE_ISSUED_TO")), /*#__PURE__*/React.createElement(Controller, {
    render: props => /*#__PURE__*/React.createElement(DatePicker, {
      date: props.value,
      onChange: props.onChange
    }),
    name: "toDate",
    control: control
  })), /*#__PURE__*/React.createElement(SearchField, null, /*#__PURE__*/React.createElement("label", null, t("TL_LOCALIZATION_TRADE_NAME")), /*#__PURE__*/React.createElement(TextInput, {
    name: "tradeName",
    inputRef: register({})
  })), /*#__PURE__*/React.createElement(SearchField, {
    className: "submit"
  }, /*#__PURE__*/React.createElement(SubmitBar, {
    label: t("ES_COMMON_SEARCH"),
    submit: true
  }), /*#__PURE__*/React.createElement("p", {
    onClick: () => {
      reset({
        licenseNumbers: "",
        mobileNumber: "",
        fromDate: "",
        toDate: "",
        offset: 0,
        limit: 10,
        sortBy: "commencementDate",
        sortOrder: "DESC",
        status: "",
        RenewalPending: true
      });
      previousPage();
    }
  }, t(`ES_COMMON_CLEAR_ALL`))));
};

const MobileSearchApplication$1 = ({
  Controller,
  register,
  control,
  t,
  reset,
  previousPage,
  handleSubmit,
  tenantId,
  data,
  onSubmit
}) => {
  function activateModal(state, action) {
    switch (action.type) {
      case "set":
        return action.payload;
      case "remove":
        return false;
    }
  }
  const [currentlyActiveMobileModal, setActiveMobileModal] = useReducer(activateModal, false);
  const closeMobilePopupModal = () => {
    setActiveMobileModal({
      type: "remove"
    });
  };
  const MobilePopUpCloseButton = () => /*#__PURE__*/React.createElement("div", {
    className: "InboxMobilePopupCloseButtonWrapper",
    onClick: closeMobilePopupModal
  }, /*#__PURE__*/React.createElement(CloseSvg, null));
  const searchFormFieldsComponentProps = {
    Controller,
    register,
    control,
    t,
    reset,
    previousPage
  };
  const MobileComponentDirectory = ({
    currentlyActiveMobileModal,
    searchFormFieldsComponentProps,
    tenantId,
    ...props
  }) => {
    const {
      closeMobilePopupModal
    } = props;
    switch (currentlyActiveMobileModal) {
      case "SearchFormComponent":
        return /*#__PURE__*/React.createElement(SearchForm, props, /*#__PURE__*/React.createElement(MobilePopUpCloseButton, null), /*#__PURE__*/React.createElement("div", {
          className: "MobilePopupHeadingWrapper"
        }, /*#__PURE__*/React.createElement("h2", null, t("ES_COMMON_SEARCH"), ":")), /*#__PURE__*/React.createElement(SearchFields$1, Object.assign({}, searchFormFieldsComponentProps, {
          closeMobilePopupModal,
          tenantId,
          t
        })));
      default:
        return /*#__PURE__*/React.createElement("span", null);
    }
  };
  const CurrentMobileModalComponent = useCallback(({
    currentlyActiveMobileModal,
    searchFormFieldsComponentProps,
    tenantId,
    ...props
  }) => MobileComponentDirectory({
    currentlyActiveMobileModal,
    searchFormFieldsComponentProps,
    tenantId,
    ...props
  }), [currentlyActiveMobileModal]);
  const propsMobileInboxCards = useMemo(() => {
    if (data !== null && data !== void 0 && data.display) {
      return [];
    }
    if (data === "") {
      return [];
    }
    return data === null || data === void 0 ? void 0 : data.map(data => {
      var _data$tenantId, _data$workflowCode;
      return {
        [t("TL_TRADE_LICENSE_LABEL")]: data.licenseNumber,
        [t("TL_COMMON_TABLE_COL_APP_NO")]: data.applicationNumber,
        [t("TL_LOCALIZATION_TRADE_NAME")]: data.tradeName || "",
        [t("ES_APPLICATION_SEARCH_ISSUED_DATE")]: data.issuedDate ? convertEpochToDateDMY(data.issuedDate) : "",
        [t("ES_APPLICATION_SEARCH_VALID_TO")]: data !== null && data !== void 0 && data.validTo ? convertEpochToDateDMY(data === null || data === void 0 ? void 0 : data.validTo) : "-",
        [t("TL_HOME_SEARCH_RESULTS__LOCALITY")]: t(`${stringReplaceAll((_data$tenantId = data.tenantId) === null || _data$tenantId === void 0 ? void 0 : _data$tenantId.toUpperCase(), ".", "_")}_REVENUE_${data.tradeLicenseDetail.address.locality.code}`) || "",
        [t("TL_COMMON_TABLE_COL_STATUS")]: t((data === null || data === void 0 ? void 0 : data.workflowCode) && (data === null || data === void 0 ? void 0 : data.status) && `WF_${data === null || data === void 0 ? void 0 : (_data$workflowCode = data.workflowCode) === null || _data$workflowCode === void 0 ? void 0 : _data$workflowCode.toUpperCase()}_${data.status}` || "NA")
      };
    });
  }, [data]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    className: "searchBox"
  }, /*#__PURE__*/React.createElement(SearchAction, Object.assign({
    text: t("ES_COMMON_SEARCH"),
    handleActionClick: () => setActiveMobileModal({
      type: "set",
      payload: "SearchFormComponent"
    })
  }, {
    tenantId,
    t
  }))), currentlyActiveMobileModal ? /*#__PURE__*/React.createElement(PopUp, null, /*#__PURE__*/React.createElement(CurrentMobileModalComponent, Object.assign({
    onSubmit: data => {
      setActiveMobileModal({
        type: "remove"
      });
      onSubmit(data);
    },
    handleSubmit: handleSubmit,
    id: "search-form",
    className: "rm-mb form-field-flex-one inboxPopupMobileWrapper"
  }, {
    searchFormFieldsComponentProps,
    currentlyActiveMobileModal,
    closeMobilePopupModal,
    tenantId
  }))) : null, data !== null && data !== void 0 && data.display ? /*#__PURE__*/React.createElement(Card, {
    style: {
      marginTop: 20
    }
  }, t(data === null || data === void 0 ? void 0 : data.display).split("\\n").map((text, index) => /*#__PURE__*/React.createElement("p", {
    key: index,
    style: {
      textAlign: "center"
    }
  }, text))) : /*#__PURE__*/React.createElement(DetailsCard, {
    data: propsMobileInboxCards,
    linkPrefix: `/digit-ui/employee/tl/application-details/`,
    serviceRequestIdKey: t("TL_COMMON_TABLE_COL_APP_NO")
  }));
};

const SearchLicense = ({
  tenantId,
  t,
  onSubmit,
  data,
  count
}) => {
  const initialValues = Digit.SessionStorage.get("SEARCH_APPLICATION_DETAIL") || {
    offset: 0,
    limit: 10,
    sortBy: "commencementDate",
    sortOrder: "DESC"
  };
  const {
    register,
    control,
    handleSubmit,
    setValue,
    getValues,
    reset
  } = useForm({
    defaultValues: initialValues
  });
  useEffect(() => {
    register("offset", 0);
    register("limit", 10);
    register("sortBy", "commencementDate");
    register("sortOrder", "DESC");
    register("status", "");
  }, [register]);
  const onSort = useCallback(args => {
    if (args.length === 0) return;
    setValue("sortBy", args.id);
    setValue("sortOrder", args.desc ? "DESC" : "ASC");
  }, []);
  function onPageSizeChange(e) {
    setValue("limit", Number(e.target.value));
    handleSubmit(onSubmit)();
  }
  function nextPage() {
    setValue("offset", getValues("offset") + getValues("limit"));
    handleSubmit(onSubmit)();
  }
  function previousPage() {
    setValue("offset", getValues("offset") - getValues("limit"));
    handleSubmit(onSubmit)();
  }
  const isMobile = window.Digit.Utils.browser.isMobile();
  if (isMobile) {
    return /*#__PURE__*/React.createElement(MobileSearchApplication$1, {
      Controller,
      register,
      control,
      t,
      reset,
      previousPage,
      handleSubmit,
      tenantId,
      data,
      onSubmit
    });
  }
  const GetCell = value => /*#__PURE__*/React.createElement("span", {
    className: "cell-text"
  }, value);
  const columns = useMemo(() => [{
    Header: t("TL_TRADE_LICENSE_LABEL"),
    accessor: "licenseNumber",
    disableSortBy: true,
    Cell: ({
      row
    }) => {
      return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("span", {
        className: "link"
      }, /*#__PURE__*/React.createElement("a", {
        href: `/digit-ui/employee/tl/application-details/${row.original["applicationNumber"]}`
      }, row.original["licenseNumber"])));
    }
  }, {
    Header: t("TL_LOCALIZATION_TRADE_NAME"),
    disableSortBy: true,
    accessor: row => GetCell(row.tradeName || "")
  }, {
    Header: t("ES_APPLICATION_SEARCH_ISSUED_DATE"),
    disableSortBy: true,
    accessor: row => GetCell(row.issuedDate ? convertEpochToDateDMY(row.issuedDate) : "")
  }, {
    Header: t("ES_APPLICATION_SEARCH_VALID_TO"),
    disableSortBy: true,
    accessor: row => GetCell(row.validTo ? convertEpochToDateDMY(row.validTo) : "")
  }, {
    Header: t("TL_HOME_SEARCH_RESULTS__LOCALITY"),
    disableSortBy: true,
    accessor: row => {
      var _row$tenantId;
      return GetCell(t(`${stringReplaceAll((_row$tenantId = row.tenantId) === null || _row$tenantId === void 0 ? void 0 : _row$tenantId.toUpperCase(), ".", "_")}_REVENUE_${row.tradeLicenseDetail.address.locality.code}`) || "");
    }
  }, {
    Header: t("TL_COMMON_TABLE_COL_STATUS"),
    accessor: row => {
      var _row$workflowCode;
      return GetCell(t((row === null || row === void 0 ? void 0 : row.workflowCode) && (row === null || row === void 0 ? void 0 : row.status) && `WF_${row === null || row === void 0 ? void 0 : (_row$workflowCode = row.workflowCode) === null || _row$workflowCode === void 0 ? void 0 : _row$workflowCode.toUpperCase()}_${row.status}` || "NA"));
    },
    disableSortBy: true
  }], []);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, null, t("TL_SEARCH_LICENSE")), /*#__PURE__*/React.createElement(SearchForm, {
    onSubmit: onSubmit,
    handleSubmit: handleSubmit
  }, /*#__PURE__*/React.createElement(SearchFields$1, {
    register,
    control,
    reset,
    tenantId,
    t,
    previousPage
  })), data !== null && data !== void 0 && data.display ? /*#__PURE__*/React.createElement(Card, {
    style: {
      marginTop: 20
    }
  }, t(data.display).split("\\n").map((text, index) => /*#__PURE__*/React.createElement("p", {
    key: index,
    style: {
      textAlign: "center"
    }
  }, text))) : data !== "" && /*#__PURE__*/React.createElement(Table, {
    t: t,
    data: data,
    totalRecords: count,
    columns: columns,
    getCellProps: cellInfo => {
      return {
        style: {
          minWidth: cellInfo.column.Header === t("ES_INBOX_APPLICATION_NO") ? "240px" : "",
          padding: "20px 18px",
          fontSize: "16px"
        }
      };
    },
    onPageSizeChange: onPageSizeChange,
    currentPage: getValues("offset") / getValues("limit"),
    onNextPage: nextPage,
    onPrevPage: previousPage,
    pageSizeLimit: getValues("limit"),
    onSort: onSort,
    disableSort: false,
    sortParams: [{
      id: getValues("sortBy"),
      desc: getValues("sortOrder") === "DESC" ? true : false
    }]
  }));
};

const Filter = ({
  searchParams,
  onFilterChange,
  defaultSearchParams,
  statuses,
  ...props
}) => {
  var _searchParams$localit;
  const {
    t
  } = useTranslation();
  const [_searchParams, setSearchParams] = useState(() => searchParams);
  const localParamChange = filterParam => {
    let keys_to_delete = filterParam.delete;
    let _new = {
      ..._searchParams,
      ...filterParam
    };
    if (keys_to_delete) keys_to_delete.forEach(key => delete _new[key]);
    delete filterParam.delete;
    setSearchParams({
      ..._new
    });
  };
  const clearAll = () => {
    setSearchParams({
      applicationStatus: []
    });
    onFilterChange({
      applicationStatus: []
    });
  };
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const onServiceSelect = (e, label) => {
    if (e.target.checked) localParamChange({
      applicationStatus: [...(_searchParams !== null && _searchParams !== void 0 && _searchParams.applicationStatus ? _searchParams.applicationStatus : []), label]
    });else localParamChange({
      applicationStatus: _searchParams === null || _searchParams === void 0 ? void 0 : _searchParams.applicationStatus.filter(o => o !== label)
    });
  };
  const selectLocality = d => {
    localParamChange({
      locality: [...((_searchParams === null || _searchParams === void 0 ? void 0 : _searchParams.locality) || []), d]
    });
  };
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    className: "filter"
  }, /*#__PURE__*/React.createElement("div", {
    className: "filter-card"
  }, /*#__PURE__*/React.createElement("div", {
    className: "heading",
    style: {
      alignItems: "center"
    }
  }, /*#__PURE__*/React.createElement("div", {
    className: "filter-label",
    style: {
      display: "flex",
      alignItems: "center"
    }
  }, /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement("svg", {
    width: "17",
    height: "17",
    viewBox: "0 0 22 22",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M0.66666 2.48016C3.35999 5.9335 8.33333 12.3335 8.33333 12.3335V20.3335C8.33333 21.0668 8.93333 21.6668 9.66666 21.6668H12.3333C13.0667 21.6668 13.6667 21.0668 13.6667 20.3335V12.3335C13.6667 12.3335 18.6267 5.9335 21.32 2.48016C22 1.60016 21.3733 0.333496 20.2667 0.333496H1.71999C0.613327 0.333496 -0.01334 1.60016 0.66666 2.48016Z",
    fill: "#505A5F"
  }))), /*#__PURE__*/React.createElement("span", {
    style: {
      marginLeft: "8px",
      fontWeight: "normal"
    }
  }, t("ES_COMMON_FILTER_BY"))), /*#__PURE__*/React.createElement("div", {
    className: "clearAll",
    onClick: clearAll
  }, t("ES_COMMON_CLEAR_ALL")), props.type === "desktop" && /*#__PURE__*/React.createElement("span", {
    className: "clear-search",
    onClick: clearAll,
    style: {
      border: "1px solid #e0e0e0",
      padding: "6px"
    }
  }, /*#__PURE__*/React.createElement("svg", {
    width: "17",
    height: "17",
    viewBox: "0 0 16 22",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M8 5V8L12 4L8 0V3C3.58 3 0 6.58 0 11C0 12.57 0.46 14.03 1.24 15.26L2.7 13.8C2.25 12.97 2 12.01 2 11C2 7.69 4.69 5 8 5ZM14.76 6.74L13.3 8.2C13.74 9.04 14 9.99 14 11C14 14.31 11.31 17 8 17V14L4 18L8 22V19C12.42 19 16 15.42 16 11C16 9.43 15.54 7.97 14.76 6.74Z",
    fill: "#505A5F"
  }))), props.type === "mobile" && /*#__PURE__*/React.createElement("span", {
    onClick: props.onClose
  }, /*#__PURE__*/React.createElement(CloseSvg, null))), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(RadioButtons, {
    onSelect: d => localParamChange({
      uuid: d
    }),
    selectedOption: (_searchParams === null || _searchParams === void 0 ? void 0 : _searchParams.uuid) || {
      code: "ASSIGNED_TO_ALL",
      name: "ES_INBOX_ASSIGNED_TO_ALL"
    },
    t: t,
    optionsKey: "name",
    options: [{
      code: "ASSIGNED_TO_ME",
      name: "ES_INBOX_ASSIGNED_TO_ME"
    }, {
      code: "ASSIGNED_TO_ALL",
      name: "ES_INBOX_ASSIGNED_TO_ALL"
    }]
  }), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
    className: "filter-label",
    style: {
      fontWeight: "normal"
    }
  }, t("ES_INBOX_LOCALITY"), ":"), /*#__PURE__*/React.createElement(Localities, {
    selectLocality: selectLocality,
    tenantId: tenantId,
    boundaryType: "revenue"
  }), /*#__PURE__*/React.createElement("div", {
    className: "tag-container"
  }, _searchParams === null || _searchParams === void 0 ? void 0 : (_searchParams$localit = _searchParams.locality) === null || _searchParams$localit === void 0 ? void 0 : _searchParams$localit.map((locality, index) => {
    return /*#__PURE__*/React.createElement(RemoveableTag, {
      key: index,
      text: t(`${locality.i18nkey}`),
      onClick: () => {
        localParamChange({
          locality: _searchParams === null || _searchParams === void 0 ? void 0 : _searchParams.locality.filter(loc => loc.code !== locality.code)
        });
      }
    });
  }))), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
    className: "filter-label",
    style: {
      fontWeight: "normal"
    }
  }, t("CS_INBOX_STATUS_FILTER")), statuses === null || statuses === void 0 ? void 0 : statuses.map((e, index) => {
    var _searchParams$applica;
    const checked = _searchParams === null || _searchParams === void 0 ? void 0 : (_searchParams$applica = _searchParams.applicationStatus) === null || _searchParams$applica === void 0 ? void 0 : _searchParams$applica.includes(e.statusid);
    return /*#__PURE__*/React.createElement(CheckBox, {
      key: index + "service",
      label: t(`CS_COMMON_INBOX_${e.businessservice.toUpperCase()}`) + " - " + t(`WF_NEWTL_${e.applicationstatus}`) + " " + `(${e.count})`,
      value: e.statusid,
      checked: checked,
      onChange: event => onServiceSelect(event, e.statusid)
    });
  })), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(SubmitBar, {
    disabled: lodash.isEqual(_searchParams, searchParams),
    onSubmit: () => onFilterChange(_searchParams),
    label: t("ES_COMMON_APPLY")
  }))))));
};

const newConfig = [{
  head: "",
  body: [{
    type: "component",
    component: "TLInfoLabel",
    key: "tradedetils1",
    withoutLabel: true,
    hideInCitizen: true
  }]
}, {
  head: "TL_COMMON_TR_DETAILS",
  body: [{
    type: "component",
    component: "TLTradeDetailsEmployee",
    key: "tradedetils",
    withoutLabel: true,
    hideInCitizen: true
  }]
}, {
  head: "TL_TRADE_UNITS_HEADER",
  body: [{
    type: "component",
    component: "TLTradeUnitsEmployee",
    key: "tradeUnits",
    withoutLabel: true,
    hideInCitizen: true
  }]
}, {
  head: "TL_NEW_TRADE_DETAILS_HEADER_ACC",
  body: [{
    type: "component",
    component: "TLAccessoriesEmployee",
    key: "accessories",
    withoutLabel: true,
    hideInCitizen: true
  }]
}, {
  head: "TL_NEW_APPLICATION_PROPERTY",
  body: [{
    component: "CPTPropertySearchNSummary",
    withoutLabel: true,
    key: "cpt",
    type: "component",
    hideInCitizen: true
  }]
}, {
  "head": "ES_NEW_APPLICATION_LOCATION_DETAILS",
  "body": [{
    "route": "map",
    component: "TLSelectGeolocation",
    nextStep: "pincode",
    hideInEmployee: true,
    key: "address",
    withoutLabel: true,
    texts: {
      header: "TL_GEOLOACTION_HEADER",
      cardText: "TL_GEOLOCATION_TEXT",
      nextText: "CS_COMMON_NEXT",
      skipAndContinueText: "CORE_COMMON_SKIP_CONTINUE"
    }
  }, {
    route: "pincode",
    component: "TLSelectPincode",
    texts: {
      "headerCaption": "TL_LOCATION_CAPTION",
      "header": "TL_PINCODE_HEADER",
      "cardText": "TL_PINCODE_TEXT",
      "submitBarLabel": "CS_COMMON_NEXT",
      "skipText": "CORE_COMMON_SKIP_CONTINUE"
    },
    withoutLabel: true,
    key: "address",
    nextStep: "address",
    type: "component"
  }, {
    "route": "address",
    "component": "TLSelectAddress",
    "withoutLabel": true,
    "texts": {
      "headerCaption": "TL_LOCATION_CAPTION",
      "header": "TL_ADDRESS_HEADER",
      "cardText": "TL_ADDRESS_TEXT",
      "submitBarLabel": "CS_COMMON_NEXT"
    },
    "key": "address",
    "nextStep": "street",
    "isMandatory": true,
    "type": "component"
  }, {
    "type": "component",
    "route": "street",
    "component": "TLSelectStreet",
    "key": "address",
    "withoutLabel": true,
    "hideInEmployee": true,
    "texts": {
      "headerCaption": "TL_LOCATION_CAPTION",
      "header": "TL_ADDRESS_HEADER",
      "cardText": "TL_STREET_TEXT",
      "submitBarLabel": "CS_COMMON_NEXT"
    },
    "inputs": [{
      "label": "TL_LOCALIZATION_STREET_NAME",
      "type": "text",
      "name": "street",
      "disable": "window.location.href.includes(`edit-application`)||window.location.href.includes(`renew-trade`)"
    }, {
      "label": "TL_LOCALIZATION_BUILDING_NO",
      "type": "text",
      "name": "doorNo",
      "disable": "window.location.href.includes(`edit-application`)||window.location.href.includes(`renew-trade`)"
    }],
    "nextStep": "landmark"
  }, {
    "type": "component",
    "component": "TLSelectStreet",
    "key": "address",
    "withoutLabel": true,
    "hideInCitizen": true,
    "texts": {
      "headerCaption": "TL_LOCATION_CAPTION",
      "header": "TL_ADDRESS_HEADER",
      "cardText": "TL_STREET_TEXT",
      "submitBarLabel": "CS_COMMON_NEXT"
    },
    "inputs": [{
      "label": "TL_LOCALIZATION_BUILDING_NO",
      "type": "text",
      "name": "doorNo"
    }, {
      "label": "TL_LOCALIZATION_STREET_NAME",
      "type": "text",
      "name": "street"
    }]
  }, {
    "type": "component",
    "route": "landmark",
    "component": "TLSelectLandmark",
    "withoutLabel": true,
    "texts": {
      "headerCaption": "TL_LOCATION_CAPTION",
      "header": "CS_FILE_APPLICATION_PROPERTY_LOCATION_PROVIDE_LANDMARK_TITLE",
      "cardText": "TL_LANDMARK_TEXT",
      "submitBarLabel": "CS_COMMON_NEXT",
      "skipText": "CORE_COMMON_SKIP_CONTINUE"
    },
    "key": "address",
    "nextStep": "owner-ship-details",
    "hideInEmployee": true
  }, {
    "type": "component",
    "route": "proof",
    "component": "Proof",
    "withoutLabel": true,
    "texts": {
      "headerCaption": "TL_OWNERS_DETAILS",
      "header": "TL_OWNERS_PHOTOGRAPH_HEADER",
      "cardText": "",
      "nextText": "CS_COMMON_NEXT",
      "submitBarLabel": "CS_COMMON_NEXT"
    },
    "key": "owners",
    "nextStep": null,
    "hideInEmployee": true
  }]
}, {
  head: "ES_NEW_APPLICATION_PROPERTY_ASSESSMENT",
  body: [{
    route: "info",
    component: "TradeLicense",
    nextStep: "TradeName",
    hideInEmployee: true,
    key: "tl"
  }, {
    route: "TradeName",
    component: "SelectTradeName",
    texts: {
      headerCaption: "",
      header: "TL_TRADE_NAME_HEADER",
      cardText: "TL_TARDE_NAME_TEXT",
      submitBarLabel: "CS_COMMON_NEXT",
      skipText: ""
    },
    withoutLabel: true,
    key: "TradeDetails",
    nextStep: "structure-type",
    type: "component",
    hideInEmployee: true
  }, {
    type: "component",
    route: "structure-type",
    isMandatory: true,
    component: "SelectStructureType",
    texts: {
      headerCaption: "TL_STRUCTURE_TYPE",
      header: "TL_STRUCTURE_TYPE_HEADER",
      cardText: "TL_STRUCTURE_TYPE_TEXT",
      submitBarLabel: "CS_COMMON_NEXT"
    },
    key: "TradeDetails",
    withoutLabel: true,
    hideInEmployee: true,
    nextStep: {
      "TL_COMMON_YES": "Building-type",
      "TL_COMMON_NO": "vehicle-type"
    }
  }, {
    type: "component",
    route: "vehicle-type",
    isMandatory: true,
    component: "SelectVehicleType",
    texts: {
      headerCaption: "TL_STRUCTURE_SUBTYPE_CAPTION",
      header: "TL_VEHICLE_TYPE_HEADER",
      cardText: "TL_VEHICLE_TYPE_TEXT",
      submitBarLabel: "CS_COMMON_NEXT"
    },
    key: "TradeDetails",
    withoutLabel: true,
    hideInEmployee: true,
    nextStep: "commencement-date"
  }, {
    type: "component",
    route: "Building-type",
    isMandatory: true,
    component: "SelectBuildingType",
    texts: {
      headerCaption: "TL_STRUCTURE_SUBTYPE_CAPTION",
      header: "TL_BUILDING_TYPE_HEADER",
      cardText: "TL_BUILDING_TYPE_TEXT",
      submitBarLabel: "CS_COMMON_NEXT"
    },
    key: "TradeDetails",
    withoutLabel: true,
    hideInEmployee: true,
    nextStep: "commencement-date"
  }, {
    type: "component",
    route: "commencement-date",
    isMandatory: true,
    component: "SelectCommencementDate",
    texts: {
      headerCaption: "",
      header: "TL_NEW_TRADE_DETAILS_TRADE_COMM_DATE_LABEL",
      cardText: "TL_TRADE_COMM_DATE_TEXT",
      submitBarLabel: "CS_COMMON_NEXT"
    },
    key: "TradeDetails",
    withoutLabel: true,
    hideInEmployee: true,
    nextStep: "units-details"
  }, {
    isMandatory: true,
    type: "component",
    route: "units-details",
    key: "TradeDetails",
    component: "SelectTradeUnits",
    texts: {
      headerCaption: "",
      header: "TL_TRADE_UNITS_HEADER",
      cardText: "TL_TRADE_UNITS_TEXT",
      submitBarLabel: "CS_COMMON_NEXT"
    },
    withoutLabel: true,
    nextStep: "isAccessories",
    hideInEmployee: true
  }, {
    type: "component",
    route: "isAccessories",
    isMandatory: true,
    component: "SelectAccessories",
    texts: {
      headerCaption: "",
      header: "TL_ISACCESSORIES_HEADER",
      cardText: "TL_ISACCESSORIES_TEXT",
      submitBarLabel: "CS_COMMON_NEXT"
    },
    key: "TradeDetails",
    withoutLabel: true,
    hideInEmployee: true,
    nextStep: {
      TL_COMMON_YES: "accessories-details",
      TL_COMMON_NO: "other-trade-details"
    }
  }, {
    isMandatory: true,
    type: "component",
    route: "accessories-details",
    key: "TradeDetails",
    component: "SelectAccessoriesDetails",
    texts: {
      headerCaption: "",
      header: "TL_TRADE_ACCESSORIES_HEADER",
      cardText: "TL_TRADE_ACCESSORIES_TEXT",
      submitBarLabel: "CS_COMMON_NEXT"
    },
    withoutLabel: true,
    nextStep: "other-trade-details",
    hideInEmployee: true
  }, {
    isMandatory: true,
    type: "component",
    route: "other-trade-details",
    key: "TradeDetails",
    component: "SelectOtherTradeDetails",
    texts: {
      headerCaption: "",
      header: "TL_OTHER_TRADE_DETAILS_HEADER",
      cardText: "",
      submitBarLabel: "CS_COMMON_NEXT",
      skipText: "CORE_COMMON_SKIP_CONTINUE"
    },
    withoutLabel: true,
    nextStep: "know-your-property",
    hideInEmployee: true
  }]
}, {
  head: "ES_NEW_APPLICATION_OWNERSHIP_DETAILS",
  body: [{
    type: "component",
    route: "owner-ship-details",
    isMandatory: true,
    component: "SelectOwnerShipDetails",
    texts: {
      headerCaption: "TL_TRADE_OWNERSHIP_CAPTION",
      header: "TL_PROVIDE_OWNERSHIP_DETAILS",
      cardText: "TL_PROVIDE_OWNERSHI_DETAILS_SUB_TEXT",
      submitBarLabel: "CS_COMMON_NEXT"
    },
    key: "ownershipCategory",
    withoutLabel: true,
    nextStep: "owner-details"
  }, {
    isMandatory: true,
    type: "component",
    route: "owner-details",
    key: "owners",
    component: "SelectOwnerDetails",
    texts: {
      headerCaption: "",
      header: "TL_OWNERSHIP_INFO_SUB_HEADER",
      cardText: "TL_OWNER_DETAILS_TEXT",
      submitBarLabel: "CS_COMMON_NEXT"
    },
    withoutLabel: true,
    nextStep: "owner-address",
    hideInEmployee: true
  }, {
    type: "component",
    route: "owner-address",
    isMandatory: true,
    component: "TLSelectOwnerAddress",
    texts: {
      headerCaption: "TL_OWNERS_DETAILS",
      header: "TL_OWNERS_ADDRESS",
      cardText: "",
      submitBarLabel: "CS_COMMON_NEXT"
    },
    key: "owners",
    withoutLabel: true,
    nextStep: "proof-of-identity",
    hideInEmployee: true
  }, {
    type: "component",
    route: "proof-of-identity",
    isMandatory: true,
    component: "SelectProofIdentity",
    texts: {
      headerCaption: "TL_OWNERS_DETAILS",
      header: "TL_PROOF_IDENTITY_HEADER",
      cardText: "",
      submitBarLabel: "CS_COMMON_NEXT",
      addMultipleText: "PT_COMMON_ADD_APPLICANT_LABEL"
    },
    key: "owners",
    withoutLabel: true,
    nextStep: "ownership-proof",
    hideInEmployee: true
  }, {
    type: "component",
    route: "ownership-proof",
    isMandatory: true,
    component: "SelectOwnershipProof",
    texts: {
      headerCaption: "TL_OWNERS_DETAILS",
      header: "TL_OWNERSHIP_DOCUMENT",
      cardText: "",
      submitBarLabel: "CS_COMMON_NEXT"
    },
    key: "owners",
    withoutLabel: true,
    nextStep: "proof",
    hideInEmployee: true
  }, {
    type: "component",
    component: "TLOwnerDetailsEmployee",
    key: "owners",
    withoutLabel: true,
    hideInCitizen: true
  }]
}, {
  head: "",
  body: [{
    type: "component",
    route: "know-your-property",
    isMandatory: true,
    component: "CPTKnowYourProperty",
    texts: {
      header: "PT_DO_YOU_KNOW_YOUR_PROPERTY",
      submitBarLabel: "CS_COMMON_NEXT"
    },
    key: "knowyourproperty",
    isCreateEnabled: true,
    withoutLabel: true,
    nextStep: {
      TL_COMMON_YES: "search-property",
      TL_COMMON_NO: "create-property"
    },
    hideInEmployee: true
  }, {
    type: "component",
    route: "search-property",
    isMandatory: true,
    component: "CPTSearchProperty",
    key: "cptsearchproperty",
    withoutLabel: true,
    nextStep: 'search-results',
    hideInEmployee: true
  }, {
    type: "component",
    route: "search-results",
    isMandatory: true,
    component: "CPTSearchResults",
    key: "cptsearchresults",
    withoutLabel: true,
    nextStep: 'property-details',
    hideInEmployee: true
  }, {
    type: "component",
    route: "create-property",
    isMandatory: true,
    component: "CPTCreateProperty",
    key: "cptcreateproperty",
    withoutLabel: true,
    isSkipEnabled: true,
    nextStep: 'acknowledge-create-property',
    hideInEmployee: true
  }, {
    type: "component",
    route: "acknowledge-create-property",
    isMandatory: true,
    component: "CPTAcknowledgement",
    key: "cptacknowledgement",
    withoutLabel: true,
    nextStep: 'property-details',
    hideInEmployee: true
  }, {
    type: "component",
    route: "property-details",
    isMandatory: true,
    component: "CPTPropertyDetails",
    key: "propertydetails",
    withoutLabel: true,
    nextStep: 'owner-ship-details',
    hideInEmployee: true
  }]
}, {
  head: "TL_NEW_APPLICATION_DOCUMENTS_REQUIRED",
  body: [{
    component: "TLDocumentsEmployee",
    withoutLabel: true,
    key: "documents",
    type: "component",
    hideInCitizen: true
  }]
}];

const NewApplication = () => {
  var _newConfig;
  let tenantId = Digit.ULBService.getCurrentTenantId() || Digit.ULBService.getCitizenCurrentTenant();
  const tenants = Digit.Hooks.tl.useTenants();
  const {
    t
  } = useTranslation();
  const [canSubmit, setSubmitValve] = useState(false);
  const history = useHistory();
  const [propertyId, setPropertyId] = useState(new URLSearchParams(useLocation().search).get("propertyId"));
  const isEmpNewApplication = window.location.href.includes("/employee/tl/new-application");
  const isEmpRenewLicense = window.location.href.includes("/employee/tl/renew-application-details") || window.location.href.includes("/employee/tl/edit-application-details");
  const [sessionFormData, setSessionFormData, clearSessionFormData] = Digit.Hooks.useSessionStorage("PT_CREATE_EMP_TRADE_NEW_FORM", {});
  const [mutationHappened, setMutationHappened, clear] = Digit.Hooks.useSessionStorage("EMPLOYEE_MUTATION_HAPPENED", false);
  const [successData, setsuccessData, clearSuccessData] = Digit.Hooks.useSessionStorage("EMPLOYEE_MUTATION_SUCCESS_DATA", {});
  const [showToast, setShowToast] = useState(null);
  const [error, setError] = useState(null);
  const stateId = Digit.ULBService.getStateId();
  let {
    data: newConfig$1,
    isLoading
  } = Digit.Hooks.tl.useMDMS.getFormConfig(stateId, {});
  const {
    data: propertyDetails
  } = Digit.Hooks.pt.usePropertySearch({
    filters: {
      propertyIds: propertyId
    },
    tenantId: tenantId
  }, {
    filters: {
      propertyIds: propertyId
    },
    tenantId: tenantId,
    enabled: propertyId ? true : false
  });
  useEffect(() => {
    var _sessionFormData$cpt, _sessionFormData$cpt$;
    !propertyId && setPropertyId(sessionFormData === null || sessionFormData === void 0 ? void 0 : (_sessionFormData$cpt = sessionFormData.cpt) === null || _sessionFormData$cpt === void 0 ? void 0 : (_sessionFormData$cpt$ = _sessionFormData$cpt.details) === null || _sessionFormData$cpt$ === void 0 ? void 0 : _sessionFormData$cpt$.propertyId);
  }, [sessionFormData === null || sessionFormData === void 0 ? void 0 : sessionFormData.cpt]);
  const closeToast = () => {
    setShowToast(null);
    setError(null);
  };
  useEffect(() => {
    if (sessionStorage.getItem("isCreateEnabledEmployee") === "true") {
      sessionStorage.removeItem("isCreateEnabledEmployee");
      history.replace("/employee");
    } else sessionStorage.removeItem("isCreateEnabledEmployee");
  });
  useEffect(() => {
    setMutationHappened(false);
    clearSuccessData();
  }, []);
  function checkforownerPresent(formData) {
    if (formData !== null && formData !== void 0 && formData.owners) {
      var _formData$owners;
      formData === null || formData === void 0 ? void 0 : (_formData$owners = formData.owners) === null || _formData$owners === void 0 ? void 0 : _formData$owners.map(ob => {
        var _ob$relationship, _ob$gender;
        if (!(ob !== null && ob !== void 0 && ob.name) || !ob.mobileNumber || !(ob !== null && ob !== void 0 && ob.fatherOrHusbandName) || !(ob !== null && ob !== void 0 && (_ob$relationship = ob.relationship) !== null && _ob$relationship !== void 0 && _ob$relationship.code) || ob !== null && ob !== void 0 && (_ob$gender = ob.gender) !== null && _ob$gender !== void 0 && _ob$gender.code) {
          return true;
        }
      });
      return false;
    }
  }
  const onFormValueChange = (setValue, formData, formState) => {
    if (!lodash.isEqual(sessionFormData, formData)) {
      setSessionFormData({
        ...sessionFormData,
        ...formData
      });
    }
    if (checkforownerPresent(formData)) {
      setSubmitValve(false);
    } else if (Object.keys(formState.errors).length > 0 && Object.keys(formState.errors).length == 1 && formState.errors["owners"] && Object.entries(formState.errors["owners"].type).filter(ob => (ob === null || ob === void 0 ? void 0 : ob[1].type) === "required").length == 0) {
      setSubmitValve(true);
    } else {
      setSubmitValve(!Object.keys(formState.errors).length);
    }
  };
  const onSubmit = data => {
    var _data$cpt, _data$address2, _data$accessories, _data$tradeUnits, _data$cpt3, _data$cpt3$details, _data$owners, _data$documents, _data$tradedetils, _data$tradedetils$, _data$tradedetils2, _data$tradedetils2$, _data$tradedetils2$$f, _data$tradedetils3, _data$tradedetils3$, _data$tradedetils4, _data$tradedetils4$, _data$tradedetils5, _data$tradedetils5$, _data$tradedetils6, _data$tradedetils6$, _data$tradedetils6$$s, _data$tradedetils7, _data$tradedetils7$, _data$ownershipCatego2, _data$tradedetils8, _data$tradedetils8$, _data$tradedetils8$$l, _data$ownershipCatego3, _data$ownershipCatego4, _data$owners2, _data$owners3, _data$owners4, _data$owners4$, _data$owners5, _data$owners6, _data$owners6$, _data$owners7, _data$owners8, _data$owners8$, _data$owners9, _data$owners10, _data$owners10$, _Digit, _Digit$Customizations, _Digit$Customizations2, _Digit2, _Digit2$Customization, _Digit2$Customization2;
    let isSameAsPropertyOwner = sessionStorage.getItem("isSameAsPropertyOwner");
    if (data !== null && data !== void 0 && (_data$cpt = data.cpt) !== null && _data$cpt !== void 0 && _data$cpt.id) {
      var _data$cpt2;
      if (!(data !== null && data !== void 0 && (_data$cpt2 = data.cpt) !== null && _data$cpt2 !== void 0 && _data$cpt2.details) || !propertyDetails) {
        setShowToast({
          key: "error"
        });
        setError(t("ERR_INVALID_PROPERTY_ID"));
        return;
      }
    }
    const foundValue = tenants === null || tenants === void 0 ? void 0 : tenants.find(obj => {
      var _obj$pincode;
      return (_obj$pincode = obj.pincode) === null || _obj$pincode === void 0 ? void 0 : _obj$pincode.find(item => {
        var _data$address;
        return item.toString() === (data === null || data === void 0 ? void 0 : (_data$address = data.address) === null || _data$address === void 0 ? void 0 : _data$address.pincode);
      });
    });
    if (!foundValue && data !== null && data !== void 0 && (_data$address2 = data.address) !== null && _data$address2 !== void 0 && _data$address2.pincode) {
      setShowToast({
        key: "error"
      });
      setError(t("TL_COMMON_PINCODE_NOT_SERVICABLE"));
      return;
    }
    let accessories = [];
    if ((data === null || data === void 0 ? void 0 : (_data$accessories = data.accessories) === null || _data$accessories === void 0 ? void 0 : _data$accessories.length) > 0) {
      data === null || data === void 0 ? void 0 : data.accessories.map(data => {
        var _data$accessoryCatego;
        if (data !== null && data !== void 0 && (_data$accessoryCatego = data.accessoryCategory) !== null && _data$accessoryCatego !== void 0 && _data$accessoryCatego.code) {
          var _data$accessoryCatego2, _data$accessoryCatego3;
          accessories.push({
            accessoryCategory: (data === null || data === void 0 ? void 0 : (_data$accessoryCatego2 = data.accessoryCategory) === null || _data$accessoryCatego2 === void 0 ? void 0 : _data$accessoryCatego2.code) || null,
            uom: (data === null || data === void 0 ? void 0 : (_data$accessoryCatego3 = data.accessoryCategory) === null || _data$accessoryCatego3 === void 0 ? void 0 : _data$accessoryCatego3.uom) || null,
            count: Number(data === null || data === void 0 ? void 0 : data.count) || null,
            uomValue: Number(data === null || data === void 0 ? void 0 : data.uomValue) || null
          });
        }
      });
    }
    let tradeUnits = [];
    if ((data === null || data === void 0 ? void 0 : (_data$tradeUnits = data.tradeUnits) === null || _data$tradeUnits === void 0 ? void 0 : _data$tradeUnits.length) > 0) {
      data === null || data === void 0 ? void 0 : data.tradeUnits.map(data => {
        var _data$tradeSubType, _data$tradeSubType2;
        tradeUnits.push({
          tradeType: (data === null || data === void 0 ? void 0 : (_data$tradeSubType = data.tradeSubType) === null || _data$tradeSubType === void 0 ? void 0 : _data$tradeSubType.code) || null,
          uom: (data === null || data === void 0 ? void 0 : (_data$tradeSubType2 = data.tradeSubType) === null || _data$tradeSubType2 === void 0 ? void 0 : _data$tradeSubType2.uom) || null,
          uomValue: Number(data === null || data === void 0 ? void 0 : data.uomValue) || null
        });
      });
    }
    let address = {};
    if (data !== null && data !== void 0 && (_data$cpt3 = data.cpt) !== null && _data$cpt3 !== void 0 && (_data$cpt3$details = _data$cpt3.details) !== null && _data$cpt3$details !== void 0 && _data$cpt3$details.address) {
      var _data$cpt4, _data$cpt4$details, _data$cpt4$details$ad, _data$cpt5, _data$cpt5$details, _data$cpt5$details$ad, _data$cpt5$details$ad2, _data$cpt6, _data$cpt6$details, _data$cpt6$details$ad, _data$address3, _data$cpt7, _data$cpt7$details, _data$cpt7$details$ad, _data$address4, _data$cpt8, _data$cpt8$details, _data$cpt8$details$ad, _data$address5, _data$cpt9, _data$cpt9$details, _data$cpt9$details$ad, _data$address6, _data$cpt10, _data$cpt10$details, _data$cpt10$details$a, _data$cpt11, _data$cpt11$details, _data$cpt11$details$a;
      address.city = (data === null || data === void 0 ? void 0 : (_data$cpt4 = data.cpt) === null || _data$cpt4 === void 0 ? void 0 : (_data$cpt4$details = _data$cpt4.details) === null || _data$cpt4$details === void 0 ? void 0 : (_data$cpt4$details$ad = _data$cpt4$details.address) === null || _data$cpt4$details$ad === void 0 ? void 0 : _data$cpt4$details$ad.city) || null;
      address.locality = {
        code: (data === null || data === void 0 ? void 0 : (_data$cpt5 = data.cpt) === null || _data$cpt5 === void 0 ? void 0 : (_data$cpt5$details = _data$cpt5.details) === null || _data$cpt5$details === void 0 ? void 0 : (_data$cpt5$details$ad = _data$cpt5$details.address) === null || _data$cpt5$details$ad === void 0 ? void 0 : (_data$cpt5$details$ad2 = _data$cpt5$details$ad.locality) === null || _data$cpt5$details$ad2 === void 0 ? void 0 : _data$cpt5$details$ad2.code) || null
      };
      if (data !== null && data !== void 0 && (_data$cpt6 = data.cpt) !== null && _data$cpt6 !== void 0 && (_data$cpt6$details = _data$cpt6.details) !== null && _data$cpt6$details !== void 0 && (_data$cpt6$details$ad = _data$cpt6$details.address) !== null && _data$cpt6$details$ad !== void 0 && _data$cpt6$details$ad.doorNo || data !== null && data !== void 0 && (_data$address3 = data.address) !== null && _data$address3 !== void 0 && _data$address3.doorNo) address.doorNo = (data === null || data === void 0 ? void 0 : (_data$cpt7 = data.cpt) === null || _data$cpt7 === void 0 ? void 0 : (_data$cpt7$details = _data$cpt7.details) === null || _data$cpt7$details === void 0 ? void 0 : (_data$cpt7$details$ad = _data$cpt7$details.address) === null || _data$cpt7$details$ad === void 0 ? void 0 : _data$cpt7$details$ad.doorNo) || (data === null || data === void 0 ? void 0 : (_data$address4 = data.address) === null || _data$address4 === void 0 ? void 0 : _data$address4.doorNo) || null;
      if (data !== null && data !== void 0 && (_data$cpt8 = data.cpt) !== null && _data$cpt8 !== void 0 && (_data$cpt8$details = _data$cpt8.details) !== null && _data$cpt8$details !== void 0 && (_data$cpt8$details$ad = _data$cpt8$details.address) !== null && _data$cpt8$details$ad !== void 0 && _data$cpt8$details$ad.street || data !== null && data !== void 0 && (_data$address5 = data.address) !== null && _data$address5 !== void 0 && _data$address5.street) address.street = (data === null || data === void 0 ? void 0 : (_data$cpt9 = data.cpt) === null || _data$cpt9 === void 0 ? void 0 : (_data$cpt9$details = _data$cpt9.details) === null || _data$cpt9$details === void 0 ? void 0 : (_data$cpt9$details$ad = _data$cpt9$details.address) === null || _data$cpt9$details$ad === void 0 ? void 0 : _data$cpt9$details$ad.street) || (data === null || data === void 0 ? void 0 : (_data$address6 = data.address) === null || _data$address6 === void 0 ? void 0 : _data$address6.street) || null;
      if (data !== null && data !== void 0 && (_data$cpt10 = data.cpt) !== null && _data$cpt10 !== void 0 && (_data$cpt10$details = _data$cpt10.details) !== null && _data$cpt10$details !== void 0 && (_data$cpt10$details$a = _data$cpt10$details.address) !== null && _data$cpt10$details$a !== void 0 && _data$cpt10$details$a.pincode) address.pincode = data === null || data === void 0 ? void 0 : (_data$cpt11 = data.cpt) === null || _data$cpt11 === void 0 ? void 0 : (_data$cpt11$details = _data$cpt11.details) === null || _data$cpt11$details === void 0 ? void 0 : (_data$cpt11$details$a = _data$cpt11$details.address) === null || _data$cpt11$details$a === void 0 ? void 0 : _data$cpt11$details$a.pincode;
    } else if (data !== null && data !== void 0 && data.address) {
      var _data$address7, _data$address7$city, _data$address8, _data$address8$locali, _data$address9, _data$address10, _data$address11, _data$address12, _data$address13, _data$address14;
      address.city = (data === null || data === void 0 ? void 0 : (_data$address7 = data.address) === null || _data$address7 === void 0 ? void 0 : (_data$address7$city = _data$address7.city) === null || _data$address7$city === void 0 ? void 0 : _data$address7$city.code) || null;
      address.locality = {
        code: (data === null || data === void 0 ? void 0 : (_data$address8 = data.address) === null || _data$address8 === void 0 ? void 0 : (_data$address8$locali = _data$address8.locality) === null || _data$address8$locali === void 0 ? void 0 : _data$address8$locali.code) || null
      };
      if (data !== null && data !== void 0 && (_data$address9 = data.address) !== null && _data$address9 !== void 0 && _data$address9.doorNo) address.doorNo = (data === null || data === void 0 ? void 0 : (_data$address10 = data.address) === null || _data$address10 === void 0 ? void 0 : _data$address10.doorNo) || null;
      if (data !== null && data !== void 0 && (_data$address11 = data.address) !== null && _data$address11 !== void 0 && _data$address11.street) address.street = (data === null || data === void 0 ? void 0 : (_data$address12 = data.address) === null || _data$address12 === void 0 ? void 0 : _data$address12.street) || null;
      if (data !== null && data !== void 0 && (_data$address13 = data.address) !== null && _data$address13 !== void 0 && _data$address13.pincode) address.pincode = data === null || data === void 0 ? void 0 : (_data$address14 = data.address) === null || _data$address14 === void 0 ? void 0 : _data$address14.pincode;
    }
    let owners = [];
    if ((data === null || data === void 0 ? void 0 : (_data$owners = data.owners) === null || _data$owners === void 0 ? void 0 : _data$owners.length) > 0) {
      data === null || data === void 0 ? void 0 : data.owners.map(data => {
        var _data$gender, _data$gender2, _data$ownershipCatego, _data$relationship, _data$ownerType, _data$ownerType2;
        let obj = {};
        obj.dob = data !== null && data !== void 0 && data.dob ? convertDateToEpoch(data === null || data === void 0 ? void 0 : data.dob) : null;
        if (data !== null && data !== void 0 && data.fatherOrHusbandName) obj.fatherOrHusbandName = data === null || data === void 0 ? void 0 : data.fatherOrHusbandName;
        if (data !== null && data !== void 0 && (_data$gender = data.gender) !== null && _data$gender !== void 0 && _data$gender.code) obj.gender = data === null || data === void 0 ? void 0 : (_data$gender2 = data.gender) === null || _data$gender2 === void 0 ? void 0 : _data$gender2.code;
        if (data !== null && data !== void 0 && data.mobileNumber) obj.mobileNumber = Number(data === null || data === void 0 ? void 0 : data.mobileNumber);
        if (data !== null && data !== void 0 && data.name) obj.name = !(data !== null && data !== void 0 && (_data$ownershipCatego = data.ownershipCategory) !== null && _data$ownershipCatego !== void 0 && _data$ownershipCatego.code.includes("INSTITUTIONAL")) ? data === null || data === void 0 ? void 0 : data.name : "";
        if (data !== null && data !== void 0 && data.permanentAddress) obj.permanentAddress = data === null || data === void 0 ? void 0 : data.permanentAddress;
        obj.permanentAddress = obj.permanentAddress ? obj.permanentAddress : null;
        if (data !== null && data !== void 0 && data.relationship) obj.relationship = data === null || data === void 0 ? void 0 : (_data$relationship = data.relationship) === null || _data$relationship === void 0 ? void 0 : _data$relationship.code;
        if (data !== null && data !== void 0 && data.emailId) obj.emailId = data === null || data === void 0 ? void 0 : data.emailId;
        if (data !== null && data !== void 0 && (_data$ownerType = data.ownerType) !== null && _data$ownerType !== void 0 && _data$ownerType.code) obj.ownerType = data === null || data === void 0 ? void 0 : (_data$ownerType2 = data.ownerType) === null || _data$ownerType2 === void 0 ? void 0 : _data$ownerType2.code;
        owners.push(obj);
      });
    }
    let applicationDocuments = (data === null || data === void 0 ? void 0 : (_data$documents = data.documents) === null || _data$documents === void 0 ? void 0 : _data$documents.documents) || [];
    let commencementDate = convertDateToEpoch(data === null || data === void 0 ? void 0 : (_data$tradedetils = data.tradedetils) === null || _data$tradedetils === void 0 ? void 0 : (_data$tradedetils$ = _data$tradedetils["0"]) === null || _data$tradedetils$ === void 0 ? void 0 : _data$tradedetils$.commencementDate);
    let financialYear = data === null || data === void 0 ? void 0 : (_data$tradedetils2 = data.tradedetils) === null || _data$tradedetils2 === void 0 ? void 0 : (_data$tradedetils2$ = _data$tradedetils2["0"]) === null || _data$tradedetils2$ === void 0 ? void 0 : (_data$tradedetils2$$f = _data$tradedetils2$.financialYear) === null || _data$tradedetils2$$f === void 0 ? void 0 : _data$tradedetils2$$f.code;
    let gstNo = (data === null || data === void 0 ? void 0 : (_data$tradedetils3 = data.tradedetils) === null || _data$tradedetils3 === void 0 ? void 0 : (_data$tradedetils3$ = _data$tradedetils3["0"]) === null || _data$tradedetils3$ === void 0 ? void 0 : _data$tradedetils3$.gstNo) || "";
    let noOfEmployees = Number(data === null || data === void 0 ? void 0 : (_data$tradedetils4 = data.tradedetils) === null || _data$tradedetils4 === void 0 ? void 0 : (_data$tradedetils4$ = _data$tradedetils4["0"]) === null || _data$tradedetils4$ === void 0 ? void 0 : _data$tradedetils4$.noOfEmployees) || "";
    let operationalArea = Number(data === null || data === void 0 ? void 0 : (_data$tradedetils5 = data.tradedetils) === null || _data$tradedetils5 === void 0 ? void 0 : (_data$tradedetils5$ = _data$tradedetils5["0"]) === null || _data$tradedetils5$ === void 0 ? void 0 : _data$tradedetils5$.operationalArea) || "";
    let structureType = (data === null || data === void 0 ? void 0 : (_data$tradedetils6 = data.tradedetils) === null || _data$tradedetils6 === void 0 ? void 0 : (_data$tradedetils6$ = _data$tradedetils6["0"]) === null || _data$tradedetils6$ === void 0 ? void 0 : (_data$tradedetils6$$s = _data$tradedetils6$.structureSubType) === null || _data$tradedetils6$$s === void 0 ? void 0 : _data$tradedetils6$$s.code) || "";
    let tradeName = (data === null || data === void 0 ? void 0 : (_data$tradedetils7 = data.tradedetils) === null || _data$tradedetils7 === void 0 ? void 0 : (_data$tradedetils7$ = _data$tradedetils7["0"]) === null || _data$tradedetils7$ === void 0 ? void 0 : _data$tradedetils7$.tradeName) || "";
    let subOwnerShipCategory = (data === null || data === void 0 ? void 0 : (_data$ownershipCatego2 = data.ownershipCategory) === null || _data$ownershipCatego2 === void 0 ? void 0 : _data$ownershipCatego2.code) || "";
    let licenseType = (data === null || data === void 0 ? void 0 : (_data$tradedetils8 = data.tradedetils) === null || _data$tradedetils8 === void 0 ? void 0 : (_data$tradedetils8$ = _data$tradedetils8["0"]) === null || _data$tradedetils8$ === void 0 ? void 0 : (_data$tradedetils8$$l = _data$tradedetils8$.licenseType) === null || _data$tradedetils8$$l === void 0 ? void 0 : _data$tradedetils8$$l.code) || "PERMANENT";
    let formData = {
      action: "INITIATE",
      applicationType: "NEW",
      workflowCode: "NewTL",
      commencementDate,
      financialYear,
      licenseType,
      tenantId,
      tradeName,
      wfDocuments: [],
      tradeLicenseDetail: {
        channel: "COUNTER",
        additionalDetail: {}
      }
    };
    if (gstNo) formData.tradeLicenseDetail.additionalDetail.gstNo = gstNo;
    if (noOfEmployees) formData.tradeLicenseDetail.noOfEmployees = noOfEmployees;
    if (operationalArea) formData.tradeLicenseDetail.operationalArea = operationalArea;
    if ((accessories === null || accessories === void 0 ? void 0 : accessories.length) > 0) formData.tradeLicenseDetail.accessories = accessories;
    if ((tradeUnits === null || tradeUnits === void 0 ? void 0 : tradeUnits.length) > 0) formData.tradeLicenseDetail.tradeUnits = tradeUnits;
    if ((owners === null || owners === void 0 ? void 0 : owners.length) > 0) formData.tradeLicenseDetail.owners = owners;
    if (address) formData.tradeLicenseDetail.address = address;
    if (structureType) formData.tradeLicenseDetail.structureType = structureType;
    if (data !== null && data !== void 0 && (_data$ownershipCatego3 = data.ownershipCategory) !== null && _data$ownershipCatego3 !== void 0 && _data$ownershipCatego3.code.includes("INDIVIDUAL")) formData.tradeLicenseDetail.subOwnerShipCategory = data === null || data === void 0 ? void 0 : (_data$ownershipCatego4 = data.ownershipCategory) === null || _data$ownershipCatego4 === void 0 ? void 0 : _data$ownershipCatego4.code;
    if (subOwnerShipCategory) formData.tradeLicenseDetail.subOwnerShipCategory = subOwnerShipCategory;
    if (data !== null && data !== void 0 && (_data$owners2 = data.owners) !== null && _data$owners2 !== void 0 && _data$owners2.length && subOwnerShipCategory.includes("INSTITUTIONAL")) formData.tradeLicenseDetail = {
      ...formData.tradeLicenseDetail,
      institution: {}
    };
    if (data !== null && data !== void 0 && (_data$owners3 = data.owners) !== null && _data$owners3 !== void 0 && _data$owners3.length && subOwnerShipCategory.includes("INSTITUTIONAL")) formData.tradeLicenseDetail.institution["designation"] = data === null || data === void 0 ? void 0 : (_data$owners4 = data.owners) === null || _data$owners4 === void 0 ? void 0 : (_data$owners4$ = _data$owners4[0]) === null || _data$owners4$ === void 0 ? void 0 : _data$owners4$.designation;
    if (data !== null && data !== void 0 && (_data$owners5 = data.owners) !== null && _data$owners5 !== void 0 && _data$owners5.length && subOwnerShipCategory.includes("INSTITUTIONAL")) formData.tradeLicenseDetail.institution["instituionName"] = data === null || data === void 0 ? void 0 : (_data$owners6 = data.owners) === null || _data$owners6 === void 0 ? void 0 : (_data$owners6$ = _data$owners6[0]) === null || _data$owners6$ === void 0 ? void 0 : _data$owners6$.instituionName;
    if (data !== null && data !== void 0 && (_data$owners7 = data.owners) !== null && _data$owners7 !== void 0 && _data$owners7.length && subOwnerShipCategory.includes("INSTITUTIONAL")) formData.tradeLicenseDetail.institution["name"] = data === null || data === void 0 ? void 0 : (_data$owners8 = data.owners) === null || _data$owners8 === void 0 ? void 0 : (_data$owners8$ = _data$owners8[0]) === null || _data$owners8$ === void 0 ? void 0 : _data$owners8$.name;
    if (data !== null && data !== void 0 && (_data$owners9 = data.owners) !== null && _data$owners9 !== void 0 && _data$owners9.length && subOwnerShipCategory.includes("INSTITUTIONAL")) formData.tradeLicenseDetail.institution["contactNo"] = data === null || data === void 0 ? void 0 : (_data$owners10 = data.owners) === null || _data$owners10 === void 0 ? void 0 : (_data$owners10$ = _data$owners10[0]) === null || _data$owners10$ === void 0 ? void 0 : _data$owners10$.altContactNumber;
    if (data !== null && data !== void 0 && data.cpt) {
      var _data$cpt12, _data$cpt12$details;
      formData.tradeLicenseDetail.additionalDetail.propertyId = data === null || data === void 0 ? void 0 : (_data$cpt12 = data.cpt) === null || _data$cpt12 === void 0 ? void 0 : (_data$cpt12$details = _data$cpt12.details) === null || _data$cpt12$details === void 0 ? void 0 : _data$cpt12$details.propertyId, formData.tradeLicenseDetail.additionalDetail.isSameAsPropertyOwner = isSameAsPropertyOwner;
    }
    formData = (_Digit = Digit) !== null && _Digit !== void 0 && (_Digit$Customizations = _Digit.Customizations) !== null && _Digit$Customizations !== void 0 && (_Digit$Customizations2 = _Digit$Customizations.TL) !== null && _Digit$Customizations2 !== void 0 && _Digit$Customizations2.customiseCreateFormData ? (_Digit2 = Digit) === null || _Digit2 === void 0 ? void 0 : (_Digit2$Customization = _Digit2.Customizations) === null || _Digit2$Customization === void 0 ? void 0 : (_Digit2$Customization2 = _Digit2$Customization.TL) === null || _Digit2$Customization2 === void 0 ? void 0 : _Digit2$Customization2.customiseCreateFormData(data, formData) : formData;
    Digit.TLService.create({
      Licenses: [formData]
    }, tenantId).then((result, err) => {
      var _result$Licenses;
      if ((result === null || result === void 0 ? void 0 : (_result$Licenses = result.Licenses) === null || _result$Licenses === void 0 ? void 0 : _result$Licenses.length) > 0) {
        var _result$Licenses2;
        let licenses = result === null || result === void 0 ? void 0 : (_result$Licenses2 = result.Licenses) === null || _result$Licenses2 === void 0 ? void 0 : _result$Licenses2[0];
        licenses.tradeLicenseDetail.applicationDocuments = applicationDocuments;
        licenses.wfDocuments = [];
        licenses.action = "APPLY";
        Digit.TLService.update({
          Licenses: [licenses]
        }, tenantId).then(response => {
          var _response$Licenses;
          if ((response === null || response === void 0 ? void 0 : (_response$Licenses = response.Licenses) === null || _response$Licenses === void 0 ? void 0 : _response$Licenses.length) > 0) {
            sessionStorage.setItem("isCreateEnabledEmployee", "true");
            history.replace(`/digit-ui/employee/tl/response`, {
              data: response === null || response === void 0 ? void 0 : response.Licenses
            });
            clearSessionFormData();
          }
        }).catch(e => {
          var _e$response, _e$response$data, _e$response$data$Erro;
          setShowToast({
            key: "error"
          });
          setError((e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : (_e$response$data$Erro = _e$response$data.Errors[0]) === null || _e$response$data$Erro === void 0 ? void 0 : _e$response$data$Erro.message) || null);
        });
      }
    }).catch(e => {
      var _e$response2, _e$response2$data, _e$response2$data$Err;
      setShowToast({
        key: "error"
      });
      setError((e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : (_e$response2$data$Err = _e$response2$data.Errors[0]) === null || _e$response2$data$Err === void 0 ? void 0 : _e$response2$data$Err.message) || null);
    });
  };
  let configs = [];
  newConfig$1 = newConfig$1 ? newConfig$1 : newConfig;
  (_newConfig = newConfig$1) === null || _newConfig === void 0 ? void 0 : _newConfig.map(conf => {
    if (conf.head !== "ES_NEW_APPLICATION_PROPERTY_ASSESSMENT" && conf.head) {
      configs.push(conf);
    }
  });
  function checkHead(head) {
    var _sessionFormData$trad, _sessionFormData$trad2, _sessionFormData$trad3;
    if (head === "ES_NEW_APPLICATION_LOCATION_DETAILS") {
      return "TL_CHECK_ADDRESS";
    } else if (head === "ES_NEW_APPLICATION_OWNERSHIP_DETAILS") {
      return "TL_OWNERSHIP_DETAILS_HEADER";
    } else if (head === "TL_NEW_APPLICATION_PROPERTY" && (sessionFormData === null || sessionFormData === void 0 ? void 0 : (_sessionFormData$trad = sessionFormData.tradedetils) === null || _sessionFormData$trad === void 0 ? void 0 : (_sessionFormData$trad2 = _sessionFormData$trad[0]) === null || _sessionFormData$trad2 === void 0 ? void 0 : (_sessionFormData$trad3 = _sessionFormData$trad2.structureType) === null || _sessionFormData$trad3 === void 0 ? void 0 : _sessionFormData$trad3.code) === "MOVABLE" && (isEmpNewApplication || isEmpRenewLicense)) {
      return "";
    } else {
      return head;
    }
  }
  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
    style: {
      marginLeft: "15px"
    }
  }, /*#__PURE__*/React.createElement(Header, null, t("ES_TITLE_NEW_TRADE_LICESE_APPLICATION"))), /*#__PURE__*/React.createElement(FormComposer, {
    heading: t(""),
    isDisabled: !canSubmit,
    label: t("ES_COMMON_APPLICATION_SUBMIT"),
    config: configs.map(config => {
      return {
        ...config,
        body: config.body.filter(a => {
          return !a.hideInEmployee;
        }),
        head: checkHead(config.head)
      };
    }),
    fieldStyle: {
      marginRight: 0
    },
    onSubmit: onSubmit,
    defaultValues: sessionFormData,
    onFormValueChange: onFormValueChange,
    breaklineStyle: {
      border: "0px"
    }
  }), showToast && /*#__PURE__*/React.createElement(Toast, {
    isDleteBtn: true,
    error: (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? true : false,
    label: error,
    onClose: closeToast
  }));
};

const ReNewApplication = props => {
  var _props$location, _props$location$state, _loc$state, _loc$state$applicatio, _loc$state$applicatio2, _tenantId$split, _tenantId$split$call, _applicationData$fina, _finalFinancialYear, _applicationData$trad, _applicationData$trad2, _applicationData$trad3, _applicationData$trad4, _applicationData$trad5, _applicationData$trad6, _applicationData$trad7, _applicationData$trad8, _applicationData$trad9, _applicationData$trad10, _applicationData$trad11, _applicationData$trad12, _applicationData$trad13, _applicationData$trad14, _applicationData$trad15, _applicationData$trad16, _applicationData$trad19, _applicationData$trad20, _applicationData$trad29, _applicationData$trad30, _applicationData$trad31, _applicationData$trad32, _applicationData$trad33, _applicationData$trad34, _applicationData$trad35, _applicationData$trad36, _applicationData$trad37, _applicationData$trad38, _applicationData$trad39, _applicationData$trad40, _applicationData$trad41, _props$location2, _props$location2$stat, _applicationData$trad47, _applicationData$trad48, _applicationData$trad49, _applicationData$trad50, _propertyDetails$Prop, _newConfig;
  const applicationData = cloneDeep_1(props === null || props === void 0 ? void 0 : (_props$location = props.location) === null || _props$location === void 0 ? void 0 : (_props$location$state = _props$location.state) === null || _props$location$state === void 0 ? void 0 : _props$location$state.applicationData) || {};
  const loc = useLocation();
  const propertyId = new URLSearchParams(loc.search).get("propertyId") || (loc === null || loc === void 0 ? void 0 : (_loc$state = loc.state) === null || _loc$state === void 0 ? void 0 : (_loc$state$applicatio = _loc$state.applicationDetails.find(details => (details === null || details === void 0 ? void 0 : details.title) === "PT_DETAILS")) === null || _loc$state$applicatio === void 0 ? void 0 : (_loc$state$applicatio2 = _loc$state$applicatio.values.find(value => (value === null || value === void 0 ? void 0 : value.title) === "TL_PROPERTY_ID")) === null || _loc$state$applicatio2 === void 0 ? void 0 : _loc$state$applicatio2.value);
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const {
    t
  } = useTranslation();
  const [canSubmit, setSubmitValve] = useState(false);
  let {
    data: newConfig$1,
    isLoading
  } = Digit.Hooks.tl.useMDMS.getFormConfig(tenantId === null || tenantId === void 0 ? void 0 : (_tenantId$split = tenantId.split) === null || _tenantId$split === void 0 ? void 0 : (_tenantId$split$call = _tenantId$split.call(tenantId, ".")) === null || _tenantId$split$call === void 0 ? void 0 : _tenantId$split$call[0], {});
  const {
    data: propertyDetails
  } = Digit.Hooks.pt.usePropertySearch({
    filters: {
      propertyIds: propertyId
    },
    tenantId: tenantId
  }, {
    filters: {
      propertyIds: propertyId
    },
    tenantId: tenantId
  });
  const history = useHistory();
  const [_formData, setFormData, _clear] = Digit.Hooks.useSessionStorage("store-data", null);
  const [mutationHappened, setMutationHappened, clear] = Digit.Hooks.useSessionStorage("EMPLOYEE_MUTATION_HAPPENED", false);
  const [successData, setsuccessData, clearSuccessData] = Digit.Hooks.useSessionStorage("EMPLOYEE_MUTATION_SUCCESS_DATA", {});
  const isEmpNewApplication = window.location.href.includes("/employee/tl/new-application");
  const isEmpRenewLicense = window.location.href.includes("/employee/tl/renew-application-details") || window.location.href.includes("/employee/tl/edit-application-details");
  const [showToast, setShowToast] = useState(null);
  const [error, setError] = useState(null);
  let financialYear = cloneDeep_1(applicationData === null || applicationData === void 0 ? void 0 : applicationData.financialYear);
  let financialYearDate = applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$fina = applicationData.financialYear) === null || _applicationData$fina === void 0 ? void 0 : _applicationData$fina.split("-")[1];
  let finalFinancialYear = `20${Number(financialYearDate)}-${Number(financialYearDate) + 1}`;
  if (window.location.href.includes("edit-application-details")) finalFinancialYear = financialYear;
  const tradeDetails = [{
    tradeName: applicationData === null || applicationData === void 0 ? void 0 : applicationData.tradeName,
    financialYear: {
      code: finalFinancialYear,
      i18nKey: `FY${finalFinancialYear}`,
      id: (_finalFinancialYear = finalFinancialYear) === null || _finalFinancialYear === void 0 ? void 0 : _finalFinancialYear.split("-")[0]
    },
    licenseType: "",
    structureType: {
      i18nKey: t(`COMMON_MASTERS_STRUCTURETYPE_${stringReplaceAll(applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad = applicationData.tradeLicenseDetail) === null || _applicationData$trad === void 0 ? void 0 : (_applicationData$trad2 = _applicationData$trad.structureType) === null || _applicationData$trad2 === void 0 ? void 0 : (_applicationData$trad3 = _applicationData$trad2.split(".")[0]) === null || _applicationData$trad3 === void 0 ? void 0 : _applicationData$trad3.toUpperCase(), ".", "_")}`),
      code: applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad4 = applicationData.tradeLicenseDetail) === null || _applicationData$trad4 === void 0 ? void 0 : (_applicationData$trad5 = _applicationData$trad4.structureType) === null || _applicationData$trad5 === void 0 ? void 0 : _applicationData$trad5.split(".")[0]
    },
    structureSubType: {
      i18nKey: `COMMON_MASTERS_STRUCTURETYPE_${stringReplaceAll(applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad6 = applicationData.tradeLicenseDetail) === null || _applicationData$trad6 === void 0 ? void 0 : (_applicationData$trad7 = _applicationData$trad6.structureType) === null || _applicationData$trad7 === void 0 ? void 0 : _applicationData$trad7.toUpperCase(), ".", "_")}`,
      code: applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad8 = applicationData.tradeLicenseDetail) === null || _applicationData$trad8 === void 0 ? void 0 : _applicationData$trad8.structureType
    },
    commencementDate: convertEpochToDate(applicationData === null || applicationData === void 0 ? void 0 : applicationData.commencementDate),
    gstNo: (applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad9 = applicationData.tradeLicenseDetail) === null || _applicationData$trad9 === void 0 ? void 0 : (_applicationData$trad10 = _applicationData$trad9.additionalDetail) === null || _applicationData$trad10 === void 0 ? void 0 : _applicationData$trad10.gstNo) || (applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad11 = applicationData.tradeLicenseDetail) === null || _applicationData$trad11 === void 0 ? void 0 : (_applicationData$trad12 = _applicationData$trad11.additionalDetail) === null || _applicationData$trad12 === void 0 ? void 0 : _applicationData$trad12.tradeGstNo) || "",
    operationalArea: (applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad13 = applicationData.tradeLicenseDetail) === null || _applicationData$trad13 === void 0 ? void 0 : _applicationData$trad13.operationalArea) || "",
    noOfEmployees: (applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad14 = applicationData.tradeLicenseDetail) === null || _applicationData$trad14 === void 0 ? void 0 : _applicationData$trad14.noOfEmployees) || "",
    key: Date.now()
  }];
  if ((applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad15 = applicationData.tradeLicenseDetail) === null || _applicationData$trad15 === void 0 ? void 0 : (_applicationData$trad16 = _applicationData$trad15.tradeUnits) === null || _applicationData$trad16 === void 0 ? void 0 : _applicationData$trad16.length) > 0) {
    var _applicationData$trad17, _applicationData$trad18;
    applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad17 = applicationData.tradeLicenseDetail) === null || _applicationData$trad17 === void 0 ? void 0 : (_applicationData$trad18 = _applicationData$trad17.tradeUnits) === null || _applicationData$trad18 === void 0 ? void 0 : _applicationData$trad18.forEach((data, index) => {
      let tradeType1 = cloneDeep_1(data === null || data === void 0 ? void 0 : data.tradeType);
      let tradeType2 = cloneDeep_1(data === null || data === void 0 ? void 0 : data.tradeType);
      let tradeType3 = cloneDeep_1(data === null || data === void 0 ? void 0 : data.tradeType);
      let code1 = typeof (data === null || data === void 0 ? void 0 : data.tradeType) == "string" && stringReplaceAll(tradeType3, "-", "_");
      if (typeof (data === null || data === void 0 ? void 0 : data.tradeType) == "string") data.tradeCategory = {
        code: tradeType1 === null || tradeType1 === void 0 ? void 0 : tradeType1.split(".")[0],
        i18nKey: `TRADELICENSE_TRADETYPE_${tradeType1 === null || tradeType1 === void 0 ? void 0 : tradeType1.split(".")[0]}`
      };
      if (typeof (data === null || data === void 0 ? void 0 : data.tradeType) == "string") data.tradeSubType = {
        code: tradeType3,
        i18nKey: t(`TRADELICENSE_TRADETYPE_${stringReplaceAll(code1, ".", "_")}`),
        uom: (data === null || data === void 0 ? void 0 : data.uom) || ""
      };
      if (typeof (data === null || data === void 0 ? void 0 : data.tradeType) == "string") data.tradeType = {
        code: tradeType2 === null || tradeType2 === void 0 ? void 0 : tradeType2.split(".")[1],
        i18nKey: `TRADELICENSE_TRADETYPE_${tradeType2 === null || tradeType2 === void 0 ? void 0 : tradeType2.split(".")[1]}`
      };
      data.uom = data === null || data === void 0 ? void 0 : data.uom;
      data.uomValue = data === null || data === void 0 ? void 0 : data.uomValue;
      data.key = Date.now() + (index + 1) * 20;
    });
  }
  if ((applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad19 = applicationData.tradeLicenseDetail) === null || _applicationData$trad19 === void 0 ? void 0 : (_applicationData$trad20 = _applicationData$trad19.accessories) === null || _applicationData$trad20 === void 0 ? void 0 : _applicationData$trad20.length) > 0) {
    var _applicationData$trad21, _applicationData$trad22;
    applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad21 = applicationData.tradeLicenseDetail) === null || _applicationData$trad21 === void 0 ? void 0 : (_applicationData$trad22 = _applicationData$trad21.accessories) === null || _applicationData$trad22 === void 0 ? void 0 : _applicationData$trad22.forEach((data, index) => {
      let accessory1 = cloneDeep_1(data === null || data === void 0 ? void 0 : data.accessoryCategory);
      let accessory2 = cloneDeep_1(data === null || data === void 0 ? void 0 : data.accessoryCategory);
      if (typeof (data === null || data === void 0 ? void 0 : data.accessoryCategory) == "string") data.accessoryCategory = {
        code: accessory1,
        i18nKey: `TRADELICENSE_ACCESSORIESCATEGORY_${stringReplaceAll(accessory1, "-", "_")}`,
        uom: data === null || data === void 0 ? void 0 : data.uom
      };
      data.uom = data === null || data === void 0 ? void 0 : data.uom;
      data.uomValue = (data === null || data === void 0 ? void 0 : data.uomValue) || "";
      data.count = (data === null || data === void 0 ? void 0 : data.count) || "";
      data.key = Date.now() + (index + 1) * 20;
    });
  }
  if (applicationData !== null && applicationData !== void 0 && applicationData.tradeLicenseDetail) {
    var _applicationData$trad23, _applicationData$trad24, _applicationData$trad25, _applicationData$trad26, _applicationData$trad27, _applicationData$trad28;
    applicationData.tradeLicenseDetail["address"] = (applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad23 = applicationData.tradeLicenseDetail) === null || _applicationData$trad23 === void 0 ? void 0 : _applicationData$trad23.address) || {};
    applicationData.tradeLicenseDetail.address.locality = {
      ...(applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad24 = applicationData.tradeLicenseDetail) === null || _applicationData$trad24 === void 0 ? void 0 : (_applicationData$trad25 = _applicationData$trad24.address) === null || _applicationData$trad25 === void 0 ? void 0 : _applicationData$trad25.locality),
      ...{
        i18nkey: applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad26 = applicationData.tradeLicenseDetail) === null || _applicationData$trad26 === void 0 ? void 0 : (_applicationData$trad27 = _applicationData$trad26.address) === null || _applicationData$trad27 === void 0 ? void 0 : (_applicationData$trad28 = _applicationData$trad27.locality) === null || _applicationData$trad28 === void 0 ? void 0 : _applicationData$trad28.name
      }
    };
  }
  const ownershipCategory = {
    code: applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad29 = applicationData.tradeLicenseDetail) === null || _applicationData$trad29 === void 0 ? void 0 : _applicationData$trad29.subOwnerShipCategory,
    i18nKey: `COMMON_MASTERS_OWNERSHIPCATEGORY_INDIVIDUAL_${applicationData !== null && applicationData !== void 0 && (_applicationData$trad30 = applicationData.tradeLicenseDetail) !== null && _applicationData$trad30 !== void 0 && (_applicationData$trad31 = _applicationData$trad30.subOwnerShipCategory) !== null && _applicationData$trad31 !== void 0 && _applicationData$trad31.includes("INSTITUTIONAL") ? applicationData !== null && applicationData !== void 0 && (_applicationData$trad32 = applicationData.tradeLicenseDetail) !== null && _applicationData$trad32 !== void 0 && (_applicationData$trad33 = _applicationData$trad32.subOwnerShipCategory) !== null && _applicationData$trad33 !== void 0 && _applicationData$trad33.includes("GOVERNMENT") ? "OTHERGOVERNMENTINSTITUITION" : "OTHERSPRIVATEINSTITUITION" : applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad34 = applicationData.tradeLicenseDetail) === null || _applicationData$trad34 === void 0 ? void 0 : (_applicationData$trad35 = _applicationData$trad34.subOwnerShipCategory) === null || _applicationData$trad35 === void 0 ? void 0 : _applicationData$trad35.split(".")[1]}`,
    isSameAsPropertyOwner: (applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad36 = applicationData.tradeLicenseDetail) === null || _applicationData$trad36 === void 0 ? void 0 : (_applicationData$trad37 = _applicationData$trad36.additionalDetail) === null || _applicationData$trad37 === void 0 ? void 0 : _applicationData$trad37.isSameAsPropertyOwner) === "null" ? null : applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad38 = applicationData.tradeLicenseDetail) === null || _applicationData$trad38 === void 0 ? void 0 : (_applicationData$trad39 = _applicationData$trad38.additionalDetail) === null || _applicationData$trad39 === void 0 ? void 0 : _applicationData$trad39.isSameAsPropertyOwner
  };
  if ((applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad40 = applicationData.tradeLicenseDetail) === null || _applicationData$trad40 === void 0 ? void 0 : (_applicationData$trad41 = _applicationData$trad40.owners) === null || _applicationData$trad41 === void 0 ? void 0 : _applicationData$trad41.length) > 0) {
    var _applicationData$trad42, _applicationData$trad43;
    applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad42 = applicationData.tradeLicenseDetail) === null || _applicationData$trad42 === void 0 ? void 0 : (_applicationData$trad43 = _applicationData$trad42.owners) === null || _applicationData$trad43 === void 0 ? void 0 : _applicationData$trad43.forEach((data, index) => {
      if (typeof (data === null || data === void 0 ? void 0 : data.gender) == "string") data.gender = {
        code: data === null || data === void 0 ? void 0 : data.gender,
        i18nKey: `TL_GENDER_${data === null || data === void 0 ? void 0 : data.gender}`
      };
      if (typeof (data === null || data === void 0 ? void 0 : data.relationship) == "string") data.relationship = {
        code: data === null || data === void 0 ? void 0 : data.relationship,
        i18nKey: `COMMON_RELATION_${data === null || data === void 0 ? void 0 : data.relationship}`
      };
      if (typeof (data === null || data === void 0 ? void 0 : data.ownerType) == "string") data.ownerType = {
        code: data === null || data === void 0 ? void 0 : data.ownerType,
        i18nKey: data === null || data === void 0 ? void 0 : data.ownerType
      };
      if (!(data !== null && data !== void 0 && data.fatherOrHusbandName)) data.fatherOrHusbandName = "";
      if (!(data !== null && data !== void 0 && data.emailId)) data.emailId = "";
      if (!(data !== null && data !== void 0 && data.permanentAddress)) data.permanentAddress = "";
      data.key = Date.now() + (index + 1) * 20;
    });
  }
  let clonedData = cloneDeep_1(props === null || props === void 0 ? void 0 : (_props$location2 = props.location) === null || _props$location2 === void 0 ? void 0 : (_props$location2$stat = _props$location2.state) === null || _props$location2$stat === void 0 ? void 0 : _props$location2$stat.applicationData) || {};
  clonedData.checkForRenewal = false;
  const getOwners = application => {
    var _application$tradeLic, _application$tradeLic2, _applicationData$trad46;
    if (application !== null && application !== void 0 && (_application$tradeLic = application.tradeLicenseDetail) !== null && _application$tradeLic !== void 0 && (_application$tradeLic2 = _application$tradeLic.subOwnerShipCategory) !== null && _application$tradeLic2 !== void 0 && _application$tradeLic2.includes("INSTITUTIONAL")) {
      var _application$tradeLic3, _application$tradeLic4, _application$tradeLic5, _application$tradeLic6, _application$tradeLic7, _application$tradeLic8, _application$tradeLic9, _application$tradeLic10, _application$tradeLic11, _applicationData$trad44, _applicationData$trad45;
      let owner = [];
      owner.push({
        ...(application === null || application === void 0 ? void 0 : (_application$tradeLic3 = application.tradeLicenseDetail) === null || _application$tradeLic3 === void 0 ? void 0 : _application$tradeLic3.owners[0]),
        instituionName: application === null || application === void 0 ? void 0 : (_application$tradeLic4 = application.tradeLicenseDetail) === null || _application$tradeLic4 === void 0 ? void 0 : (_application$tradeLic5 = _application$tradeLic4.institution) === null || _application$tradeLic5 === void 0 ? void 0 : _application$tradeLic5.instituionName,
        name: application === null || application === void 0 ? void 0 : (_application$tradeLic6 = application.tradeLicenseDetail) === null || _application$tradeLic6 === void 0 ? void 0 : (_application$tradeLic7 = _application$tradeLic6.institution) === null || _application$tradeLic7 === void 0 ? void 0 : _application$tradeLic7.name,
        altContactNumber: application === null || application === void 0 ? void 0 : (_application$tradeLic8 = application.tradeLicenseDetail) === null || _application$tradeLic8 === void 0 ? void 0 : (_application$tradeLic9 = _application$tradeLic8.institution) === null || _application$tradeLic9 === void 0 ? void 0 : _application$tradeLic9.contactNo,
        designation: application === null || application === void 0 ? void 0 : (_application$tradeLic10 = application.tradeLicenseDetail) === null || _application$tradeLic10 === void 0 ? void 0 : (_application$tradeLic11 = _application$tradeLic10.institution) === null || _application$tradeLic11 === void 0 ? void 0 : _application$tradeLic11.designation,
        subOwnerShipCategory: {
          code: applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad44 = applicationData.tradeLicenseDetail) === null || _applicationData$trad44 === void 0 ? void 0 : _applicationData$trad44.subOwnerShipCategory,
          i18nKey: `COMMON_MASTERS_OWNERSHIPCATEGORY_${stringReplaceAll(applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad45 = applicationData.tradeLicenseDetail) === null || _applicationData$trad45 === void 0 ? void 0 : _applicationData$trad45.subOwnerShipCategory, ".", "_")}`
        }
      });
      return owner;
    }
    return applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad46 = applicationData.tradeLicenseDetail) === null || _applicationData$trad46 === void 0 ? void 0 : _applicationData$trad46.owners;
  };
  const defaultValues = {
    tradedetils1: clonedData,
    tradedetils: tradeDetails,
    tradeUnits: applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad47 = applicationData.tradeLicenseDetail) === null || _applicationData$trad47 === void 0 ? void 0 : _applicationData$trad47.tradeUnits,
    accessories: applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad48 = applicationData.tradeLicenseDetail) === null || _applicationData$trad48 === void 0 ? void 0 : _applicationData$trad48.accessories,
    address: (applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad49 = applicationData.tradeLicenseDetail) === null || _applicationData$trad49 === void 0 ? void 0 : _applicationData$trad49.address) || {},
    ownershipCategory: ownershipCategory,
    owners: getOwners(applicationData) || [],
    documents: {
      documents: (applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$trad50 = applicationData.tradeLicenseDetail) === null || _applicationData$trad50 === void 0 ? void 0 : _applicationData$trad50.applicationDocuments) || []
    },
    cptId: {
      id: propertyId
    },
    cpt: {
      details: propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop = propertyDetails.Properties) === null || _propertyDetails$Prop === void 0 ? void 0 : _propertyDetails$Prop[0]
    }
  };
  const closeToast = () => {
    setShowToast(null);
    setError(null);
  };
  useEffect(() => {
    setMutationHappened(false);
    clearSuccessData();
  }, []);
  const onFormValueChange = (setValue, formData, formState) => {
    if (sessionStorage.getItem("isBillingSlabError") === "true") setSubmitValve(false);else if (Object.keys(formState.errors).length > 0 && Object.keys(formState.errors).length == 1 && formState.errors["owners"] && Object.values(formState.errors["owners"].type).filter(ob => ob.type === "required").length == 0) setSubmitValve(true);else setSubmitValve(!Object.keys(formState.errors).length);
  };
  const onSubmit = data => {
    var _data$cpt, _data$tradedetils, _data$tradedetils2, _data$owners, _data$tradeUnits, _data$accessories, _data$tradedetils12, _data$tradedetils13, _data$tradedetils13$t, _data$tradedetils15, _data$address2, _data$tradedetils16, _data$address3, _loc$state2, _loc$state2$applicati, _loc$state2$applicati2, _data$documents, _data$tradedetils17, _data$tradedetils17$, _data$tradedetils18, _data$tradedetils18$, _data$tradedetils18$$, _data$tradedetils19, _data$tradedetils19$, _data$tradedetils20, _data$tradedetils20$, _data$tradedetils21, _data$tradedetils21$, _data$tradedetils22, _data$tradedetils22$, _data$tradedetils22$$, _data$tradedetils23, _data$tradedetils23$, _data$ownershipCatego, _data$tradedetils24, _data$tradedetils24$, _data$tradedetils24$$;
    if (data !== null && data !== void 0 && (_data$cpt = data.cpt) !== null && _data$cpt !== void 0 && _data$cpt.id) {
      var _data$cpt2;
      if (!(data !== null && data !== void 0 && (_data$cpt2 = data.cpt) !== null && _data$cpt2 !== void 0 && _data$cpt2.details) || !propertyDetails) {
        setShowToast({
          key: "error"
        });
        setError(t("ERR_INVALID_PROPERTY_ID"));
        return;
      }
    }
    let EDITRENEWAL = data === null || data === void 0 ? void 0 : (_data$tradedetils = data.tradedetils1) === null || _data$tradedetils === void 0 ? void 0 : _data$tradedetils.checkForRenewal;
    let sendBackToCitizen = false;
    if ((data === null || data === void 0 ? void 0 : (_data$tradedetils2 = data.tradedetils1) === null || _data$tradedetils2 === void 0 ? void 0 : _data$tradedetils2.action) == "SENDBACKTOCITIZEN") {
      EDITRENEWAL = false;
      sendBackToCitizen = true;
    }
    if ((data === null || data === void 0 ? void 0 : (_data$owners = data.owners) === null || _data$owners === void 0 ? void 0 : _data$owners.length) > 0) {
      data === null || data === void 0 ? void 0 : data.owners.forEach(data => {
        var _data$gender, _data$relationship, _data$ownerType;
        data.gender = data === null || data === void 0 ? void 0 : (_data$gender = data.gender) === null || _data$gender === void 0 ? void 0 : _data$gender.code;
        data.relationship = data === null || data === void 0 ? void 0 : (_data$relationship = data.relationship) === null || _data$relationship === void 0 ? void 0 : _data$relationship.code;
        data.ownerType = data === null || data === void 0 ? void 0 : (_data$ownerType = data.ownerType) === null || _data$ownerType === void 0 ? void 0 : _data$ownerType.code;
      });
    }
    for (let i = 0; i < (data === null || data === void 0 ? void 0 : (_data$tradedetils3 = data.tradedetils1) === null || _data$tradedetils3 === void 0 ? void 0 : (_data$tradedetils3$tr = _data$tradedetils3.tradeLicenseDetail) === null || _data$tradedetils3$tr === void 0 ? void 0 : (_data$tradedetils3$tr2 = _data$tradedetils3$tr.owners) === null || _data$tradedetils3$tr2 === void 0 ? void 0 : _data$tradedetils3$tr2.length); i++) {
      var _data$tradedetils3, _data$tradedetils3$tr, _data$tradedetils3$tr2, _data$owners2;
      let filteredArray = data === null || data === void 0 ? void 0 : (_data$owners2 = data.owners) === null || _data$owners2 === void 0 ? void 0 : _data$owners2.filter(owner => {
        var _data$tradedetils4, _data$tradedetils4$tr, _data$tradedetils4$tr2;
        return owner.id === (data === null || data === void 0 ? void 0 : (_data$tradedetils4 = data.tradedetils1) === null || _data$tradedetils4 === void 0 ? void 0 : (_data$tradedetils4$tr = _data$tradedetils4.tradeLicenseDetail) === null || _data$tradedetils4$tr === void 0 ? void 0 : (_data$tradedetils4$tr2 = _data$tradedetils4$tr.owners[i]) === null || _data$tradedetils4$tr2 === void 0 ? void 0 : _data$tradedetils4$tr2.id);
      });
      if ((filteredArray === null || filteredArray === void 0 ? void 0 : filteredArray.length) == 0) {
        var _data$tradedetils5, _data$tradedetils5$tr;
        let removedOwner = data === null || data === void 0 ? void 0 : (_data$tradedetils5 = data.tradedetils1) === null || _data$tradedetils5 === void 0 ? void 0 : (_data$tradedetils5$tr = _data$tradedetils5.tradeLicenseDetail) === null || _data$tradedetils5$tr === void 0 ? void 0 : _data$tradedetils5$tr.owners[i];
        removedOwner.active = false;
        removedOwner.userActive = false;
        data === null || data === void 0 ? void 0 : data.owners.push(removedOwner);
        EDITRENEWAL = true;
      }
    }
    if ((data === null || data === void 0 ? void 0 : (_data$tradeUnits = data.tradeUnits) === null || _data$tradeUnits === void 0 ? void 0 : _data$tradeUnits.length) > 0) {
      data === null || data === void 0 ? void 0 : data.tradeUnits.forEach(data => {
        var _data$tradeSubType, _data$tradeSubType2;
        data.tradeType = (data === null || data === void 0 ? void 0 : (_data$tradeSubType = data.tradeSubType) === null || _data$tradeSubType === void 0 ? void 0 : _data$tradeSubType.code) || null, data.uom = (data === null || data === void 0 ? void 0 : (_data$tradeSubType2 = data.tradeSubType) === null || _data$tradeSubType2 === void 0 ? void 0 : _data$tradeSubType2.uom) || null, data.uomValue = Number(data === null || data === void 0 ? void 0 : data.uomValue) || null;
      });
    }
    for (let i = 0; i < (data === null || data === void 0 ? void 0 : (_data$tradedetils6 = data.tradedetils1) === null || _data$tradedetils6 === void 0 ? void 0 : (_data$tradedetils6$tr = _data$tradedetils6.tradeLicenseDetail) === null || _data$tradedetils6$tr === void 0 ? void 0 : (_data$tradedetils6$tr2 = _data$tradedetils6$tr.tradeUnits) === null || _data$tradedetils6$tr2 === void 0 ? void 0 : _data$tradedetils6$tr2.length); i++) {
      var _data$tradedetils6, _data$tradedetils6$tr, _data$tradedetils6$tr2, _data$tradeUnits2;
      let filteredArray = data === null || data === void 0 ? void 0 : (_data$tradeUnits2 = data.tradeUnits) === null || _data$tradeUnits2 === void 0 ? void 0 : _data$tradeUnits2.filter(unit => {
        var _data$tradedetils7, _data$tradedetils7$tr, _data$tradedetils7$tr2;
        return unit.id === (data === null || data === void 0 ? void 0 : (_data$tradedetils7 = data.tradedetils1) === null || _data$tradedetils7 === void 0 ? void 0 : (_data$tradedetils7$tr = _data$tradedetils7.tradeLicenseDetail) === null || _data$tradedetils7$tr === void 0 ? void 0 : (_data$tradedetils7$tr2 = _data$tradedetils7$tr.tradeUnits[i]) === null || _data$tradedetils7$tr2 === void 0 ? void 0 : _data$tradedetils7$tr2.id);
      });
      if ((filteredArray === null || filteredArray === void 0 ? void 0 : filteredArray.length) == 0) {
        var _data$tradedetils8, _data$tradedetils8$tr;
        let removedUnit = data === null || data === void 0 ? void 0 : (_data$tradedetils8 = data.tradedetils1) === null || _data$tradedetils8 === void 0 ? void 0 : (_data$tradedetils8$tr = _data$tradedetils8.tradeLicenseDetail) === null || _data$tradedetils8$tr === void 0 ? void 0 : _data$tradedetils8$tr.tradeUnits[i];
        removedUnit.active = false;
        data === null || data === void 0 ? void 0 : data.tradeUnits.push(removedUnit);
        EDITRENEWAL = true;
      }
    }
    let accessoriesFlag = false;
    if ((data === null || data === void 0 ? void 0 : (_data$accessories = data.accessories) === null || _data$accessories === void 0 ? void 0 : _data$accessories.length) > 0) {
      var _data$accessories2, _data$accessories3, _data$accessories3$, _data$accessories3$$a, _data$accessories4;
      if ((data === null || data === void 0 ? void 0 : (_data$accessories2 = data.accessories) === null || _data$accessories2 === void 0 ? void 0 : _data$accessories2.length) === 1 && !(data !== null && data !== void 0 && (_data$accessories3 = data.accessories) !== null && _data$accessories3 !== void 0 && (_data$accessories3$ = _data$accessories3[0]) !== null && _data$accessories3$ !== void 0 && (_data$accessories3$$a = _data$accessories3$.accessoryCategory) !== null && _data$accessories3$$a !== void 0 && _data$accessories3$$a.code)) accessoriesFlag = true;
      data === null || data === void 0 ? void 0 : (_data$accessories4 = data.accessories) === null || _data$accessories4 === void 0 ? void 0 : _data$accessories4.forEach(data => {
        const accessoryCategory1 = cloneDeep_1(data === null || data === void 0 ? void 0 : data.accessoryCategory);
        const accessoryCategory2 = cloneDeep_1(data === null || data === void 0 ? void 0 : data.accessoryCategory);
        data.accessoryCategory = (accessoryCategory1 === null || accessoryCategory1 === void 0 ? void 0 : accessoryCategory1.code) || null, data.uom = (accessoryCategory2 === null || accessoryCategory2 === void 0 ? void 0 : accessoryCategory2.uom) || null, data.count = Number(data === null || data === void 0 ? void 0 : data.count) || null, data.uomValue = Number(data === null || data === void 0 ? void 0 : data.uomValue) || null;
      });
    }
    if (accessoriesFlag) data.accessories = null;
    for (let i = 0; i < (data === null || data === void 0 ? void 0 : (_data$tradedetils9 = data.tradedetils1) === null || _data$tradedetils9 === void 0 ? void 0 : (_data$tradedetils9$tr = _data$tradedetils9.tradeLicenseDetail) === null || _data$tradedetils9$tr === void 0 ? void 0 : (_data$tradedetils9$tr2 = _data$tradedetils9$tr.accessories) === null || _data$tradedetils9$tr2 === void 0 ? void 0 : _data$tradedetils9$tr2.length); i++) {
      var _data$tradedetils9, _data$tradedetils9$tr, _data$tradedetils9$tr2, _data$accessories5;
      let filteredArrayAcc = data === null || data === void 0 ? void 0 : (_data$accessories5 = data.accessories) === null || _data$accessories5 === void 0 ? void 0 : _data$accessories5.filter(unit => {
        var _data$tradedetils10, _data$tradedetils10$t, _data$tradedetils10$t2;
        return unit.id === (data === null || data === void 0 ? void 0 : (_data$tradedetils10 = data.tradedetils1) === null || _data$tradedetils10 === void 0 ? void 0 : (_data$tradedetils10$t = _data$tradedetils10.tradeLicenseDetail) === null || _data$tradedetils10$t === void 0 ? void 0 : (_data$tradedetils10$t2 = _data$tradedetils10$t.accessories[i]) === null || _data$tradedetils10$t2 === void 0 ? void 0 : _data$tradedetils10$t2.id);
      });
      if ((filteredArrayAcc === null || filteredArrayAcc === void 0 ? void 0 : filteredArrayAcc.length) == 0) {
        var _data$tradedetils11, _data$tradedetils11$t;
        let removedUnitAcc = data === null || data === void 0 ? void 0 : (_data$tradedetils11 = data.tradedetils1) === null || _data$tradedetils11 === void 0 ? void 0 : (_data$tradedetils11$t = _data$tradedetils11.tradeLicenseDetail) === null || _data$tradedetils11$t === void 0 ? void 0 : _data$tradedetils11$t.accessories[i];
        removedUnitAcc.active = false;
        data.accessories = data !== null && data !== void 0 && data.accessories ? data.accessories : [];
        data.accessories.push(removedUnitAcc);
        EDITRENEWAL = true;
      }
    }
    if (data !== null && data !== void 0 && (_data$tradedetils12 = data.tradedetils1) !== null && _data$tradedetils12 !== void 0 && _data$tradedetils12.tradeLicenseDetail && (data === null || data === void 0 ? void 0 : (_data$tradedetils13 = data.tradedetils1) === null || _data$tradedetils13 === void 0 ? void 0 : (_data$tradedetils13$t = _data$tradedetils13.tradeLicenseDetail) === null || _data$tradedetils13$t === void 0 ? void 0 : _data$tradedetils13$t.accessories) == null && data.accessories) {
      EDITRENEWAL = true;
    }
    if (!(data !== null && data !== void 0 && data.address)) {
      var _data$tradedetils14, _data$tradedetils14$t;
      data.address = {};
      data.address = (data === null || data === void 0 ? void 0 : (_data$tradedetils14 = data.tradedetils1) === null || _data$tradedetils14 === void 0 ? void 0 : (_data$tradedetils14$t = _data$tradedetils14.tradeLicenseDetail) === null || _data$tradedetils14$t === void 0 ? void 0 : _data$tradedetils14$t.address) || {};
    } else {
      var _data$address, _data$address$city;
      data.address.city = (data === null || data === void 0 ? void 0 : (_data$address = data.address) === null || _data$address === void 0 ? void 0 : (_data$address$city = _data$address.city) === null || _data$address$city === void 0 ? void 0 : _data$address$city.code) || null;
    }
    if ((data === null || data === void 0 ? void 0 : (_data$tradedetils15 = data.tradedetils1) === null || _data$tradedetils15 === void 0 ? void 0 : _data$tradedetils15.tradeLicenseDetail.address.doorNo) !== (data === null || data === void 0 ? void 0 : (_data$address2 = data.address) === null || _data$address2 === void 0 ? void 0 : _data$address2.doorNo)) {
      EDITRENEWAL = true;
    }
    if ((data === null || data === void 0 ? void 0 : (_data$tradedetils16 = data.tradedetils1) === null || _data$tradedetils16 === void 0 ? void 0 : _data$tradedetils16.tradeLicenseDetail.address.street) !== (data === null || data === void 0 ? void 0 : (_data$address3 = data.address) === null || _data$address3 === void 0 ? void 0 : _data$address3.street)) {
      EDITRENEWAL = true;
    }
    if (new URLSearchParams(loc.search).get("propertyId") && new URLSearchParams(loc.search).get("propertyId") !== (loc === null || loc === void 0 ? void 0 : (_loc$state2 = loc.state) === null || _loc$state2 === void 0 ? void 0 : (_loc$state2$applicati = _loc$state2.applicationDetails.find(details => (details === null || details === void 0 ? void 0 : details.title) === "PT_DETAILS")) === null || _loc$state2$applicati === void 0 ? void 0 : (_loc$state2$applicati2 = _loc$state2$applicati.values.find(value => (value === null || value === void 0 ? void 0 : value.title) === "TL_PROPERTY_ID")) === null || _loc$state2$applicati2 === void 0 ? void 0 : _loc$state2$applicati2.value)) {
      EDITRENEWAL = true;
    }
    let applicationDocuments = (data === null || data === void 0 ? void 0 : (_data$documents = data.documents) === null || _data$documents === void 0 ? void 0 : _data$documents.documents) || [];
    let commencementDate = convertDateToEpoch(data === null || data === void 0 ? void 0 : (_data$tradedetils17 = data.tradedetils) === null || _data$tradedetils17 === void 0 ? void 0 : (_data$tradedetils17$ = _data$tradedetils17["0"]) === null || _data$tradedetils17$ === void 0 ? void 0 : _data$tradedetils17$.commencementDate);
    let financialYear = data === null || data === void 0 ? void 0 : (_data$tradedetils18 = data.tradedetils) === null || _data$tradedetils18 === void 0 ? void 0 : (_data$tradedetils18$ = _data$tradedetils18["0"]) === null || _data$tradedetils18$ === void 0 ? void 0 : (_data$tradedetils18$$ = _data$tradedetils18$.financialYear) === null || _data$tradedetils18$$ === void 0 ? void 0 : _data$tradedetils18$$.code;
    let gstNo = (data === null || data === void 0 ? void 0 : (_data$tradedetils19 = data.tradedetils) === null || _data$tradedetils19 === void 0 ? void 0 : (_data$tradedetils19$ = _data$tradedetils19["0"]) === null || _data$tradedetils19$ === void 0 ? void 0 : _data$tradedetils19$.gstNo) || "";
    let noOfEmployees = Number(data === null || data === void 0 ? void 0 : (_data$tradedetils20 = data.tradedetils) === null || _data$tradedetils20 === void 0 ? void 0 : (_data$tradedetils20$ = _data$tradedetils20["0"]) === null || _data$tradedetils20$ === void 0 ? void 0 : _data$tradedetils20$.noOfEmployees) || "";
    let operationalArea = Number(data === null || data === void 0 ? void 0 : (_data$tradedetils21 = data.tradedetils) === null || _data$tradedetils21 === void 0 ? void 0 : (_data$tradedetils21$ = _data$tradedetils21["0"]) === null || _data$tradedetils21$ === void 0 ? void 0 : _data$tradedetils21$.operationalArea) || "";
    let structureType = (data === null || data === void 0 ? void 0 : (_data$tradedetils22 = data.tradedetils) === null || _data$tradedetils22 === void 0 ? void 0 : (_data$tradedetils22$ = _data$tradedetils22["0"]) === null || _data$tradedetils22$ === void 0 ? void 0 : (_data$tradedetils22$$ = _data$tradedetils22$.structureSubType) === null || _data$tradedetils22$$ === void 0 ? void 0 : _data$tradedetils22$$.code) || "";
    let tradeName = (data === null || data === void 0 ? void 0 : (_data$tradedetils23 = data.tradedetils) === null || _data$tradedetils23 === void 0 ? void 0 : (_data$tradedetils23$ = _data$tradedetils23["0"]) === null || _data$tradedetils23$ === void 0 ? void 0 : _data$tradedetils23$.tradeName) || "";
    let subOwnerShipCategory = (data === null || data === void 0 ? void 0 : (_data$ownershipCatego = data.ownershipCategory) === null || _data$ownershipCatego === void 0 ? void 0 : _data$ownershipCatego.code) || "";
    let licenseType = (data === null || data === void 0 ? void 0 : (_data$tradedetils24 = data.tradedetils) === null || _data$tradedetils24 === void 0 ? void 0 : (_data$tradedetils24$ = _data$tradedetils24["0"]) === null || _data$tradedetils24$ === void 0 ? void 0 : (_data$tradedetils24$$ = _data$tradedetils24$.licenseType) === null || _data$tradedetils24$$ === void 0 ? void 0 : _data$tradedetils24$$.code) || "PERMANENT";
    if (!EDITRENEWAL || sendBackToCitizen) {
      var _data$tradedetils25, _data$tradedetils26, _data$accessories6, _data$tradeUnits3, _data$owners3, _data$owners4, _data$owners4$, _data$owners4$$subOwn, _formData2, _formData2$tradeLicen, _formData2$tradeLicen2, _formData2$tradeLicen3, _formData2$tradeLicen4, _formData2$tradeLicen5, _data$owners5, _data$owners5$, _formData3, _formData3$tradeLicen, _formData3$tradeLicen2, _formData3$tradeLicen3, _formData3$tradeLicen4, _formData3$tradeLicen5, _formData4, _formData4$tradeLicen, _data$owners6, _data$owners6$, _data$owners7, _data$owners7$, _data$owners8, _data$owners8$, _data$owners9, _data$owners9$, _data$owners10, _data$owners10$, _data$owners11, _data$owners11$, _Digit, _Digit$Customizations, _Digit$Customizations2, _Digit2, _Digit2$Customization, _Digit2$Customization2;
      let formData = cloneDeep_1(data.tradedetils1);
      formData.action = sendBackToCitizen ? "RESUBMIT" : "INITIATE", formData.applicationType = sendBackToCitizen ? data === null || data === void 0 ? void 0 : (_data$tradedetils25 = data.tradedetils1) === null || _data$tradedetils25 === void 0 ? void 0 : _data$tradedetils25.applicationType : "RENEWAL", formData.workflowCode = sendBackToCitizen ? data === null || data === void 0 ? void 0 : (_data$tradedetils26 = data.tradedetils1) === null || _data$tradedetils26 === void 0 ? void 0 : _data$tradedetils26.workflowCode : "DIRECTRENEWAL", formData.commencementDate = commencementDate;
      formData.financialYear = financialYear;
      formData.licenseType = licenseType;
      formData.tenantId = tenantId;
      formData.tradeName = tradeName;
      if (gstNo) formData.tradeLicenseDetail.additionalDetail.gstNo = gstNo;
      if (noOfEmployees) formData.tradeLicenseDetail.noOfEmployees = noOfEmployees;
      if (operationalArea) formData.tradeLicenseDetail.operationalArea = operationalArea;
      if ((data === null || data === void 0 ? void 0 : (_data$accessories6 = data.accessories) === null || _data$accessories6 === void 0 ? void 0 : _data$accessories6.length) > 0) formData.tradeLicenseDetail.accessories = data === null || data === void 0 ? void 0 : data.accessories;
      if ((data === null || data === void 0 ? void 0 : (_data$tradeUnits3 = data.tradeUnits) === null || _data$tradeUnits3 === void 0 ? void 0 : _data$tradeUnits3.length) > 0) formData.tradeLicenseDetail.tradeUnits = data === null || data === void 0 ? void 0 : data.tradeUnits;
      if ((data === null || data === void 0 ? void 0 : (_data$owners3 = data.owners) === null || _data$owners3 === void 0 ? void 0 : _data$owners3.length) > 0) formData.tradeLicenseDetail.owners = data === null || data === void 0 ? void 0 : data.owners;
      if (structureType) formData.tradeLicenseDetail.structureType = structureType;
      if (subOwnerShipCategory || data !== null && data !== void 0 && (_data$owners4 = data.owners) !== null && _data$owners4 !== void 0 && (_data$owners4$ = _data$owners4[0]) !== null && _data$owners4$ !== void 0 && (_data$owners4$$subOwn = _data$owners4$.subOwnerShipCategory) !== null && _data$owners4$$subOwn !== void 0 && _data$owners4$$subOwn.code) formData.tradeLicenseDetail.subOwnerShipCategory = (_formData2 = formData) !== null && _formData2 !== void 0 && (_formData2$tradeLicen = _formData2.tradeLicenseDetail) !== null && _formData2$tradeLicen !== void 0 && (_formData2$tradeLicen2 = _formData2$tradeLicen.owners) !== null && _formData2$tradeLicen2 !== void 0 && (_formData2$tradeLicen3 = _formData2$tradeLicen2[0]) !== null && _formData2$tradeLicen3 !== void 0 && (_formData2$tradeLicen4 = _formData2$tradeLicen3.subOwnerShipCategory) !== null && _formData2$tradeLicen4 !== void 0 && (_formData2$tradeLicen5 = _formData2$tradeLicen4.code) !== null && _formData2$tradeLicen5 !== void 0 && _formData2$tradeLicen5.includes("INSTITUTIONAL") ? data === null || data === void 0 ? void 0 : (_data$owners5 = data.owners) === null || _data$owners5 === void 0 ? void 0 : (_data$owners5$ = _data$owners5[0]) === null || _data$owners5$ === void 0 ? void 0 : _data$owners5$.subOwnerShipCategory.code : subOwnerShipCategory;
      if ((_formData3 = formData) !== null && _formData3 !== void 0 && (_formData3$tradeLicen = _formData3.tradeLicenseDetail) !== null && _formData3$tradeLicen !== void 0 && (_formData3$tradeLicen2 = _formData3$tradeLicen.owners) !== null && _formData3$tradeLicen2 !== void 0 && (_formData3$tradeLicen3 = _formData3$tradeLicen2[0]) !== null && _formData3$tradeLicen3 !== void 0 && (_formData3$tradeLicen4 = _formData3$tradeLicen3.subOwnerShipCategory) !== null && _formData3$tradeLicen4 !== void 0 && (_formData3$tradeLicen5 = _formData3$tradeLicen4.code) !== null && _formData3$tradeLicen5 !== void 0 && _formData3$tradeLicen5.includes("INSTITUTIONAL")) formData.tradeLicenseDetail.institution = {
        ...((_formData4 = formData) === null || _formData4 === void 0 ? void 0 : (_formData4$tradeLicen = _formData4.tradeLicenseDetail) === null || _formData4$tradeLicen === void 0 ? void 0 : _formData4$tradeLicen.institution),
        contactNo: data === null || data === void 0 ? void 0 : (_data$owners6 = data.owners) === null || _data$owners6 === void 0 ? void 0 : (_data$owners6$ = _data$owners6[0]) === null || _data$owners6$ === void 0 ? void 0 : _data$owners6$.altContactNumber,
        designation: data === null || data === void 0 ? void 0 : (_data$owners7 = data.owners) === null || _data$owners7 === void 0 ? void 0 : (_data$owners7$ = _data$owners7[0]) === null || _data$owners7$ === void 0 ? void 0 : _data$owners7$.designation,
        instituionName: data === null || data === void 0 ? void 0 : (_data$owners8 = data.owners) === null || _data$owners8 === void 0 ? void 0 : (_data$owners8$ = _data$owners8[0]) === null || _data$owners8$ === void 0 ? void 0 : _data$owners8$.instituionName,
        name: data === null || data === void 0 ? void 0 : (_data$owners9 = data.owners) === null || _data$owners9 === void 0 ? void 0 : (_data$owners9$ = _data$owners9[0]) === null || _data$owners9$ === void 0 ? void 0 : _data$owners9$.name,
        mobileNumber: data === null || data === void 0 ? void 0 : (_data$owners10 = data.owners) === null || _data$owners10 === void 0 ? void 0 : (_data$owners10$ = _data$owners10[0]) === null || _data$owners10$ === void 0 ? void 0 : _data$owners10$.mobileNumber,
        emailId: data === null || data === void 0 ? void 0 : (_data$owners11 = data.owners) === null || _data$owners11 === void 0 ? void 0 : (_data$owners11$ = _data$owners11[0]) === null || _data$owners11$ === void 0 ? void 0 : _data$owners11$.emailId
      };
      formData = (_Digit = Digit) !== null && _Digit !== void 0 && (_Digit$Customizations = _Digit.Customizations) !== null && _Digit$Customizations !== void 0 && (_Digit$Customizations2 = _Digit$Customizations.TL) !== null && _Digit$Customizations2 !== void 0 && _Digit$Customizations2.customiseSendbackFormData ? (_Digit2 = Digit) === null || _Digit2 === void 0 ? void 0 : (_Digit2$Customization = _Digit2.Customizations) === null || _Digit2$Customization === void 0 ? void 0 : (_Digit2$Customization2 = _Digit2$Customization.TL) === null || _Digit2$Customization2 === void 0 ? void 0 : _Digit2$Customization2.customiseSendbackFormData(data, formData) : formData;
      Digit.TLService.update({
        Licenses: [formData]
      }, tenantId).then((result, err) => {
        var _result$Licenses;
        if ((result === null || result === void 0 ? void 0 : (_result$Licenses = result.Licenses) === null || _result$Licenses === void 0 ? void 0 : _result$Licenses.length) > 0) {
          var _result$Licenses2;
          if ((result === null || result === void 0 ? void 0 : (_result$Licenses2 = result.Licenses) === null || _result$Licenses2 === void 0 ? void 0 : _result$Licenses2.length) > 0) {
            history.replace(`/digit-ui/employee/tl/response`, {
              data: result === null || result === void 0 ? void 0 : result.Licenses
            });
          }
        }
      }).catch(e => {
        var _e$response, _e$response$data, _e$response$data$Erro;
        setShowToast({
          key: "error"
        });
        setError((e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : (_e$response$data$Erro = _e$response$data.Errors[0]) === null || _e$response$data$Erro === void 0 ? void 0 : _e$response$data$Erro.message) || null);
      });
    } else {
      var _data$accessories7, _data$tradeUnits4, _data$tradeUnits5, _data$owners12, _data$owners13, _data$cpt3, _data$cpt3$details, _data$owners14, _data$owners14$, _data$owners14$$subOw, _formData5, _formData5$tradeLicen, _formData5$tradeLicen2, _formData5$tradeLicen3, _formData5$tradeLicen4, _formData5$tradeLicen5, _data$owners15, _data$owners15$, _data$owners15$$subOw, _formData7, _formData7$tradeLicen, _formData7$tradeLicen2, _formData7$tradeLicen3, _formData7$tradeLicen4, _formData7$tradeLicen5, _formData8, _formData8$tradeLicen, _data$owners16, _data$owners16$, _data$owners17, _data$owners17$, _data$owners18, _data$owners18$, _data$owners19, _data$owners19$, _data$owners20, _data$owners20$, _data$owners21, _data$owners21$, _Digit3, _Digit3$Customization, _Digit3$Customization2, _Digit4, _Digit4$Customization, _Digit4$Customization2;
      let formData = cloneDeep_1(data.tradedetils1);
      formData.action = "INITIATE", formData.applicationType = "RENEWAL", formData.workflowCode = "EDITRENEWAL", formData.commencementDate = commencementDate;
      formData.financialYear = financialYear;
      formData.licenseType = licenseType;
      formData.tenantId = tenantId;
      formData.tradeName = tradeName;
      if (gstNo) formData.tradeLicenseDetail.additionalDetail.gstNo = gstNo;
      if (noOfEmployees) formData.tradeLicenseDetail.noOfEmployees = noOfEmployees;
      if (operationalArea) formData.tradeLicenseDetail.operationalArea = operationalArea;
      if ((data === null || data === void 0 ? void 0 : (_data$accessories7 = data.accessories) === null || _data$accessories7 === void 0 ? void 0 : _data$accessories7.length) > 0) formData.tradeLicenseDetail.accessories = data === null || data === void 0 ? void 0 : data.accessories;
      if ((data === null || data === void 0 ? void 0 : (_data$tradeUnits4 = data.tradeUnits) === null || _data$tradeUnits4 === void 0 ? void 0 : _data$tradeUnits4.length) > 0) formData.tradeLicenseDetail.tradeUnits = data === null || data === void 0 ? void 0 : (_data$tradeUnits5 = data.tradeUnits) === null || _data$tradeUnits5 === void 0 ? void 0 : _data$tradeUnits5.filter(ob => (ob === null || ob === void 0 ? void 0 : ob.active) !== false);
      if ((data === null || data === void 0 ? void 0 : (_data$owners12 = data.owners) === null || _data$owners12 === void 0 ? void 0 : _data$owners12.length) > 0) formData.tradeLicenseDetail.owners = data === null || data === void 0 ? void 0 : (_data$owners13 = data.owners) === null || _data$owners13 === void 0 ? void 0 : _data$owners13.filter(ob => (ob === null || ob === void 0 ? void 0 : ob.active) !== false);
      if (data !== null && data !== void 0 && data.address) formData.tradeLicenseDetail.address = data === null || data === void 0 ? void 0 : data.address;
      if (data !== null && data !== void 0 && (_data$cpt3 = data.cpt) !== null && _data$cpt3 !== void 0 && (_data$cpt3$details = _data$cpt3.details) !== null && _data$cpt3$details !== void 0 && _data$cpt3$details.address || propertyDetails) {
        var _data$cpt4, _ptdet$address, _ptdet$address2, _ptdet$address2$local, _ptdet$address3, _data$address4, _ptdet$address4, _data$address5, _ptdet$address5, _data$address6, _ptdet$address6, _data$address7, _ptdet$address7, _ptdet$address8;
        let address = {};
        let ptdet = (data === null || data === void 0 ? void 0 : (_data$cpt4 = data.cpt) === null || _data$cpt4 === void 0 ? void 0 : _data$cpt4.details) || propertyDetails;
        address.city = (ptdet === null || ptdet === void 0 ? void 0 : (_ptdet$address = ptdet.address) === null || _ptdet$address === void 0 ? void 0 : _ptdet$address.city) || null;
        address.locality = {
          code: (ptdet === null || ptdet === void 0 ? void 0 : (_ptdet$address2 = ptdet.address) === null || _ptdet$address2 === void 0 ? void 0 : (_ptdet$address2$local = _ptdet$address2.locality) === null || _ptdet$address2$local === void 0 ? void 0 : _ptdet$address2$local.code) || null
        };
        if (ptdet !== null && ptdet !== void 0 && (_ptdet$address3 = ptdet.address) !== null && _ptdet$address3 !== void 0 && _ptdet$address3.doorNo || data !== null && data !== void 0 && (_data$address4 = data.address) !== null && _data$address4 !== void 0 && _data$address4.doorNo) address.doorNo = (ptdet === null || ptdet === void 0 ? void 0 : (_ptdet$address4 = ptdet.address) === null || _ptdet$address4 === void 0 ? void 0 : _ptdet$address4.doorNo) || (data === null || data === void 0 ? void 0 : (_data$address5 = data.address) === null || _data$address5 === void 0 ? void 0 : _data$address5.doorNo) || null;
        if (ptdet !== null && ptdet !== void 0 && (_ptdet$address5 = ptdet.address) !== null && _ptdet$address5 !== void 0 && _ptdet$address5.street || data !== null && data !== void 0 && (_data$address6 = data.address) !== null && _data$address6 !== void 0 && _data$address6.street) address.street = (ptdet === null || ptdet === void 0 ? void 0 : (_ptdet$address6 = ptdet.address) === null || _ptdet$address6 === void 0 ? void 0 : _ptdet$address6.street) || (data === null || data === void 0 ? void 0 : (_data$address7 = data.address) === null || _data$address7 === void 0 ? void 0 : _data$address7.street) || null;
        if (ptdet !== null && ptdet !== void 0 && (_ptdet$address7 = ptdet.address) !== null && _ptdet$address7 !== void 0 && _ptdet$address7.pincode) address.pincode = ptdet === null || ptdet === void 0 ? void 0 : (_ptdet$address8 = ptdet.address) === null || _ptdet$address8 === void 0 ? void 0 : _ptdet$address8.pincode;
        formData.tradeLicenseDetail.address = address;
      }
      if (structureType) formData.tradeLicenseDetail.structureType = structureType;
      if (subOwnerShipCategory || data !== null && data !== void 0 && (_data$owners14 = data.owners) !== null && _data$owners14 !== void 0 && (_data$owners14$ = _data$owners14[0]) !== null && _data$owners14$ !== void 0 && (_data$owners14$$subOw = _data$owners14$.subOwnerShipCategory) !== null && _data$owners14$$subOw !== void 0 && _data$owners14$$subOw.code) formData.tradeLicenseDetail["subOwnerShipCategory"] = (_formData5 = formData) !== null && _formData5 !== void 0 && (_formData5$tradeLicen = _formData5.tradeLicenseDetail) !== null && _formData5$tradeLicen !== void 0 && (_formData5$tradeLicen2 = _formData5$tradeLicen.owners) !== null && _formData5$tradeLicen2 !== void 0 && (_formData5$tradeLicen3 = _formData5$tradeLicen2[0]) !== null && _formData5$tradeLicen3 !== void 0 && (_formData5$tradeLicen4 = _formData5$tradeLicen3.subOwnerShipCategory) !== null && _formData5$tradeLicen4 !== void 0 && (_formData5$tradeLicen5 = _formData5$tradeLicen4.code) !== null && _formData5$tradeLicen5 !== void 0 && _formData5$tradeLicen5.includes("INSTITUTIONAL") ? data === null || data === void 0 ? void 0 : (_data$owners15 = data.owners) === null || _data$owners15 === void 0 ? void 0 : (_data$owners15$ = _data$owners15[0]) === null || _data$owners15$ === void 0 ? void 0 : (_data$owners15$$subOw = _data$owners15$.subOwnerShipCategory) === null || _data$owners15$$subOw === void 0 ? void 0 : _data$owners15$$subOw.code : subOwnerShipCategory;
      if (applicationDocuments) formData.tradeLicenseDetail.applicationDocuments = applicationDocuments;
      if (data !== null && data !== void 0 && data.cpt || propertyDetails) {
        var _formData6, _formData6$tradeLicen, _formData6$tradeLicen2, _data$cpt5, _data$cpt5$details;
        if (!((_formData6 = formData) !== null && _formData6 !== void 0 && (_formData6$tradeLicen = _formData6.tradeLicenseDetail) !== null && _formData6$tradeLicen !== void 0 && (_formData6$tradeLicen2 = _formData6$tradeLicen.additionalDetail) !== null && _formData6$tradeLicen2 !== void 0 && _formData6$tradeLicen2.propertyId)) {
          formData.tradeLicenseDetail.additionalDetail = {
            propertyId: null
          };
        }
        formData.tradeLicenseDetail.additionalDetail.propertyId = (data === null || data === void 0 ? void 0 : (_data$cpt5 = data.cpt) === null || _data$cpt5 === void 0 ? void 0 : (_data$cpt5$details = _data$cpt5.details) === null || _data$cpt5$details === void 0 ? void 0 : _data$cpt5$details.propertyId) || (propertyDetails === null || propertyDetails === void 0 ? void 0 : propertyDetails.propertyId);
      }
      if ((_formData7 = formData) !== null && _formData7 !== void 0 && (_formData7$tradeLicen = _formData7.tradeLicenseDetail) !== null && _formData7$tradeLicen !== void 0 && (_formData7$tradeLicen2 = _formData7$tradeLicen.owners) !== null && _formData7$tradeLicen2 !== void 0 && (_formData7$tradeLicen3 = _formData7$tradeLicen2[0]) !== null && _formData7$tradeLicen3 !== void 0 && (_formData7$tradeLicen4 = _formData7$tradeLicen3.subOwnerShipCategory) !== null && _formData7$tradeLicen4 !== void 0 && (_formData7$tradeLicen5 = _formData7$tradeLicen4.code) !== null && _formData7$tradeLicen5 !== void 0 && _formData7$tradeLicen5.includes("INSTITUTIONAL")) formData.tradeLicenseDetail.institution = {
        ...((_formData8 = formData) === null || _formData8 === void 0 ? void 0 : (_formData8$tradeLicen = _formData8.tradeLicenseDetail) === null || _formData8$tradeLicen === void 0 ? void 0 : _formData8$tradeLicen.institution),
        contactNo: data === null || data === void 0 ? void 0 : (_data$owners16 = data.owners) === null || _data$owners16 === void 0 ? void 0 : (_data$owners16$ = _data$owners16[0]) === null || _data$owners16$ === void 0 ? void 0 : _data$owners16$.altContactNumber,
        designation: data === null || data === void 0 ? void 0 : (_data$owners17 = data.owners) === null || _data$owners17 === void 0 ? void 0 : (_data$owners17$ = _data$owners17[0]) === null || _data$owners17$ === void 0 ? void 0 : _data$owners17$.designation,
        instituionName: data === null || data === void 0 ? void 0 : (_data$owners18 = data.owners) === null || _data$owners18 === void 0 ? void 0 : (_data$owners18$ = _data$owners18[0]) === null || _data$owners18$ === void 0 ? void 0 : _data$owners18$.instituionName,
        name: data === null || data === void 0 ? void 0 : (_data$owners19 = data.owners) === null || _data$owners19 === void 0 ? void 0 : (_data$owners19$ = _data$owners19[0]) === null || _data$owners19$ === void 0 ? void 0 : _data$owners19$.name,
        mobileNumber: data === null || data === void 0 ? void 0 : (_data$owners20 = data.owners) === null || _data$owners20 === void 0 ? void 0 : (_data$owners20$ = _data$owners20[0]) === null || _data$owners20$ === void 0 ? void 0 : _data$owners20$.mobileNumber,
        emailId: data === null || data === void 0 ? void 0 : (_data$owners21 = data.owners) === null || _data$owners21 === void 0 ? void 0 : (_data$owners21$ = _data$owners21[0]) === null || _data$owners21$ === void 0 ? void 0 : _data$owners21$.emailId
      };
      formData = (_Digit3 = Digit) !== null && _Digit3 !== void 0 && (_Digit3$Customization = _Digit3.Customizations) !== null && _Digit3$Customization !== void 0 && (_Digit3$Customization2 = _Digit3$Customization.TL) !== null && _Digit3$Customization2 !== void 0 && _Digit3$Customization2.customiseRenewalCreateFormData ? (_Digit4 = Digit) === null || _Digit4 === void 0 ? void 0 : (_Digit4$Customization = _Digit4.Customizations) === null || _Digit4$Customization === void 0 ? void 0 : (_Digit4$Customization2 = _Digit4$Customization.TL) === null || _Digit4$Customization2 === void 0 ? void 0 : _Digit4$Customization2.customiseRenewalCreateFormData(data, formData) : formData;
      Digit.TLService.update({
        Licenses: [formData]
      }, tenantId).then((result, err) => {
        var _result$Licenses3;
        if ((result === null || result === void 0 ? void 0 : (_result$Licenses3 = result.Licenses) === null || _result$Licenses3 === void 0 ? void 0 : _result$Licenses3.length) > 0) {
          var _result$Licenses4;
          let licenses = result === null || result === void 0 ? void 0 : (_result$Licenses4 = result.Licenses) === null || _result$Licenses4 === void 0 ? void 0 : _result$Licenses4[0];
          licenses.action = "APPLY";
          Digit.TLService.update({
            Licenses: [licenses]
          }, tenantId).then(response => {
            var _response$Licenses$, _response$Licenses$$a, _response$Licenses;
            Digit.SessionStorage.set("EditRenewalApplastModifiedTime", response === null || response === void 0 ? void 0 : (_response$Licenses$ = response.Licenses[0]) === null || _response$Licenses$ === void 0 ? void 0 : (_response$Licenses$$a = _response$Licenses$.auditDetails) === null || _response$Licenses$$a === void 0 ? void 0 : _response$Licenses$$a.lastModifiedTime);
            if ((response === null || response === void 0 ? void 0 : (_response$Licenses = response.Licenses) === null || _response$Licenses === void 0 ? void 0 : _response$Licenses.length) > 0) {
              history.replace(`/digit-ui/employee/tl/response`, {
                data: response === null || response === void 0 ? void 0 : response.Licenses
              });
            }
          }).catch(e => {
            var _e$response2, _e$response2$data, _e$response2$data$Err;
            setShowToast({
              key: "error"
            });
            setError((e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : (_e$response2$data$Err = _e$response2$data.Errors[0]) === null || _e$response2$data$Err === void 0 ? void 0 : _e$response2$data$Err.message) || null);
          });
        }
      }).catch(e => {
        var _e$response3, _e$response3$data, _e$response3$data$Err;
        setShowToast({
          key: "error"
        });
        setError((e === null || e === void 0 ? void 0 : (_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : (_e$response3$data = _e$response3.data) === null || _e$response3$data === void 0 ? void 0 : (_e$response3$data$Err = _e$response3$data.Errors[0]) === null || _e$response3$data$Err === void 0 ? void 0 : _e$response3$data$Err.message) || null);
      });
    }
  };
  let configs = [];
  newConfig$1 = newConfig$1 ? newConfig$1 : newConfig;
  (_newConfig = newConfig$1) === null || _newConfig === void 0 ? void 0 : _newConfig.map(conf => {
    if (conf.head !== "ES_NEW_APPLICATION_PROPERTY_ASSESSMENT") {
      configs.push(conf);
    }
  });
  function checkHead(head) {
    var _defaultValues$traded, _defaultValues$traded2, _defaultValues$traded3;
    if (head === "ES_NEW_APPLICATION_LOCATION_DETAILS") {
      return "TL_CHECK_ADDRESS";
    } else if (head === "ES_NEW_APPLICATION_OWNERSHIP_DETAILS") {
      return "TL_OWNERSHIP_DETAILS_HEADER";
    } else if (head === "TL_NEW_APPLICATION_PROPERTY" && (defaultValues === null || defaultValues === void 0 ? void 0 : (_defaultValues$traded = defaultValues.tradedetils) === null || _defaultValues$traded === void 0 ? void 0 : (_defaultValues$traded2 = _defaultValues$traded[0]) === null || _defaultValues$traded2 === void 0 ? void 0 : (_defaultValues$traded3 = _defaultValues$traded2.structureType) === null || _defaultValues$traded3 === void 0 ? void 0 : _defaultValues$traded3.code) === "MOVABLE" && (isEmpNewApplication || isEmpRenewLicense)) {
      return "";
    } else {
      return head;
    }
  }
  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
    style: {
      marginLeft: "15px"
    }
  }, /*#__PURE__*/React.createElement(Header, null, window.location.href.includes("employee/tl/edit-application-details") ? t("ES_TITLE_RE_NEW_TRADE_LICESE_APPLICATION") : t("ES_TITLE_RENEW_TRADE_LICESE_APPLICATION"))), /*#__PURE__*/React.createElement(FormComposer, {
    heading: "",
    isDisabled: !canSubmit,
    label: t("ES_COMMON_APPLICATION_SUBMIT"),
    config: configs.map(config => {
      return {
        ...config,
        body: config.body.filter(a => {
          return !a.hideInEmployee;
        }),
        head: checkHead(config.head)
      };
    }),
    fieldStyle: {
      marginRight: 0
    },
    onSubmit: onSubmit,
    defaultValues: defaultValues,
    onFormValueChange: onFormValueChange,
    breaklineStyle: {
      border: "0px"
    }
  }), showToast && /*#__PURE__*/React.createElement(Toast, {
    error: (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? true : false,
    label: error,
    onClose: closeToast
  }));
};

const Search = ({
  path
}) => {
  const {
    variant
  } = useParams();
  const {
    t
  } = useTranslation();
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const [payload, setPayload] = useState({});
  const Search = Digit.ComponentRegistryService.getComponent(variant === "license" ? "SearchLicense" : "SearchApplication");
  function onSubmit(_data) {
    Digit.SessionStorage.set("SEARCH_APPLICATION_DETAIL", {
      applicationNumber: _data === null || _data === void 0 ? void 0 : _data.applicationNumber,
      licenseNumbers: _data === null || _data === void 0 ? void 0 : _data.licenseNumbers,
      applicationType: _data === null || _data === void 0 ? void 0 : _data.applicationType,
      tradeName: _data === null || _data === void 0 ? void 0 : _data.tradeName,
      fromDate: _data === null || _data === void 0 ? void 0 : _data.fromDate,
      toDate: _data === null || _data === void 0 ? void 0 : _data.toDate,
      limit: 10,
      sortBy: "commencementDate",
      sortOrder: "DESC",
      status: _data.status
    });
    var fromDate = new Date(_data === null || _data === void 0 ? void 0 : _data.fromDate);
    fromDate === null || fromDate === void 0 ? void 0 : fromDate.setSeconds((fromDate === null || fromDate === void 0 ? void 0 : fromDate.getSeconds()) - 19800);
    var toDate = new Date(_data === null || _data === void 0 ? void 0 : _data.toDate);
    toDate === null || toDate === void 0 ? void 0 : toDate.setSeconds((toDate === null || toDate === void 0 ? void 0 : toDate.getSeconds()) + 86399 - 19800);
    const data = {
      ..._data,
      ...(_data.toDate ? {
        toDate: toDate === null || toDate === void 0 ? void 0 : toDate.getTime()
      } : {}),
      ...(_data.fromDate ? {
        fromDate: fromDate === null || fromDate === void 0 ? void 0 : fromDate.getTime()
      } : {})
    };
    setPayload(Object.keys(data).filter(k => data[k]).reduce((acc, key) => ({
      ...acc,
      [key]: typeof data[key] === "object" ? data[key].code : data[key]
    }), {}));
  }
  useEffect(() => {
    const storedPayload = Digit.SessionStorage.get("SEARCH_APPLICATION_DETAIL") || {};
    if (storedPayload) {
      var fromDate = new Date(storedPayload === null || storedPayload === void 0 ? void 0 : storedPayload.fromDate);
      fromDate === null || fromDate === void 0 ? void 0 : fromDate.setSeconds((fromDate === null || fromDate === void 0 ? void 0 : fromDate.getSeconds()) - 19800);
      var toDate = new Date(storedPayload === null || storedPayload === void 0 ? void 0 : storedPayload.toDate);
      toDate === null || toDate === void 0 ? void 0 : toDate.setSeconds((toDate === null || toDate === void 0 ? void 0 : toDate.getSeconds()) + 86399 - 19800);
      const data = {
        ...storedPayload,
        ...(storedPayload.toDate ? {
          toDate: toDate === null || toDate === void 0 ? void 0 : toDate.getTime()
        } : {}),
        ...(storedPayload.fromDate ? {
          fromDate: fromDate === null || fromDate === void 0 ? void 0 : fromDate.getTime()
        } : {})
      };
      setPayload(Object.keys(data).filter(k => data[k]).reduce((acc, key) => ({
        ...acc,
        [key]: typeof data[key] === "object" ? data[key].code : data[key]
      }), {}));
    }
  }, []);
  const config = {
    enabled: !!(payload && Object.keys(payload).length > 0)
  };
  const {
    data: {
      Licenses: searchReult,
      Count: count
    } = {},
    isLoading,
    isSuccess
  } = Digit.Hooks.tl.useSearch({
    tenantId,
    filters: payload,
    config
  });
  const workFlowConfig = {
    enabled: payload && Object.keys(payload).length > 0 && !isLoading && isSuccess
  };
  const {
    data: {
      ProcessInstances: assigneeResults
    } = {},
    isLoading: isWorkflowLoading,
    isSuccess: isWorkflowSuccess
  } = Digit.Hooks.tl.useTLWorkflowData({
    tenantId,
    filters: {
      businessIds: searchReult === null || searchReult === void 0 ? void 0 : searchReult.map(license => license === null || license === void 0 ? void 0 : license.applicationNumber).join(",")
    },
    config: {
      ...workFlowConfig
    }
  });
  return /*#__PURE__*/React.createElement(Search, {
    t: t,
    tenantId: tenantId,
    onSubmit: onSubmit,
    data: !isLoading && isSuccess && !isWorkflowLoading && isWorkflowSuccess ? (searchReult === null || searchReult === void 0 ? void 0 : searchReult.length) > 0 ? searchReult.map(obj => ({
      ...obj,
      CurrentOwners: (assigneeResults === null || assigneeResults === void 0 ? void 0 : assigneeResults.length) > 0 ? assigneeResults.filter(elem => elem.businessId === obj.applicationNumber).map(item => ({
        currentOwner: item.assignes !== null && item.assignes[0].name !== null ? item.assignes[0].name : "NA"
      })) : {
        currentOwner: "NA"
      }
    })) : {
      display: "ES_COMMON_NO_DATA"
    } : "",
    count: count
  });
};

const Response = props => {
  var _state$data3, _state$data3$, _state$data4, _state$data4$;
  const location = useLocation();
  const {
    state
  } = props.location;
  const [params, setParams] = useState({});
  const {
    isEdit
  } = Digit.Hooks.useQueryParams();
  const {
    data: storeData
  } = Digit.Hooks.useStore.getInitData();
  const {
    tenants
  } = storeData || {};
  useEffect(() => {
    setParams(getQueryStringParams(location.search));
  }, [location]);
  const {
    t
  } = useTranslation();
  const printReciept = async () => {
    const Licenses = (state === null || state === void 0 ? void 0 : state.data) || [];
    const license = Licenses && Licenses[0] || {};
    const tenantInfo = tenants.find(tenant => tenant.code === license.tenantId);
    const data = await getPTAcknowledgementData({
      ...license
    }, tenantInfo, t);
    Digit.Utils.pdf.generate(data);
  };
  const routeToPaymentScreen = async () => {
    var _state$data, _state$data$, _state$data2, _state$data2$;
    window.location.assign(`${window.location.origin}/digit-ui/employee/payment/collect/TL/${state === null || state === void 0 ? void 0 : (_state$data = state.data) === null || _state$data === void 0 ? void 0 : (_state$data$ = _state$data[0]) === null || _state$data$ === void 0 ? void 0 : _state$data$.applicationNumber}/${state === null || state === void 0 ? void 0 : (_state$data2 = state.data) === null || _state$data2 === void 0 ? void 0 : (_state$data2$ = _state$data2[0]) === null || _state$data2$ === void 0 ? void 0 : _state$data2$.tenantId}`);
  };
  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(Banner, {
    message: t("TL_APPLICATION_SUCCESS_MESSAGE_MAIN"),
    applicationNumber: state === null || state === void 0 ? void 0 : (_state$data3 = state.data) === null || _state$data3 === void 0 ? void 0 : (_state$data3$ = _state$data3[0]) === null || _state$data3$ === void 0 ? void 0 : _state$data3$.applicationNumber,
    info: t("TL_REF_NO_LABEL"),
    successful: true
  }), /*#__PURE__*/React.createElement(CardText, null, t("TL_NEW_SUCESS_RESPONSE_NOTIFICATION_LABEL")), /*#__PURE__*/React.createElement("div", {
    className: "primary-label-btn d-grid",
    style: {
      marginLeft: "unset"
    },
    onClick: printReciept
  }, /*#__PURE__*/React.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    height: "24",
    viewBox: "0 0 24 24",
    width: "24"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z"
  })), t("TL_PRINT_APPLICATION_LABEL")), /*#__PURE__*/React.createElement(ActionBar, {
    style: {
      display: "flex",
      justifyContent: "flex-end",
      alignItems: "baseline"
    }
  }, (state === null || state === void 0 ? void 0 : (_state$data4 = state.data) === null || _state$data4 === void 0 ? void 0 : (_state$data4$ = _state$data4[0]) === null || _state$data4$ === void 0 ? void 0 : _state$data4$.status) !== "PENDINGPAYMENT" ? /*#__PURE__*/React.createElement(Link, {
    to: `/digit-ui/employee`,
    style: {
      marginRight: "1rem"
    }
  }, /*#__PURE__*/React.createElement(SubmitBar, {
    label: t("CORE_COMMON_GO_TO_HOME"),
    onClick: () => sessionStorage.removeItem("isCreateEnabled")
  })) :
  /*#__PURE__*/
  React.createElement("div", {
    onClick: routeToPaymentScreen
  }, /*#__PURE__*/React.createElement(SubmitBar, {
    label: t("TL_COLLECT_PAYMENT")
  })))));
};

const getAddress$1 = (address, t) => {
  var _address$locality, _address$city;
  return `${address !== null && address !== void 0 && address.doorNo ? `${address === null || address === void 0 ? void 0 : address.doorNo}, ` : ""} ${address !== null && address !== void 0 && address.street ? `${address === null || address === void 0 ? void 0 : address.street}, ` : ""}${address !== null && address !== void 0 && address.landmark ? `${address === null || address === void 0 ? void 0 : address.landmark}, ` : ""}${t(address === null || address === void 0 ? void 0 : (_address$locality = address.locality) === null || _address$locality === void 0 ? void 0 : _address$locality.code)}, ${t(address === null || address === void 0 ? void 0 : (_address$city = address.city) === null || _address$city === void 0 ? void 0 : _address$city.code)},${t(address === null || address === void 0 ? void 0 : address.pincode) ? `${address === null || address === void 0 ? void 0 : address.pincode}` : " "}`;
};
const TLApplicationDetails = () => {
  var _application$, _application$$tradeLi, _application$$tradeLi2, _application$2, _application$2$tradeL, _application$2$tradeL2, _application$5, _application$6, _application$applicat, _PTData$Properties, _paymentsHistory$Paym2, _application$8, _application$9, _application$10, _application$11;
  const {
    t
  } = useTranslation();
  const {
    id
  } = useParams();
  const {
    tenantId
  } = useParams();
  const history = useHistory();
  const [bill, setBill] = useState(null);
  const {
    data: storeData
  } = Digit.Hooks.useStore.getInitData();
  const [mutationHappened, setMutationHappened, clear] = Digit.Hooks.useSessionStorage("CITIZEN_TL_MUTATION_HAPPENED", false);
  const {
    tenants
  } = storeData || {};
  const isMobile = window.Digit.Utils.browser.isMobile();
  let multiBoxStyle = {
    border: "groove",
    background: "#FAFAFA",
    borderRadius: "4px",
    paddingInline: "10px",
    marginTop: "10px",
    marginBottom: "10px"
  };
  let multiHeaderStyle = {
    marginBottom: "10px",
    marginTop: "10px",
    color: "#505A5F"
  };
  const {
    isLoading,
    isError,
    error,
    data: application,
    error: errorApplication
  } = Digit.Hooks.tl.useTLApplicationDetails({
    tenantId: tenantId,
    applicationNumber: id
  });
  const {
    isLoading: PTLoading,
    isError: isPTError,
    data: PTData
  } = Digit.Hooks.pt.usePropertySearch({
    tenantId,
    filters: {
      propertyIds: application === null || application === void 0 ? void 0 : (_application$ = application[0]) === null || _application$ === void 0 ? void 0 : (_application$$tradeLi = _application$.tradeLicenseDetail) === null || _application$$tradeLi === void 0 ? void 0 : (_application$$tradeLi2 = _application$$tradeLi.additionalDetail) === null || _application$$tradeLi2 === void 0 ? void 0 : _application$$tradeLi2.propertyId
    }
  }, {
    enabled: application !== null && application !== void 0 && (_application$2 = application[0]) !== null && _application$2 !== void 0 && (_application$2$tradeL = _application$2.tradeLicenseDetail) !== null && _application$2$tradeL !== void 0 && (_application$2$tradeL2 = _application$2$tradeL.additionalDetail) !== null && _application$2$tradeL2 !== void 0 && _application$2$tradeL2.propertyId ? true : false
  });
  useEffect(() => {
    localStorage.setItem("TLAppSubmitEnabled", "true");
    setMutationHappened(false);
  }, []);
  const {
    data: paymentsHistory
  } = Digit.Hooks.tl.useTLPaymentHistory(tenantId, id);
  useEffect(() => {
    if (application) {
      var _application$3, _application$4;
      Digit.PaymentService.fetchBill(tenantId, {
        consumerCode: (_application$3 = application[0]) === null || _application$3 === void 0 ? void 0 : _application$3.applicationNumber,
        businessService: (_application$4 = application[0]) === null || _application$4 === void 0 ? void 0 : _application$4.businessService
      }).then(res => {
        setBill(res === null || res === void 0 ? void 0 : res.Bill[0]);
      });
    }
  }, [application]);
  const [showOptions, setShowOptions] = useState(false);
  useEffect(() => {}, [application, errorApplication]);
  const businessService = application === null || application === void 0 ? void 0 : (_application$5 = application[0]) === null || _application$5 === void 0 ? void 0 : _application$5.businessService;
  const {
    isLoading: iswfLoading,
    data: wfdata
  } = Digit.Hooks.useWorkflowDetails({
    tenantId: application === null || application === void 0 ? void 0 : (_application$6 = application[0]) === null || _application$6 === void 0 ? void 0 : _application$6.tenantId,
    id: id,
    moduleCode: businessService
  });
  let workflowDocs = [];
  if (wfdata) {
    var _wfdata$timeline;
    wfdata === null || wfdata === void 0 ? void 0 : (_wfdata$timeline = wfdata.timeline) === null || _wfdata$timeline === void 0 ? void 0 : _wfdata$timeline.map(ob => {
      var _ob$wfDocuments;
      if ((ob === null || ob === void 0 ? void 0 : (_ob$wfDocuments = ob.wfDocuments) === null || _ob$wfDocuments === void 0 ? void 0 : _ob$wfDocuments.length) > 0) {
        var _ob$wfDocuments2;
        ob === null || ob === void 0 ? void 0 : (_ob$wfDocuments2 = ob.wfDocuments) === null || _ob$wfDocuments2 === void 0 ? void 0 : _ob$wfDocuments2.map(doc => {
          workflowDocs.push(doc);
        });
      }
    });
  }
  if (isLoading || iswfLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }
  if ((application === null || application === void 0 ? void 0 : (_application$applicat = application.applicationDetails) === null || _application$applicat === void 0 ? void 0 : _application$applicat.length) === 0) {
    history.goBack();
  }
  const handleDownloadPdf = async () => {
    const tenantInfo = tenants.find(tenant => {
      var _application$7;
      return tenant.code === ((_application$7 = application[0]) === null || _application$7 === void 0 ? void 0 : _application$7.tenantId);
    });
    let res = application[0];
    const data = getPTAcknowledgementData({
      ...res
    }, tenantInfo, t);
    data.then(ress => Digit.Utils.pdf.generate(ress));
    setShowOptions(false);
  };
  const downloadPaymentReceipt = async () => {
    var _paymentsHistory$Paym, _receiptFile$fileStor;
    const receiptFile = {
      filestoreIds: [(_paymentsHistory$Paym = paymentsHistory.Payments[0]) === null || _paymentsHistory$Paym === void 0 ? void 0 : _paymentsHistory$Paym.fileStoreId]
    };
    if (!(receiptFile !== null && receiptFile !== void 0 && (_receiptFile$fileStor = receiptFile.fileStoreIds) !== null && _receiptFile$fileStor !== void 0 && _receiptFile$fileStor[0])) {
      const newResponse = await Digit.PaymentService.generatePdf(tenantId, {
        Payments: [paymentsHistory.Payments[0]]
      }, "tradelicense-receipt");
      const fileStore = await Digit.PaymentService.printReciept(tenantId, {
        fileStoreIds: newResponse.filestoreIds[0]
      });
      window.open(fileStore[newResponse.filestoreIds[0]], "_blank");
      setShowOptions(false);
    } else {
      const fileStore = await Digit.PaymentService.printReciept(tenantId, {
        fileStoreIds: receiptFile.filestoreIds[0]
      });
      window.open(fileStore[receiptFile.filestoreIds[0]], "_blank");
      setShowOptions(false);
    }
  };
  const downloadTLcertificate = async () => {
    const TLcertificatefile = await Digit.PaymentService.generatePdf(tenantId, {
      Licenses: application
    }, "tlcertificate");
    const receiptFile = await Digit.PaymentService.printReciept(tenantId, {
      fileStoreIds: TLcertificatefile.filestoreIds[0]
    });
    window.open(receiptFile[TLcertificatefile.filestoreIds[0]], "_blank");
    setShowOptions(false);
  };
  let propertyAddress = "";
  if (PTData && PTData !== null && PTData !== void 0 && (_PTData$Properties = PTData.Properties) !== null && _PTData$Properties !== void 0 && _PTData$Properties.length) {
    var _PTData$Properties$;
    propertyAddress = getAddress$1(PTData === null || PTData === void 0 ? void 0 : (_PTData$Properties$ = PTData.Properties[0]) === null || _PTData$Properties$ === void 0 ? void 0 : _PTData$Properties$.address, t);
  }
  const dowloadOptions = (paymentsHistory === null || paymentsHistory === void 0 ? void 0 : (_paymentsHistory$Paym2 = paymentsHistory.Payments) === null || _paymentsHistory$Paym2 === void 0 ? void 0 : _paymentsHistory$Paym2.length) > 0 && (application === null || application === void 0 ? void 0 : (_application$8 = application[0]) === null || _application$8 === void 0 ? void 0 : _application$8.status) !== "EXPIRED" && (application === null || application === void 0 ? void 0 : (_application$9 = application[0]) === null || _application$9 === void 0 ? void 0 : _application$9.status) !== "CANCELLED" && (application === null || application === void 0 ? void 0 : (_application$10 = application[0]) === null || _application$10 === void 0 ? void 0 : _application$10.status) !== "PENDINGPAYMENT" && (application === null || application === void 0 ? void 0 : (_application$11 = application[0]) === null || _application$11 === void 0 ? void 0 : _application$11.status) !== "MANUALEXPIRED" ? [{
    label: t("TL_CERTIFICATE"),
    onClick: downloadTLcertificate
  }, {
    label: t("CS_COMMON_PAYMENT_RECEIPT"),
    onClick: downloadPaymentReceipt
  }, {
    label: t("TL_APPLICATION"),
    onClick: handleDownloadPdf
  }] : [{
    label: t("TL_APPLICATION"),
    onClick: handleDownloadPdf
  }];
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    className: "cardHeaderWithOptions",
    style: isMobile ? {} : {
      maxWidth: "960px"
    }
  }, /*#__PURE__*/React.createElement(Header, null, t("CS_TITLE_APPLICATION_DETAILS")), /*#__PURE__*/React.createElement(MultiLink, {
    className: "multilinkWrapper",
    onHeadClick: () => setShowOptions(!showOptions),
    displayOptions: showOptions,
    options: dowloadOptions
  })), /*#__PURE__*/React.createElement(Card, {
    style: {
      position: "relative"
    }
  }, application === null || application === void 0 ? void 0 : application.map((application, index) => {
    var _application$tradeLic, _application$tradeLic2, _application$tradeLic3, _application$tradeLic4, _application$tradeLic5, _application$tradeLic6, _application$tradeLic15, _application$tradeLic16, _application$tradeLic17, _application$tradeLic18, _application$tradeLic19, _application$tradeLic20, _application$tradeLic21, _application$tradeLic22, _PTData$Properties2, _PTData$Properties2$, _PTData$Properties3, _PTData$Properties3$, _PTData$Properties3$$, _application$tradeLic23, _application$tradeLic24, _application$tradeLic25, _application$tradeLic26, _application$tradeLic27, _application$tradeLic28, _application$tradeLic29, _application$tradeLic30, _application$tradeLic31, _application$tradeLic32, _application$tradeLic33, _application$tradeLic34, _application$tradeLic35, _application$tradeLic36, _application$tradeLic37, _application$tradeLic38, _application$tradeLic39, _application$tradeLic40, _application$tradeLic41, _application$tradeLic42, _application$tradeLic43, _application$tradeLic44, _application$tradeLic45, _application$tradeLic46, _application$tradeLic47;
    return /*#__PURE__*/React.createElement("div", {
      key: index,
      className: "employee-data-table"
    }, /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_COMMON_TABLE_COL_APP_NO"),
      text: application === null || application === void 0 ? void 0 : application.applicationNumber,
      textStyle: {
        wordBreak: "break-word"
      }
    }), (application === null || application === void 0 ? void 0 : application.licenseNumber) && /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_COMMON_TABLE_COL_LICENSE_NO"),
      text: application === null || application === void 0 ? void 0 : application.licenseNumber,
      textStyle: {
        wordBreak: "break-word"
      }
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_APPLICATION_CATEGORY"),
      text: t("ACTION_TEST_TRADE_LICENSE"),
      textStyle: {
        wordBreak: "break-word"
      }
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_COMMON_TABLE_COL_STATUS"),
      text: t(`WF_NEWTL_${application === null || application === void 0 ? void 0 : application.status}`),
      textStyle: {
        wordBreak: "break-word"
      }
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_COMMON_TABLE_COL_SLA_NAME"),
      text: `${Math.round((application === null || application === void 0 ? void 0 : application.SLA) / (1000 * 60 * 60 * 24))} ${t("TL_SLA_DAYS")}`,
      textStyle: {
        wordBreak: "break-word"
      }
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_COMMON_TABLE_COL_TRD_NAME"),
      text: application === null || application === void 0 ? void 0 : application.tradeName,
      textStyle: {
        wordBreak: "break-word"
      }
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_TRADE_GST_NO"),
      text: (application === null || application === void 0 ? void 0 : (_application$tradeLic = application.tradeLicenseDetail) === null || _application$tradeLic === void 0 ? void 0 : (_application$tradeLic2 = _application$tradeLic.additionalDetail) === null || _application$tradeLic2 === void 0 ? void 0 : _application$tradeLic2.tradeGstNo) || (application === null || application === void 0 ? void 0 : (_application$tradeLic3 = application.tradeLicenseDetail) === null || _application$tradeLic3 === void 0 ? void 0 : (_application$tradeLic4 = _application$tradeLic3.additionalDetail) === null || _application$tradeLic4 === void 0 ? void 0 : _application$tradeLic4.gstNo) || t("CS_NA"),
      textStyle: {
        wordBreak: "break-word"
      }
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_OPERATIONAL_AREA"),
      text: (application === null || application === void 0 ? void 0 : (_application$tradeLic5 = application.tradeLicenseDetail) === null || _application$tradeLic5 === void 0 ? void 0 : _application$tradeLic5.operationalArea) || t("CS_NA"),
      textStyle: {
        wordBreak: "break-word"
      }
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_NO_OF_EMPLOYEES"),
      text: (application === null || application === void 0 ? void 0 : (_application$tradeLic6 = application.tradeLicenseDetail) === null || _application$tradeLic6 === void 0 ? void 0 : _application$tradeLic6.noOfEmployees) || t("CS_NA"),
      textStyle: {
        wordBreak: "break-word"
      }
    }), /*#__PURE__*/React.createElement(CardSectionHeader, null, t("TL_OWNERSHIP_DETAILS_HEADER")), application === null || application === void 0 ? void 0 : application.tradeLicenseDetail.owners.map((ele, index) => {
      var _application$tradeLic7, _application$tradeLic8, _application$tradeLic9, _application$tradeLic10, _application$tradeLic11, _application$tradeLic12, _application$tradeLic13, _application$tradeLic14;
      return application !== null && application !== void 0 && (_application$tradeLic7 = application.tradeLicenseDetail) !== null && _application$tradeLic7 !== void 0 && _application$tradeLic7.subOwnerShipCategory.includes("INSTITUTIONAL") ? /*#__PURE__*/React.createElement("div", {
        key: index,
        style: multiBoxStyle
      }, /*#__PURE__*/React.createElement(CardSectionHeader, {
        style: multiHeaderStyle
      }, `${t("TL_PAYMENT_PAID_BY_PLACEHOLDER")} - ` + (index + 1)), /*#__PURE__*/React.createElement(Row, {
        className: "border-none",
        label: `${t("TL_INSTITUTION_NAME_LABEL")}`,
        text: t(application === null || application === void 0 ? void 0 : (_application$tradeLic8 = application.tradeLicenseDetail) === null || _application$tradeLic8 === void 0 ? void 0 : (_application$tradeLic9 = _application$tradeLic8.institution) === null || _application$tradeLic9 === void 0 ? void 0 : _application$tradeLic9.instituionName),
        textStyle: {
          wordBreak: "break-word"
        }
      }), /*#__PURE__*/React.createElement(Row, {
        label: `${t("TL_INSTITUTION_TYPE_LABEL")}`,
        text: t(`TL_${application === null || application === void 0 ? void 0 : (_application$tradeLic10 = application.tradeLicenseDetail) === null || _application$tradeLic10 === void 0 ? void 0 : _application$tradeLic10.subOwnerShipCategory}`),
        textStyle: {
          wordBreak: "break-word"
        }
      }), /*#__PURE__*/React.createElement(Row, {
        className: "border-none",
        label: `${t("TL_MOBILE_NUMBER_LABEL")}`,
        text: t(ele.mobileNumber),
        textStyle: {
          whiteSpace: "pre"
        }
      }), /*#__PURE__*/React.createElement(Row, {
        className: "border-none",
        label: `${t("TL_TELEPHONE_NUMBER_LABEL")}`,
        text: t((application === null || application === void 0 ? void 0 : (_application$tradeLic11 = application.tradeLicenseDetail) === null || _application$tradeLic11 === void 0 ? void 0 : (_application$tradeLic12 = _application$tradeLic11.institution) === null || _application$tradeLic12 === void 0 ? void 0 : _application$tradeLic12.contactNo) || t("CS_NA")),
        textStyle: {
          wordBreak: "break-word"
        }
      }), /*#__PURE__*/React.createElement(Row, {
        className: "border-none",
        label: `${t("TL_LOCALIZATION_OWNER_NAME")}`,
        text: t(ele.fatherOrHusbandName || (application === null || application === void 0 ? void 0 : (_application$tradeLic13 = application.tradeLicenseDetail) === null || _application$tradeLic13 === void 0 ? void 0 : (_application$tradeLic14 = _application$tradeLic13.institution) === null || _application$tradeLic14 === void 0 ? void 0 : _application$tradeLic14.name)),
        textStyle: {
          wordBreak: "break-word"
        }
      }), /*#__PURE__*/React.createElement(Row, {
        className: "border-none",
        label: `${t("TL_LOCALIZATION_EMAIL_ID")}`,
        text: t(ele.emailId || t("CS_NA")),
        textStyle: {
          wordBreak: "break-word"
        }
      })) : /*#__PURE__*/React.createElement("div", {
        key: index,
        style: multiBoxStyle
      }, /*#__PURE__*/React.createElement(CardSectionHeader, {
        style: multiHeaderStyle
      }, `${t("TL_PAYMENT_PAID_BY_PLACEHOLDER")} - ` + (index + 1)), /*#__PURE__*/React.createElement(Row, {
        className: "border-none",
        label: `${t("TL_COMMON_TABLE_COL_OWN_NAME")}`,
        text: t(ele.name),
        textStyle: {
          wordBreak: "break-word"
        }
      }), /*#__PURE__*/React.createElement(Row, {
        className: "border-none",
        label: `${t("TL_NEW_OWNER_DETAILS_GENDER_LABEL")}`,
        text: t(ele.gender),
        textStyle: {
          wordBreak: "break-word"
        }
      }), /*#__PURE__*/React.createElement(Row, {
        className: "border-none",
        label: `${t("TL_MOBILE_NUMBER_LABEL")}`,
        text: t(ele.mobileNumber),
        textStyle: {
          wordBreak: "break-word"
        }
      }), /*#__PURE__*/React.createElement(Row, {
        className: "border-none",
        label: `${t("TL_GUARDIAN_S_NAME_LABEL")}`,
        text: t(ele.fatherOrHusbandName),
        textStyle: {
          wordBreak: "break-word"
        }
      }), /*#__PURE__*/React.createElement(Row, {
        className: "border-none",
        label: `${t("TL_RELATIONSHIP_WITH_GUARDIAN_LABEL")}`,
        text: t(ele.relationship),
        textStyle: {
          wordBreak: "break-word"
        }
      }));
    }), /*#__PURE__*/React.createElement(CardSubHeader, null, t("TL_TRADE_UNITS_HEADER")), application === null || application === void 0 ? void 0 : (_application$tradeLic15 = application.tradeLicenseDetail) === null || _application$tradeLic15 === void 0 ? void 0 : (_application$tradeLic16 = _application$tradeLic15.tradeUnits) === null || _application$tradeLic16 === void 0 ? void 0 : _application$tradeLic16.map((ele, index) => {
      return /*#__PURE__*/React.createElement("div", {
        key: index,
        style: multiBoxStyle
      }, /*#__PURE__*/React.createElement(CardSectionHeader, {
        style: multiHeaderStyle
      }, t("TL_UNIT_HEADER"), " ", index + 1), /*#__PURE__*/React.createElement(Row, {
        className: "border-none",
        label: t("TL_NEW_TRADE_DETAILS_TRADE_CAT_LABEL"),
        text: t(`TRADELICENSE_TRADETYPE_${ele === null || ele === void 0 ? void 0 : ele.tradeType.split(".")[0]}`),
        textStyle: {
          wordBreak: "break-word"
        }
      }), /*#__PURE__*/React.createElement(Row, {
        className: "border-none",
        label: t("TL_NEW_TRADE_DETAILS_TRADE_TYPE_LABEL"),
        text: t(`TRADELICENSE_TRADETYPE_${ele === null || ele === void 0 ? void 0 : ele.tradeType.split(".")[1]}`),
        textStyle: {
          wordBreak: "break-word"
        }
      }), /*#__PURE__*/React.createElement(Row, {
        className: "border-none",
        label: t("TL_NEW_TRADE_DETAILS_TRADE_SUBTYPE_LABEL"),
        text: t(`TL_${ele === null || ele === void 0 ? void 0 : ele.tradeType}`),
        textStyle: {
          wordBreak: "break-word"
        }
      }));
    }), Array.isArray(application === null || application === void 0 ? void 0 : (_application$tradeLic17 = application.tradeLicenseDetail) === null || _application$tradeLic17 === void 0 ? void 0 : _application$tradeLic17.accessories) && (application === null || application === void 0 ? void 0 : (_application$tradeLic18 = application.tradeLicenseDetail) === null || _application$tradeLic18 === void 0 ? void 0 : _application$tradeLic18.accessories.length) > 0 && /*#__PURE__*/React.createElement(CardSubHeader, {
      style: {
        paddingTop: "7px"
      }
    }, t("TL_NEW_TRADE_DETAILS_HEADER_ACC")), Array.isArray(application === null || application === void 0 ? void 0 : (_application$tradeLic19 = application.tradeLicenseDetail) === null || _application$tradeLic19 === void 0 ? void 0 : _application$tradeLic19.accessories) && (application === null || application === void 0 ? void 0 : (_application$tradeLic20 = application.tradeLicenseDetail) === null || _application$tradeLic20 === void 0 ? void 0 : _application$tradeLic20.accessories.length) > 0 && (application === null || application === void 0 ? void 0 : (_application$tradeLic21 = application.tradeLicenseDetail) === null || _application$tradeLic21 === void 0 ? void 0 : (_application$tradeLic22 = _application$tradeLic21.accessories) === null || _application$tradeLic22 === void 0 ? void 0 : _application$tradeLic22.map((ele, index) => {
      return /*#__PURE__*/React.createElement("div", {
        key: index,
        style: multiBoxStyle
      }, /*#__PURE__*/React.createElement(CardSectionHeader, {
        style: multiHeaderStyle
      }, t("TL_ACCESSORY_LABEL"), " ", index + 1), /*#__PURE__*/React.createElement(Row, {
        className: "border-none",
        label: t("TL_REVIEWACCESSORY_TYPE_LABEL"),
        text: t(`TL_${ele === null || ele === void 0 ? void 0 : ele.accessoryCategory.split("-").join("_")}`),
        textStyle: {
          wordBreak: "break-word"
        }
      }), /*#__PURE__*/React.createElement(Row, {
        className: "border-none",
        label: t("TL_NEW_TRADE_ACCESSORY_COUNT_LABEL"),
        text: ele === null || ele === void 0 ? void 0 : ele.count,
        textStyle: {
          wordBreak: "break-word"
        }
      }), /*#__PURE__*/React.createElement(Row, {
        className: "border-none",
        label: t("TL_NEW_TRADE_ACCESSORY_UOM_LABEL"),
        text: ele === null || ele === void 0 ? void 0 : ele.uom,
        textStyle: {
          wordBreak: "break-word"
        }
      }), /*#__PURE__*/React.createElement(Row, {
        className: "border-none",
        label: t("TL_NEW_TRADE_ACCESSORY_UOMVALUE_LABEL"),
        text: ele === null || ele === void 0 ? void 0 : ele.uomValue,
        textStyle: {
          wordBreak: "break-word"
        }
      }));
    })), (PTData === null || PTData === void 0 ? void 0 : PTData.Properties) && (PTData === null || PTData === void 0 ? void 0 : PTData.Properties.length) > 0 && /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(CardSubHeader, null, t("PT_DETAILS")), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_PROPERTY_ID"),
      text: PTData === null || PTData === void 0 ? void 0 : (_PTData$Properties2 = PTData.Properties) === null || _PTData$Properties2 === void 0 ? void 0 : (_PTData$Properties2$ = _PTData$Properties2[0]) === null || _PTData$Properties2$ === void 0 ? void 0 : _PTData$Properties2$.propertyId,
      textStyle: {
        wordBreak: "break-word"
      }
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("PT_OWNER_NAME"),
      text: PTData === null || PTData === void 0 ? void 0 : (_PTData$Properties3 = PTData.Properties) === null || _PTData$Properties3 === void 0 ? void 0 : (_PTData$Properties3$ = _PTData$Properties3[0]) === null || _PTData$Properties3$ === void 0 ? void 0 : (_PTData$Properties3$$ = _PTData$Properties3$.owners[0]) === null || _PTData$Properties3$$ === void 0 ? void 0 : _PTData$Properties3$$.name,
      textStyle: {
        wordBreak: "break-word"
      }
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("PROPERTY_ADDRESS"),
      text: propertyAddress
    }), /*#__PURE__*/React.createElement(LinkButton, {
      style: {
        textAlign: "left"
      },
      label: t("TL_VIEW_PROPERTY_DETAIL"),
      onClick: () => {
        var _PTData$Properties4, _PTData$Properties4$, _PTData$Properties5, _PTData$Properties5$;
        history.push(`/digit-ui/citizen/commonpt/view-property?propertyId=${PTData === null || PTData === void 0 ? void 0 : (_PTData$Properties4 = PTData.Properties) === null || _PTData$Properties4 === void 0 ? void 0 : (_PTData$Properties4$ = _PTData$Properties4[0]) === null || _PTData$Properties4$ === void 0 ? void 0 : _PTData$Properties4$.propertyId}&tenantId=${PTData === null || PTData === void 0 ? void 0 : (_PTData$Properties5 = PTData.Properties) === null || _PTData$Properties5 === void 0 ? void 0 : (_PTData$Properties5$ = _PTData$Properties5[0]) === null || _PTData$Properties5$ === void 0 ? void 0 : _PTData$Properties5$.tenantId}`);
      }
    })), /*#__PURE__*/React.createElement(Row, {
      label: ""
    }), !(PTData !== null && PTData !== void 0 && PTData.Properties && (PTData === null || PTData === void 0 ? void 0 : PTData.Properties.length) > 0) && /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: t("TL_NEW_TRADE_ADDRESS_LABEL"),
      text: `${application !== null && application !== void 0 && (_application$tradeLic23 = application.tradeLicenseDetail) !== null && _application$tradeLic23 !== void 0 && (_application$tradeLic24 = _application$tradeLic23.address) !== null && _application$tradeLic24 !== void 0 && (_application$tradeLic25 = _application$tradeLic24.doorNo) !== null && _application$tradeLic25 !== void 0 && _application$tradeLic25.trim() ? `${application === null || application === void 0 ? void 0 : (_application$tradeLic26 = application.tradeLicenseDetail) === null || _application$tradeLic26 === void 0 ? void 0 : (_application$tradeLic27 = _application$tradeLic26.address) === null || _application$tradeLic27 === void 0 ? void 0 : (_application$tradeLic28 = _application$tradeLic27.doorNo) === null || _application$tradeLic28 === void 0 ? void 0 : _application$tradeLic28.trim()}, ` : ""} ${application !== null && application !== void 0 && (_application$tradeLic29 = application.tradeLicenseDetail) !== null && _application$tradeLic29 !== void 0 && (_application$tradeLic30 = _application$tradeLic29.address) !== null && _application$tradeLic30 !== void 0 && (_application$tradeLic31 = _application$tradeLic30.street) !== null && _application$tradeLic31 !== void 0 && _application$tradeLic31.trim() ? `${application === null || application === void 0 ? void 0 : (_application$tradeLic32 = application.tradeLicenseDetail) === null || _application$tradeLic32 === void 0 ? void 0 : (_application$tradeLic33 = _application$tradeLic32.address) === null || _application$tradeLic33 === void 0 ? void 0 : (_application$tradeLic34 = _application$tradeLic33.street) === null || _application$tradeLic34 === void 0 ? void 0 : _application$tradeLic34.trim()}, ` : ""}${t(application === null || application === void 0 ? void 0 : (_application$tradeLic35 = application.tradeLicenseDetail) === null || _application$tradeLic35 === void 0 ? void 0 : (_application$tradeLic36 = _application$tradeLic35.address) === null || _application$tradeLic36 === void 0 ? void 0 : (_application$tradeLic37 = _application$tradeLic36.locality) === null || _application$tradeLic37 === void 0 ? void 0 : _application$tradeLic37.name)}, ${t(application === null || application === void 0 ? void 0 : (_application$tradeLic38 = application.tradeLicenseDetail) === null || _application$tradeLic38 === void 0 ? void 0 : (_application$tradeLic39 = _application$tradeLic38.address) === null || _application$tradeLic39 === void 0 ? void 0 : _application$tradeLic39.city)} ${application !== null && application !== void 0 && (_application$tradeLic40 = application.tradeLicenseDetail) !== null && _application$tradeLic40 !== void 0 && (_application$tradeLic41 = _application$tradeLic40.address) !== null && _application$tradeLic41 !== void 0 && (_application$tradeLic42 = _application$tradeLic41.pincode) !== null && _application$tradeLic42 !== void 0 && _application$tradeLic42.trim() ? `,${application === null || application === void 0 ? void 0 : (_application$tradeLic43 = application.tradeLicenseDetail) === null || _application$tradeLic43 === void 0 ? void 0 : (_application$tradeLic44 = _application$tradeLic43.address) === null || _application$tradeLic44 === void 0 ? void 0 : (_application$tradeLic45 = _application$tradeLic44.pincode) === null || _application$tradeLic45 === void 0 ? void 0 : _application$tradeLic45.trim()}` : ""}`,
      textStyle: {
        wordBreak: "break-word"
      }
    }), /*#__PURE__*/React.createElement(CardSubHeader, null, t("TL_COMMON_DOCS")), /*#__PURE__*/React.createElement("div", null, (application === null || application === void 0 ? void 0 : (_application$tradeLic46 = application.tradeLicenseDetail) === null || _application$tradeLic46 === void 0 ? void 0 : (_application$tradeLic47 = _application$tradeLic46.applicationDocuments) === null || _application$tradeLic47 === void 0 ? void 0 : _application$tradeLic47.length) > 0 ? /*#__PURE__*/React.createElement(TLDocument, {
      value: {
        ...application
      }
    }) : /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
      text: t("TL_NO_DOCUMENTS_MSG")
    }))), (workflowDocs === null || workflowDocs === void 0 ? void 0 : workflowDocs.length) > 0 && /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(CardSubHeader, null, t("TL_TIMELINE_DOCS")), /*#__PURE__*/React.createElement("div", null, (workflowDocs === null || workflowDocs === void 0 ? void 0 : workflowDocs.length) > 0 ? /*#__PURE__*/React.createElement(TLDocument, {
      value: {
        workflowDocs: workflowDocs
      }
    }) : /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
      text: t("TL_NO_DOCUMENTS_MSG")
    })))), /*#__PURE__*/React.createElement(TLWFApplicationTimeline, {
      application: application,
      id: id
    }), (application === null || application === void 0 ? void 0 : application.status) === "CITIZENACTIONREQUIRED" ? /*#__PURE__*/React.createElement(Link, {
      to: {
        pathname: `/digit-ui/citizen/tl/tradelicence/edit-application/${application === null || application === void 0 ? void 0 : application.applicationNumber}/${application === null || application === void 0 ? void 0 : application.tenantId}`,
        state: {}
      }
    }, /*#__PURE__*/React.createElement(SubmitBar, {
      label: t("COMMON_EDIT")
    })) : null, (application === null || application === void 0 ? void 0 : application.status) === "PENDINGPAYMENT" ? /*#__PURE__*/React.createElement(Link, {
      to: {
        pathname: `/digit-ui/citizen/payment/collect/${application === null || application === void 0 ? void 0 : application.businessService}/${application === null || application === void 0 ? void 0 : application.applicationNumber}`,
        state: {
          bill,
          tenantId: tenantId
        }
      }
    }, /*#__PURE__*/React.createElement(SubmitBar, {
      label: t("COMMON_MAKE_PAYMENT")
    })) : null);
  })));
};

const CreateTradeLicence = ({
  parentRoute
}) => {
  var _newConfig, _newConfig2, _newConfig2$filter, _skipenanbledOb$body, _skipenanbledOb$body$, _skipenanbledOb$body$2, _Digit, _Digit$ComponentRegis, _Digit2, _Digit2$ComponentRegi;
  const queryClient = useQueryClient();
  const match = useRouteMatch();
  const {
    t
  } = useTranslation();
  const {
    pathname
  } = useLocation();
  const history = useHistory();
  let config = [];
  const [params, setParams, clearParams] = Digit.Hooks.useSessionStorage("TL_CREATE_TRADE", {});
  let isReneworEditTrade = window.location.href.includes("/renew-trade/") || window.location.href.includes("/edit-application/");
  const stateId = Digit.ULBService.getStateId();
  let {
    data: newConfig$1,
    isLoading
  } = Digit.Hooks.tl.useMDMS.getFormConfig(stateId, {});
  const goNext = (skipStep, index, isAddMultiple, key, isPTCreateSkip) => {
    var _params$TradeDetails, _params$TradeDetails$, _params$TradeDetails2, _params$TradeDetails3, _params$cptId2, _params$cpt3, _params$cpt3$details, _params$cpt4, _params$cpt4$details;
    let currentPath = pathname.split("/").pop(),
      nextPage;
    let {
      nextStep = {}
    } = config.find(routeObj => routeObj.route === currentPath);
    let {
      isCreateEnabled: enableCreate = true
    } = config.find(routeObj => routeObj.route === currentPath);
    if (typeof nextStep == "object" && nextStep != null) {
      var _params$cptId, _params$cpt, _params$cpt$details, _params$cpt2, _params$cpt2$details;
      if ((params !== null && params !== void 0 && (_params$cptId = params.cptId) !== null && _params$cptId !== void 0 && _params$cptId.id || params !== null && params !== void 0 && (_params$cpt = params.cpt) !== null && _params$cpt !== void 0 && (_params$cpt$details = _params$cpt.details) !== null && _params$cpt$details !== void 0 && _params$cpt$details.propertyId || isReneworEditTrade && params !== null && params !== void 0 && (_params$cpt2 = params.cpt) !== null && _params$cpt2 !== void 0 && (_params$cpt2$details = _params$cpt2.details) !== null && _params$cpt2$details !== void 0 && _params$cpt2$details.propertyId) && nextStep[sessionStorage.getItem("isAccessories")] && nextStep[sessionStorage.getItem("isAccessories")] === "know-your-property") {
        nextStep = "property-details";
      }
      if (nextStep[sessionStorage.getItem("isAccessories")] && (nextStep[sessionStorage.getItem("isAccessories")] === "accessories-details" || nextStep[sessionStorage.getItem("isAccessories")] === "map" || nextStep[sessionStorage.getItem("isAccessories")] === "owner-ship-details" || nextStep[sessionStorage.getItem("isAccessories")] === "other-trade-details")) {
        nextStep = `${nextStep[sessionStorage.getItem("isAccessories")]}`;
      } else if (nextStep[sessionStorage.getItem("StructureType")] && (nextStep[sessionStorage.getItem("StructureType")] === "Building-type" || nextStep[sessionStorage.getItem("StructureType")] === "vehicle-type")) {
        nextStep = `${nextStep[sessionStorage.getItem("StructureType")]}`;
      } else if (nextStep[sessionStorage.getItem("KnowProperty")] && (nextStep[sessionStorage.getItem("KnowProperty")] === "search-property" || nextStep[sessionStorage.getItem("KnowProperty")] === "create-property")) {
        if (nextStep[sessionStorage.getItem("KnowProperty")] === "create-property" && !enableCreate) {
          nextStep = `map`;
        } else {
          nextStep = `${nextStep[sessionStorage.getItem("KnowProperty")]}`;
        }
      }
    }
    if (nextStep === "know-your-property" && (params === null || params === void 0 ? void 0 : (_params$TradeDetails = params.TradeDetails) === null || _params$TradeDetails === void 0 ? void 0 : (_params$TradeDetails$ = _params$TradeDetails.StructureType) === null || _params$TradeDetails$ === void 0 ? void 0 : _params$TradeDetails$.code) === "MOVABLE") {
      nextStep = "map";
    }
    if (nextStep === "landmark" && (params === null || params === void 0 ? void 0 : (_params$TradeDetails2 = params.TradeDetails) === null || _params$TradeDetails2 === void 0 ? void 0 : (_params$TradeDetails3 = _params$TradeDetails2.StructureType) === null || _params$TradeDetails3 === void 0 ? void 0 : _params$TradeDetails3.code) === "MOVABLE") {
      nextStep = "owner-ship-details";
    }
    if (nextStep === "owner-details" && sessionStorage.getItem("isSameAsPropertyOwner") === "true") {
      nextStep = "proof-of-identity";
    }
    if ((params !== null && params !== void 0 && (_params$cptId2 = params.cptId) !== null && _params$cptId2 !== void 0 && _params$cptId2.id || params !== null && params !== void 0 && (_params$cpt3 = params.cpt) !== null && _params$cpt3 !== void 0 && (_params$cpt3$details = _params$cpt3.details) !== null && _params$cpt3$details !== void 0 && _params$cpt3$details.propertyId || isReneworEditTrade && params !== null && params !== void 0 && (_params$cpt4 = params.cpt) !== null && _params$cpt4 !== void 0 && (_params$cpt4$details = _params$cpt4.details) !== null && _params$cpt4$details !== void 0 && _params$cpt4$details.propertyId) && nextStep === "know-your-property") {
      nextStep = "property-details";
    }
    let redirectWithHistory = history.push;
    if (skipStep) {
      redirectWithHistory = history.replace;
    }
    if (isAddMultiple) {
      nextStep = key;
    }
    if (nextStep === null) {
      return redirectWithHistory(`${match.path}/check`);
    }
    if (isPTCreateSkip && nextStep === "acknowledge-create-property") {
      nextStep = "map";
    }
    nextPage = `${match.path}/${nextStep}`;
    redirectWithHistory(nextPage);
  };
  const createProperty = async () => {
    sessionStorage.setItem("isCreateEnabled", "true");
    history.push(`${match.path}/acknowledgement`);
  };
  function handleSelect(key, data, skipStep, index, isAddMultiple = false) {
    if (key === "formData") setParams({
      ...data
    });else {
      setParams({
        ...params,
        ...{
          [key]: {
            ...params[key],
            ...data
          }
        }
      });
      if (key === "isSkip" && data === true) {
        goNext(skipStep, index, isAddMultiple, key, true);
      } else {
        goNext(skipStep, index, isAddMultiple, key);
      }
    }
  }
  const handleSkip = () => {};
  const handleMultiple = () => {};
  const onSuccess = () => {
    sessionStorage.removeItem("CurrentFinancialYear");
    queryClient.invalidateQueries("TL_CREATE_TRADE");
  };
  const onUpdateSuccess = () => {
    sessionStorage.removeItem("CurrentFinancialYear");
    clearParams();
    queryClient.invalidateQueries("TL_CREATE_TRADE");
  };
  newConfig$1 = newConfig$1 ? newConfig$1 : newConfig;
  (_newConfig = newConfig$1) === null || _newConfig === void 0 ? void 0 : _newConfig.forEach(obj => {
    config = config.concat(obj.body.filter(a => !a.hideInCitizen));
  });
  let skipenanbledOb = (_newConfig2 = newConfig$1) === null || _newConfig2 === void 0 ? void 0 : (_newConfig2$filter = _newConfig2.filter(obj => {
    var _obj$body;
    return obj === null || obj === void 0 ? void 0 : (_obj$body = obj.body) === null || _obj$body === void 0 ? void 0 : _obj$body.some(com => com.component === "CPTCreateProperty");
  })) === null || _newConfig2$filter === void 0 ? void 0 : _newConfig2$filter[0];
  let skipenabled = skipenanbledOb === null || skipenanbledOb === void 0 ? void 0 : (_skipenanbledOb$body = skipenanbledOb.body) === null || _skipenanbledOb$body === void 0 ? void 0 : (_skipenanbledOb$body$ = _skipenanbledOb$body.filter(ob => (ob === null || ob === void 0 ? void 0 : ob.component) === "CPTCreateProperty")) === null || _skipenanbledOb$body$ === void 0 ? void 0 : (_skipenanbledOb$body$2 = _skipenanbledOb$body$[0]) === null || _skipenanbledOb$body$2 === void 0 ? void 0 : _skipenanbledOb$body$2.isSkipEnabled;
  sessionStorage.setItem("skipenabled", skipenabled);
  config.indexRoute = "info";
  const CheckPage = (_Digit = Digit) === null || _Digit === void 0 ? void 0 : (_Digit$ComponentRegis = _Digit.ComponentRegistryService) === null || _Digit$ComponentRegis === void 0 ? void 0 : _Digit$ComponentRegis.getComponent("TLCheckPage");
  const TLAcknowledgement = (_Digit2 = Digit) === null || _Digit2 === void 0 ? void 0 : (_Digit2$ComponentRegi = _Digit2.ComponentRegistryService) === null || _Digit2$ComponentRegi === void 0 ? void 0 : _Digit2$ComponentRegi.getComponent("TLAcknowledgement");
  return /*#__PURE__*/React.createElement(Switch, null, config.map((routeObj, index) => {
    const {
      component,
      texts,
      inputs,
      key,
      isSkipEnabled
    } = routeObj;
    const Component = typeof component === "string" ? Digit.ComponentRegistryService.getComponent(component) : component;
    return /*#__PURE__*/React.createElement(Route, {
      path: `${match.path}/${routeObj.route}`,
      key: index
    }, /*#__PURE__*/React.createElement(Component, {
      config: {
        texts,
        inputs,
        key,
        isSkipEnabled
      },
      onSelect: handleSelect,
      onSkip: handleSkip,
      t: t,
      formData: params,
      onAdd: handleMultiple,
      userType: "citizen"
    }));
  }), /*#__PURE__*/React.createElement(Route, {
    path: `${match.path}/check`
  }, /*#__PURE__*/React.createElement(CheckPage, {
    onSubmit: createProperty,
    value: params
  })), /*#__PURE__*/React.createElement(Route, {
    path: `${match.path}/acknowledgement`
  }, /*#__PURE__*/React.createElement(TLAcknowledgement, {
    data: params,
    onSuccess: onSuccess,
    onUpdateSuccess: onUpdateSuccess
  })), /*#__PURE__*/React.createElement(Route, null, /*#__PURE__*/React.createElement(Redirect, {
    to: `${match.path}/${config.indexRoute}`
  })));
};

const getPath$1 = (path, params) => {
  params && Object.keys(params).map(key => {
    path = path.replace(`:${key}`, params[key]);
  });
  return path;
};
const getTradeEditDetails = (data, t, wfdata) => {
  var _data$tradeLicenseDet3, _data$tradeLicenseDet4, _data$tradeLicenseDet5, _data$tradeLicenseDet6, _data$tradeLicenseDet7, _data$tradeLicenseDet8, _data$tradeLicenseDet9, _data$tradeLicenseDet10, _data$tradeLicenseDet11, _data$tradeLicenseDet12, _data$tradeLicenseDet13, _data$tradeLicenseDet14, _data$tradeLicenseDet15, _data$tradeLicenseDet16, _data$tradeLicenseDet17, _data$tradeLicenseDet18, _data$tradeLicenseDet19, _data$tradeLicenseDet20, _data$tradeLicenseDet21, _data$tradeLicenseDet22, _data$tradeLicenseDet23, _data$tradeLicenseDet30, _data$tradeLicenseDet31, _data$tradeLicenseDet32, _data$tradeLicenseDet33, _data$tradeLicenseDet34, _data$tradeLicenseDet35, _data$tradeLicenseDet36, _data$tradeLicenseDet37, _data$tradeLicenseDet38, _data$tradeLicenseDet39, _data$tradeLicenseDet40, _data$tradeLicenseDet41, _data$tradeLicenseDet42, _data$tradeLicenseDet43, _data$address, _data$address$localit, _data$tradeLicenseDet44, _data$tradeLicenseDet45, _data$tradeLicenseDet46, _data$tradeLicenseDet47, _data$tradeLicenseDet48, _data$tradeLicenseDet49, _data$tradeLicenseDet50, _data$tradeLicenseDet51, _data$tradeLicenseDet52, _data$tradeLicenseDet53, _data$tradeLicenseDet54, _data$tradeLicenseDet55, _data$tradeLicenseDet56, _data$tradeLicenseDet57, _data$tradeLicenseDet58, _data$tradeLicenseDet59, _data$tradeLicenseDet60, _data$tradeLicenseDet61, _data$tradeLicenseDet62, _data$tradeLicenseDet63, _data$tradeLicenseDet64, _data$tradeLicenseDet65, _data$tradeLicenseDet66, _data$tradeLicenseDet67, _data$tradeLicenseDet68, _data$tradeLicenseDet69, _data$tradeLicenseDet70;
  const gettradeaccessories = (tradeacceserioies, t) => {
    let acc = [];
    tradeacceserioies && tradeacceserioies.map(ob => {
      acc.push({
        accessory: {
          code: `${ob.accessoryCategory}`,
          i18nKey: t(`TRADELICENSE_ACCESSORIESCATEGORY_${ob.accessoryCategory.replaceAll("-", "_")}`)
        },
        accessorycount: ob.count,
        unit: `${ob.uom}`,
        uom: `${ob.uomValue}`,
        id: ob.id
      });
    });
    return acc;
  };
  const gettradeunits = tradeunits => {
    let units = [];
    tradeunits && tradeunits.map(ob => {
      units.push({
        tradecategory: {
          i18nKey: `TRADELICENSE_TRADETYPE_${ob.tradeType.split(".")[0]}`,
          code: `${ob.tradeType.split(".")[0]}`
        },
        tradesubtype: {
          i18nKey: `TL_${ob.tradeType}`,
          code: `${ob.tradeType}`
        },
        tradetype: {
          i18nKey: `TRADELICENSE_TRADETYPE_${ob.tradeType.split(".")[1]}`,
          code: `${ob.tradeType.split(".")[1]}`
        },
        unit: ob.uom,
        uom: ob.uomValue,
        id: ob.id
      });
    });
    return units;
  };
  const gettradedocuments = docs => {
    let documents = [];
    docs && docs.map(ob => {
      if (ob.documentType.includes("OWNERPHOTO")) {
        documents["OwnerPhotoProof"] = ob;
      } else if (ob.documentType.includes("OWNERIDPROOF")) {
        documents["ProofOfIdentity"] = ob;
      } else if (ob.documentType.includes("OWNERSHIPPROOF")) {
        documents["ProofOfOwnership"] = ob;
      }
    });
    return documents;
  };
  const gettradeowners = owner => {
    let ownerarray = [];
    owner && owner.map(ob => {
      var _ob$gender, _ob$gender2;
      ownerarray.push({
        gender: {
          code: ob.gender,
          name: `${!(ob !== null && ob !== void 0 && (_ob$gender = ob.gender) !== null && _ob$gender !== void 0 && _ob$gender.includes("FEMALE")) ? "Male" : "Female"}`,
          value: `${!(ob !== null && ob !== void 0 && (_ob$gender2 = ob.gender) !== null && _ob$gender2 !== void 0 && _ob$gender2.includes("FEMALE")) ? "Male" : "Female"}`,
          i18nKey: ob.gender ? `TL_GENDER_${ob.gender}` : "CS_NA"
        },
        isprimaryowner: false,
        name: ob.name,
        mobilenumber: ob.mobileNumber,
        permanentAddress: ob.permanentAddress,
        id: ob.id,
        uuid: ob.uuid,
        relationship: {
          code: ob === null || ob === void 0 ? void 0 : ob.relationship,
          i18nKey: ob.relationship ? `COMMON_RELATION_${ob.relationship}` : "CS_NA"
        },
        fatherOrHusbandName: ob === null || ob === void 0 ? void 0 : ob.fatherOrHusbandName
      });
    });
    return ownerarray;
  };
  const getInsitutionaltradeowners = (owner, institution) => {
    let ownerarray = [];
    owner && owner.map(ob => {
      var _data$tradeLicenseDet, _data$tradeLicenseDet2;
      ownerarray.push({
        name: institution.name,
        mobilenumber: ob.mobileNumber,
        permanentAddress: ob.permanentAddress,
        altContactNumber: institution.contactNo,
        designation: institution.designation,
        institutionName: institution.instituionName,
        tenantId: data.tenantId,
        emailId: ob.emailId,
        subOwnerShipCategory: {
          code: `${data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet = data.tradeLicenseDetail) === null || _data$tradeLicenseDet === void 0 ? void 0 : _data$tradeLicenseDet.subOwnerShipCategory}`,
          i18nKey: `COMMON_MASTERS_OWNERSHIPCATEGORY_${stringReplaceAll(data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet2 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet2 === void 0 ? void 0 : _data$tradeLicenseDet2.subOwnerShipCategory, ".", "_")}`
        },
        id: ob.id,
        uuid: ob.uuid
      });
    });
    return ownerarray;
  };
  data.TradeDetails = {
    BuildingType: {
      code: `${data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet3 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet3 === void 0 ? void 0 : _data$tradeLicenseDet3.structureType}`,
      i18nKey: `COMMON_MASTERS_STRUCTURETYPE_${(_data$tradeLicenseDet4 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet4 === void 0 ? void 0 : _data$tradeLicenseDet4.structureType.replaceAll(".", "_")}`
    },
    VehicleType: {
      code: `${data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet5 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet5 === void 0 ? void 0 : _data$tradeLicenseDet5.structureType}`,
      i18nKey: `COMMON_MASTERS_STRUCTURETYPE_${(_data$tradeLicenseDet6 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet6 === void 0 ? void 0 : _data$tradeLicenseDet6.structureType.replaceAll(".", "_")}`
    },
    CommencementDate: getCommencementDataFormat(data === null || data === void 0 ? void 0 : data.commencementDate),
    StructureType: {
      code: `${(_data$tradeLicenseDet7 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet7 === void 0 ? void 0 : _data$tradeLicenseDet7.structureType.split(".")[0]}`,
      i18nKey: `${(_data$tradeLicenseDet8 = data.tradeLicenseDetail) !== null && _data$tradeLicenseDet8 !== void 0 && _data$tradeLicenseDet8.structureType.includes("IMMOVABLE") ? "TL_COMMON_YES" : "TL_COMMON_NO"}`
    },
    TradeName: data === null || data === void 0 ? void 0 : data.tradeName,
    TradeGSTNumber: (data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet9 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet9 === void 0 ? void 0 : (_data$tradeLicenseDet10 = _data$tradeLicenseDet9.additionalDetail) === null || _data$tradeLicenseDet10 === void 0 ? void 0 : _data$tradeLicenseDet10.tradeGstNo) || (data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet11 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet11 === void 0 ? void 0 : (_data$tradeLicenseDet12 = _data$tradeLicenseDet11.additionalDetail) === null || _data$tradeLicenseDet12 === void 0 ? void 0 : _data$tradeLicenseDet12.gstNo) || "",
    OperationalSqFtArea: (data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet13 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet13 === void 0 ? void 0 : _data$tradeLicenseDet13.operationalArea) || "",
    NumberOfEmployees: (data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet14 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet14 === void 0 ? void 0 : _data$tradeLicenseDet14.noOfEmployees) || "",
    accessories: gettradeaccessories(data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet15 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet15 === void 0 ? void 0 : _data$tradeLicenseDet15.accessories, t),
    isAccessories: gettradeaccessories(data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet16 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet16 === void 0 ? void 0 : _data$tradeLicenseDet16.accessories, t).length > 0 ? {
      code: `ACCESSORY`,
      i18nKey: "TL_COMMON_YES"
    } : {
      code: `NONACCESSORY`,
      i18nKey: "TL_COMMON_NO"
    },
    units: gettradeunits(data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet17 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet17 === void 0 ? void 0 : _data$tradeLicenseDet17.tradeUnits)
  };
  data.address = {};
  if (data !== null && data !== void 0 && (_data$tradeLicenseDet18 = data.tradeLicenseDetail) !== null && _data$tradeLicenseDet18 !== void 0 && (_data$tradeLicenseDet19 = _data$tradeLicenseDet18.address) !== null && _data$tradeLicenseDet19 !== void 0 && (_data$tradeLicenseDet20 = _data$tradeLicenseDet19.geoLocation) !== null && _data$tradeLicenseDet20 !== void 0 && _data$tradeLicenseDet20.latitude && data !== null && data !== void 0 && (_data$tradeLicenseDet21 = data.tradeLicenseDetail) !== null && _data$tradeLicenseDet21 !== void 0 && (_data$tradeLicenseDet22 = _data$tradeLicenseDet21.address) !== null && _data$tradeLicenseDet22 !== void 0 && (_data$tradeLicenseDet23 = _data$tradeLicenseDet22.geoLocation) !== null && _data$tradeLicenseDet23 !== void 0 && _data$tradeLicenseDet23.longitude) {
    var _data$tradeLicenseDet24, _data$tradeLicenseDet25, _data$tradeLicenseDet26, _data$tradeLicenseDet27, _data$tradeLicenseDet28, _data$tradeLicenseDet29;
    data.address.geoLocation = {
      latitude: data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet24 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet24 === void 0 ? void 0 : (_data$tradeLicenseDet25 = _data$tradeLicenseDet24.address) === null || _data$tradeLicenseDet25 === void 0 ? void 0 : (_data$tradeLicenseDet26 = _data$tradeLicenseDet25.geoLocation) === null || _data$tradeLicenseDet26 === void 0 ? void 0 : _data$tradeLicenseDet26.latitude,
      longitude: data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet27 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet27 === void 0 ? void 0 : (_data$tradeLicenseDet28 = _data$tradeLicenseDet27.address) === null || _data$tradeLicenseDet28 === void 0 ? void 0 : (_data$tradeLicenseDet29 = _data$tradeLicenseDet28.geoLocation) === null || _data$tradeLicenseDet29 === void 0 ? void 0 : _data$tradeLicenseDet29.longitude
    };
  } else {
    data.address.geoLocation = {};
  }
  data.address.doorNo = data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet30 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet30 === void 0 ? void 0 : (_data$tradeLicenseDet31 = _data$tradeLicenseDet30.address) === null || _data$tradeLicenseDet31 === void 0 ? void 0 : _data$tradeLicenseDet31.doorNo;
  data.address.street = data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet32 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet32 === void 0 ? void 0 : (_data$tradeLicenseDet33 = _data$tradeLicenseDet32.address) === null || _data$tradeLicenseDet33 === void 0 ? void 0 : _data$tradeLicenseDet33.street;
  data.address.landmark = data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet34 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet34 === void 0 ? void 0 : (_data$tradeLicenseDet35 = _data$tradeLicenseDet34.address) === null || _data$tradeLicenseDet35 === void 0 ? void 0 : _data$tradeLicenseDet35.landmark;
  data.address.pincode = data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet36 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet36 === void 0 ? void 0 : (_data$tradeLicenseDet37 = _data$tradeLicenseDet36.address) === null || _data$tradeLicenseDet37 === void 0 ? void 0 : _data$tradeLicenseDet37.pincode;
  data.address.city = {
    code: data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet38 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet38 === void 0 ? void 0 : (_data$tradeLicenseDet39 = _data$tradeLicenseDet38.address) === null || _data$tradeLicenseDet39 === void 0 ? void 0 : _data$tradeLicenseDet39.tenantId,
    i18nKey: `TENANT_TENANTS_${stringReplaceAll(data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet40 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet40 === void 0 ? void 0 : (_data$tradeLicenseDet41 = _data$tradeLicenseDet40.address) === null || _data$tradeLicenseDet41 === void 0 ? void 0 : _data$tradeLicenseDet41.tenantId, ".", "_").toUpperCase()}`
  };
  data.address.locality = data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet42 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet42 === void 0 ? void 0 : (_data$tradeLicenseDet43 = _data$tradeLicenseDet42.address) === null || _data$tradeLicenseDet43 === void 0 ? void 0 : _data$tradeLicenseDet43.locality;
  data.address.locality.i18nkey = (data === null || data === void 0 ? void 0 : data.tenantId.replace(".", "_").toUpperCase()) + "_" + "REVENUE" + "_" + (data === null || data === void 0 ? void 0 : (_data$address = data.address) === null || _data$address === void 0 ? void 0 : (_data$address$localit = _data$address.locality) === null || _data$address$localit === void 0 ? void 0 : _data$address$localit.code);
  data.address.locality.doorNo = data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet44 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet44 === void 0 ? void 0 : (_data$tradeLicenseDet45 = _data$tradeLicenseDet44.address) === null || _data$tradeLicenseDet45 === void 0 ? void 0 : _data$tradeLicenseDet45.doorNo;
  data.address.locality.landmark = data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet46 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet46 === void 0 ? void 0 : (_data$tradeLicenseDet47 = _data$tradeLicenseDet46.address) === null || _data$tradeLicenseDet47 === void 0 ? void 0 : _data$tradeLicenseDet47.landmark;
  data.owners = {
    documents: gettradedocuments(data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet48 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet48 === void 0 ? void 0 : _data$tradeLicenseDet48.applicationDocuments),
    owners: data !== null && data !== void 0 && (_data$tradeLicenseDet49 = data.tradeLicenseDetail) !== null && _data$tradeLicenseDet49 !== void 0 && (_data$tradeLicenseDet50 = _data$tradeLicenseDet49.institution) !== null && _data$tradeLicenseDet50 !== void 0 && _data$tradeLicenseDet50.id ? getInsitutionaltradeowners(data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet51 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet51 === void 0 ? void 0 : _data$tradeLicenseDet51.owners, data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet52 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet52 === void 0 ? void 0 : _data$tradeLicenseDet52.institution) : gettradeowners(data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet53 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet53 === void 0 ? void 0 : _data$tradeLicenseDet53.owners),
    permanentAddress: data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet54 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet54 === void 0 ? void 0 : _data$tradeLicenseDet54.owners[0].permanentAddress,
    isCorrespondenceAddress: false
  };
  data.ownershipCategory = {
    code: `${data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet55 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet55 === void 0 ? void 0 : _data$tradeLicenseDet55.subOwnerShipCategory}`,
    i18nKey: `PT_OWNERSHIP_${data !== null && data !== void 0 && (_data$tradeLicenseDet56 = data.tradeLicenseDetail) !== null && _data$tradeLicenseDet56 !== void 0 && (_data$tradeLicenseDet57 = _data$tradeLicenseDet56.subOwnerShipCategory) !== null && _data$tradeLicenseDet57 !== void 0 && _data$tradeLicenseDet57.includes("INSTITUTIONAL") ? data !== null && data !== void 0 && (_data$tradeLicenseDet58 = data.tradeLicenseDetail) !== null && _data$tradeLicenseDet58 !== void 0 && (_data$tradeLicenseDet59 = _data$tradeLicenseDet58.subOwnerShipCategory) !== null && _data$tradeLicenseDet59 !== void 0 && _data$tradeLicenseDet59.includes("GOVERNMENT") ? "OTHERGOVERNMENTINSTITUITION" : "OTHERSPRIVATEINSTITUITION" : data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet60 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet60 === void 0 ? void 0 : (_data$tradeLicenseDet61 = _data$tradeLicenseDet60.subOwnerShipCategory) === null || _data$tradeLicenseDet61 === void 0 ? void 0 : _data$tradeLicenseDet61.split(".")[1]}`,
    value: `${data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet62 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet62 === void 0 ? void 0 : _data$tradeLicenseDet62.subOwnerShipCategory}${data !== null && data !== void 0 && (_data$tradeLicenseDet63 = data.tradeLicenseDetail) !== null && _data$tradeLicenseDet63 !== void 0 && (_data$tradeLicenseDet64 = _data$tradeLicenseDet63.subOwnerShipCategory) !== null && _data$tradeLicenseDet64 !== void 0 && _data$tradeLicenseDet64.includes("INSTITUTIONAL") ? data !== null && data !== void 0 && (_data$tradeLicenseDet65 = data.tradeLicenseDetail) !== null && _data$tradeLicenseDet65 !== void 0 && (_data$tradeLicenseDet66 = _data$tradeLicenseDet65.subOwnerShipCategory) !== null && _data$tradeLicenseDet66 !== void 0 && _data$tradeLicenseDet66.includes("GOVERNMENT") ? ".OTHERGOVERNMENTINSTITUITION" : ".OTHERSPRIVATEINSTITUITION" : ""}`,
    isSameAsPropertyOwner: (data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet67 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet67 === void 0 ? void 0 : (_data$tradeLicenseDet68 = _data$tradeLicenseDet67.additionalDetail) === null || _data$tradeLicenseDet68 === void 0 ? void 0 : _data$tradeLicenseDet68.isSameAsPropertyOwner) === "null" ? null : data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet69 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet69 === void 0 ? void 0 : (_data$tradeLicenseDet70 = _data$tradeLicenseDet69.additionalDetail) === null || _data$tradeLicenseDet70 === void 0 ? void 0 : _data$tradeLicenseDet70.isSameAsPropertyOwner
  };
  data.workflowObject = wfdata;
  return data;
};
const EditTrade = ({
  parentRoute
}) => {
  var _data$Licenses$, _data$Licenses$2, _data$Licenses, _data$Licenses$3, _data$Licenses2, _newConfig, _Digit2, _Digit2$ComponentRegi, _Digit3, _Digit3$ComponentRegi;
  const queryClient = useQueryClient();
  const match = useRouteMatch();
  const {
    t
  } = useTranslation();
  const {
    id: licenseNo,
    tenantId
  } = useParams();
  const {
    pathname
  } = useLocation();
  const history = useHistory();
  let config = [];
  let application = {};
  const [params, setParams, clearParams] = Digit.Hooks.useSessionStorage("TL_EDIT_TRADE", {});
  const stateId = Digit.ULBService.getStateId();
  let {
    data: newConfig$1,
    isLoading: configLoading
  } = Digit.Hooks.tl.useMDMS.getFormConfig(stateId, {});
  let filter1 = {};
  if (licenseNo) filter1.applicationNumber = licenseNo;
  if (tenantId) filter1.tenantId = tenantId;
  const {
    isLoading,
    isError,
    error,
    data
  } = Digit.Hooks.tl.useTradeLicenseSearch({
    filters: filter1
  }, {
    filters: filter1
  });
  const businessService = data === null || data === void 0 ? void 0 : (_data$Licenses$ = data.Licenses[0]) === null || _data$Licenses$ === void 0 ? void 0 : _data$Licenses$.businessService;
  const {
    isLoading: iswfLoading,
    data: wfdata
  } = Digit.Hooks.useWorkflowDetails({
    tenantId: data === null || data === void 0 ? void 0 : (_data$Licenses$2 = data.Licenses[0]) === null || _data$Licenses$2 === void 0 ? void 0 : _data$Licenses$2.tenantId,
    id: data === null || data === void 0 ? void 0 : (_data$Licenses = data.Licenses) === null || _data$Licenses === void 0 ? void 0 : (_data$Licenses$3 = _data$Licenses[0]) === null || _data$Licenses$3 === void 0 ? void 0 : _data$Licenses$3.applicationNumber,
    moduleCode: businessService
  }, {
    enabled: data !== null && data !== void 0 && (_data$Licenses2 = data.Licenses) !== null && _data$Licenses2 !== void 0 && _data$Licenses2[0] ? true : false
  });
  const editProperty = window.location.href.includes("edit");
  const tlTrade = JSON.parse(sessionStorage.getItem("tl-trade")) || {};
  let isReneworEditTrade = window.location.href.includes("/renew-trade/") || window.location.href.includes("/edit-application/");
  useEffect(() => {
    var _Digit, _Digit$ComponentRegis;
    application = (data === null || data === void 0 ? void 0 : data.Licenses) && data.Licenses[0] && data.Licenses[0];
    if (data && application) {
      application = data === null || data === void 0 ? void 0 : data.Licenses[0];
      if (editProperty) {
        application.isEditProperty = true;
      }
      sessionStorage.setItem("tradeInitialObject", JSON.stringify({
        ...application
      }));
      let tradeEditDetails = getTradeEditDetails(application, t, wfdata);
      setParams({
        ...params,
        ...tradeEditDetails
      });
    }
    const setCustomEditState = (_Digit = Digit) === null || _Digit === void 0 ? void 0 : (_Digit$ComponentRegis = _Digit.ComponentRegistryService) === null || _Digit$ComponentRegis === void 0 ? void 0 : _Digit$ComponentRegis.getComponent("TLCitizenEditFormDataLoad");
    if (setCustomEditState) setCustomEditState({
      data,
      setParams,
      params,
      licenseNo,
      tenantId
    });
  }, [data]);
  const goNext = (skipStep, index, isAddMultiple, key, isPTCreateSkip) => {
    var _params$TradeDetails, _params$TradeDetails$, _params$TradeDetails2, _params$TradeDetails3, _params$cptId2, _params$cpt2, _params$cpt2$details, _params$tradeLicenseD3, _params$tradeLicenseD4, _params$ownershipCate;
    let currentPath = pathname.split("/").pop(),
      lastchar = currentPath.charAt(currentPath.length - 1),
      nextPage;
    let {
      nextStep = {}
    } = config.find(routeObj => routeObj.route === currentPath);
    let {
      isCreateEnabled: enableCreate = true
    } = config.find(routeObj => routeObj.route === currentPath);
    if (typeof nextStep == "object" && nextStep != null) {
      var _params$cptId, _params$cpt, _params$cpt$details, _params$tradeLicenseD, _params$tradeLicenseD2;
      if ((params !== null && params !== void 0 && (_params$cptId = params.cptId) !== null && _params$cptId !== void 0 && _params$cptId.id || params !== null && params !== void 0 && (_params$cpt = params.cpt) !== null && _params$cpt !== void 0 && (_params$cpt$details = _params$cpt.details) !== null && _params$cpt$details !== void 0 && _params$cpt$details.propertyId || isReneworEditTrade && params !== null && params !== void 0 && (_params$tradeLicenseD = params.tradeLicenseDetail) !== null && _params$tradeLicenseD !== void 0 && (_params$tradeLicenseD2 = _params$tradeLicenseD.additionalDetail) !== null && _params$tradeLicenseD2 !== void 0 && _params$tradeLicenseD2.propertyId) && nextStep[sessionStorage.getItem("isAccessories")] && nextStep[sessionStorage.getItem("isAccessories")] === "know-your-property") {
        nextStep = "property-details";
      }
      if (nextStep[sessionStorage.getItem("isAccessories")] && (nextStep[sessionStorage.getItem("isAccessories")] === "accessories-details" || nextStep[sessionStorage.getItem("isAccessories")] === "map" || nextStep[sessionStorage.getItem("isAccessories")] === "owner-ship-details" || nextStep[sessionStorage.getItem("isAccessories")] === "other-trade-details")) {
        nextStep = `${nextStep[sessionStorage.getItem("isAccessories")]}`;
      } else if (nextStep[sessionStorage.getItem("StructureType")] && (nextStep[sessionStorage.getItem("StructureType")] === "Building-type" || nextStep[sessionStorage.getItem("StructureType")] === "vehicle-type")) {
        nextStep = `${nextStep[sessionStorage.getItem("StructureType")]}`;
      } else if (nextStep[sessionStorage.getItem("KnowProperty")] && (nextStep[sessionStorage.getItem("KnowProperty")] === "search-property" || nextStep[sessionStorage.getItem("KnowProperty")] === "create-property")) {
        if (nextStep[sessionStorage.getItem("KnowProperty")] === "create-property" && !enableCreate) {
          nextStep = `map`;
        } else {
          nextStep = `${nextStep[sessionStorage.getItem("KnowProperty")]}`;
        }
      }
    }
    if (nextStep === "know-your-property" && (params === null || params === void 0 ? void 0 : (_params$TradeDetails = params.TradeDetails) === null || _params$TradeDetails === void 0 ? void 0 : (_params$TradeDetails$ = _params$TradeDetails.StructureType) === null || _params$TradeDetails$ === void 0 ? void 0 : _params$TradeDetails$.code) === "MOVABLE") {
      nextStep = "map";
    }
    if (nextStep === "landmark" && (params === null || params === void 0 ? void 0 : (_params$TradeDetails2 = params.TradeDetails) === null || _params$TradeDetails2 === void 0 ? void 0 : (_params$TradeDetails3 = _params$TradeDetails2.StructureType) === null || _params$TradeDetails3 === void 0 ? void 0 : _params$TradeDetails3.code) === "MOVABLE") {
      nextStep = "owner-ship-details";
    }
    if ((params !== null && params !== void 0 && (_params$cptId2 = params.cptId) !== null && _params$cptId2 !== void 0 && _params$cptId2.id || params !== null && params !== void 0 && (_params$cpt2 = params.cpt) !== null && _params$cpt2 !== void 0 && (_params$cpt2$details = _params$cpt2.details) !== null && _params$cpt2$details !== void 0 && _params$cpt2$details.propertyId || isReneworEditTrade && params !== null && params !== void 0 && (_params$tradeLicenseD3 = params.tradeLicenseDetail) !== null && _params$tradeLicenseD3 !== void 0 && (_params$tradeLicenseD4 = _params$tradeLicenseD3.additionalDetail) !== null && _params$tradeLicenseD4 !== void 0 && _params$tradeLicenseD4.propertyId) && nextStep === "know-your-property") {
      nextStep = "property-details";
    }
    if (nextStep === "owner-details" && ((params === null || params === void 0 ? void 0 : (_params$ownershipCate = params.ownershipCategory) === null || _params$ownershipCate === void 0 ? void 0 : _params$ownershipCate.isSameAsPropertyOwner) === true || sessionStorage.getItem("isSameAsPropertyOwner") === "true")) {
      nextStep = "proof-of-identity";
    }
    let redirectWithHistory = history.push;
    if (skipStep) {
      redirectWithHistory = history.replace;
    }
    if (isAddMultiple) {
      nextStep = key;
    }
    if (nextStep === null) {
      return redirectWithHistory(`${getPath$1(match.path, match.params)}/check`);
    }
    if (isPTCreateSkip && nextStep === "acknowledge-create-property") {
      nextStep = "map";
    }
    nextPage = `${getPath$1(match.path, match.params)}/${nextStep}`;
    redirectWithHistory(nextPage);
  };
  const createProperty = async () => {
    history.push(`${getPath$1(match.path, match.params)}/acknowledgement`);
  };
  function handleSelect(key, data, skipStep, index, isAddMultiple = false) {
    setParams({
      ...params,
      ...{
        [key]: {
          ...params[key],
          ...data
        }
      }
    });
    if (key === "isSkip" && data === true) {
      goNext(skipStep, index, isAddMultiple, key, true);
    } else {
      goNext(skipStep, index, isAddMultiple, key);
    }
  }
  const handleSkip = () => {};
  const handleMultiple = () => {};
  const onSuccess = () => {
    queryClient.invalidateQueries("TL_EDIT_TRADE");
  };
  newConfig$1 = newConfig$1 ? newConfig$1 : newConfig;
  (_newConfig = newConfig$1) === null || _newConfig === void 0 ? void 0 : _newConfig.forEach(obj => {
    config = config.concat(obj.body.filter(a => !a.hideInCitizen));
  });
  config.indexRoute = "check";
  if (isLoading || configLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }
  const CheckPage = (_Digit2 = Digit) === null || _Digit2 === void 0 ? void 0 : (_Digit2$ComponentRegi = _Digit2.ComponentRegistryService) === null || _Digit2$ComponentRegi === void 0 ? void 0 : _Digit2$ComponentRegi.getComponent('TLCheckPage');
  const TLAcknowledgement = (_Digit3 = Digit) === null || _Digit3 === void 0 ? void 0 : (_Digit3$ComponentRegi = _Digit3.ComponentRegistryService) === null || _Digit3$ComponentRegi === void 0 ? void 0 : _Digit3$ComponentRegi.getComponent('TLAcknowledgement');
  return /*#__PURE__*/React.createElement(Switch, null, config.map((routeObj, index) => {
    const {
      component,
      texts,
      inputs,
      key,
      isSkipEnabled
    } = routeObj;
    const Component = typeof component === "string" ? Digit.ComponentRegistryService.getComponent(component) : component;
    return /*#__PURE__*/React.createElement(Route, {
      path: `${getPath$1(match.path, match.params)}/${routeObj.route}`,
      key: index
    }, /*#__PURE__*/React.createElement(Component, {
      config: {
        texts,
        inputs,
        key,
        isSkipEnabled
      },
      onSelect: handleSelect,
      onSkip: handleSkip,
      t: t,
      formData: params,
      onAdd: handleMultiple
    }));
  }), /*#__PURE__*/React.createElement(Route, {
    path: `${getPath$1(match.path, match.params)}/check`
  }, /*#__PURE__*/React.createElement(CheckPage, {
    onSubmit: createProperty,
    value: params
  })), /*#__PURE__*/React.createElement(Route, {
    path: `${getPath$1(match.path, match.params)}/acknowledgement`
  }, /*#__PURE__*/React.createElement(TLAcknowledgement, {
    data: params,
    onSuccess: onSuccess
  })), /*#__PURE__*/React.createElement(Route, null, /*#__PURE__*/React.createElement(Redirect, {
    to: `${getPath$1(match.path, match.params)}/${config.indexRoute}`
  })));
};

const TLList = () => {
  var _Digit$SessionStorage, _userInfo$info, _userInfo$info2;
  const {
    t
  } = useTranslation();
  const userInfo = Digit.UserService.getUser();
  const tenantId = ((_Digit$SessionStorage = Digit.SessionStorage.get("CITIZEN.COMMON.HOME.CITY")) === null || _Digit$SessionStorage === void 0 ? void 0 : _Digit$SessionStorage.code) || (userInfo === null || userInfo === void 0 ? void 0 : (_userInfo$info = userInfo.info) === null || _userInfo$info === void 0 ? void 0 : _userInfo$info.permanentCity);
  const {
    mobileNumber: mobileno,
    LicenseNumber: licenseno,
    tenantId: tenantID
  } = Digit.Hooks.useQueryParams();
  let filter1 = {};
  if (licenseno) filter1.licenseNumbers = licenseno;
  if (licenseno) filter1.tenantId = tenantID;
  if (!licenseno) filter1.mobileNumber = userInfo === null || userInfo === void 0 ? void 0 : (_userInfo$info2 = userInfo.info) === null || _userInfo$info2 === void 0 ? void 0 : _userInfo$info2.mobileNumber;
  filter1 = {
    ...filter1,
    tenantId: tenantId || tenantID,
    status: "APPROVED,CANCELLED,EXPIRED,MANUALEXPIRED"
  };
  const {
    isLoading,
    isError,
    error,
    data
  } = Digit.Hooks.tl.useTradeLicenseSearch({
    filters: filter1
  }, {});
  useEffect(() => {
    localStorage.setItem("TLAppSubmitEnabled", "true");
  }, []);
  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }
  let {
    Licenses: applicationsList
  } = data || {};
  let newapplicationlist = applicationsList;
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(CardHeader, null, `${t("TL_RENEW_TRADE_HEADER")}`), /*#__PURE__*/React.createElement(CardText, null, `${t("TL_RENEW_TRADE_TEXT")}`)), /*#__PURE__*/React.createElement("div", null, (newapplicationlist === null || newapplicationlist === void 0 ? void 0 : newapplicationlist.length) > 0 && newapplicationlist.map((application, index) => /*#__PURE__*/React.createElement("div", {
    key: index
  }, /*#__PURE__*/React.createElement(TradeLicenseList, {
    application: application
  }))), !(newapplicationlist !== null && newapplicationlist !== void 0 && newapplicationlist.length) > 0 && /*#__PURE__*/React.createElement("p", {
    style: {
      marginLeft: "16px",
      marginTop: "16px"
    }
  }, t("PT_NO_APPLICATION_FOUND_MSG"))));
};

const getPath$2 = (path, params) => {
  params && Object.keys(params).map(key => {
    path = path.replace(`:${key}`, params[key]);
  });
  return path;
};
const gettradedocuments = docs => {
  let documents = [];
  docs && docs.map(ob => {
    if (ob.documentType.includes("OWNERPHOTO")) {
      documents["OwnerPhotoProof"] = ob;
    } else if (ob.documentType.includes("OWNERIDPROOF")) {
      documents["ProofOfIdentity"] = ob;
    } else if (ob.documentType.includes("OWNERSHIPPROOF")) {
      documents["ProofOfOwnership"] = ob;
    }
  });
  return documents;
};
const getTradeEditDetails$1 = (data, t) => {
  var _data$tradeLicenseDet3, _data$tradeLicenseDet4, _data$tradeLicenseDet5, _data$tradeLicenseDet6, _data$tradeLicenseDet7, _data$tradeLicenseDet8, _data$tradeLicenseDet9, _data$tradeLicenseDet10, _data$tradeLicenseDet11, _data$tradeLicenseDet12, _data$tradeLicenseDet13, _data$tradeLicenseDet14, _data$tradeLicenseDet15, _data$tradeLicenseDet16, _data$tradeLicenseDet17, _data$tradeLicenseDet18, _data$tradeLicenseDet19, _data$tradeLicenseDet20, _data$tradeLicenseDet21, _data$tradeLicenseDet22, _data$tradeLicenseDet23, _data$tradeLicenseDet30, _data$tradeLicenseDet31, _data$tradeLicenseDet32, _data$tradeLicenseDet33, _data$tradeLicenseDet34, _data$tradeLicenseDet35, _data$tradeLicenseDet36, _data$tradeLicenseDet37, _data$tradeLicenseDet38, _data$tradeLicenseDet39, _data$tradeLicenseDet40, _data$tradeLicenseDet41, _data$tradeLicenseDet42, _data$tradeLicenseDet43, _data$address, _data$address$localit, _data$tradeLicenseDet44, _data$tradeLicenseDet45, _data$tradeLicenseDet46, _data$tradeLicenseDet47, _data$tradeLicenseDet48, _data$tradeLicenseDet49, _data$tradeLicenseDet50, _data$tradeLicenseDet51, _data$tradeLicenseDet52, _data$tradeLicenseDet53, _data$tradeLicenseDet54, _data$tradeLicenseDet55, _data$tradeLicenseDet56, _data$tradeLicenseDet57, _data$tradeLicenseDet58, _data$tradeLicenseDet59, _data$tradeLicenseDet60, _data$tradeLicenseDet61, _data$tradeLicenseDet62, _data$tradeLicenseDet63, _data$tradeLicenseDet64, _data$tradeLicenseDet65, _data$tradeLicenseDet66, _data$tradeLicenseDet67, _data$tradeLicenseDet68, _data$tradeLicenseDet69, _data$tradeLicenseDet70;
  const gettradeaccessories = (tradeacceserioies, t) => {
    let acc = [];
    tradeacceserioies && tradeacceserioies.map(ob => {
      acc.push({
        accessory: {
          code: `${ob.accessoryCategory}`,
          i18nKey: t(`TRADELICENSE_ACCESSORIESCATEGORY_${ob.accessoryCategory.replaceAll("-", "_")}`)
        },
        accessorycount: ob.count,
        unit: `${ob.uom}`,
        uom: `${ob.uomValue}`,
        id: ob.id
      });
    });
    return acc;
  };
  const gettradeunits = tradeunits => {
    let units = [];
    tradeunits && tradeunits.map(ob => {
      units.push({
        tradecategory: {
          i18nKey: `TRADELICENSE_TRADETYPE_${ob.tradeType.split(".")[0]}`,
          code: `${ob.tradeType.split(".")[0]}`
        },
        tradesubtype: {
          i18nKey: `TL_${ob.tradeType}`,
          code: `${ob.tradeType}`
        },
        tradetype: {
          i18nKey: `TRADELICENSE_TRADETYPE_${ob.tradeType.split(".")[1]}`,
          code: `${ob.tradeType.split(".")[1]}`
        },
        unit: ob.uom,
        uom: ob.uomValue,
        id: ob.id
      });
    });
    return units;
  };
  const gettradeowners = owner => {
    let ownerarray = [];
    owner && owner.map(ob => {
      var _ob$gender, _ob$gender2;
      ownerarray.push({
        gender: {
          code: `${ob.gender}`,
          name: ob.gender ? `${!(ob !== null && ob !== void 0 && (_ob$gender = ob.gender) !== null && _ob$gender !== void 0 && _ob$gender.includes("FEMALE")) ? "Male" : "Female"}` : "",
          value: ob.gender ? `${!(ob !== null && ob !== void 0 && (_ob$gender2 = ob.gender) !== null && _ob$gender2 !== void 0 && _ob$gender2.includes("FEMALE")) ? "Male" : "Female"}` : "",
          i18nKey: ob.gender ? `TL_GENDER_${ob.gender}` : ""
        },
        isprimaryowner: false,
        name: ob.name,
        mobilenumber: ob.mobileNumber,
        permanentAddress: ob.permanentAddress,
        fatherOrHusbandName: ob === null || ob === void 0 ? void 0 : ob.fatherOrHusbandName,
        relationship: {
          code: ob === null || ob === void 0 ? void 0 : ob.relationship,
          i18nKey: ob.relationship ? `COMMON_RELATION_${ob.relationship}` : "CS_NA"
        },
        id: ob.id,
        uuid: ob.uuid
      });
    });
    return ownerarray;
  };
  const getInsitutionaltradeowners = (owner, institution) => {
    let ownerarray = [];
    owner && owner.map(ob => {
      var _data$tradeLicenseDet, _data$tradeLicenseDet2;
      ownerarray.push({
        name: institution.name,
        mobilenumber: ob.mobileNumber,
        permanentAddress: ob.permanentAddress,
        altContactNumber: institution.contactNo,
        designation: institution.designation,
        institutionName: institution.instituionName,
        tenantId: data.tenantId,
        emailId: ob.emailId,
        subOwnerShipCategory: {
          code: `${data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet = data.tradeLicenseDetail) === null || _data$tradeLicenseDet === void 0 ? void 0 : _data$tradeLicenseDet.subOwnerShipCategory}`,
          i18nKey: `COMMON_MASTERS_OWNERSHIPCATEGORY_${stringReplaceAll(data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet2 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet2 === void 0 ? void 0 : _data$tradeLicenseDet2.subOwnerShipCategory, ".", "_")}`
        },
        id: ob.id,
        uuid: ob.uuid
      });
    });
    return ownerarray;
  };
  data.TradeDetails = {
    BuildingType: {
      code: `${data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet3 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet3 === void 0 ? void 0 : _data$tradeLicenseDet3.structureType}`,
      i18nKey: `COMMON_MASTERS_STRUCTURETYPE_${(_data$tradeLicenseDet4 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet4 === void 0 ? void 0 : _data$tradeLicenseDet4.structureType.replaceAll(".", "_")}`
    },
    VehicleType: {
      code: `${data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet5 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet5 === void 0 ? void 0 : _data$tradeLicenseDet5.structureType}`,
      i18nKey: `COMMON_MASTERS_STRUCTURETYPE_${(_data$tradeLicenseDet6 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet6 === void 0 ? void 0 : _data$tradeLicenseDet6.structureType.replaceAll(".", "_")}`
    },
    CommencementDate: getCommencementDataFormat(data === null || data === void 0 ? void 0 : data.commencementDate),
    StructureType: {
      code: `${(_data$tradeLicenseDet7 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet7 === void 0 ? void 0 : _data$tradeLicenseDet7.structureType.split(".")[0]}`,
      i18nKey: `${(_data$tradeLicenseDet8 = data.tradeLicenseDetail) !== null && _data$tradeLicenseDet8 !== void 0 && _data$tradeLicenseDet8.structureType.includes("IMMOVABLE") ? "TL_COMMON_YES" : "TL_COMMON_NO"}`
    },
    TradeName: data === null || data === void 0 ? void 0 : data.tradeName,
    TradeGSTNumber: (data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet9 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet9 === void 0 ? void 0 : (_data$tradeLicenseDet10 = _data$tradeLicenseDet9.additionalDetail) === null || _data$tradeLicenseDet10 === void 0 ? void 0 : _data$tradeLicenseDet10.tradeGstNo) || (data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet11 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet11 === void 0 ? void 0 : (_data$tradeLicenseDet12 = _data$tradeLicenseDet11.additionalDetail) === null || _data$tradeLicenseDet12 === void 0 ? void 0 : _data$tradeLicenseDet12.gstNo) || "",
    OperationalSqFtArea: (data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet13 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet13 === void 0 ? void 0 : _data$tradeLicenseDet13.operationalArea) || "",
    NumberOfEmployees: (data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet14 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet14 === void 0 ? void 0 : _data$tradeLicenseDet14.noOfEmployees) || "",
    accessories: gettradeaccessories(data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet15 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet15 === void 0 ? void 0 : _data$tradeLicenseDet15.accessories, t),
    isAccessories: gettradeaccessories(data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet16 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet16 === void 0 ? void 0 : _data$tradeLicenseDet16.accessories, t).length > 0 ? {
      code: `ACCESSORY`,
      i18nKey: "TL_COMMON_YES"
    } : {
      code: `NONACCESSORY`,
      i18nKey: "TL_COMMON_NO"
    },
    units: gettradeunits(data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet17 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet17 === void 0 ? void 0 : _data$tradeLicenseDet17.tradeUnits)
  };
  data.address = {};
  if (data !== null && data !== void 0 && (_data$tradeLicenseDet18 = data.tradeLicenseDetail) !== null && _data$tradeLicenseDet18 !== void 0 && (_data$tradeLicenseDet19 = _data$tradeLicenseDet18.address) !== null && _data$tradeLicenseDet19 !== void 0 && (_data$tradeLicenseDet20 = _data$tradeLicenseDet19.geoLocation) !== null && _data$tradeLicenseDet20 !== void 0 && _data$tradeLicenseDet20.latitude && data !== null && data !== void 0 && (_data$tradeLicenseDet21 = data.tradeLicenseDetail) !== null && _data$tradeLicenseDet21 !== void 0 && (_data$tradeLicenseDet22 = _data$tradeLicenseDet21.address) !== null && _data$tradeLicenseDet22 !== void 0 && (_data$tradeLicenseDet23 = _data$tradeLicenseDet22.geoLocation) !== null && _data$tradeLicenseDet23 !== void 0 && _data$tradeLicenseDet23.longitude) {
    var _data$tradeLicenseDet24, _data$tradeLicenseDet25, _data$tradeLicenseDet26, _data$tradeLicenseDet27, _data$tradeLicenseDet28, _data$tradeLicenseDet29;
    data.address.geoLocation = {
      latitude: data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet24 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet24 === void 0 ? void 0 : (_data$tradeLicenseDet25 = _data$tradeLicenseDet24.address) === null || _data$tradeLicenseDet25 === void 0 ? void 0 : (_data$tradeLicenseDet26 = _data$tradeLicenseDet25.geoLocation) === null || _data$tradeLicenseDet26 === void 0 ? void 0 : _data$tradeLicenseDet26.latitude,
      longitude: data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet27 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet27 === void 0 ? void 0 : (_data$tradeLicenseDet28 = _data$tradeLicenseDet27.address) === null || _data$tradeLicenseDet28 === void 0 ? void 0 : (_data$tradeLicenseDet29 = _data$tradeLicenseDet28.geoLocation) === null || _data$tradeLicenseDet29 === void 0 ? void 0 : _data$tradeLicenseDet29.longitude
    };
  } else {
    data.address.geoLocation = {};
  }
  data.address.doorNo = data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet30 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet30 === void 0 ? void 0 : (_data$tradeLicenseDet31 = _data$tradeLicenseDet30.address) === null || _data$tradeLicenseDet31 === void 0 ? void 0 : _data$tradeLicenseDet31.doorNo;
  data.address.street = data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet32 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet32 === void 0 ? void 0 : (_data$tradeLicenseDet33 = _data$tradeLicenseDet32.address) === null || _data$tradeLicenseDet33 === void 0 ? void 0 : _data$tradeLicenseDet33.street;
  data.address.landmark = data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet34 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet34 === void 0 ? void 0 : (_data$tradeLicenseDet35 = _data$tradeLicenseDet34.address) === null || _data$tradeLicenseDet35 === void 0 ? void 0 : _data$tradeLicenseDet35.landmark;
  data.address.pincode = data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet36 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet36 === void 0 ? void 0 : (_data$tradeLicenseDet37 = _data$tradeLicenseDet36.address) === null || _data$tradeLicenseDet37 === void 0 ? void 0 : _data$tradeLicenseDet37.pincode;
  data.address.city = {
    code: data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet38 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet38 === void 0 ? void 0 : (_data$tradeLicenseDet39 = _data$tradeLicenseDet38.address) === null || _data$tradeLicenseDet39 === void 0 ? void 0 : _data$tradeLicenseDet39.tenantId,
    i18nKey: `TENANT_TENANTS_${stringReplaceAll(data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet40 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet40 === void 0 ? void 0 : (_data$tradeLicenseDet41 = _data$tradeLicenseDet40.address) === null || _data$tradeLicenseDet41 === void 0 ? void 0 : _data$tradeLicenseDet41.tenantId, ".", "_").toUpperCase()}`
  };
  data.address.locality = data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet42 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet42 === void 0 ? void 0 : (_data$tradeLicenseDet43 = _data$tradeLicenseDet42.address) === null || _data$tradeLicenseDet43 === void 0 ? void 0 : _data$tradeLicenseDet43.locality;
  data.address.locality.i18nkey = (data === null || data === void 0 ? void 0 : data.tenantId.replace(".", "_").toUpperCase()) + "_" + "REVENUE" + "_" + (data === null || data === void 0 ? void 0 : (_data$address = data.address) === null || _data$address === void 0 ? void 0 : (_data$address$localit = _data$address.locality) === null || _data$address$localit === void 0 ? void 0 : _data$address$localit.code);
  data.address.locality.doorNo = data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet44 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet44 === void 0 ? void 0 : (_data$tradeLicenseDet45 = _data$tradeLicenseDet44.address) === null || _data$tradeLicenseDet45 === void 0 ? void 0 : _data$tradeLicenseDet45.doorNo;
  data.address.locality.landmark = data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet46 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet46 === void 0 ? void 0 : (_data$tradeLicenseDet47 = _data$tradeLicenseDet46.address) === null || _data$tradeLicenseDet47 === void 0 ? void 0 : _data$tradeLicenseDet47.landmark;
  data.owners = {
    documents: gettradedocuments(data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet48 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet48 === void 0 ? void 0 : _data$tradeLicenseDet48.applicationDocuments),
    owners: data !== null && data !== void 0 && (_data$tradeLicenseDet49 = data.tradeLicenseDetail) !== null && _data$tradeLicenseDet49 !== void 0 && (_data$tradeLicenseDet50 = _data$tradeLicenseDet49.institution) !== null && _data$tradeLicenseDet50 !== void 0 && _data$tradeLicenseDet50.id ? getInsitutionaltradeowners(data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet51 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet51 === void 0 ? void 0 : _data$tradeLicenseDet51.owners, data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet52 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet52 === void 0 ? void 0 : _data$tradeLicenseDet52.institution) : gettradeowners(data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet53 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet53 === void 0 ? void 0 : _data$tradeLicenseDet53.owners),
    permanentAddress: data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet54 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet54 === void 0 ? void 0 : _data$tradeLicenseDet54.owners[0].permanentAddress,
    isCorrespondenceAddress: false
  };
  data.ownershipCategory = {
    code: `${data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet55 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet55 === void 0 ? void 0 : _data$tradeLicenseDet55.subOwnerShipCategory}`,
    i18nKey: `PT_OWNERSHIP_${data !== null && data !== void 0 && (_data$tradeLicenseDet56 = data.tradeLicenseDetail) !== null && _data$tradeLicenseDet56 !== void 0 && (_data$tradeLicenseDet57 = _data$tradeLicenseDet56.subOwnerShipCategory) !== null && _data$tradeLicenseDet57 !== void 0 && _data$tradeLicenseDet57.includes("INSTITUTIONAL") ? data !== null && data !== void 0 && (_data$tradeLicenseDet58 = data.tradeLicenseDetail) !== null && _data$tradeLicenseDet58 !== void 0 && (_data$tradeLicenseDet59 = _data$tradeLicenseDet58.subOwnerShipCategory) !== null && _data$tradeLicenseDet59 !== void 0 && _data$tradeLicenseDet59.includes("GOVERNMENT") ? "OTHERGOVERNMENTINSTITUITION" : "OTHERSPRIVATEINSTITUITION" : data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet60 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet60 === void 0 ? void 0 : (_data$tradeLicenseDet61 = _data$tradeLicenseDet60.subOwnerShipCategory) === null || _data$tradeLicenseDet61 === void 0 ? void 0 : _data$tradeLicenseDet61.split(".")[1]}`,
    value: `${data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet62 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet62 === void 0 ? void 0 : _data$tradeLicenseDet62.subOwnerShipCategory}${data !== null && data !== void 0 && (_data$tradeLicenseDet63 = data.tradeLicenseDetail) !== null && _data$tradeLicenseDet63 !== void 0 && (_data$tradeLicenseDet64 = _data$tradeLicenseDet63.subOwnerShipCategory) !== null && _data$tradeLicenseDet64 !== void 0 && _data$tradeLicenseDet64.includes("INSTITUTIONAL") ? data !== null && data !== void 0 && (_data$tradeLicenseDet65 = data.tradeLicenseDetail) !== null && _data$tradeLicenseDet65 !== void 0 && (_data$tradeLicenseDet66 = _data$tradeLicenseDet65.subOwnerShipCategory) !== null && _data$tradeLicenseDet66 !== void 0 && _data$tradeLicenseDet66.includes("GOVERNMENT") ? ".OTHERGOVERNMENTINSTITUITION" : ".OTHERSPRIVATEINSTITUITION" : ""}`,
    isSameAsPropertyOwner: (data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet67 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet67 === void 0 ? void 0 : (_data$tradeLicenseDet68 = _data$tradeLicenseDet67.additionalDetail) === null || _data$tradeLicenseDet68 === void 0 ? void 0 : _data$tradeLicenseDet68.isSameAsPropertyOwner) === "null" ? null : data === null || data === void 0 ? void 0 : (_data$tradeLicenseDet69 = data.tradeLicenseDetail) === null || _data$tradeLicenseDet69 === void 0 ? void 0 : (_data$tradeLicenseDet70 = _data$tradeLicenseDet69.additionalDetail) === null || _data$tradeLicenseDet70 === void 0 ? void 0 : _data$tradeLicenseDet70.isSameAsPropertyOwner
  };
  return data;
};
const RenewTrade = ({
  parentRoute
}) => {
  var _data$Licenses$, _newConfig, _Digit, _Digit$ComponentRegis, _Digit2, _Digit2$ComponentRegi;
  const queryClient = useQueryClient();
  const match = useRouteMatch();
  const {
    t
  } = useTranslation();
  const {
    id: licenseNo,
    tenantId
  } = useParams();
  const {
    pathname
  } = useLocation();
  const history = useHistory();
  let config = [];
  let application = {};
  const [params, setParams, clearParams] = Digit.Hooks.useSessionStorage("TL_RENEW_TRADE", {});
  let filter1 = {};
  if (licenseNo) filter1.licenseNumbers = licenseNo;
  if (tenantId) filter1.tenantId = tenantId;
  const {
    isLoading,
    isError,
    error,
    data
  } = Digit.Hooks.tl.useTradeLicenseSearch({
    filters: filter1
  }, {
    filters: filter1
  });
  const editProperty = window.location.href.includes("edit");
  const tlTrade = JSON.parse(sessionStorage.getItem("tl-trade")) || {};
  let isReneworEditTrade = window.location.href.includes("/renew-trade/") || window.location.href.includes("/edit-application/");
  const stateId = Digit.ULBService.getStateId();
  let {
    data: newConfig$1,
    isLoading: configLoading
  } = Digit.Hooks.tl.useMDMS.getFormConfig(stateId, {});
  useEffect(() => {
    application = (data === null || data === void 0 ? void 0 : data.Licenses) && data.Licenses[0] && data.Licenses[0];
    if (data && application) {
      application = data === null || data === void 0 ? void 0 : data.Licenses[0];
      if (editProperty) {
        application.isEditProperty = true;
      }
      sessionStorage.setItem("tradeInitialObject", JSON.stringify({
        ...application
      }));
      let tradeEditDetails = getTradeEditDetails$1(application, t);
      if (window.location.href.includes("property-details")) {
        var _application, _application$tradeLic;
        tradeEditDetails = {
          ...params,
          owners: {
            ...(params === null || params === void 0 ? void 0 : params.owners),
            documents: gettradedocuments((_application = application) === null || _application === void 0 ? void 0 : (_application$tradeLic = _application.tradeLicenseDetail) === null || _application$tradeLic === void 0 ? void 0 : _application$tradeLic.applicationDocuments)
          }
        };
      }
      setParams({
        ...params,
        ...tradeEditDetails
      });
    }
  }, [data === null || data === void 0 ? void 0 : (_data$Licenses$ = data.Licenses[0]) === null || _data$Licenses$ === void 0 ? void 0 : _data$Licenses$.applicationNumber]);
  const goNext = (skipStep, index, isAddMultiple, key, isPTCreateSkip) => {
    var _params$TradeDetails2, _params$TradeDetails3, _params$TradeDetails4, _params$TradeDetails5, _params$cptId2, _params$cpt2, _params$cpt2$details, _params$tradeLicenseD5, _params$tradeLicenseD6, _params$ownershipCate;
    let currentPath = pathname.split("/").pop(),
      lastchar = currentPath.charAt(currentPath.length - 1),
      nextPage;
    let {
      nextStep = {}
    } = config.find(routeObj => routeObj.route === currentPath);
    let {
      isCreateEnabled: enableCreate = true
    } = config.find(routeObj => routeObj.route === currentPath);
    if (typeof nextStep == "object" && nextStep != null) {
      var _params$cptId, _params$cpt, _params$cpt$details, _params$tradeLicenseD, _params$tradeLicenseD2;
      if ((params !== null && params !== void 0 && (_params$cptId = params.cptId) !== null && _params$cptId !== void 0 && _params$cptId.id || params !== null && params !== void 0 && (_params$cpt = params.cpt) !== null && _params$cpt !== void 0 && (_params$cpt$details = _params$cpt.details) !== null && _params$cpt$details !== void 0 && _params$cpt$details.propertyId || isReneworEditTrade && params !== null && params !== void 0 && (_params$tradeLicenseD = params.tradeLicenseDetail) !== null && _params$tradeLicenseD !== void 0 && (_params$tradeLicenseD2 = _params$tradeLicenseD.additionalDetail) !== null && _params$tradeLicenseD2 !== void 0 && _params$tradeLicenseD2.propertyId) && nextStep[sessionStorage.getItem("isAccessories")] && nextStep[sessionStorage.getItem("isAccessories")] === "know-your-property") {
        nextStep = "property-details";
      }
      if (nextStep[sessionStorage.getItem("isAccessories")] && (nextStep[sessionStorage.getItem("isAccessories")] === "accessories-details" || nextStep[sessionStorage.getItem("isAccessories")] === "map" || nextStep[sessionStorage.getItem("isAccessories")] === "owner-ship-details" || nextStep[sessionStorage.getItem("isAccessories")] === "other-trade-details")) {
        var _params$tradeLicenseD3, _params$tradeLicenseD4, _params$TradeDetails, _params$TradeDetails$;
        if (isReneworEditTrade && !(params !== null && params !== void 0 && (_params$tradeLicenseD3 = params.tradeLicenseDetail) !== null && _params$tradeLicenseD3 !== void 0 && (_params$tradeLicenseD4 = _params$tradeLicenseD3.additionalDetail) !== null && _params$tradeLicenseD4 !== void 0 && _params$tradeLicenseD4.propertyId) && (params === null || params === void 0 ? void 0 : (_params$TradeDetails = params.TradeDetails) === null || _params$TradeDetails === void 0 ? void 0 : (_params$TradeDetails$ = _params$TradeDetails.StructureType) === null || _params$TradeDetails$ === void 0 ? void 0 : _params$TradeDetails$.code) === "MOVABLE") nextStep = `map`;else nextStep = `${nextStep[sessionStorage.getItem("isAccessories")]}`;
      } else if (nextStep[sessionStorage.getItem("StructureType")] && (nextStep[sessionStorage.getItem("StructureType")] === "Building-type" || nextStep[sessionStorage.getItem("StructureType")] === "vehicle-type")) {
        nextStep = `${nextStep[sessionStorage.getItem("StructureType")]}`;
      } else if (nextStep[sessionStorage.getItem("KnowProperty")] && (nextStep[sessionStorage.getItem("KnowProperty")] === "search-property" || nextStep[sessionStorage.getItem("KnowProperty")] === "create-property")) {
        if (nextStep[sessionStorage.getItem("KnowProperty")] === "create-property" && !enableCreate) {
          nextStep = `map`;
        } else {
          nextStep = `${nextStep[sessionStorage.getItem("KnowProperty")]}`;
        }
      }
    }
    if (nextStep === "know-your-property" && (params === null || params === void 0 ? void 0 : (_params$TradeDetails2 = params.TradeDetails) === null || _params$TradeDetails2 === void 0 ? void 0 : (_params$TradeDetails3 = _params$TradeDetails2.StructureType) === null || _params$TradeDetails3 === void 0 ? void 0 : _params$TradeDetails3.code) === "MOVABLE") {
      nextStep = "map";
    }
    if (nextStep === "landmark" && (params === null || params === void 0 ? void 0 : (_params$TradeDetails4 = params.TradeDetails) === null || _params$TradeDetails4 === void 0 ? void 0 : (_params$TradeDetails5 = _params$TradeDetails4.StructureType) === null || _params$TradeDetails5 === void 0 ? void 0 : _params$TradeDetails5.code) === "MOVABLE") {
      nextStep = "owner-ship-details";
    }
    if ((params !== null && params !== void 0 && (_params$cptId2 = params.cptId) !== null && _params$cptId2 !== void 0 && _params$cptId2.id || params !== null && params !== void 0 && (_params$cpt2 = params.cpt) !== null && _params$cpt2 !== void 0 && (_params$cpt2$details = _params$cpt2.details) !== null && _params$cpt2$details !== void 0 && _params$cpt2$details.propertyId || isReneworEditTrade && params !== null && params !== void 0 && (_params$tradeLicenseD5 = params.tradeLicenseDetail) !== null && _params$tradeLicenseD5 !== void 0 && (_params$tradeLicenseD6 = _params$tradeLicenseD5.additionalDetail) !== null && _params$tradeLicenseD6 !== void 0 && _params$tradeLicenseD6.propertyId) && nextStep === "know-your-property") {
      nextStep = "property-details";
    }
    if (nextStep === "owner-details" && ((params === null || params === void 0 ? void 0 : (_params$ownershipCate = params.ownershipCategory) === null || _params$ownershipCate === void 0 ? void 0 : _params$ownershipCate.isSameAsPropertyOwner) === true || sessionStorage.getItem("isSameAsPropertyOwner") === "true")) {
      nextStep = "proof-of-identity";
    }
    let redirectWithHistory = history.push;
    if (skipStep) {
      redirectWithHistory = history.replace;
    }
    if (isAddMultiple) {
      nextStep = key;
    }
    if (nextStep === null) {
      return redirectWithHistory(`${getPath$2(match.path, match.params)}/check`);
    }
    if (isPTCreateSkip && nextStep === "acknowledge-create-property") {
      nextStep = "map";
    }
    nextPage = `${getPath$2(match.path, match.params)}/${nextStep}`;
    redirectWithHistory(nextPage);
  };
  const createProperty = async () => {
    history.push(`${getPath$2(match.path, match.params)}/acknowledgement`);
  };
  function handleSelect(key, data, skipStep, index, isAddMultiple = false) {
    setParams({
      ...params,
      ...{
        [key]: {
          ...params[key],
          ...data
        }
      }
    });
    if (key === "isSkip" && data === true) {
      goNext(skipStep, index, isAddMultiple, key, true);
    } else {
      goNext(skipStep, index, isAddMultiple, key);
    }
  }
  const handleSkip = () => {};
  const handleMultiple = () => {};
  const onSuccess = () => {
    queryClient.invalidateQueries("TL_RENEW_TRADE");
  };
  newConfig$1 = newConfig$1 ? newConfig$1 : newConfig;
  (_newConfig = newConfig$1) === null || _newConfig === void 0 ? void 0 : _newConfig.forEach(obj => {
    config = config.concat(obj.body.filter(a => !a.hideInCitizen));
  });
  config.indexRoute = "check";
  if (isLoading || configLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }
  const CheckPage = (_Digit = Digit) === null || _Digit === void 0 ? void 0 : (_Digit$ComponentRegis = _Digit.ComponentRegistryService) === null || _Digit$ComponentRegis === void 0 ? void 0 : _Digit$ComponentRegis.getComponent('TLCheckPage');
  const TLAcknowledgement = (_Digit2 = Digit) === null || _Digit2 === void 0 ? void 0 : (_Digit2$ComponentRegi = _Digit2.ComponentRegistryService) === null || _Digit2$ComponentRegi === void 0 ? void 0 : _Digit2$ComponentRegi.getComponent('TLAcknowledgement');
  return /*#__PURE__*/React.createElement(Switch, null, config.map((routeObj, index) => {
    const {
      component,
      texts,
      inputs,
      key,
      isSkipEnabled
    } = routeObj;
    const Component = typeof component === "string" ? Digit.ComponentRegistryService.getComponent(component) : component;
    return /*#__PURE__*/React.createElement(Route, {
      path: `${getPath$2(match.path, match.params)}/${routeObj.route}`,
      key: index
    }, /*#__PURE__*/React.createElement(Component, {
      config: {
        texts,
        inputs,
        key,
        isSkipEnabled
      },
      onSelect: handleSelect,
      onSkip: handleSkip,
      t: t,
      formData: params,
      onAdd: handleMultiple
    }));
  }), /*#__PURE__*/React.createElement(Route, {
    path: `${getPath$2(match.path, match.params)}/check`
  }, /*#__PURE__*/React.createElement(CheckPage, {
    onSubmit: createProperty,
    value: params
  })), /*#__PURE__*/React.createElement(Route, {
    path: `${getPath$2(match.path, match.params)}/acknowledgement`
  }, /*#__PURE__*/React.createElement(TLAcknowledgement, {
    data: params,
    onSuccess: onSuccess
  })), /*#__PURE__*/React.createElement(Route, null, /*#__PURE__*/React.createElement(Redirect, {
    to: `${getPath$2(match.path, match.params)}/${config.indexRoute}`
  })));
};

const config = [{
  texts: {
    header: "TL_SEARCH_TRADE_HEADER",
    submitButtonLabel: "ES_COMMON_SEARCH",
    text: "TL_SEARCH_TEXT"
  },
  inputs: [{
    label: "TL_OWNER_MOB_NO_LABEL",
    type: "mobileNumber",
    name: "mobileNumber",
    error: "ERR_INVALID_MOBILE_NUMBER"
  }, {
    label: "TL_TRADE_LICENSE_LABEL",
    type: "text",
    name: "LicenseNum",
    error: "ERR_INVALID_TRADE_LICENSE_NO"
  }]
}];

var b = "function" === typeof Symbol && Symbol.for,
  c = b ? Symbol.for("react.element") : 60103,
  d = b ? Symbol.for("react.portal") : 60106,
  e = b ? Symbol.for("react.fragment") : 60107,
  f = b ? Symbol.for("react.strict_mode") : 60108,
  g = b ? Symbol.for("react.profiler") : 60114,
  h = b ? Symbol.for("react.provider") : 60109,
  k = b ? Symbol.for("react.context") : 60110,
  l = b ? Symbol.for("react.async_mode") : 60111,
  m = b ? Symbol.for("react.concurrent_mode") : 60111,
  n = b ? Symbol.for("react.forward_ref") : 60112,
  p = b ? Symbol.for("react.suspense") : 60113,
  q = b ? Symbol.for("react.suspense_list") : 60120,
  r = b ? Symbol.for("react.memo") : 60115,
  t = b ? Symbol.for("react.lazy") : 60116,
  v = b ? Symbol.for("react.block") : 60121,
  w = b ? Symbol.for("react.fundamental") : 60117,
  x = b ? Symbol.for("react.responder") : 60118,
  y = b ? Symbol.for("react.scope") : 60119;
function z(a) {
  if ("object" === typeof a && null !== a) {
    var u = a.$$typeof;
    switch (u) {
      case c:
        switch (a = a.type, a) {
          case l:
          case m:
          case e:
          case g:
          case f:
          case p:
            return a;
          default:
            switch (a = a && a.$$typeof, a) {
              case k:
              case n:
              case t:
              case r:
              case h:
                return a;
              default:
                return u;
            }
        }
      case d:
        return u;
    }
  }
}
function A(a) {
  return z(a) === m;
}
var AsyncMode = l;
var ConcurrentMode = m;
var ContextConsumer = k;
var ContextProvider = h;
var Element = c;
var ForwardRef = n;
var Fragment = e;
var Lazy = t;
var Memo = r;
var Portal = d;
var Profiler = g;
var StrictMode = f;
var Suspense = p;
var isAsyncMode = function (a) {
  return A(a) || z(a) === l;
};
var isConcurrentMode = A;
var isContextConsumer = function (a) {
  return z(a) === k;
};
var isContextProvider = function (a) {
  return z(a) === h;
};
var isElement = function (a) {
  return "object" === typeof a && null !== a && a.$$typeof === c;
};
var isForwardRef = function (a) {
  return z(a) === n;
};
var isFragment = function (a) {
  return z(a) === e;
};
var isLazy = function (a) {
  return z(a) === t;
};
var isMemo = function (a) {
  return z(a) === r;
};
var isPortal = function (a) {
  return z(a) === d;
};
var isProfiler = function (a) {
  return z(a) === g;
};
var isStrictMode = function (a) {
  return z(a) === f;
};
var isSuspense = function (a) {
  return z(a) === p;
};
var isValidElementType = function (a) {
  return "string" === typeof a || "function" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || "object" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);
};
var typeOf = z;
var reactIs_production_min = {
  AsyncMode: AsyncMode,
  ConcurrentMode: ConcurrentMode,
  ContextConsumer: ContextConsumer,
  ContextProvider: ContextProvider,
  Element: Element,
  ForwardRef: ForwardRef,
  Fragment: Fragment,
  Lazy: Lazy,
  Memo: Memo,
  Portal: Portal,
  Profiler: Profiler,
  StrictMode: StrictMode,
  Suspense: Suspense,
  isAsyncMode: isAsyncMode,
  isConcurrentMode: isConcurrentMode,
  isContextConsumer: isContextConsumer,
  isContextProvider: isContextProvider,
  isElement: isElement,
  isForwardRef: isForwardRef,
  isFragment: isFragment,
  isLazy: isLazy,
  isMemo: isMemo,
  isPortal: isPortal,
  isProfiler: isProfiler,
  isStrictMode: isStrictMode,
  isSuspense: isSuspense,
  isValidElementType: isValidElementType,
  typeOf: typeOf
};

var reactIs_development = createCommonjsModule(function (module, exports) {

  if (process.env.NODE_ENV !== "production") {
    (function () {
      var hasSymbol = typeof Symbol === 'function' && Symbol.for;
      var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
      var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
      var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
      var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
      var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
      var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
      var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
      var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
      var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
      var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
      var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
      var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
      var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
      var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
      var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
      var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
      var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
      var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
      function isValidElementType(type) {
        return typeof type === 'string' || typeof type === 'function' || type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
      }
      function typeOf(object) {
        if (typeof object === 'object' && object !== null) {
          var $$typeof = object.$$typeof;
          switch ($$typeof) {
            case REACT_ELEMENT_TYPE:
              var type = object.type;
              switch (type) {
                case REACT_ASYNC_MODE_TYPE:
                case REACT_CONCURRENT_MODE_TYPE:
                case REACT_FRAGMENT_TYPE:
                case REACT_PROFILER_TYPE:
                case REACT_STRICT_MODE_TYPE:
                case REACT_SUSPENSE_TYPE:
                  return type;
                default:
                  var $$typeofType = type && type.$$typeof;
                  switch ($$typeofType) {
                    case REACT_CONTEXT_TYPE:
                    case REACT_FORWARD_REF_TYPE:
                    case REACT_LAZY_TYPE:
                    case REACT_MEMO_TYPE:
                    case REACT_PROVIDER_TYPE:
                      return $$typeofType;
                    default:
                      return $$typeof;
                  }
              }
            case REACT_PORTAL_TYPE:
              return $$typeof;
          }
        }
        return undefined;
      }
      var AsyncMode = REACT_ASYNC_MODE_TYPE;
      var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
      var ContextConsumer = REACT_CONTEXT_TYPE;
      var ContextProvider = REACT_PROVIDER_TYPE;
      var Element = REACT_ELEMENT_TYPE;
      var ForwardRef = REACT_FORWARD_REF_TYPE;
      var Fragment = REACT_FRAGMENT_TYPE;
      var Lazy = REACT_LAZY_TYPE;
      var Memo = REACT_MEMO_TYPE;
      var Portal = REACT_PORTAL_TYPE;
      var Profiler = REACT_PROFILER_TYPE;
      var StrictMode = REACT_STRICT_MODE_TYPE;
      var Suspense = REACT_SUSPENSE_TYPE;
      var hasWarnedAboutDeprecatedIsAsyncMode = false;
      function isAsyncMode(object) {
        {
          if (!hasWarnedAboutDeprecatedIsAsyncMode) {
            hasWarnedAboutDeprecatedIsAsyncMode = true;
            console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
          }
        }
        return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
      }
      function isConcurrentMode(object) {
        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
      }
      function isContextConsumer(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
      }
      function isContextProvider(object) {
        return typeOf(object) === REACT_PROVIDER_TYPE;
      }
      function isElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
      }
      function isForwardRef(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
      }
      function isFragment(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
      }
      function isLazy(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
      }
      function isMemo(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
      }
      function isPortal(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
      }
      function isProfiler(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
      }
      function isStrictMode(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
      }
      function isSuspense(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
      }
      exports.AsyncMode = AsyncMode;
      exports.ConcurrentMode = ConcurrentMode;
      exports.ContextConsumer = ContextConsumer;
      exports.ContextProvider = ContextProvider;
      exports.Element = Element;
      exports.ForwardRef = ForwardRef;
      exports.Fragment = Fragment;
      exports.Lazy = Lazy;
      exports.Memo = Memo;
      exports.Portal = Portal;
      exports.Profiler = Profiler;
      exports.StrictMode = StrictMode;
      exports.Suspense = Suspense;
      exports.isAsyncMode = isAsyncMode;
      exports.isConcurrentMode = isConcurrentMode;
      exports.isContextConsumer = isContextConsumer;
      exports.isContextProvider = isContextProvider;
      exports.isElement = isElement;
      exports.isForwardRef = isForwardRef;
      exports.isFragment = isFragment;
      exports.isLazy = isLazy;
      exports.isMemo = isMemo;
      exports.isPortal = isPortal;
      exports.isProfiler = isProfiler;
      exports.isStrictMode = isStrictMode;
      exports.isSuspense = isSuspense;
      exports.isValidElementType = isValidElementType;
      exports.typeOf = typeOf;
    })();
  }
});

var reactIs = createCommonjsModule(function (module) {

  if (process.env.NODE_ENV === 'production') {
    module.exports = reactIs_production_min;
  } else {
    module.exports = reactIs_development;
  }
});

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty$a = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
function toObject(val) {
  if (val === null || val === undefined) {
    throw new TypeError('Object.assign cannot be called with null or undefined');
  }
  return Object(val);
}
function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    }
    var test1 = new String('abc');
    test1[5] = 'de';
    if (Object.getOwnPropertyNames(test1)[0] === '5') {
      return false;
    }
    var test2 = {};
    for (var i = 0; i < 10; i++) {
      test2['_' + String.fromCharCode(i)] = i;
    }
    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
      return test2[n];
    });
    if (order2.join('') !== '0123456789') {
      return false;
    }
    var test3 = {};
    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
      test3[letter] = letter;
    });
    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
      return false;
    }
    return true;
  } catch (err) {
    return false;
  }
}
var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {
  var from;
  var to = toObject(target);
  var symbols;
  for (var s = 1; s < arguments.length; s++) {
    from = Object(arguments[s]);
    for (var key in from) {
      if (hasOwnProperty$a.call(from, key)) {
        to[key] = from[key];
      }
    }
    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);
      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }
  return to;
};

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
var ReactPropTypesSecret_1 = ReactPropTypesSecret;

var has = Function.call.bind(Object.prototype.hasOwnProperty);

var printWarning = function () {};
if (process.env.NODE_ENV !== 'production') {
  var ReactPropTypesSecret$1 = ReactPropTypesSecret_1;
  var loggedTypeFailures = {};
  var has$1 = has;
  printWarning = function (text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      throw new Error(message);
    } catch (x) {}
  };
}
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (has$1(typeSpecs, typeSpecName)) {
        var error;
        try {
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$1);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          loggedTypeFailures[error.message] = true;
          var stack = getStack ? getStack() : '';
          printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
        }
      }
    }
  }
}
checkPropTypes.resetWarningCache = function () {
  if (process.env.NODE_ENV !== 'production') {
    loggedTypeFailures = {};
  }
};
var checkPropTypes_1 = checkPropTypes;

var printWarning$1 = function () {};
if (process.env.NODE_ENV !== 'production') {
  printWarning$1 = function (text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      throw new Error(message);
    } catch (x) {}
  };
}
function emptyFunctionThatReturnsNull() {
  return null;
}
var factoryWithTypeCheckers = function (isValidElement, throwOnDirectAccess) {
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator';
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }
  var ANONYMOUS = '<<anonymous>>';
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bigint: createPrimitiveTypeChecker('bigint'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),
    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker
  };
  function is(x, y) {
    if (x === y) {
      return x !== 0 || 1 / x === 1 / y;
    } else {
      return x !== x && y !== y;
    }
  }
  function PropTypeError(message, data) {
    this.message = message;
    this.data = data && typeof data === 'object' ? data : {};
    this.stack = '';
  }
  PropTypeError.prototype = Error.prototype;
  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;
      if (secret !== ReactPropTypesSecret_1) {
        if (throwOnDirectAccess) {
          var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
          err.name = 'Invariant Violation';
          throw err;
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          var cacheKey = componentName + ':' + propName;
          if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
            printWarning$1('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }
    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);
    return chainedCheckType;
  }
  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        var preciseType = getPreciseType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'), {
          expectedType: expectedType
        });
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }
  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!reactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (process.env.NODE_ENV !== 'production') {
        if (arguments.length > 1) {
          printWarning$1('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
        } else {
          printWarning$1('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }
      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }
  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? printWarning$1('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }
    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning$1('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');
        return emptyFunctionThatReturnsNull;
      }
    }
    function validate(props, propName, componentName, location, propFullName) {
      var expectedTypes = [];
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1);
        if (checkerResult == null) {
          return null;
        }
        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {
          expectedTypes.push(checkerResult.data.expectedType);
        }
      }
      var expectedTypesMessage = expectedTypes.length > 0 ? ', expected one of type [' + expectedTypes.join(', ') + ']' : '';
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
    }
    return createChainableTypeChecker(validate);
  }
  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function invalidValidatorError(componentName, location, propFullName, key, type) {
    return new PropTypeError((componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + type + '`.');
  }
  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (typeof checker !== 'function') {
          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      var allKeys = objectAssign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (has(shapeTypes, key) && typeof checker !== 'function') {
          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
        }
        if (!checker) {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }
        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }
        return true;
      default:
        return false;
    }
  }
  function isSymbol(propType, propValue) {
    if (propType === 'symbol') {
      return true;
    }
    if (!propValue) {
      return false;
    }
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }
    return false;
  }
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }
  ReactPropTypes.checkPropTypes = checkPropTypes_1;
  ReactPropTypes.resetWarningCache = checkPropTypes_1.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;
var factoryWithThrowingShims = function () {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret_1) {
      return;
    }
    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
    err.name = 'Invariant Violation';
    throw err;
  }
  shim.isRequired = shim;
  function getShim() {
    return shim;
  }
  var ReactPropTypes = {
    array: shim,
    bigint: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,
    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,
    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};

var propTypes = createCommonjsModule(function (module) {
  if (process.env.NODE_ENV !== 'production') {
    var ReactIs = reactIs;
    var throwOnDirectAccess = true;
    module.exports = factoryWithTypeCheckers(ReactIs.isElement, throwOnDirectAccess);
  } else {
    module.exports = factoryWithThrowingShims();
  }
});

const SearchTrade = ({
  config: propsConfig,
  onSelect
}) => {
  var _Digit$Hooks$tl$useTe;
  const {
    t
  } = useTranslation();
  const history = useHistory();
  const [canSubmit, setCanSubmit] = useState(false);
  const userInfo = Digit.UserService.getUser();
  let user = userInfo === null || userInfo === void 0 ? void 0 : userInfo.info;
  let defaultMobileno = user.mobileNumber;
  const allCities = (_Digit$Hooks$tl$useTe = Digit.Hooks.tl.useTenants()) === null || _Digit$Hooks$tl$useTe === void 0 ? void 0 : _Digit$Hooks$tl$useTe.sort((a, b) => {
    var _a$i18nKey, _a$i18nKey$localeComp;
    return a === null || a === void 0 ? void 0 : (_a$i18nKey = a.i18nKey) === null || _a$i18nKey === void 0 ? void 0 : (_a$i18nKey$localeComp = _a$i18nKey.localeCompare) === null || _a$i18nKey$localeComp === void 0 ? void 0 : _a$i18nKey$localeComp.call(_a$i18nKey, b === null || b === void 0 ? void 0 : b.i18nKey);
  });
  const [cityCode, setCityCode] = useState();
  useLayoutEffect(() => {
    const getActionBar = () => {
      let el = document.querySelector("div.action-bar-wrap");
      if (el) {
        el.style.position = "static";
        el.style.padding = "8px 0";
        el.style.boxShadow = "none";
        el.style.marginBottom = "16px";
      } else {
        setTimeout(() => {
          getActionBar();
        }, 100);
      }
    };
    getActionBar();
  }, []);
  const onTradeSearch = async data => {
    if (!data.mobileNumber && !data.LicenseNum) {
      alert(t("TL_ERROR_NEED_ONE_PARAM"));
    } else {
      history.push(`/digit-ui/citizen/tl/tradelicence/renewal-list?mobileNumber=${data !== null && data !== void 0 && data.mobileNumber ? data === null || data === void 0 ? void 0 : data.mobileNumber : ``}&LicenseNumber=${data !== null && data !== void 0 && data.LicenseNum ? data === null || data === void 0 ? void 0 : data.LicenseNum : ``}&tenantId=${cityCode ? cityCode : ``}`);
    }
  };
  const [mobileNumber, tradelicense] = propsConfig.inputs;
  const config = [{
    body: [{
      label: "CORE_COMMON_CITY",
      isMandatory: true,
      type: "custom",
      populators: {
        name: "city",
        defaultValue: null,
        rules: {
          required: true
        },
        customProps: {
          t,
          isMendatory: true,
          option: [...allCities],
          optionKey: "i18nKey"
        },
        component: (props, customProps) => /*#__PURE__*/React.createElement(Dropdown, Object.assign({}, customProps, {
          selected: props.value,
          select: d => {
            if (d.code !== cityCode) props.setValue("locality", null);
            props.onChange(d);
          }
        }))
      }
    }, {
      label: mobileNumber.label,
      type: mobileNumber.type,
      populators: {
        name: mobileNumber.name,
        validation: {
          pattern: /^[6-9]{1}[0-9]{9}$ /
        }
      },
      disable: true,
      isMandatory: false
    }, {
      label: tradelicense.label,
      type: tradelicense.type,
      populators: {
        name: tradelicense.name
      },
      isMandatory: false
    }]
  }];
  const onFormValueChange = (setValue, data, formState) => {
    var _data$mobileNumber$na;
    const mobileNumberLength = data === null || data === void 0 ? void 0 : (_data$mobileNumber$na = data[mobileNumber.name]) === null || _data$mobileNumber$na === void 0 ? void 0 : _data$mobileNumber$na.length;
    const Licenseno = data === null || data === void 0 ? void 0 : data[tradelicense.name];
    const city = data === null || data === void 0 ? void 0 : data.city;
    if ((city === null || city === void 0 ? void 0 : city.code) !== cityCode) {
      setCityCode(city === null || city === void 0 ? void 0 : city.code);
    }
    if (mobileNumberLength > 0 && mobileNumberLength < 10) setCanSubmit(false);else if (!city) setCanSubmit(false);else if (!Licenseno && !mobileNumberLength && !city) setCanSubmit(false);else setCanSubmit(true);
  };
  return /*#__PURE__*/React.createElement("div", {
    style: {
      marginTop: "16px"
    }
  }, /*#__PURE__*/React.createElement(FormComposer, {
    onSubmit: onTradeSearch,
    noBoxShadow: true,
    inline: true,
    config: config,
    label: propsConfig.texts.submitButtonLabel,
    heading: propsConfig.texts.header,
    text: propsConfig.texts.text,
    cardStyle: {
      margin: "auto"
    },
    headingStyle: {
      fontSize: "32px",
      marginBottom: "16px",
      fontFamily: "Roboto Condensed,sans-serif"
    },
    isDisabled: !canSubmit,
    defaultValues: {
      mobileNumber: defaultMobileno
    },
    onFormValueChange: onFormValueChange
  }));
};
SearchTrade.propTypes = {
  loginParams: propTypes.any
};
SearchTrade.defaultProps = {
  loginParams: null
};

const SearchTrade$1 = () => {
  const {
    t
  } = useTranslation();
  const {
    path
  } = useRouteMatch();
  const params = useMemo(() => config.map(step => {
    const texts = {};
    for (const key in step.texts) {
      texts[key] = t(step.texts[key]);
    }
    return {
      ...step,
      texts
    };
  }, [config]));
  return /*#__PURE__*/React.createElement(Switch, null, /*#__PURE__*/React.createElement(Route, {
    path: `${path}`,
    exact: true
  }, /*#__PURE__*/React.createElement(SearchTrade, {
    config: params[0]
  })));
};

const SelectTradeUnitsInitial = ({
  t,
  config,
  onSelect,
  userType,
  formData
}) => {
  var _formData$TadeDetails, _formData$TadeDetails2, _formData$TadeDetails3, _formData$TadeDetails4, _formData$TadeDetails5, _formData$TadeDetails6, _formData$TadeDetails7, _formData$TadeDetails8, _formData$TradeDetail;
  let validation = {};
  const [TradeCategory, setTradeCategory] = useState("");
  const [TradeType, setTradeType] = useState((formData === null || formData === void 0 ? void 0 : (_formData$TadeDetails = formData.TadeDetails) === null || _formData$TadeDetails === void 0 ? void 0 : (_formData$TadeDetails2 = _formData$TadeDetails.Units) === null || _formData$TadeDetails2 === void 0 ? void 0 : _formData$TadeDetails2.TradeType) || "");
  const [TradeSubType, setTradeSubType] = useState((formData === null || formData === void 0 ? void 0 : (_formData$TadeDetails3 = formData.TadeDetails) === null || _formData$TadeDetails3 === void 0 ? void 0 : (_formData$TadeDetails4 = _formData$TadeDetails3.Units) === null || _formData$TadeDetails4 === void 0 ? void 0 : _formData$TadeDetails4.TradeSubType) || "");
  const [UnitOfMeasure, setUnitOfMeasure] = useState((formData === null || formData === void 0 ? void 0 : (_formData$TadeDetails5 = formData.TadeDetails) === null || _formData$TadeDetails5 === void 0 ? void 0 : (_formData$TadeDetails6 = _formData$TadeDetails5.Units) === null || _formData$TadeDetails6 === void 0 ? void 0 : _formData$TadeDetails6.UnitOfMeasure) || "");
  const [UomValue, setUomValue] = useState((formData === null || formData === void 0 ? void 0 : (_formData$TadeDetails7 = formData.TadeDetails) === null || _formData$TadeDetails7 === void 0 ? void 0 : (_formData$TadeDetails8 = _formData$TadeDetails7.Units) === null || _formData$TadeDetails8 === void 0 ? void 0 : _formData$TadeDetails8.UomValue) || "");
  const [error, setError] = useState(null);
  const [fields, setFeilds] = useState((formData === null || formData === void 0 ? void 0 : formData.TradeDetails) && (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail = formData.TradeDetails) === null || _formData$TradeDetail === void 0 ? void 0 : _formData$TradeDetail.units) || [{
    tradecategory: "",
    tradetype: "",
    tradesubtype: "",
    unit: null,
    uom: null
  }]);
  const tenantId = Digit.ULBService.getCitizenCurrentTenant();
  const stateId = Digit.ULBService.getStateId();
  function handleAdd() {
    const values = [...fields];
    values.push({
      tradecategory: "",
      tradetype: "",
      tradesubtype: "",
      unit: null,
      uom: null
    });
    setFeilds(values);
  }
  function handleRemove(index) {
    const values = [...fields];
    if (values.length != 1) {
      values.splice(index, 1);
      setFeilds(values);
    }
  }
  const {
    data: billingSlabTradeTypeData,
    isLoading
  } = Digit.Hooks.tl.useTradeLicenseBillingslab({
    tenantId: tenantId,
    filters: {}
  }, {
    select: data => {
      return data === null || data === void 0 ? void 0 : data.billingSlab.filter(e => e.tradeType && e.applicationType === "NEW" && e.licenseType === "PERMANENT" && e.uom);
    }
  });
  let TradeCategoryMenu = [];
  billingSlabTradeTypeData && billingSlabTradeTypeData.length > 0 && billingSlabTradeTypeData.filter(e => {
    var _formData$TradeDetail2, _formData$TradeDetail3;
    return e.structureType === (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail2 = formData.TradeDetails) === null || _formData$TradeDetail2 === void 0 ? void 0 : (_formData$TradeDetail3 = _formData$TradeDetail2.BuildingType) === null || _formData$TradeDetail3 === void 0 ? void 0 : _formData$TradeDetail3.code.toString());
  }).map(ob => {
    if (!TradeCategoryMenu.some(TradeCategoryMenu => TradeCategoryMenu.code === `${ob.tradeType.split(".")[0]}`)) {
      TradeCategoryMenu.push({
        i18nKey: `TRADELICENSE_TRADETYPE_${ob.tradeType.split(".")[0]}`,
        code: `${ob.tradeType.split(".")[0]}`
      });
    }
  });
  billingSlabTradeTypeData && billingSlabTradeTypeData.length > 0 && billingSlabTradeTypeData.filter(e => {
    var _formData$TradeDetail4, _formData$TradeDetail5;
    return e.structureType === (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail4 = formData.TradeDetails) === null || _formData$TradeDetail4 === void 0 ? void 0 : (_formData$TradeDetail5 = _formData$TradeDetail4.VehicleType) === null || _formData$TradeDetail5 === void 0 ? void 0 : _formData$TradeDetail5.code.toString());
  }).map(ob => {
    if (!TradeCategoryMenu.some(TradeCategoryMenu => TradeCategoryMenu.code === `${ob.tradeType.split(".")[0]}`)) {
      TradeCategoryMenu.push({
        i18nKey: `TRADELICENSE_TRADETYPE_${ob.tradeType.split(".")[0]}`,
        code: `${ob.tradeType.split(".")[0]}`
      });
    }
  });
  function getTradeTypeMenu(TradeCategory) {
    let TradeTypeMenu = [];
    if (billingSlabTradeTypeData && billingSlabTradeTypeData.length > 0) {
      var _formData$TradeDetail6, _formData$TradeDetail9;
      if (formData !== null && formData !== void 0 && (_formData$TradeDetail6 = formData.TradeDetails) !== null && _formData$TradeDetail6 !== void 0 && _formData$TradeDetail6.BuildingType) {
        billingSlabTradeTypeData.filter(e => {
          var _formData$TradeDetail7, _formData$TradeDetail8;
          return e.structureType === (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail7 = formData.TradeDetails) === null || _formData$TradeDetail7 === void 0 ? void 0 : (_formData$TradeDetail8 = _formData$TradeDetail7.BuildingType) === null || _formData$TradeDetail8 === void 0 ? void 0 : _formData$TradeDetail8.code.toString());
        }).map(ob => {
          if (ob.tradeType.split(".")[0] === TradeCategory.code && !TradeTypeMenu.some(TradeTypeMenu => TradeTypeMenu.code === `${ob.tradeType.split(".")[1]}`)) {
            TradeTypeMenu.push({
              i18nKey: `TRADELICENSE_TRADETYPE_${ob.tradeType.split(".")[1]}`,
              code: `${ob.tradeType.split(".")[1]}`
            });
          }
        });
        return TradeTypeMenu;
      } else if (formData !== null && formData !== void 0 && (_formData$TradeDetail9 = formData.TradeDetails) !== null && _formData$TradeDetail9 !== void 0 && _formData$TradeDetail9.VehicleType) {
        billingSlabTradeTypeData.filter(e => {
          var _formData$TradeDetail10, _formData$TradeDetail11;
          return e.structureType === (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail10 = formData.TradeDetails) === null || _formData$TradeDetail10 === void 0 ? void 0 : (_formData$TradeDetail11 = _formData$TradeDetail10.VehicleType) === null || _formData$TradeDetail11 === void 0 ? void 0 : _formData$TradeDetail11.code.toString());
        }).map(ob => {
          if (ob.tradeType.split(".")[0] === TradeCategory.code && !TradeTypeMenu.some(TradeTypeMenu => TradeTypeMenu.code === `${ob.tradeType.split(".")[1]}`)) {
            TradeTypeMenu.push({
              i18nKey: `TRADELICENSE_TRADETYPE_${ob.tradeType.split(".")[1]}`,
              code: `${ob.tradeType.split(".")[1]}`
            });
          }
        });
        return TradeTypeMenu;
      }
    }
  }
  function getTradeSubTypeMenu(TradeType) {
    let TradeSubTypeMenu = [];
    if (TradeType && billingSlabTradeTypeData && billingSlabTradeTypeData.length > 0) {
      var _formData$TradeDetail12, _formData$TradeDetail15;
      if (formData !== null && formData !== void 0 && (_formData$TradeDetail12 = formData.TradeDetails) !== null && _formData$TradeDetail12 !== void 0 && _formData$TradeDetail12.BuildingType) {
        billingSlabTradeTypeData.filter(e => {
          var _formData$TradeDetail13, _formData$TradeDetail14;
          return e.structureType === (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail13 = formData.TradeDetails) === null || _formData$TradeDetail13 === void 0 ? void 0 : (_formData$TradeDetail14 = _formData$TradeDetail13.BuildingType) === null || _formData$TradeDetail14 === void 0 ? void 0 : _formData$TradeDetail14.code.toString());
        }).map(ob => {
          if (ob.tradeType.split(".")[1] === TradeType.code && !TradeSubTypeMenu.some(TradeSubTypeMenu => TradeSubTypeMenu.code === `${ob.tradeType}`)) {
            TradeSubTypeMenu.push({
              i18nKey: `TL_${ob.tradeType}`,
              code: `${ob.tradeType}`
            });
          }
        });
        return TradeSubTypeMenu;
      } else if (formData !== null && formData !== void 0 && (_formData$TradeDetail15 = formData.TradeDetails) !== null && _formData$TradeDetail15 !== void 0 && _formData$TradeDetail15.VehicleType) {
        billingSlabTradeTypeData.filter(e => {
          var _formData$TradeDetail16, _formData$TradeDetail17;
          return e.structureType === (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail16 = formData.TradeDetails) === null || _formData$TradeDetail16 === void 0 ? void 0 : (_formData$TradeDetail17 = _formData$TradeDetail16.VehicleType) === null || _formData$TradeDetail17 === void 0 ? void 0 : _formData$TradeDetail17.code.toString());
        }).map(ob => {
          if (ob.tradeType.split(".")[1] === TradeType.code && !TradeSubTypeMenu.some(TradeSubTypeMenu => TradeSubTypeMenu.code === `${ob.tradeType}`)) {
            TradeSubTypeMenu.push({
              i18nKey: `TL_${ob.tradeType}`,
              code: `${ob.tradeType}`
            });
          }
        });
        return TradeSubTypeMenu;
      }
    }
  }
  const {
    pathname: url
  } = useLocation();
  const editScreen = url.includes("/modify-application/");
  function selectTradeCategory(i, value) {
    let units = [...fields];
    units[i].tradecategory = value;
    setTradeCategory(value);
    selectTradeType(i, null);
    selectTradeSubType(i, null);
    setFeilds(units);
  }
  function selectTradeType(i, value) {
    let units = [...fields];
    units[i].tradetype = value;
    setTradeType(value);
    selectTradeSubType(i, null);
    setFeilds(units);
  }
  function selectTradeSubType(i, value) {
    let units = [...fields];
    units[i].tradesubtype = value;
    setTradeSubType(value);
    if (value == null) {
      units[i].unit = null;
      setUnitOfMeasure(null);
    }
    Array.from(document.querySelectorAll("input")).forEach(input => input.value = "");
    value && billingSlabTradeTypeData && (billingSlabTradeTypeData === null || billingSlabTradeTypeData === void 0 ? void 0 : billingSlabTradeTypeData.length) > 0 && billingSlabTradeTypeData.filter(e => {
      var _formData$TradeDetail18, _formData$TradeDetail19;
      return e.structureType === (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail18 = formData.TradeDetails) === null || _formData$TradeDetail18 === void 0 ? void 0 : (_formData$TradeDetail19 = _formData$TradeDetail18.BuildingType) === null || _formData$TradeDetail19 === void 0 ? void 0 : _formData$TradeDetail19.code.toString());
    }).map(ob => {
      if (value.code === ob.tradeType) {
        units[i].unit = ob.uom;
        setUnitOfMeasure(ob.uom);
      }
    });
    value && billingSlabTradeTypeData && (billingSlabTradeTypeData === null || billingSlabTradeTypeData === void 0 ? void 0 : billingSlabTradeTypeData.length) > 0 && billingSlabTradeTypeData.filter(e => {
      var _formData$TradeDetail20, _formData$TradeDetail21;
      return e.structureType === (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail20 = formData.TradeDetails) === null || _formData$TradeDetail20 === void 0 ? void 0 : (_formData$TradeDetail21 = _formData$TradeDetail20.VehicleType) === null || _formData$TradeDetail21 === void 0 ? void 0 : _formData$TradeDetail21.code.toString());
    }).map(ob => {
      if (value.code === ob.tradeType) {
        units[i].unit = ob.uom;
        setUnitOfMeasure(ob.uom);
      }
    });
    setFeilds(units);
  }
  function selectUnitOfMeasure(i, e) {
    let units = [...fields];
    units[i].unit = e.target.value;
    setUnitOfMeasure(e.target.value);
    setFeilds(units);
  }
  function selectUomValue(i, e) {
    let units = [...fields];
    units[i].uom = e.target.value;
    setError(null);
    let selectedtradesubType = billingSlabTradeTypeData === null || billingSlabTradeTypeData === void 0 ? void 0 : billingSlabTradeTypeData.filter(ob => {
      var _units$i, _units$i$tradesubtype, _formData$TradeDetail22, _formData$TradeDetail23, _formData$TradeDetail24, _formData$TradeDetail25;
      return (ob === null || ob === void 0 ? void 0 : ob.tradeType) === ((_units$i = units[i]) === null || _units$i === void 0 ? void 0 : (_units$i$tradesubtype = _units$i.tradesubtype) === null || _units$i$tradesubtype === void 0 ? void 0 : _units$i$tradesubtype.code) && ((ob === null || ob === void 0 ? void 0 : ob.structureType) === (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail22 = formData.TradeDetails) === null || _formData$TradeDetail22 === void 0 ? void 0 : (_formData$TradeDetail23 = _formData$TradeDetail22.BuildingType) === null || _formData$TradeDetail23 === void 0 ? void 0 : _formData$TradeDetail23.code) || (ob === null || ob === void 0 ? void 0 : ob.structureType) === (formData === null || formData === void 0 ? void 0 : (_formData$TradeDetail24 = formData.TradeDetails) === null || _formData$TradeDetail24 === void 0 ? void 0 : (_formData$TradeDetail25 = _formData$TradeDetail24.VehicleType) === null || _formData$TradeDetail25 === void 0 ? void 0 : _formData$TradeDetail25.code));
    });
    if (!(e.target.value && parseFloat(e.target.value) > 0)) {
      setError(t("TL_UOM_VALUE_GREATER_O"));
    } else {
      var _selectedtradesubType, _selectedtradesubType5;
      if (Number.isInteger(selectedtradesubType === null || selectedtradesubType === void 0 ? void 0 : (_selectedtradesubType = selectedtradesubType[0]) === null || _selectedtradesubType === void 0 ? void 0 : _selectedtradesubType.fromUom)) {
        var _selectedtradesubType2;
        if (!(e.target.value && parseInt(e.target.value) >= (selectedtradesubType === null || selectedtradesubType === void 0 ? void 0 : (_selectedtradesubType2 = selectedtradesubType[0]) === null || _selectedtradesubType2 === void 0 ? void 0 : _selectedtradesubType2.fromUom))) {
          var _selectedtradesubType3, _selectedtradesubType4;
          setError(`${t("TL_FILL_CORRECT_UOM_VALUE")} ${selectedtradesubType === null || selectedtradesubType === void 0 ? void 0 : (_selectedtradesubType3 = selectedtradesubType[0]) === null || _selectedtradesubType3 === void 0 ? void 0 : _selectedtradesubType3.fromUom} - ${selectedtradesubType === null || selectedtradesubType === void 0 ? void 0 : (_selectedtradesubType4 = selectedtradesubType[0]) === null || _selectedtradesubType4 === void 0 ? void 0 : _selectedtradesubType4.toUom}`);
        }
      }
      if (Number.isInteger(selectedtradesubType === null || selectedtradesubType === void 0 ? void 0 : (_selectedtradesubType5 = selectedtradesubType[0]) === null || _selectedtradesubType5 === void 0 ? void 0 : _selectedtradesubType5.toUom)) {
        var _selectedtradesubType6;
        if (!(e.target.value && parseInt(e.target.value) <= (selectedtradesubType === null || selectedtradesubType === void 0 ? void 0 : (_selectedtradesubType6 = selectedtradesubType[0]) === null || _selectedtradesubType6 === void 0 ? void 0 : _selectedtradesubType6.toUom))) {
          var _selectedtradesubType7, _selectedtradesubType8;
          setError(`${t("TL_FILL_CORRECT_UOM_VALUE")} ${selectedtradesubType === null || selectedtradesubType === void 0 ? void 0 : (_selectedtradesubType7 = selectedtradesubType[0]) === null || _selectedtradesubType7 === void 0 ? void 0 : _selectedtradesubType7.fromUom} - ${selectedtradesubType === null || selectedtradesubType === void 0 ? void 0 : (_selectedtradesubType8 = selectedtradesubType[0]) === null || _selectedtradesubType8 === void 0 ? void 0 : _selectedtradesubType8.toUom}`);
        }
      }
    }
    setUomValue(e.target.value);
    setFeilds(units);
  }
  const goNext = () => {
    let units = formData.TradeDetails.Units;
    let unitsdata;
    if (!error) {
      setError(null);
      unitsdata = {
        ...units,
        units: fields
      };
      onSelect(config.key, unitsdata);
    }
  };
  const onSkip = () => onSelect();
  return /*#__PURE__*/React.createElement(React.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React.createElement(Timeline, null) : null, isLoading ? /*#__PURE__*/React.createElement(Loader, null) : /*#__PURE__*/React.createElement(FormStep, {
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    t: t,
    forcedError: t(error),
    isDisabled: !fields[0].tradecategory || !fields[0].tradetype || !fields[0].tradesubtype
  }, fields.map((field, index) => {
    return /*#__PURE__*/React.createElement("div", {
      key: `${field}-${index}`
    }, /*#__PURE__*/React.createElement("div", {
      style: {
        border: "solid",
        borderRadius: "5px",
        padding: "10px",
        paddingTop: "20px",
        marginTop: "10px",
        borderColor: "#f3f3f3",
        background: "#FAFAFA"
      }
    }, /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_NEW_TRADE_DETAILS_TRADE_CAT_LABEL")}*`), /*#__PURE__*/React.createElement(LinkButton, {
      label: /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement("svg", {
        style: {
          float: "right",
          position: "relative",
          bottom: "32px"
        },
        width: "24",
        height: "24",
        viewBox: "0 0 24 24",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
      }, /*#__PURE__*/React.createElement("path", {
        d: "M1 16C1 17.1 1.9 18 3 18H11C12.1 18 13 17.1 13 16V4H1V16ZM14 1H10.5L9.5 0H4.5L3.5 1H0V3H14V1Z",
        fill: !(fields.length == 1) ? "#494848" : "#FAFAFA"
      })))),
      style: {
        width: "100px",
        display: "inline"
      },
      onClick: e => handleRemove(index)
    }), !isLoading ? /*#__PURE__*/React.createElement(RadioButtons, {
      t: t,
      options: TradeCategoryMenu,
      optionsKey: "i18nKey",
      name: `TradeCategory-${index}`,
      value: field === null || field === void 0 ? void 0 : field.tradecategory,
      selectedOption: field === null || field === void 0 ? void 0 : field.tradecategory,
      onSelect: e => selectTradeCategory(index, e),
      labelKey: "",
      isPTFlow: true
    }) : /*#__PURE__*/React.createElement(Loader, null), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_NEW_TRADE_DETAILS_TRADE_TYPE_LABEL")}*`), /*#__PURE__*/React.createElement(Dropdown, {
      t: t,
      optionKey: "i18nKey",
      isMandatory: config.isMandatory,
      option: getTradeTypeMenu(field === null || field === void 0 ? void 0 : field.tradecategory),
      selected: field === null || field === void 0 ? void 0 : field.tradetype,
      select: e => selectTradeType(index, e)
    }), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_NEW_TRADE_DETAILS_TRADE_SUBTYPE_LABEL")}*`), /*#__PURE__*/React.createElement(Dropdown, {
      t: t,
      optionKey: "i18nKey",
      isMandatory: config.isMandatory,
      option: getTradeSubTypeMenu(field === null || field === void 0 ? void 0 : field.tradetype),
      selected: field === null || field === void 0 ? void 0 : field.tradesubtype,
      optionCardStyles: {
        maxHeight: "125px",
        overflow: "scroll"
      },
      select: e => selectTradeSubType(index, e)
    }), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_UNIT_OF_MEASURE_LABEL")}`), /*#__PURE__*/React.createElement(TextInput, {
      style: {
        background: "#FAFAFA"
      },
      t: t,
      type: "text",
      isMandatory: false,
      optionKey: "i18nKey",
      name: "UnitOfMeasure",
      value: field === null || field === void 0 ? void 0 : field.unit,
      onChange: e => selectUnitOfMeasure(index, e),
      disable: true
    }), /*#__PURE__*/React.createElement(CardLabel, null, `${t("TL_NEW_TRADE_DETAILS_UOM_VALUE_LABEL")}${!field.unit ? "" : "*"}`), /*#__PURE__*/React.createElement(TextInput, Object.assign({
      style: {
        background: "#FAFAFA"
      },
      t: t,
      type: "text",
      isMandatory: false,
      optionKey: "i18nKey",
      name: "UomValue",
      value: field === null || field === void 0 ? void 0 : field.uom,
      onChange: e => selectUomValue(index, e),
      disable: !field.unit
    }, validation = {
      isRequired: true,
      pattern: "[0-9]+",
      type: "text",
      title: t("TL_WRONG_UOM_VALUE_ERROR")
    }))));
  }), /*#__PURE__*/React.createElement("div", {
    style: {
      justifyContent: "center",
      display: "flex",
      paddingBottom: "15px",
      color: "#FF8C00"
    }
  }, /*#__PURE__*/React.createElement("button", {
    type: "button",
    style: {
      paddingTop: "10px"
    },
    onClick: () => handleAdd()
  }, `${t("TL_ADD_MORE_TRADE_UNITS")}`))));
};

const createUnitDetails$1 = () => ({
  tradeType: "",
  tradeSubType: "",
  tradeCategory: "",
  uom: "",
  uomValue: "",
  key: Date.now()
});
const TLTradeUnitsEmployeeInitial = ({
  config,
  onSelect,
  userType,
  formData,
  setError,
  formState,
  clearErrors
}) => {
  const {
    t
  } = useTranslation();
  const {
    pathname
  } = useLocation();
  const isEditScreen = pathname.includes("/modify-application/");
  const [units, setUnits] = useState((formData === null || formData === void 0 ? void 0 : formData.tradeUnits) || [createUnitDetails$1()]);
  const [focusIndex, setFocusIndex] = useState({
    index: -1,
    type: ""
  });
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const stateId = Digit.ULBService.getStateId();
  const [tradeTypeMdmsData, setTradeTypeMdmsData] = useState([]);
  const [tradeCategoryValues, setTradeCategoryValues] = useState([]);
  const [tradeTypeOptionsList, setTradeTypeOptionsList] = useState([]);
  const [tradeSubTypeOptionsList, setTradeSubTypeOptionsList] = useState([]);
  const [isErrors, setIsErrors] = useState(false);
  const [previousLicenseDetails, setPreviousLicenseDetails] = useState((formData === null || formData === void 0 ? void 0 : formData.tradedetils1) || []);
  let isRenewal = window.location.href.includes("tl/renew-application-details");
  if (window.location.href.includes("tl/renew-application-details")) isRenewal = true;
  const applicationType = isRenewal ? "RENEWAL" : "NEW";
  const {
    data: billingSlabTradeTypeData,
    isLoading
  } = Digit.Hooks.tl.useTradeLicenseBillingslab({
    tenantId,
    filters: {}
  }, {
    select: data => {
      return data === null || data === void 0 ? void 0 : data.billingSlab.filter(e => e.tradeType && e.applicationType === applicationType && e.licenseType === "PERMANENT" && e.uom);
    }
  });
  const addNewUnits = () => {
    const newUnit = createUnitDetails$1();
    setUnits(prev => [...prev, newUnit]);
  };
  const removeUnit = unit => {
    setUnits(prev => prev.filter(o => o.key != unit.key));
  };
  useEffect(() => {
    const data = units.map(e => {
      return e;
    });
    onSelect(config === null || config === void 0 ? void 0 : config.key, data);
  }, [units]);
  useEffect(() => {
    onSelect("tradedetils1", previousLicenseDetails);
  }, [previousLicenseDetails]);
  const commonProps = {
    focusIndex,
    allUnits: units,
    setFocusIndex,
    removeUnit,
    formData,
    formState,
    setUnits,
    t,
    setError,
    clearErrors,
    config,
    tradeCategoryValues,
    tradeTypeOptionsList,
    setTradeTypeOptionsList,
    tradeTypeMdmsData,
    tradeSubTypeOptionsList,
    setTradeSubTypeOptionsList,
    setTradeTypeMdmsData,
    setTradeCategoryValues,
    billingSlabTradeTypeData,
    isErrors,
    setIsErrors,
    previousLicenseDetails,
    setPreviousLicenseDetails,
    isRenewal,
    isLoading
  };
  if (isEditScreen) {
    return /*#__PURE__*/React.createElement(React.Fragment, null);
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, units.map((unit, index) => /*#__PURE__*/React.createElement(TradeUnitForm$1, Object.assign({
    key: unit.key,
    index: index,
    unit: unit
  }, commonProps))), /*#__PURE__*/React.createElement(LinkButton, {
    label: t("TL_ADD_TRADE_UNIT"),
    onClick: addNewUnits,
    style: {
      color: "#a82227",
      width: "fit-content"
    }
  }));
};
const TradeUnitForm$1 = _props => {
  var _formData$ownershipCa3, _formData$tradedetils10, _formData$tradedetils11, _formData$tradedetils12, _formData$tradedetils13, _formData$tradedetils14, _formData$tradedetils15, _errors$tradeCategory2, _errors$tradeType2, _errors$tradeSubType2, _unit$tradeSubType, _unit$tradeSubType2, _errors$uom2, _unit$tradeSubType3, _unit$tradeSubType4, _errors$uomValue2;
  const {
    unit,
    index,
    focusIndex,
    allUnits,
    setFocusIndex,
    removeUnit,
    setUnits,
    t,
    formData,
    config,
    setError,
    clearErrors,
    formState,
    tradeCategoryValues,
    tradeTypeOptionsList,
    setTradeTypeOptionsList,
    tradeTypeMdmsData,
    tradeSubTypeOptionsList,
    setTradeSubTypeOptionsList,
    setTradeTypeMdmsData,
    setTradeCategoryValues,
    billingSlabTradeTypeData,
    isErrors,
    setIsErrors,
    previousLicenseDetails,
    setPreviousLicenseDetails,
    isRenewal,
    isLoading
  } = _props;
  const {
    control,
    formState: localFormState,
    watch,
    setError: setLocalError,
    clearErrors: clearLocalErrors,
    setValue,
    trigger,
    getValues
  } = useForm();
  const formValue = watch();
  const {
    errors
  } = localFormState;
  const isIndividualTypeOwner = useMemo(() => {
    var _formData$ownershipCa, _formData$ownershipCa2;
    return formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa = formData.ownershipCategory) === null || _formData$ownershipCa === void 0 ? void 0 : (_formData$ownershipCa2 = _formData$ownershipCa.code) === null || _formData$ownershipCa2 === void 0 ? void 0 : _formData$ownershipCa2.includes("INDIVIDUAL");
  }, [formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa3 = formData.ownershipCategory) === null || _formData$ownershipCa3 === void 0 ? void 0 : _formData$ownershipCa3.code]);
  useEffect(() => {
    var _formData$tradedetils, _formData$tradedetils2, _formData$tradedetils3, _formData$tradedetils4, _formData$tradedetils5, _formData$tradedetils6;
    if ((billingSlabTradeTypeData === null || billingSlabTradeTypeData === void 0 ? void 0 : billingSlabTradeTypeData.length) > 0 && formData !== null && formData !== void 0 && (_formData$tradedetils = formData.tradedetils) !== null && _formData$tradedetils !== void 0 && (_formData$tradedetils2 = _formData$tradedetils["0"]) !== null && _formData$tradedetils2 !== void 0 && (_formData$tradedetils3 = _formData$tradedetils2.structureType) !== null && _formData$tradedetils3 !== void 0 && _formData$tradedetils3.code && formData !== null && formData !== void 0 && (_formData$tradedetils4 = formData.tradedetils) !== null && _formData$tradedetils4 !== void 0 && (_formData$tradedetils5 = _formData$tradedetils4["0"]) !== null && _formData$tradedetils5 !== void 0 && (_formData$tradedetils6 = _formData$tradedetils5.structureSubType) !== null && _formData$tradedetils6 !== void 0 && _formData$tradedetils6.code) {
      let filteredTradeDetails = billingSlabTradeTypeData.filter(data => {
        var _formData$tradedetils7, _formData$tradedetils8, _formData$tradedetils9;
        return (data === null || data === void 0 ? void 0 : data.structureType) === (formData === null || formData === void 0 ? void 0 : (_formData$tradedetils7 = formData.tradedetils) === null || _formData$tradedetils7 === void 0 ? void 0 : (_formData$tradedetils8 = _formData$tradedetils7["0"]) === null || _formData$tradedetils8 === void 0 ? void 0 : (_formData$tradedetils9 = _formData$tradedetils8.structureSubType) === null || _formData$tradedetils9 === void 0 ? void 0 : _formData$tradedetils9.code.toString());
      });
      setTradeTypeMdmsData(filteredTradeDetails);
      let tradeType = cloneDeep_1(filteredTradeDetails);
      let tradeCatogoryList = [];
      tradeType.map(data => {
        var _data$tradeType, _data$tradeType2;
        data.code = data === null || data === void 0 ? void 0 : (_data$tradeType = data.tradeType) === null || _data$tradeType === void 0 ? void 0 : _data$tradeType.split('.')[0];
        data.i18nKey = t(`TRADELICENSE_TRADETYPE_${data === null || data === void 0 ? void 0 : (_data$tradeType2 = data.tradeType) === null || _data$tradeType2 === void 0 ? void 0 : _data$tradeType2.split('.')[0]}`);
        tradeCatogoryList.push(data);
      });
      const filterTradeCategoryList = getUniqueItemsFromArray(tradeCatogoryList, "code");
      setTradeCategoryValues(filterTradeCategoryList);
    }
  }, [formData === null || formData === void 0 ? void 0 : (_formData$tradedetils10 = formData.tradedetils) === null || _formData$tradedetils10 === void 0 ? void 0 : (_formData$tradedetils11 = _formData$tradedetils10[0]) === null || _formData$tradedetils11 === void 0 ? void 0 : (_formData$tradedetils12 = _formData$tradedetils11.structureType) === null || _formData$tradedetils12 === void 0 ? void 0 : _formData$tradedetils12.code, !isLoading, billingSlabTradeTypeData, formData === null || formData === void 0 ? void 0 : (_formData$tradedetils13 = formData.tradedetils) === null || _formData$tradedetils13 === void 0 ? void 0 : (_formData$tradedetils14 = _formData$tradedetils13["0"]) === null || _formData$tradedetils14 === void 0 ? void 0 : (_formData$tradedetils15 = _formData$tradedetils14.structureSubType) === null || _formData$tradedetils15 === void 0 ? void 0 : _formData$tradedetils15.code]);
  useEffect(() => {
    trigger();
  }, []);
  useEffect(() => {
    const keys = Object.keys(formValue);
    const part = {};
    keys.forEach(key => part[key] = unit[key]);
    let _ownerType = isIndividualTypeOwner ? {} : {
      ownerType: {
        code: "NONE"
      }
    };
    if (!lodash.isEqual(formValue, part)) {
      Object.keys(formValue).map(data => {
        if (data != "key" && formValue[data] != undefined && formValue[data] != "" && formValue[data] != null && !isErrors) {
          setIsErrors(true);
        }
      });
      setUnits(prev => prev.map(o => o.key && o.key === unit.key ? {
        ...o,
        ...formValue,
        ..._ownerType
      } : {
        ...o
      }));
      trigger();
    }
  }, [formValue]);
  useEffect(() => {
    var _formState$errors$con;
    if (Object.keys(errors).length && !lodash.isEqual(((_formState$errors$con = formState.errors[config.key]) === null || _formState$errors$con === void 0 ? void 0 : _formState$errors$con.type) || {}, errors)) {
      setError(config.key, {
        type: errors
      });
    } else if (!Object.keys(errors).length && formState.errors[config.key] && isErrors) {
      clearErrors(config.key);
    }
  }, [errors]);
  let ckeckingLocation = window.location.href.includes("renew-application-details");
  if (window.location.href.includes("edit-application-details")) ckeckingLocation = true;
  useEffect(() => {
    if ((tradeTypeMdmsData === null || tradeTypeMdmsData === void 0 ? void 0 : tradeTypeMdmsData.length) > 0 && ckeckingLocation && !isLoading) {
      let tradeType = cloneDeep_1(tradeTypeMdmsData);
      let filteredTradeType = tradeType.filter(data => {
        var _data$tradeType3, _unit$tradeCategory;
        return (data === null || data === void 0 ? void 0 : (_data$tradeType3 = data.tradeType) === null || _data$tradeType3 === void 0 ? void 0 : _data$tradeType3.split('.')[0]) === (unit === null || unit === void 0 ? void 0 : (_unit$tradeCategory = unit.tradeCategory) === null || _unit$tradeCategory === void 0 ? void 0 : _unit$tradeCategory.code);
      });
      filteredTradeType.map(data => {
        var _data$tradeType4, _data$tradeType5;
        data.code = data === null || data === void 0 ? void 0 : (_data$tradeType4 = data.tradeType) === null || _data$tradeType4 === void 0 ? void 0 : _data$tradeType4.split('.')[1];
        data.i18nKey = t(`TRADELICENSE_TRADETYPE_${data === null || data === void 0 ? void 0 : (_data$tradeType5 = data.tradeType) === null || _data$tradeType5 === void 0 ? void 0 : _data$tradeType5.split('.')[1]}`);
      });
      const filterTradeCategoryList = getUniqueItemsFromArray(filteredTradeType, "code");
      setTradeTypeOptionsList(filterTradeCategoryList);
    }
  }, [tradeTypeMdmsData, !isLoading, billingSlabTradeTypeData]);
  useEffect(() => {
    if ((tradeTypeMdmsData === null || tradeTypeMdmsData === void 0 ? void 0 : tradeTypeMdmsData.length) > 0 && ckeckingLocation && !isLoading) {
      let tradeType = cloneDeep_1(tradeTypeMdmsData);
      let filteredTradeSubType = tradeType.filter(data => {
        var _data$tradeType6, _unit$tradeType;
        return (data === null || data === void 0 ? void 0 : (_data$tradeType6 = data.tradeType) === null || _data$tradeType6 === void 0 ? void 0 : _data$tradeType6.split('.')[1]) === (unit === null || unit === void 0 ? void 0 : (_unit$tradeType = unit.tradeType) === null || _unit$tradeType === void 0 ? void 0 : _unit$tradeType.code);
      });
      let tradeSubTypeOptions = [];
      filteredTradeSubType.map(data => {
        let code = stringReplaceAll(data === null || data === void 0 ? void 0 : data.tradeType, "-", "_");
        data.code = data === null || data === void 0 ? void 0 : data.tradeType;
        data.i18nKey = t(`TRADELICENSE_TRADETYPE_${stringReplaceAll(code, ".", "_")}`);
        tradeSubTypeOptions.push(data);
      });
      const filterTradeSubTypeList = getUniqueItemsFromArray(tradeSubTypeOptions, "code");
      setTradeSubTypeOptionsList(filterTradeSubTypeList);
    }
  }, [tradeTypeMdmsData, !isLoading, billingSlabTradeTypeData]);
  function checkRangeForUomValue(e, fromUom, toUom) {
    if (Number.isInteger(fromUom)) {
      if (!(e && parseFloat(e) >= fromUom)) {
        return false;
      }
    }
    if (Number.isInteger(toUom)) {
      if (!(e && parseFloat(e) <= toUom)) {
        return false;
      }
    }
    return true;
  }
  const errorStyle = {
    width: "70%",
    marginLeft: "30%",
    fontSize: "12px",
    marginTop: "-21px"
  };
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      marginBottom: "16px"
    }
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      border: "1px solid #D6D5D4",
      padding: "16px",
      marginTop: "8px",
      background: "#FAFAFA"
    }
  }, (allUnits === null || allUnits === void 0 ? void 0 : allUnits.length) > 1 ? /*#__PURE__*/React.createElement("div", {
    style: {
      display: "flex",
      justifyContent: "flex-end"
    }
  }, /*#__PURE__*/React.createElement("div", {
    onClick: () => removeUnit(unit),
    style: {
      padding: "5px",
      cursor: "pointer",
      textAlign: "right"
    }
  }, /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement("svg", {
    style: {
      float: "right",
      position: "relative",
      bottom: "5px"
    },
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M1 16C1 17.1 1.9 18 3 18H11C12.1 18 13 17.1 13 16V4H1V16ZM14 1H10.5L9.5 0H4.5L3.5 1H0V3H14V1Z",
    fill: "#494848"
  }))))) : null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TRADELICENSE_TRADECATEGORY_LABEL")} * `), /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "tradeCategory",
    defaultValue: unit === null || unit === void 0 ? void 0 : unit.tradeCategory,
    rules: {
      required: t("REQUIRED_FIELD")
    },
    render: props => {
      var _errors$tradeCategory;
      return /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: props.value,
        disable: false,
        option: tradeCategoryValues,
        errorStyle: localFormState.touched.tradeCategory && errors !== null && errors !== void 0 && (_errors$tradeCategory = errors.tradeCategory) !== null && _errors$tradeCategory !== void 0 && _errors$tradeCategory.message ? true : false,
        select: e => {
          var _props$value, _props$value2;
          if ((props === null || props === void 0 ? void 0 : (_props$value = props.value) === null || _props$value === void 0 ? void 0 : _props$value.code) == (e === null || e === void 0 ? void 0 : e.code)) return true;
          if ((e === null || e === void 0 ? void 0 : e.code) != (props === null || props === void 0 ? void 0 : (_props$value2 = props.value) === null || _props$value2 === void 0 ? void 0 : _props$value2.code) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          let selectedOption = e === null || e === void 0 ? void 0 : e.code;
          if ((tradeTypeMdmsData === null || tradeTypeMdmsData === void 0 ? void 0 : tradeTypeMdmsData.length) > 0) {
            let tradeType = cloneDeep_1(tradeTypeMdmsData);
            let filteredTradeType = tradeType.filter(data => {
              var _data$tradeType7;
              return (data === null || data === void 0 ? void 0 : (_data$tradeType7 = data.tradeType) === null || _data$tradeType7 === void 0 ? void 0 : _data$tradeType7.split('.')[0]) === selectedOption;
            });
            filteredTradeType.map(data => {
              var _data$tradeType8, _data$tradeType9;
              data.code = data === null || data === void 0 ? void 0 : (_data$tradeType8 = data.tradeType) === null || _data$tradeType8 === void 0 ? void 0 : _data$tradeType8.split('.')[1];
              data.i18nKey = t(`TRADELICENSE_TRADETYPE_${data === null || data === void 0 ? void 0 : (_data$tradeType9 = data.tradeType) === null || _data$tradeType9 === void 0 ? void 0 : _data$tradeType9.split('.')[1]}`);
            });
            const filterTradeCategoryList = getUniqueItemsFromArray(filteredTradeType, "code");
            setValue("tradeType", "");
            setValue("tradeSubType", "");
            setValue("uom", "");
            setValue("uomValue", "");
            setTradeTypeOptionsList(filterTradeCategoryList);
          }
          props.onChange(e);
        },
        optionKey: "i18nKey",
        onBlur: e => {
          setFocusIndex({
            index: -1
          });
          props.onBlur(e);
        },
        t: t
      });
    }
  })), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.tradeCategory ? errors === null || errors === void 0 ? void 0 : (_errors$tradeCategory2 = errors.tradeCategory) === null || _errors$tradeCategory2 === void 0 ? void 0 : _errors$tradeCategory2.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TRADELICENSE_TRADETYPE_LABEL")} * `), /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "tradeType",
    defaultValue: unit === null || unit === void 0 ? void 0 : unit.tradeType,
    rules: {
      required: t("REQUIRED_FIELD")
    },
    render: props => {
      var _errors$tradeType;
      return /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: getValues("tradeType"),
        disable: false,
        option: unit !== null && unit !== void 0 && unit.tradeCategory ? tradeTypeOptionsList : [],
        errorStyle: localFormState.touched.tradeType && errors !== null && errors !== void 0 && (_errors$tradeType = errors.tradeType) !== null && _errors$tradeType !== void 0 && _errors$tradeType.message ? true : false,
        select: e => {
          var _props$value3, _props$value4;
          if ((props === null || props === void 0 ? void 0 : (_props$value3 = props.value) === null || _props$value3 === void 0 ? void 0 : _props$value3.code) == (e === null || e === void 0 ? void 0 : e.code)) return true;
          if ((e === null || e === void 0 ? void 0 : e.code) != (props === null || props === void 0 ? void 0 : (_props$value4 = props.value) === null || _props$value4 === void 0 ? void 0 : _props$value4.code) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          let selectedOption = e === null || e === void 0 ? void 0 : e.code;
          if ((tradeTypeMdmsData === null || tradeTypeMdmsData === void 0 ? void 0 : tradeTypeMdmsData.length) > 0) {
            let tradeType = cloneDeep_1(tradeTypeMdmsData);
            let filteredTradeSubType = tradeType.filter(data => {
              var _data$tradeType10;
              return (data === null || data === void 0 ? void 0 : (_data$tradeType10 = data.tradeType) === null || _data$tradeType10 === void 0 ? void 0 : _data$tradeType10.split('.')[1]) === selectedOption;
            });
            let tradeSubTypeOptions = [];
            filteredTradeSubType.map(data => {
              let code = stringReplaceAll(data === null || data === void 0 ? void 0 : data.tradeType, "-", "_");
              data.code = data === null || data === void 0 ? void 0 : data.tradeType;
              data.i18nKey = t(`TRADELICENSE_TRADETYPE_${stringReplaceAll(code, ".", "_")}`);
              tradeSubTypeOptions.push(data);
            });
            const filterTradeSubTypeList = getUniqueItemsFromArray(tradeSubTypeOptions, "code");
            setValue("tradeSubType", "");
            setValue("uom", "");
            setValue("uomValue", "");
            setTradeSubTypeOptionsList(filterTradeSubTypeList);
          }
          props.onChange(e);
        },
        optionKey: "i18nKey",
        onBlur: props.onBlur,
        t: t
      });
    }
  })), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.tradeType ? errors === null || errors === void 0 ? void 0 : (_errors$tradeType2 = errors.tradeType) === null || _errors$tradeType2 === void 0 ? void 0 : _errors$tradeType2.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, `${t("TL_NEW_TRADE_SUB_TYPE_LABEL")} * `), /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "tradeSubType",
    defaultValue: unit === null || unit === void 0 ? void 0 : unit.tradeSubType,
    rules: {
      required: t("REQUIRED_FIELD")
    },
    render: props => {
      var _errors$tradeSubType;
      return /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: getValues("tradeSubType"),
        disable: false,
        option: unit !== null && unit !== void 0 && unit.tradeType ? sortDropdownNames(tradeSubTypeOptionsList, "i18nKey", t) : [],
        errorStyle: localFormState.touched.tradeSubType && errors !== null && errors !== void 0 && (_errors$tradeSubType = errors.tradeSubType) !== null && _errors$tradeSubType !== void 0 && _errors$tradeSubType.message ? true : false,
        select: e => {
          var _props$value5, _props$value6;
          if ((props === null || props === void 0 ? void 0 : (_props$value5 = props.value) === null || _props$value5 === void 0 ? void 0 : _props$value5.code) == (e === null || e === void 0 ? void 0 : e.code)) return true;
          if ((e === null || e === void 0 ? void 0 : e.code) != (props === null || props === void 0 ? void 0 : (_props$value6 = props.value) === null || _props$value6 === void 0 ? void 0 : _props$value6.code) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          setValue("uom", e !== null && e !== void 0 && e.uom ? e === null || e === void 0 ? void 0 : e.uom : "");
          setValue("uomValue", "");
          props.onChange(e);
        },
        optionKey: "i18nKey",
        onBlur: props.onBlur,
        t: t
      });
    }
  })), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, " ", localFormState.touched.tradeSubType ? errors === null || errors === void 0 ? void 0 : (_errors$tradeSubType2 = errors.tradeSubType) === null || _errors$tradeSubType2 === void 0 ? void 0 : _errors$tradeSubType2.message : "", " "), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, unit !== null && unit !== void 0 && (_unit$tradeSubType = unit.tradeSubType) !== null && _unit$tradeSubType !== void 0 && _unit$tradeSubType.uom ? `${t("TL_NEW_TRADE_DETAILS_UOM_UOM_PLACEHOLDER")} * ` : `${t("TL_NEW_TRADE_DETAILS_UOM_UOM_PLACEHOLDER")}`), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "uom",
    defaultValue: unit === null || unit === void 0 ? void 0 : (_unit$tradeSubType2 = unit.tradeSubType) === null || _unit$tradeSubType2 === void 0 ? void 0 : _unit$tradeSubType2.uom,
    render: props => {
      var _errors$uom;
      return /*#__PURE__*/React.createElement(TextInput, {
        value: getValues("uom"),
        autoFocus: focusIndex.index === (unit === null || unit === void 0 ? void 0 : unit.key) && focusIndex.type === "uom",
        errorStyle: localFormState.touched.uom && errors !== null && errors !== void 0 && (_errors$uom = errors.uom) !== null && _errors$uom !== void 0 && _errors$uom.message ? true : false,
        onChange: e => {
          props.onChange(e);
          setFocusIndex({
            index: unit.key,
            type: "uom"
          });
        },
        disable: true,
        onBlur: props.onBlur,
        style: {
          background: "#FAFAFA"
        }
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.uom ? errors === null || errors === void 0 ? void 0 : (_errors$uom2 = errors.uom) === null || _errors$uom2 === void 0 ? void 0 : _errors$uom2.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, unit !== null && unit !== void 0 && (_unit$tradeSubType3 = unit.tradeSubType) !== null && _unit$tradeSubType3 !== void 0 && _unit$tradeSubType3.uom ? `${t("TL_NEW_TRADE_DETAILS_UOM_VALUE_LABEL")} * ` : `${t("TL_NEW_TRADE_DETAILS_UOM_VALUE_LABEL")} `), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "uomValue",
    defaultValue: unit === null || unit === void 0 ? void 0 : unit.uomValue,
    rules: (unit === null || unit === void 0 ? void 0 : (_unit$tradeSubType4 = unit.tradeSubType) === null || _unit$tradeSubType4 === void 0 ? void 0 : _unit$tradeSubType4.uom) && {
      required: t("REQUIRED_FIELD"),
      validate: {
        pattern: val => {
          var _unit$tradeSubType5, _unit$tradeSubType6, _unit$tradeSubType7, _unit$tradeSubType8;
          return val > 0 && val < 99999 ? checkRangeForUomValue(val, unit === null || unit === void 0 ? void 0 : (_unit$tradeSubType5 = unit.tradeSubType) === null || _unit$tradeSubType5 === void 0 ? void 0 : _unit$tradeSubType5.fromUom, unit === null || unit === void 0 ? void 0 : (_unit$tradeSubType6 = unit.tradeSubType) === null || _unit$tradeSubType6 === void 0 ? void 0 : _unit$tradeSubType6.toUom) ? true : `${t("ERR_WRONG_UOM_VALUE")} ${unit === null || unit === void 0 ? void 0 : (_unit$tradeSubType7 = unit.tradeSubType) === null || _unit$tradeSubType7 === void 0 ? void 0 : _unit$tradeSubType7.fromUom} - ${unit === null || unit === void 0 ? void 0 : (_unit$tradeSubType8 = unit.tradeSubType) === null || _unit$tradeSubType8 === void 0 ? void 0 : _unit$tradeSubType8.toUom}` : t("ERR_DEFAULT_INPUT_FIELD_MSG");
        }
      }
    },
    render: props => {
      var _errors$uomValue, _unit$tradeSubType9;
      return /*#__PURE__*/React.createElement(TextInput, {
        value: getValues("uomValue"),
        autoFocus: focusIndex.index === (unit === null || unit === void 0 ? void 0 : unit.key) && focusIndex.type === "uomValue",
        errorStyle: localFormState.touched.uomValue && errors !== null && errors !== void 0 && (_errors$uomValue = errors.uomValue) !== null && _errors$uomValue !== void 0 && _errors$uomValue.message ? true : false,
        onChange: e => {
          if (e.target.value != (unit === null || unit === void 0 ? void 0 : unit.uomValue) && isRenewal) setPreviousLicenseDetails({
            ...previousLicenseDetails,
            checkForRenewal: true
          });
          props.onChange(e);
          setFocusIndex({
            index: unit.key,
            type: "uomValue"
          });
        },
        disable: !(unit !== null && unit !== void 0 && (_unit$tradeSubType9 = unit.tradeSubType) !== null && _unit$tradeSubType9 !== void 0 && _unit$tradeSubType9.uom),
        onBlur: props.onBlur,
        style: {
          background: "#FAFAFA"
        }
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, " ", localFormState.touched.uomValue ? errors === null || errors === void 0 ? void 0 : (_errors$uomValue2 = errors.uomValue) === null || _errors$uomValue2 === void 0 ? void 0 : _errors$uomValue2.message : "", " "))));
};

const App = () => {
  var _Digit, _Digit$ComponentRegis, _Digit2, _Digit2$ComponentRegi, _Digit3, _Digit3$ComponentRegi, _Digit4, _Digit4$ComponentRegi, _Digit5, _Digit5$ComponentRegi, _Digit6, _Digit6$ComponentRegi, _Digit7, _Digit7$ComponentRegi;
  const {
    path,
    url,
    ...match
  } = useRouteMatch();
  let isSuccessScreen = window.location.href.includes("acknowledgement");
  let isCommonPTPropertyScreen = window.location.href.includes("/tl/tradelicence/new-application/property-details");
  const ApplicationDetails = Digit.ComponentRegistryService.getComponent("TLApplicationDetails");
  const CreateTradeLicence = (_Digit = Digit) === null || _Digit === void 0 ? void 0 : (_Digit$ComponentRegis = _Digit.ComponentRegistryService) === null || _Digit$ComponentRegis === void 0 ? void 0 : _Digit$ComponentRegis.getComponent('TLCreateTradeLicence');
  const EditTrade = (_Digit2 = Digit) === null || _Digit2 === void 0 ? void 0 : (_Digit2$ComponentRegi = _Digit2.ComponentRegistryService) === null || _Digit2$ComponentRegi === void 0 ? void 0 : _Digit2$ComponentRegi.getComponent('TLEditTrade');
  const RenewTrade = (_Digit3 = Digit) === null || _Digit3 === void 0 ? void 0 : (_Digit3$ComponentRegi = _Digit3.ComponentRegistryService) === null || _Digit3$ComponentRegi === void 0 ? void 0 : _Digit3$ComponentRegi.getComponent('TLRenewTrade');
  const TradeLicense = (_Digit4 = Digit) === null || _Digit4 === void 0 ? void 0 : (_Digit4$ComponentRegi = _Digit4.ComponentRegistryService) === null || _Digit4$ComponentRegi === void 0 ? void 0 : _Digit4$ComponentRegi.getComponent('TradeLicense');
  const TLList = (_Digit5 = Digit) === null || _Digit5 === void 0 ? void 0 : (_Digit5$ComponentRegi = _Digit5.ComponentRegistryService) === null || _Digit5$ComponentRegi === void 0 ? void 0 : _Digit5$ComponentRegi.getComponent('TLList');
  const SearchTradeComponent = (_Digit6 = Digit) === null || _Digit6 === void 0 ? void 0 : (_Digit6$ComponentRegi = _Digit6.ComponentRegistryService) === null || _Digit6$ComponentRegi === void 0 ? void 0 : _Digit6$ComponentRegi.getComponent('TLSearchTradeComponent');
  const MyApplications = (_Digit7 = Digit) === null || _Digit7 === void 0 ? void 0 : (_Digit7$ComponentRegi = _Digit7.ComponentRegistryService) === null || _Digit7$ComponentRegi === void 0 ? void 0 : _Digit7$ComponentRegi.getComponent('MyApplications');
  const getBackPageNumber = () => {
    let goBacktoFromProperty = -1;
    if (sessionStorage.getItem("VisitedCommonPTSearch") === "true" && (sessionStorage.getItem("VisitedAccessoriesDetails") === "true" || sessionStorage.getItem("VisitedisAccessories") === "true") && isCommonPTPropertyScreen) {
      goBacktoFromProperty = -4;
      sessionStorage.removeItem("VisitedCommonPTSearch");
      return goBacktoFromProperty;
    }
    return goBacktoFromProperty;
  };
  return /*#__PURE__*/React.createElement("span", {
    className: "tl-citizen"
  }, /*#__PURE__*/React.createElement(Switch, null, /*#__PURE__*/React.createElement(AppContainer, null, !window.location.href.includes('/acknowledgement') && window.location.href.includes('tl/tradelicence') && /*#__PURE__*/React.createElement(BackButton, {
    isCommonPTPropertyScreen: isCommonPTPropertyScreen,
    isSuccessScreen: isSuccessScreen,
    getBackPageNumber: getBackPageNumber
  }, "Back"), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: `${path}/tradelicence/new-application`,
    component: CreateTradeLicence
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: `${path}/tradelicence/edit-application/:id/:tenantId`,
    component: EditTrade
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: `${path}/tradelicence/renew-trade/:id/:tenantId`,
    component: RenewTrade
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: `${path}/tradelicence/my-application`,
    component: MyApplications
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: `${path}/tradelicence/my-bills`,
    component: () => /*#__PURE__*/React.createElement(MyApplications, {
      view: "bills"
    })
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: `${path}/tradelicence/tl-info`,
    component: TradeLicense
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: `${path}/tradelicence/application/:id/:tenantId`,
    component: ApplicationDetails
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: `${path}/tradelicence/renewal-list`,
    component: TLList
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: `${path}/tradelicence/trade-search`,
    component: SearchTradeComponent
  }))));
};

const InboxLinks = ({
  parentRoute,
  businessService,
  allLinks,
  headerText,
  classNameForMobileView: _classNameForMobileView = ""
}) => {
  const {
    t
  } = useTranslation();
  const [links, setLinks] = useState([]);
  const {
    roles: userRoles
  } = Digit.UserService.getUser().info;
  useEffect(() => {
    let linksToShow = allLinks.filter(e => e.businessService === businessService).filter(({
      roles
    }) => roles.some(e => userRoles.map(({
      code
    }) => code).includes(e)) || !roles.length);
    setLinks(linksToShow);
  }, []);
  const GetLogo = () => /*#__PURE__*/React.createElement("div", {
    className: "header"
  }, /*#__PURE__*/React.createElement("span", {
    className: "logo"
  }, /*#__PURE__*/React.createElement(CaseIcon, null)), " ", /*#__PURE__*/React.createElement("span", {
    className: "text"
  }, t(headerText)));
  return /*#__PURE__*/React.createElement(Card, {
    className: "employeeCard filter inboxLinks"
  }, /*#__PURE__*/React.createElement("div", {
    className: `complaint-links-container ${_classNameForMobileView}`
  }, GetLogo(), /*#__PURE__*/React.createElement("div", {
    className: "body"
  }, links.map(({
    link,
    text,
    hyperlink: _hyperlink = false,
    accessTo: _accessTo = []
  }, index) => {
    return /*#__PURE__*/React.createElement("span", {
      className: "link",
      key: index
    }, _hyperlink ? /*#__PURE__*/React.createElement("a", {
      href: link
    }, t(text)) : /*#__PURE__*/React.createElement(Link, {
      to: link
    }, t(text)));
  }))));
};

const ApplicationTable = ({
  t,
  currentPage,
  columns,
  data,
  getCellProps,
  disableSort,
  onSort,
  onNextPage,
  onPrevPage,
  onPageSizeChange,
  pageSizeLimit,
  sortParams,
  totalRecords
}) => {
  return /*#__PURE__*/React.createElement(Table, {
    t: t,
    data: data,
    currentPage: currentPage,
    columns: columns,
    getCellProps: getCellProps,
    onNextPage: onNextPage,
    onPrevPage: onPrevPage,
    pageSizeLimit: pageSizeLimit,
    disableSort: disableSort,
    onPageSizeChange: onPageSizeChange,
    onSort: onSort,
    sortParams: sortParams,
    totalRecords: totalRecords
  });
};

const fieldComponents = {
  date: DatePicker,
  mobileNumber: MobileNumber
};
const SearchApplication$1 = ({
  onSearch,
  type,
  onClose,
  searchFields,
  searchParams,
  isInboxPage,
  defaultSearchParams,
  clearSearch: _clearSearch,
  setSearchFieldsBackToOriginalState,
  setSetSearchFieldsBackToOriginalState
}) => {
  var _searchFields$filter;
  const {
    t
  } = useTranslation();
  const {
    register,
    handleSubmit,
    reset,
    watch,
    control,
    setError,
    clearErrors,
    formState,
    setValue
  } = useForm({
    defaultValues: searchParams
  });
  const form = watch();
  const mobileView = innerWidth <= 640;
  const [justToResetSearchFieldsInCaseOfFilterTrigger, setSearchFieldsInCaseOfFilterTrigger] = useState([{
    applicationNumber: "",
    mobileNumber: ""
  }]);
  useEffect(() => {
    if (setSearchFieldsBackToOriginalState) {
      setNotRemovedStateToSearchFields();
      setTimeout(setSetSearchFieldsBackToOriginalState(false), 1000);
    }
  }, [setSearchFieldsBackToOriginalState]);
  const setNotRemovedStateToSearchFields = () => {
    if (Array.isArray(justToResetSearchFieldsInCaseOfFilterTrigger)) {
      let [{
        applicationNumber,
        mobileNumber
      }] = justToResetSearchFieldsInCaseOfFilterTrigger;
      setValue("applicationNumber", applicationNumber);
      setValue("mobileNumber", mobileNumber);
    } else {
      let {
        applicationNumber,
        mobileNumber
      } = justToResetSearchFieldsInCaseOfFilterTrigger;
      setValue("applicationNumber", applicationNumber);
      setValue("mobileNumber", mobileNumber);
    }
  };
  useEffect(() => {
    searchFields.forEach(({
      pattern,
      name,
      maxLength,
      minLength,
      errorMessages,
      ...el
    }) => {
      const value = form[name];
      const error = formState.errors[name];
      if (pattern) {
        if (!new RegExp(pattern).test(value) && !error) setError(name, {
          type: "pattern",
          message: t(errorMessages === null || errorMessages === void 0 ? void 0 : errorMessages.pattern) || t(`PATTERN_${name.toUpperCase()}_FAILED`)
        });else if (new RegExp(pattern).test(value) && (error === null || error === void 0 ? void 0 : error.type) === "pattern") clearErrors([name]);
      }
      if (minLength) {
        if ((value === null || value === void 0 ? void 0 : value.length) < minLength && !error) setError(name, {
          type: "minLength",
          message: t((errorMessages === null || errorMessages === void 0 ? void 0 : errorMessages.minLength) || `MINLENGTH_${name.toUpperCase()}_FAILED`)
        });else if ((value === null || value === void 0 ? void 0 : value.length) >= minLength && (error === null || error === void 0 ? void 0 : error.type) === "minLength") clearErrors([name]);
      }
      if (maxLength) {
        if ((value === null || value === void 0 ? void 0 : value.length) > maxLength && !error) setError(name, {
          type: "maxLength",
          message: t((errorMessages === null || errorMessages === void 0 ? void 0 : errorMessages.maxLength) || `MAXLENGTH_${name.toUpperCase()}_FAILED`)
        });else if ((value === null || value === void 0 ? void 0 : value.length) <= maxLength && (error === null || error === void 0 ? void 0 : error.type) === "maxLength") clearErrors([name]);
      }
    });
  }, [form, formState, setError, clearErrors]);
  const onSubmitInput = data => {
    if (data.mobileNumber.length == 0 || data.mobileNumber.length == 10) {
      if (!data.mobileNumber) {
        delete data.mobileNumber;
      }
      const mobileNumber = data === null || data === void 0 ? void 0 : data.mobileNumber;
      const applicationNumber = data === null || data === void 0 ? void 0 : data.applicationNumber;
      setSearchFieldsInCaseOfFilterTrigger({
        mobileNumber,
        applicationNumber
      });
      data.delete = [];
      searchFields.forEach(field => {
        if (!data[field.name]) data.delete.push(field.name);
      });
      onSearch(data);
      if (type === "mobile") {
        onClose();
      }
    }
  };
  function clearSearch() {
    const resetValues = searchFields.reduce((acc, field) => ({
      ...acc,
      [field === null || field === void 0 ? void 0 : field.name]: ""
    }), {});
    reset(resetValues);
    if (isInboxPage) {
      const _newParams = {
        ...searchParams
      };
      _newParams.delete = [];
      searchFields.forEach(e => {
        _newParams.delete.push(e === null || e === void 0 ? void 0 : e.name);
      });
      setSearchFieldsInCaseOfFilterTrigger({
        applicationNumber: "",
        mobileNumber: ""
      });
      onSearch({
        ..._newParams
      });
    } else {
      _clearSearch();
    }
  }
  const clearAll = mobileView => {
    const mobileViewStyles = mobileView ? {
      margin: 0
    } : {};
    return /*#__PURE__*/React.createElement(LinkLabel, {
      style: {
        display: "inline",
        ...mobileViewStyles
      },
      onClick: clearSearch
    }, t("ES_COMMON_CLEAR_SEARCH"));
  };
  return /*#__PURE__*/React.createElement("form", {
    onSubmit: handleSubmit(onSubmitInput)
  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    className: "search-container",
    style: {
      width: "auto",
      marginLeft: isInboxPage ? "24px" : "revert"
    }
  }, /*#__PURE__*/React.createElement("div", {
    className: "search-complaint-container"
  }, (type === "mobile" || mobileView) && /*#__PURE__*/React.createElement("div", {
    className: "complaint-header"
  }, /*#__PURE__*/React.createElement("h2", null, t("ES_COMMON_SEARCH_BY")), /*#__PURE__*/React.createElement("span", {
    onClick: onClose
  }, /*#__PURE__*/React.createElement(CloseSvg, null))), /*#__PURE__*/React.createElement("div", {
    className: "complaint-input-container",
    style: {
      textAlign: "start"
    }
  }, searchFields === null || searchFields === void 0 ? void 0 : (_searchFields$filter = searchFields.filter(e => true)) === null || _searchFields$filter === void 0 ? void 0 : _searchFields$filter.map((input, index) => {
    var _formState$dirtyField, _formState$errors, _formState$errors$inp;
    return /*#__PURE__*/React.createElement("div", {
      key: input.name,
      className: "input-fields"
    }, /*#__PURE__*/React.createElement("span", {
      className: "complaint-input"
    }, /*#__PURE__*/React.createElement(Label, null, t(input.label)), !input.type ? /*#__PURE__*/React.createElement(Controller, {
      render: props => {
        return /*#__PURE__*/React.createElement(TextInput, {
          onChange: props.onChange,
          value: props.value
        });
      },
      name: input.name,
      control: control,
      defaultValue: ""
    }) : /*#__PURE__*/React.createElement(Controller, {
      render: props => {
        const Comp = fieldComponents === null || fieldComponents === void 0 ? void 0 : fieldComponents[input.type];
        return /*#__PURE__*/React.createElement(Comp, {
          onChange: props.onChange,
          value: props.value
        });
      },
      name: input.name,
      control: control,
      defaultValue: ""
    })), formState !== null && formState !== void 0 && (_formState$dirtyField = formState.dirtyFields) !== null && _formState$dirtyField !== void 0 && _formState$dirtyField[input.name] ? /*#__PURE__*/React.createElement("span", {
      style: {
        fontWeight: "700",
        color: "rgba(212, 53, 28)",
        paddingLeft: "8px",
        marginTop: "-20px",
        fontSize: "12px"
      },
      className: "inbox-search-form-error"
    }, formState === null || formState === void 0 ? void 0 : (_formState$errors = formState.errors) === null || _formState$errors === void 0 ? void 0 : (_formState$errors$inp = _formState$errors[input.name]) === null || _formState$errors$inp === void 0 ? void 0 : _formState$errors$inp.message) : null);
  }), type === "desktop" && !mobileView && !isInboxPage && /*#__PURE__*/React.createElement("div", {
    className: "search-action-wrapper"
  }, /*#__PURE__*/React.createElement(SubmitBar, {
    className: "submit-bar-search",
    label: t("ES_COMMON_SEARCH"),
    disabled: !!Object.keys(formState.errors).length || Object.keys(form).every(key => !(form !== null && form !== void 0 && form[key])),
    submit: true
  }), /*#__PURE__*/React.createElement("div", {
    style: {
      width: "100%",
      textAlign: "right",
      width: "240px",
      textAlign: "right",
      marginLeft: "96px",
      marginTop: "8px"
    }
  }, clearAll())), isInboxPage && /*#__PURE__*/React.createElement("div", {
    className: "search-action-wrapper",
    style: {
      width: "100%"
    }
  }, type === "desktop" && !mobileView && /*#__PURE__*/React.createElement(SubmitBar, {
    className: "submit-bar-search",
    label: t("ES_COMMON_SEARCH"),
    submit: true
  }), type === "desktop" && !mobileView && /*#__PURE__*/React.createElement("span", {
    style: {
      paddingTop: "9px"
    },
    className: "clear-search"
  }, clearAll()))))), (type === "mobile" || mobileView) && /*#__PURE__*/React.createElement(ActionBar, {
    className: "clear-search-container"
  }, /*#__PURE__*/React.createElement("button", {
    className: "clear-search",
    style: {
      flex: 1
    }
  }, clearAll(mobileView)), /*#__PURE__*/React.createElement(SubmitBar, {
    disabled: !!Object.keys(formState.errors).length,
    label: t("ES_COMMON_SEARCH"),
    style: {
      flex: 1
    },
    submit: true
  }))));
};

const DesktopInbox = ({
  tableConfig,
  filterComponent,
  columns,
  isLoading,
  setSearchFieldsBackToOriginalState,
  setSetSearchFieldsBackToOriginalState,
  ...props
}) => {
  var _data$table, _data$table2;
  const {
    data
  } = props;
  const {
    t
  } = useTranslation();
  const [FilterComponent, setComp] = useState(() => {
    var _Digit$ComponentRegis;
    return (_Digit$ComponentRegis = Digit.ComponentRegistryService) === null || _Digit$ComponentRegis === void 0 ? void 0 : _Digit$ComponentRegis.getComponent(filterComponent);
  });
  const GetCell = value => /*#__PURE__*/React.createElement("span", {
    className: "cell-text"
  }, value);
  const GetSlaCell = value => {
    if (value === "CS_NA") return t(value);
    if (isNaN(value)) return /*#__PURE__*/React.createElement("span", {
      className: "sla-cell-success"
    }, "0");
    return value < 0 ? /*#__PURE__*/React.createElement("span", {
      className: "sla-cell-error"
    }, value) : /*#__PURE__*/React.createElement("span", {
      className: "sla-cell-success"
    }, value);
  };
  const inboxColumns = () => [{
    Header: t("WF_INBOX_HEADER_APPLICATION_NO"),
    Cell: ({
      row
    }) => {
      return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("span", {
        className: "link"
      }, /*#__PURE__*/React.createElement(Link, {
        to: "/digit-ui/employee/tl/application-details/" + row.original["applicationId"]
      }, row.original["applicationId"])));
    }
  }, {
    Header: t("TL_COMMON_TABLE_COL_APP_DATE"),
    accessor: "applicationDate",
    Cell: ({
      row
    }) => {
      const date = convertEpochToDateDMY(row.original.date);
      return GetCell(date);
    }
  }, {
    Header: t("TL_COMMON_TABLE_COL_APP_TYPE"),
    Cell: ({
      row
    }) => {
      var _row$original$busines;
      return GetCell(t(row.original["businessService"] ? `CS_COMMON_INBOX_${(_row$original$busines = row.original["businessService"]) === null || _row$original$busines === void 0 ? void 0 : _row$original$busines.toUpperCase()}` : "NA"));
    }
  }, {
    Header: t("WF_INBOX_HEADER_LOCALITY"),
    Cell: ({
      row
    }) => {
      return GetCell(t(Digit.Utils.locale.getRevenueLocalityCode(row.original["locality"], row.original["tenantId"])));
    }
  }, {
    Header: t("WF_INBOX_HEADER_STATUS"),
    Cell: ({
      row
    }) => {
      var _row$original$busines2, _row$original;
      return GetCell(t(row.original["businessService"] ? `WF_${(_row$original$busines2 = row.original["businessService"]) === null || _row$original$busines2 === void 0 ? void 0 : _row$original$busines2.toUpperCase()}_${(_row$original = row.original) === null || _row$original === void 0 ? void 0 : _row$original["status"]}` : `NA`));
    }
  }, {
    Header: t("WF_INBOX_HEADER_CURRENT_OWNER"),
    Cell: ({
      row
    }) => {
      var _row$original2;
      return GetCell(t(`${(_row$original2 = row.original) === null || _row$original2 === void 0 ? void 0 : _row$original2.owner}`));
    }
  }, {
    Header: t("WF_INBOX_HEADER_SLA_DAYS_REMAINING"),
    Cell: ({
      row
    }) => {
      return GetSlaCell(row.original["sla"]);
    }
  }];
  let result;
  if (props.isLoading) {
    result = /*#__PURE__*/React.createElement(Loader, null);
  } else if ((data === null || data === void 0 ? void 0 : (_data$table = data.table) === null || _data$table === void 0 ? void 0 : _data$table.length) === 0) {
    result = /*#__PURE__*/React.createElement(Card, {
      style: {
        marginTop: 20
      }
    }, t("CS_MYAPPLICATIONS_NO_APPLICATION").split("\\n").map((text, index) => /*#__PURE__*/React.createElement("p", {
      key: index,
      style: {
        textAlign: "center"
      }
    }, text)));
  } else if ((data === null || data === void 0 ? void 0 : (_data$table2 = data.table) === null || _data$table2 === void 0 ? void 0 : _data$table2.length) > 0) {
    result = /*#__PURE__*/React.createElement(ApplicationTable, {
      t: t,
      data: data === null || data === void 0 ? void 0 : data.table,
      columns: inboxColumns(),
      getCellProps: cellInfo => {
        return {
          style: {
            minWidth: cellInfo.column.Header === t("ES_INBOX_APPLICATION_NO") ? "240px" : "",
            padding: "20px 18px",
            fontSize: "16px"
          }
        };
      },
      onPageSizeChange: props.onPageSizeChange,
      currentPage: props.currentPage,
      onNextPage: props.onNextPage,
      onPrevPage: props.onPrevPage,
      pageSizeLimit: props.pageSizeLimit,
      onSort: props.onSort,
      disableSort: props.disableSort,
      sortParams: props.sortParams,
      totalRecords: props.totalRecords
    });
  }
  return /*#__PURE__*/React.createElement("div", {
    className: "inbox-container"
  }, !props.isSearch && /*#__PURE__*/React.createElement("div", {
    className: "filters-container"
  }, /*#__PURE__*/React.createElement(InboxLinks, {
    parentRoute: props.parentRoute,
    allLinks: [{
      text: "TL_NEW_APPLICATION",
      link: "/digit-ui/employee/tl/new-application",
      businessService: "TL",
      roles: ["TL_CEMP"]
    }, {
      text: "TL_SEARCH_APPLICATIONS",
      link: "/digit-ui/employee/tl/search/application",
      businessService: "TL",
      roles: ["TL_FIELD_INSPECTOR", "TL_APPROVER", "TL_DOC_VERIFIER", "TL_CEMP"]
    }, {
      text: "TL_SEARCH_LICENSE",
      link: "/digit-ui/employee/tl/search/license",
      businessService: "TL",
      roles: ["TL_APPROVER", "TL_DOC_VERIFIER", "TL_FIELD_INSPECTOR"]
    }, {
      text: "TL_RENEWAL_HEADER",
      link: "/digit-ui/employee/tl/search/license",
      businessService: "TL",
      roles: ["TL_CEMP"]
    }, {
      text: "ACTION_TEST_DASHBOARD",
      link: "/digit-ui/employee/dss/dashboard/tradelicence",
      businessService: "TL",
      roles: ["STADMIN"]
    }],
    headerText: t("ACTION_TEST_TRADELICENSE"),
    businessService: props.businessService
  }), /*#__PURE__*/React.createElement("div", null, isLoading ? /*#__PURE__*/React.createElement(Loader, null) : /*#__PURE__*/React.createElement(FilterComponent, {
    defaultSearchParams: props.defaultSearchParams,
    statuses: data === null || data === void 0 ? void 0 : data.statuses,
    onFilterChange: props.onFilterChange,
    searchParams: props.searchParams,
    type: "desktop"
  }))), /*#__PURE__*/React.createElement("div", {
    style: {
      flex: 1
    }
  }, /*#__PURE__*/React.createElement(SearchApplication$1, Object.assign({
    defaultSearchParams: props.defaultSearchParams,
    onSearch: props.onSearch,
    type: "desktop",
    searchFields: props.searchFields,
    isInboxPage: !(props !== null && props !== void 0 && props.isSearch),
    searchParams: props.searchParams
  }, {
    setSearchFieldsBackToOriginalState,
    setSetSearchFieldsBackToOriginalState
  })), /*#__PURE__*/React.createElement("div", {
    className: "result",
    style: {
      marginLeft: !(props !== null && props !== void 0 && props.isSearch) ? "24px" : "",
      flex: 1
    }
  }, result)));
};

const SortBy = props => {
  const {
    t
  } = useTranslation();
  const [selectedOption, setSelectedOption] = useState(() => {
    var _props$sortParams, _props$sortParams$;
    return (_props$sortParams = props.sortParams) !== null && _props$sortParams !== void 0 && (_props$sortParams$ = _props$sortParams[0]) !== null && _props$sortParams$ !== void 0 && _props$sortParams$.desc ? {
      code: "DESC",
      name: t("ES_INBOX_DATE_LATEST_FIRST")
    } : {
      code: "ASC",
      name: t("ES_INBOX_DATE_LATEST_LAST")
    };
  });
  function clearAll() {}
  function onSort(option) {
    props.onSort([{
      id: "createdTime",
      desc: option.code === "DESC" ? true : false
    }]);
    props.onClose();
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    className: "filter"
  }, /*#__PURE__*/React.createElement("div", {
    className: "filter-card"
  }, /*#__PURE__*/React.createElement("div", {
    className: "heading"
  }, /*#__PURE__*/React.createElement("div", {
    className: "filter-label"
  }, t("SORT_BY"), ":"), /*#__PURE__*/React.createElement("div", {
    className: "clearAll",
    onClick: clearAll
  }, t("ES_COMMON_CLEAR_ALL")), props.type === "desktop" && /*#__PURE__*/React.createElement("span", {
    className: "clear-search",
    onClick: clearAll
  }, t("ES_COMMON_CLEAR_ALL")), props.type === "mobile" && /*#__PURE__*/React.createElement("span", {
    onClick: props.onClose
  }, /*#__PURE__*/React.createElement(CloseSvg, null))), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(RadioButtons, {
    onSelect: onSort,
    selectedOption: selectedOption,
    optionsKey: "name",
    options: [{
      code: "DESC",
      name: t("ES_INBOX_DATE_LATEST_FIRST")
    }, {
      code: "ASC",
      name: t("ES_INBOX_DATE_LATEST_LAST")
    }]
  })))));
};

const ApplicationCard = ({
  t,
  data,
  onFilterChange,
  onSearch,
  onSort,
  serviceRequestIdKey,
  isFstpOperator,
  isLoading,
  isSearch,
  searchParams,
  searchFields,
  sortParams,
  linkPrefix,
  removeParam
}) => {
  const [type, setType] = useState(isSearch ? "SEARCH" : "");
  const [popup, setPopup] = useState(isSearch ? true : false);
  const [params, setParams] = useState(searchParams);
  const [_sortparams, setSortParams] = useState(sortParams);
  const selectParams = param => {
    setParams(o => ({
      ...o,
      ...param
    }));
  };
  const onSearchPara = param => {
    onFilterChange({
      ...params,
      ...param
    });
    setType("");
    setPopup(false);
  };
  useEffect(() => {
    if (type) setPopup(true);
  }, [type]);
  const handlePopupClose = () => {
    setPopup(false);
    setType("");
    setParams(searchParams);
    setSortParams(sortParams);
  };
  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }
  let result;
  if (!data || (data === null || data === void 0 ? void 0 : data.length) === 0) {
    result = /*#__PURE__*/React.createElement(Card, {
      style: {
        marginTop: 20
      }
    }, t("CS_MYAPPLICATIONS_NO_APPLICATION").split("\\n").map((text, index) => /*#__PURE__*/React.createElement("p", {
      key: index,
      style: {
        textAlign: "center"
      }
    }, text)));
  } else if (data && (data === null || data === void 0 ? void 0 : data.length) > 0) {
    result = /*#__PURE__*/React.createElement(DetailsCard, {
      data: data,
      serviceRequestIdKey: serviceRequestIdKey,
      linkPrefix: linkPrefix ? linkPrefix : "/digit-ui/employee/tl/application-details/"
    });
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    className: "searchBox"
  }, onSearch && /*#__PURE__*/React.createElement(SearchAction, {
    text: "SEARCH",
    handleActionClick: () => {
      setType("SEARCH");
      setPopup(true);
    }
  }), !isSearch && onFilterChange && /*#__PURE__*/React.createElement(FilterAction, {
    text: "FILTER",
    handleActionClick: () => {
      setType("FILTER");
      setPopup(true);
    }
  }), /*#__PURE__*/React.createElement(FilterAction, {
    text: "SORT",
    handleActionClick: () => {
      setType("SORT");
      setPopup(true);
    }
  })), result, popup && /*#__PURE__*/React.createElement(PopUp, null, type === "FILTER" && /*#__PURE__*/React.createElement("div", {
    className: "popup-module"
  }, /*#__PURE__*/React.createElement(Filter, {
    onFilterChange: selectParams,
    onClose: handlePopupClose,
    onSearch: onSearchPara,
    type: "mobile",
    searchParams: params,
    removeParam: removeParam
  })), type === "SORT" && /*#__PURE__*/React.createElement("div", {
    className: "popup-module"
  }, /*#__PURE__*/React.createElement(SortBy, {
    type: "mobile",
    sortParams: sortParams,
    onClose: handlePopupClose,
    onSort: onSort
  })), type === "SEARCH" && /*#__PURE__*/React.createElement("div", {
    className: "popup-module"
  }, /*#__PURE__*/React.createElement(SearchApplication$1, {
    type: "mobile",
    onClose: handlePopupClose,
    onSearch: onSearch,
    isFstpOperator: isFstpOperator,
    searchParams: searchParams,
    searchFields: searchFields
  }))));
};

const MobileInbox = ({
  data,
  vehicleLog,
  isLoading,
  isSearch,
  onSearch,
  onFilterChange,
  onSort,
  searchParams,
  searchFields,
  linkPrefix,
  parentRoute,
  removeParam,
  sortParams
}) => {
  const {
    t
  } = useTranslation();
  const getData = () => data === null || data === void 0 ? void 0 : data.table.map(e => {
    var _e$businessService, _e$businessService2;
    return {
      [t("WF_INBOX_HEADER_APPLICATION_NO")]: e === null || e === void 0 ? void 0 : e["applicationId"],
      [t("TL_COMMON_TABLE_COL_APP_DATE")]: convertEpochToDateDMY(e === null || e === void 0 ? void 0 : e["date"]),
      [t("TL_COMMON_TABLE_COL_APP_TYPE")]: e !== null && e !== void 0 && e["businessService"] ? t(`CS_COMMON_INBOX_${e === null || e === void 0 ? void 0 : (_e$businessService = e["businessService"]) === null || _e$businessService === void 0 ? void 0 : _e$businessService.toUpperCase()}`) : t("NA"),
      [t("WF_INBOX_HEADER_LOCALITY")]: t(Digit.Utils.locale.getRevenueLocalityCode(e === null || e === void 0 ? void 0 : e["locality"], e === null || e === void 0 ? void 0 : e["tenantId"])),
      [t("WF_INBOX_HEADER_STATUS")]: t(e !== null && e !== void 0 && e["businessService"] ? `WF_${(_e$businessService2 = e["businessService"]) === null || _e$businessService2 === void 0 ? void 0 : _e$businessService2.toUpperCase()}_${e === null || e === void 0 ? void 0 : e["status"]}` : `NA`),
      [t("WF_INBOX_HEADER_CURRENT_OWNER")]: t(e === null || e === void 0 ? void 0 : e.owner),
      [t("WF_INBOX_HEADER_SLA_DAYS_REMAINING")]: t(e === null || e === void 0 ? void 0 : e["sla"])
    };
  });
  return /*#__PURE__*/React.createElement("div", {
    style: {
      padding: 0
    }
  }, /*#__PURE__*/React.createElement("div", {
    className: "inbox-container"
  }, /*#__PURE__*/React.createElement("div", {
    className: "filters-container"
  }, /*#__PURE__*/React.createElement(InboxLinks, {
    classNameForMobileView: "linksWrapperForMobileInbox",
    linkPrefix: parentRoute,
    allLinks: [{
      text: "TL_NEW_APPLICATION",
      link: "/digit-ui/employee/tl/new-application",
      businessService: "TL",
      roles: ["TL_CEMP"]
    }, {
      text: "TL_SEARCH_APPLICATIONS",
      link: "/digit-ui/employee/tl/search/application",
      businessService: "TL",
      roles: ["TL_FIELD_INSPECTOR", "TL_APPROVER", "TL_DOC_VERIFIER", "TL_CEMP"]
    }, {
      text: "TL_SEARCH_LICENSE",
      link: "/digit-ui/employee/tl/search/license",
      businessService: "TL",
      roles: ["TL_APPROVER", "TL_DOC_VERIFIER", "TL_FIELD_INSPECTOR"]
    }, {
      text: "TL_RENEWAL_HEADER",
      link: "/digit-ui/employee/tl/search/license",
      businessService: "TL",
      roles: ["TL_CEMP"]
    }, {
      text: "ACTION_TEST_DASHBOARD",
      link: "/digit-ui/employee/dss/dashboard/tradelicence",
      businessService: "TL",
      roles: ["STADMIN"]
    }],
    headerText: t("ACTION_TEST_TRADELICENSE"),
    isMobile: true
  }), /*#__PURE__*/React.createElement(ApplicationCard, {
    t: t,
    data: getData(),
    onFilterChange: onFilterChange,
    serviceRequestIdKey: t("WF_INBOX_HEADER_APPLICATION_NO"),
    isLoading: isLoading,
    onSearch: onSearch,
    onSort: onSort,
    searchParams: searchParams,
    searchFields: searchFields,
    linkPrefix: linkPrefix,
    removeParam: removeParam,
    sortParams: sortParams
  }))));
};

const Inbox = ({
  parentRoute,
  businessService: _businessService = "TL",
  initialStates: _initialStates = {},
  filterComponent,
  isInbox
}) => {
  var _sortParams$, _sortParams$2, _sortParams$3, _sortParams$4;
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const [enableSarch, setEnableSearch] = useState(() => isInbox ? {} : {
    enabled: false
  });
  const {
    t
  } = useTranslation();
  const [pageOffset, setPageOffset] = useState((_initialStates === null || _initialStates === void 0 ? void 0 : _initialStates.pageOffset) || 0);
  const [pageSize, setPageSize] = useState((_initialStates === null || _initialStates === void 0 ? void 0 : _initialStates.pageSize) || 10);
  const [sortParams, setSortParams] = useState((_initialStates === null || _initialStates === void 0 ? void 0 : _initialStates.sortParams) || [{
    id: "applicationDate",
    desc: false
  }]);
  const [setSearchFieldsBackToOriginalState, setSetSearchFieldsBackToOriginalState] = useState(false);
  const [searchParams, setSearchParams] = useState(() => {
    return (_initialStates === null || _initialStates === void 0 ? void 0 : _initialStates.searchParams) || {};
  });
  let isMobile = window.Digit.Utils.browser.isMobile();
  let paginationParams = isMobile ? {
    limit: 100,
    offset: 0,
    sortBy: sortParams === null || sortParams === void 0 ? void 0 : (_sortParams$ = sortParams[0]) === null || _sortParams$ === void 0 ? void 0 : _sortParams$.id,
    sortOrder: sortParams !== null && sortParams !== void 0 && (_sortParams$2 = sortParams[0]) !== null && _sortParams$2 !== void 0 && _sortParams$2.desc ? "DESC" : "ASC"
  } : {
    limit: pageSize,
    offset: pageOffset,
    sortBy: sortParams === null || sortParams === void 0 ? void 0 : (_sortParams$3 = sortParams[0]) === null || _sortParams$3 === void 0 ? void 0 : _sortParams$3.id,
    sortOrder: sortParams !== null && sortParams !== void 0 && (_sortParams$4 = sortParams[0]) !== null && _sortParams$4 !== void 0 && _sortParams$4.desc ? "DESC" : "ASC"
  };
  const {
    isFetching,
    isLoading: hookLoading,
    searchResponseKey,
    data,
    searchFields,
    ...rest
  } = Digit.Hooks.tl.useInbox({
    tenantId,
    filters: {
      ...searchParams,
      ...paginationParams,
      sortParams
    },
    config: {}
  });
  useEffect(() => {
    setPageOffset(0);
  }, [searchParams]);
  const fetchNextPage = () => {
    setPageOffset(prevState => prevState + pageSize);
  };
  const fetchPrevPage = () => {
    setPageOffset(prevState => prevState - pageSize);
  };
  const handleFilterChange = filterParam => {
    var _new2;
    let keys_to_delete = filterParam === null || filterParam === void 0 ? void 0 : filterParam.delete;
    let _new = {};
    if (isMobile) {
      _new = {
        ...filterParam
      };
    } else {
      window.scrollTo(0, 0);
      _new = {
        ...searchParams,
        ...filterParam
      };
    }
    if (keys_to_delete) keys_to_delete.forEach(key => delete _new[key]);
    (_new2 = _new) === null || _new2 === void 0 ? true : delete _new2.delete;
    filterParam === null || filterParam === void 0 ? true : delete filterParam.delete;
    setSetSearchFieldsBackToOriginalState(true);
    setSearchParams({
      ..._new
    });
    setEnableSearch({
      enabled: true
    });
  };
  const handleSort = useCallback(args => {
    if (args.length === 0) return;
    setSortParams(args);
  }, []);
  const handlePageSizeChange = e => {
    setPageSize(Number(e.target.value));
  };
  const getSearchFields = () => {
    return [{
      label: t("TL_HOME_SEARCH_RESULTS_APP_NO_LABEL"),
      name: "applicationNumber"
    }, {
      label: t("CORE_COMMON_MOBILE_NUMBER"),
      name: "mobileNumber",
      maxlength: 10,
      pattern: Digit.Utils.getPattern("MobileNo"),
      type: "mobileNumber",
      title: t("ES_SEARCH_APPLICATION_MOBILE_INVALID"),
      componentInFront: "+91"
    }];
  };
  if (isMobile) {
    return /*#__PURE__*/React.createElement(MobileInbox, {
      data: data,
      isLoading: hookLoading,
      searchFields: getSearchFields(),
      onFilterChange: handleFilterChange,
      onSearch: handleFilterChange,
      onSort: handleSort,
      parentRoute: parentRoute,
      searchParams: searchParams,
      sortParams: sortParams
    });
  } else {
    return /*#__PURE__*/React.createElement("div", null, isInbox && /*#__PURE__*/React.createElement(Header, null, t("ES_COMMON_INBOX"), data !== null && data !== void 0 && data.totalCount ? /*#__PURE__*/React.createElement("p", {
      className: "inbox-count"
    }, data === null || data === void 0 ? void 0 : data.totalCount) : null), /*#__PURE__*/React.createElement(DesktopInbox, {
      businessService: _businessService,
      data: data,
      tableConfig: rest === null || rest === void 0 ? void 0 : rest.tableConfig,
      isLoading: hookLoading,
      defaultSearchParams: _initialStates.searchParams,
      isSearch: !isInbox,
      onFilterChange: handleFilterChange,
      searchFields: getSearchFields(),
      setSearchFieldsBackToOriginalState: setSearchFieldsBackToOriginalState,
      setSetSearchFieldsBackToOriginalState: setSetSearchFieldsBackToOriginalState,
      onSearch: handleFilterChange,
      onSort: handleSort,
      onNextPage: fetchNextPage,
      onPrevPage: fetchPrevPage,
      currentPage: Math.floor(pageOffset / pageSize),
      pageSizeLimit: pageSize,
      disableSort: false,
      onPageSizeChange: handlePageSizeChange,
      parentRoute: parentRoute,
      searchParams: searchParams,
      sortParams: sortParams,
      totalRecords: Number(data === null || data === void 0 ? void 0 : data.totalCount),
      filterComponent: filterComponent
    }));
  }
};

const configPTApproverApplication = ({
  t,
  action,
  approvers,
  selectedApprover,
  setSelectedApprover,
  selectFile,
  uploadedFile,
  setUploadedFile,
  assigneeLabel,
  businessService
}) => {
  var _action$assigneeRoles;
  return {
    label: {
      heading: `WF_${action === null || action === void 0 ? void 0 : action.action}_APPLICATION`,
      submit: `WF_${businessService}_${action === null || action === void 0 ? void 0 : action.action}`,
      cancel: "ES_PT_COMMON_CANCEL"
    },
    form: [{
      body: [{
        label: action.isTerminateState || (action === null || action === void 0 ? void 0 : action.action) === "SENDBACKTOCITIZEN" ? null : t(assigneeLabel || `WF_ROLE_${(_action$assigneeRoles = action.assigneeRoles) === null || _action$assigneeRoles === void 0 ? void 0 : _action$assigneeRoles[0]}`),
        type: "dropdown",
        populators: action.isTerminateState || (action === null || action === void 0 ? void 0 : action.action) === "SENDBACKTOCITIZEN" ? null : /*#__PURE__*/React.createElement(Dropdown, {
          option: approvers,
          autoComplete: "off",
          optionKey: "name",
          id: "fieldInspector",
          select: setSelectedApprover,
          selected: selectedApprover
        })
      }, {
        label: t("ES_PT_ACTION_COMMENTS"),
        type: "textarea",
        populators: {
          name: "comments"
        }
      }, {
        label: `${t("ES_PT_ATTACH_FILE")}${action.docUploadRequired ? " *" : ""}`,
        populators: /*#__PURE__*/React.createElement(UploadFile, {
          id: "workflow-doc",
          onUpload: selectFile,
          onDelete: () => {
            setUploadedFile(null);
          },
          showHint: true,
          hintText: t("PT_ATTACH_RESTRICTIONS_SIZE"),
          message: uploadedFile ? `1 ${t(`ES_PT_ACTION_FILEUPLOADED`)}` : t(`ES_PT_ACTION_NO_FILEUPLOADED`)
        })
      }]
    }]
  };
};

const configPTAssessProperty = ({
  t,
  action,
  financialYears,
  selectedFinancialYear,
  setSelectedFinancialYear
}) => {
  return {
    label: {
      heading: `WF_${action.action}_APPLICATION`,
      submit: `WF_PT.CREATE_${action.action}`,
      cancel: "ES_PT_COMMON_CANCEL"
    },
    form: [{
      body: [{
        label: t("ES_PT_FINANCIAL_YEARS"),
        isMandatory: true,
        type: "radio",
        populators: /*#__PURE__*/React.createElement(RadioButtons, {
          options: financialYears,
          optionsKey: "name",
          onSelect: setSelectedFinancialYear,
          selectedOption: selectedFinancialYear
        })
      }]
    }]
  };
};

const configTLApproverApplication = ({
  t,
  action,
  approvers,
  selectedApprover,
  setSelectedApprover,
  selectFile,
  uploadedFile,
  setUploadedFile,
  assigneeLabel,
  businessService
}) => {
  let checkCondtions = true;
  if ((action === null || action === void 0 ? void 0 : action.action) == "SENDBACKTOCITIZEN" || (action === null || action === void 0 ? void 0 : action.action) == "APPROVE") checkCondtions = false;
  if (action.isTerminateState) checkCondtions = false;
  return {
    label: {
      heading: `WF_${action === null || action === void 0 ? void 0 : action.action}_APPLICATION`,
      submit: `WF_${businessService === null || businessService === void 0 ? void 0 : businessService.toUpperCase()}_${action === null || action === void 0 ? void 0 : action.action}`,
      cancel: "WF_EMPLOYEE_NEWTL_CANCEL"
    },
    form: [{
      body: [{
        label: !checkCondtions ? null : t("WF_ASSIGNEE_NAME_LABEL"),
        placeholder: !checkCondtions ? null : t("WF_ASSIGNEE_NAME_PLACEHOLDER"),
        type: "dropdown",
        populators: !checkCondtions ? null : /*#__PURE__*/React.createElement(Dropdown, {
          option: approvers,
          autoComplete: "off",
          optionKey: "name",
          id: "fieldInspector",
          select: setSelectedApprover,
          selected: selectedApprover
        })
      }, {
        label: t("WF_COMMON_COMMENTS"),
        type: "textarea",
        populators: {
          name: "comments"
        }
      }, {
        label: t("TL_APPROVAL_CHECKLIST_BUTTON_UP_FILE"),
        populators: /*#__PURE__*/React.createElement(UploadFile, {
          id: "workflow-doc",
          onUpload: selectFile,
          onDelete: () => {
            setUploadedFile(null);
          },
          message: uploadedFile ? `1 ${t(`ES_PT_ACTION_FILEUPLOADED`)}` : t(`CS_ACTION_NO_FILEUPLOADED`)
        })
      }]
    }]
  };
};

const configBPAREGApproverApplication = ({
  t,
  action,
  approvers,
  selectedApprover,
  setSelectedApprover,
  selectFile,
  uploadedFile,
  setUploadedFile,
  assigneeLabel,
  businessService,
  error
}) => {
  let checkCondtions = true;
  if ((action === null || action === void 0 ? void 0 : action.action) == "SENDBACKTOCITIZEN") checkCondtions = false;
  if (action.isTerminateState) checkCondtions = false;
  return {
    label: {
      heading: `WF_${action === null || action === void 0 ? void 0 : action.action}_APPLICATION`,
      submit: `WF_${businessService === null || businessService === void 0 ? void 0 : businessService.toUpperCase()}_${action === null || action === void 0 ? void 0 : action.action}`,
      cancel: "WF_EMPLOYEE_BPAREG_CANCEL"
    },
    form: [{
      body: [{
        label: !checkCondtions ? null : t("WF_ASSIGNEE_NAME_LABEL"),
        placeholder: !checkCondtions ? null : t("WF_ASSIGNEE_NAME_PLACEHOLDER"),
        type: "dropdown",
        populators: !checkCondtions ? null : /*#__PURE__*/React.createElement(Dropdown, {
          option: approvers,
          autoComplete: "off",
          optionKey: "name",
          id: "fieldInspector",
          select: setSelectedApprover,
          selected: selectedApprover
        })
      }, {
        label: t("WF_COMMON_COMMENTS"),
        type: "textarea",
        populators: {
          name: "comments"
        }
      }, {
        label: t("BPA_APPROVAL_CHECKLIST_BUTTON_UP_FILE"),
        populators: /*#__PURE__*/React.createElement(UploadFile, {
          id: "workflow-doc",
          onUpload: selectFile,
          onDelete: () => {
            setUploadedFile(null);
          },
          message: uploadedFile ? `1 ${t(`ES_PT_ACTION_FILEUPLOADED`)}` : t(`CS_ACTION_NO_FILEUPLOADED`),
          accept: "image/*, .pdf, .png, .jpeg, .jpg",
          iserror: error
        })
      }]
    }]
  };
};

const configBPAApproverApplication = ({
  t,
  action,
  approvers,
  selectedApprover,
  setSelectedApprover,
  selectFile,
  uploadedFile,
  setUploadedFile,
  assigneeLabel,
  businessService,
  error
}) => {
  var _action$assigneeRoles;
  let isRejectOrRevocate = false;
  if ((action === null || action === void 0 ? void 0 : action.action) == "REVOCATE" || (action === null || action === void 0 ? void 0 : action.action) == "REJECT" || action.action == "SKIP_PAYMENT" || (action === null || action === void 0 ? void 0 : action.action) == "SEND_BACK_TO_CITIZEN" || (action === null || action === void 0 ? void 0 : action.action) == "APPROVE") {
    isRejectOrRevocate = true;
  }
  let isCommentRequired = false;
  if ((action === null || action === void 0 ? void 0 : action.action) == "REVOCATE" || (action === null || action === void 0 ? void 0 : action.action) == "REJECT") {
    isCommentRequired = true;
  }
  return {
    label: {
      heading: `WF_${action === null || action === void 0 ? void 0 : action.action}_APPLICATION`,
      submit: `WF_${businessService}_${action === null || action === void 0 ? void 0 : action.action}`,
      cancel: "BPA_CITIZEN_CANCEL_BUTTON"
    },
    form: [{
      body: [{
        label: action.isTerminateState || isRejectOrRevocate ? null : t(assigneeLabel || `WF_ROLE_${(_action$assigneeRoles = action.assigneeRoles) === null || _action$assigneeRoles === void 0 ? void 0 : _action$assigneeRoles[0]}`),
        type: "dropdown",
        populators: action.isTerminateState || isRejectOrRevocate ? null : /*#__PURE__*/React.createElement(Dropdown, {
          option: approvers,
          autoComplete: "off",
          optionKey: "name",
          id: "fieldInspector",
          select: setSelectedApprover,
          selected: selectedApprover
        })
      }, {
        label: t("WF_COMMON_COMMENTS"),
        type: "textarea",
        isMandatory: isCommentRequired,
        populators: {
          name: "comments"
        }
      }, {
        label: `${t("WF_APPROVAL_UPLOAD_HEAD")}`,
        populators: /*#__PURE__*/React.createElement(UploadFile, {
          id: "workflow-doc",
          onUpload: selectFile,
          onDelete: () => {
            setUploadedFile(null);
          },
          message: uploadedFile ? `1 ${t(`ES_PT_ACTION_FILEUPLOADED`)}` : t(`CS_ACTION_NO_FILEUPLOADED`),
          accept: "image/*, .pdf, .png, .jpeg, .jpg",
          iserror: error
        })
      }]
    }]
  };
};

const configNOCApproverApplication = ({
  t,
  action,
  approvers,
  selectedApprover,
  setSelectedApprover,
  selectFile,
  uploadedFile,
  setUploadedFile,
  assigneeLabel,
  businessService,
  error
}) => {
  var _action$assigneeRoles;
  let isCommentRequired = false;
  if ((action === null || action === void 0 ? void 0 : action.action) == "REVOCATE" || (action === null || action === void 0 ? void 0 : action.action) == "REJECT") {
    isCommentRequired = true;
  }
  let isRejectOrRevocate = false;
  if ((action === null || action === void 0 ? void 0 : action.action) == "APPROVE" || (action === null || action === void 0 ? void 0 : action.action) == "REJECT" || action.action == "AUTO_APPROVE" || action.action == "AUTO_REJECT") {
    isRejectOrRevocate = true;
  }
  return {
    label: {
      heading: `WF_${action === null || action === void 0 ? void 0 : action.action}_APPLICATION`,
      submit: `WF_${businessService}_${action === null || action === void 0 ? void 0 : action.action}`,
      cancel: "CORE_LOGOUTPOPUP_CANCEL"
    },
    form: [{
      body: [{
        label: action.isTerminateState || isRejectOrRevocate ? null : t(assigneeLabel || `WF_ROLE_${(_action$assigneeRoles = action.assigneeRoles) === null || _action$assigneeRoles === void 0 ? void 0 : _action$assigneeRoles[0]}`),
        type: "dropdown",
        populators: action.isTerminateState || isRejectOrRevocate ? null : /*#__PURE__*/React.createElement(Dropdown, {
          option: approvers,
          autoComplete: "off",
          optionKey: "name",
          id: "fieldInspector",
          select: setSelectedApprover,
          selected: selectedApprover
        })
      }, {
        label: t("WF_COMMON_COMMENTS"),
        type: "textarea",
        isMandatory: isCommentRequired,
        populators: {
          name: "comments"
        }
      }, {
        label: `${t("WF_APPROVAL_UPLOAD_HEAD")}`,
        populators: /*#__PURE__*/React.createElement(UploadFile, {
          id: "workflow-doc",
          onUpload: selectFile,
          onDelete: () => {
            setUploadedFile(null);
          },
          showHint: true,
          message: uploadedFile ? `1 ${t(`ES_PT_ACTION_FILEUPLOADED`)}` : t(`CS_ACTION_NO_FILEUPLOADED`),
          accept: "image/*, .pdf, .png, .jpeg, .jpg",
          iserror: error
        })
      }]
    }]
  };
};

const configWSApproverApplication = ({
  t,
  action,
  approvers,
  selectedApprover,
  setSelectedApprover,
  selectFile,
  uploadedFile,
  setUploadedFile,
  assigneeLabel,
  businessService,
  error
}) => {
  var _action$action;
  let checkCondtions = true;
  if (action !== null && action !== void 0 && (_action$action = action.action) !== null && _action$action !== void 0 && _action$action.includes("SEND_BACK") || (action === null || action === void 0 ? void 0 : action.action) == "APPROVE_FOR_CONNECTION") checkCondtions = false;
  if (action.isTerminateState) checkCondtions = false;
  return {
    label: {
      heading: `WF_${action === null || action === void 0 ? void 0 : action.action}_APPLICATION`,
      submit: `WF_${businessService === null || businessService === void 0 ? void 0 : businessService.toUpperCase()}_${action === null || action === void 0 ? void 0 : action.action}`,
      cancel: "CS_COMMON_CANCEL"
    },
    form: [{
      body: [{
        label: !checkCondtions ? null : t("WF_ASSIGNEE_NAME_LABEL"),
        placeholder: !checkCondtions ? null : t("WF_ASSIGNEE_NAME_PLACEHOLDER"),
        type: "dropdown",
        populators: !checkCondtions ? null : /*#__PURE__*/React.createElement(Dropdown, {
          option: approvers,
          autoComplete: "off",
          optionKey: "name",
          id: "fieldInspector",
          select: setSelectedApprover,
          selected: selectedApprover
        })
      }, {
        label: t("WF_COMMON_COMMENTS"),
        type: "textarea",
        populators: {
          name: "comments"
        }
      }, {
        label: t("WS_APPROVAL_CHECKLIST_BUTTON_UP_FILE"),
        populators: /*#__PURE__*/React.createElement(UploadFile, {
          id: "workflow-doc",
          accept: ".jpg,.pdf,.png,.jpeg",
          onUpload: selectFile,
          onDelete: () => {
            setUploadedFile(null);
          },
          message: uploadedFile ? `1 ${t(`ES_PT_ACTION_FILEUPLOADED`)}` : t(`CS_ACTION_NO_FILEUPLOADED`),
          error: error,
          iserror: error,
          showHintBelow: true,
          hintText: "WS_HINT_TEXT_LABEL"
        })
      }]
    }]
  };
};

const configWSDisConnectApplication = ({
  t,
  action,
  approvers,
  selectedApprover,
  setSelectedApprover,
  selectFile,
  uploadedFile,
  setUploadedFile,
  assigneeLabel,
  businessService,
  error
}) => {
  var _action$action;
  let checkCondtions = true,
    isDatePickerDisplay = false;
  if (action !== null && action !== void 0 && (_action$action = action.action) !== null && _action$action !== void 0 && _action$action.includes("SEND_BACK") || (action === null || action === void 0 ? void 0 : action.action) == "APPROVE_FOR_DISCONNECTION" || (action === null || action === void 0 ? void 0 : action.action) == "RESUBMIT_APPLICATION") checkCondtions = false;
  if (action.isTerminateState) checkCondtions = false;
  if ((action === null || action === void 0 ? void 0 : action.action) == "EXECUTE_DISCONNECTION" || (action === null || action === void 0 ? void 0 : action.action) == "DISCONNECTION_EXECUTED") isDatePickerDisplay = true;
  return {
    label: {
      heading: `WF_${action === null || action === void 0 ? void 0 : action.action}_APPLICATION`,
      submit: `WF_${businessService === null || businessService === void 0 ? void 0 : businessService.toUpperCase()}_${action === null || action === void 0 ? void 0 : action.action}`,
      cancel: "CS_COMMON_CANCEL"
    },
    form: [{
      body: [{
        label: !checkCondtions ? null : t("WF_ASSIGNEE_NAME_LABEL"),
        placeholder: !checkCondtions ? null : t("WF_ASSIGNEE_NAME_PLACEHOLDER"),
        type: "dropdown",
        populators: !checkCondtions ? null : /*#__PURE__*/React.createElement(Dropdown, {
          option: approvers,
          autoComplete: "off",
          optionKey: "name",
          id: "fieldInspector",
          select: setSelectedApprover,
          selected: selectedApprover
        })
      }, isDatePickerDisplay && {
        label: t("ES_FSM_ACTION_SERVICE_DATE"),
        isMandatory: isDatePickerDisplay ? true : false,
        type: "custom",
        populators: isDatePickerDisplay ? {
          name: "date",
          validation: {
            required: true
          },
          defaultValue: Digit.Utils.date.getDate(),
          component: (props, customProps) => /*#__PURE__*/React.createElement(DatePicker, Object.assign({
            onChange: props.onChange,
            date: props.value
          }, customProps))
        } : null
      }, {
        label: t("WF_COMMON_COMMENTS"),
        type: "textarea",
        populators: {
          name: "comments"
        }
      }, {
        label: t("WS_APPROVAL_CHECKLIST_BUTTON_UP_FILE"),
        populators: /*#__PURE__*/React.createElement(UploadFile, {
          id: "workflow-doc",
          accept: ".jpg,.pdf,.png,.jpeg",
          onUpload: selectFile,
          onDelete: () => {
            setUploadedFile(null);
          },
          message: uploadedFile ? `1 ${t(`ES_PT_ACTION_FILEUPLOADED`)}` : t(`CS_ACTION_NO_FILEUPLOADED`),
          error: error,
          iserror: error,
          showHintBelow: true,
          hintText: "WS_HINT_TEXT_LABEL"
        })
      }]
    }]
  };
};

const Heading = props => {
  return /*#__PURE__*/React.createElement("h1", {
    className: "heading-m"
  }, props.label);
};
const Close = () => /*#__PURE__*/React.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24",
  fill: "#FFFFFF"
}, /*#__PURE__*/React.createElement("path", {
  d: "M0 0h24v24H0V0z",
  fill: "none"
}), /*#__PURE__*/React.createElement("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"
}));
const CloseBtn = props => {
  return /*#__PURE__*/React.createElement("div", {
    className: "icon-bg-secondary",
    onClick: props.onClick
  }, /*#__PURE__*/React.createElement(Close, null));
};
const ActionModal = ({
  t,
  action,
  tenantId,
  state,
  id,
  closeModal,
  submitAction,
  actionData,
  applicationData,
  businessService,
  moduleCode
}) => {
  var _action$assigneeRoles, _action$assigneeRoles2;
  const {
    data: approverData,
    isLoading: PTALoading
  } = Digit.Hooks.useEmployeeSearch(tenantId, {
    roles: action === null || action === void 0 ? void 0 : (_action$assigneeRoles = action.assigneeRoles) === null || _action$assigneeRoles === void 0 ? void 0 : (_action$assigneeRoles2 = _action$assigneeRoles.map) === null || _action$assigneeRoles2 === void 0 ? void 0 : _action$assigneeRoles2.call(_action$assigneeRoles, e => ({
      code: e
    })),
    isActive: true
  }, {
    enabled: !(action !== null && action !== void 0 && action.isTerminateState)
  });
  const {
    isLoading: financialYearsLoading,
    data: financialYearsData
  } = Digit.Hooks.pt.useMDMS(tenantId, businessService, "FINANCIAL_YEARLS", {}, {
    details: {
      tenantId: Digit.ULBService.getStateId(),
      moduleDetails: [{
        moduleName: "egf-master",
        masterDetails: [{
          name: "FinancialYear",
          filter: "[?(@.module == 'PT')]"
        }]
      }]
    }
  });
  const [config, setConfig] = useState({});
  const [defaultValues, setDefaultValues] = useState({});
  const [approvers, setApprovers] = useState([]);
  const [selectedApprover, setSelectedApprover] = useState(null);
  const [file, setFile] = useState(null);
  const [uploadedFile, setUploadedFile] = useState(null);
  const [error, setError] = useState(null);
  const [financialYears, setFinancialYears] = useState([]);
  const [selectedFinancialYear, setSelectedFinancialYear] = useState(null);
  const [disableActionSubmit, setDisableActionSubmit] = useState(false);
  useEffect(() => {
    if (financialYearsData && financialYearsData["egf-master"]) {
      var _financialYearsData$e;
      setFinancialYears((_financialYearsData$e = financialYearsData["egf-master"]) === null || _financialYearsData$e === void 0 ? void 0 : _financialYearsData$e["FinancialYear"]);
    }
  }, [financialYearsData]);
  useEffect(() => {
    var _approverData$Employe;
    setApprovers(approverData === null || approverData === void 0 ? void 0 : (_approverData$Employe = approverData.Employees) === null || _approverData$Employe === void 0 ? void 0 : _approverData$Employe.map(employee => {
      var _employee$user;
      return {
        uuid: employee === null || employee === void 0 ? void 0 : employee.uuid,
        name: employee === null || employee === void 0 ? void 0 : (_employee$user = employee.user) === null || _employee$user === void 0 ? void 0 : _employee$user.name
      };
    }));
  }, [approverData]);
  function selectFile(e) {
    setFile(e.target.files[0]);
  }
  useEffect(() => {
    (async () => {
      setError(null);
      if (file) {
        if (file.size >= 5242880) {
          setError(t("CS_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
        } else {
          try {
            var _response$data, _response$data$files;
            const response = await Digit.UploadServices.Filestorage("PT", file, Digit.ULBService.getStateId());
            if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
              var _response$data2, _response$data2$files;
              setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
            } else {
              setError(t("CS_FILE_UPLOAD_ERROR"));
            }
          } catch (err) {
            setError(t("CS_FILE_UPLOAD_ERROR"));
          }
        }
      }
    })();
  }, [file]);
  function submit(data) {
    if (!(action !== null && action !== void 0 && action.showFinancialYearsModal)) {
      let workflow = {
        action: action === null || action === void 0 ? void 0 : action.action,
        comment: data === null || data === void 0 ? void 0 : data.comments,
        businessService,
        moduleName: moduleCode
      };
      workflow["assignes"] = action !== null && action !== void 0 && action.isTerminateState || !selectedApprover ? [] : [selectedApprover];
      if (uploadedFile) workflow["documents"] = [{
        documentType: (action === null || action === void 0 ? void 0 : action.action) + " DOC",
        fileName: file === null || file === void 0 ? void 0 : file.name,
        fileStoreId: uploadedFile
      }];
      submitAction({
        Property: {
          ...applicationData,
          workflow
        }
      });
    } else {
      submitAction({
        customFunctionToExecute: action === null || action === void 0 ? void 0 : action.customFunctionToExecute,
        Assessment: {
          financialYear: selectedFinancialYear === null || selectedFinancialYear === void 0 ? void 0 : selectedFinancialYear.name,
          propertyId: applicationData === null || applicationData === void 0 ? void 0 : applicationData.propertyId,
          tenantId,
          source: applicationData === null || applicationData === void 0 ? void 0 : applicationData.source,
          channel: applicationData === null || applicationData === void 0 ? void 0 : applicationData.channel,
          assessmentDate: Date.now()
        }
      });
    }
  }
  useEffect(() => {
    if (action) {
      if (action !== null && action !== void 0 && action.showFinancialYearsModal) {
        setConfig(configPTAssessProperty({
          t,
          action,
          financialYears,
          selectedFinancialYear,
          setSelectedFinancialYear
        }));
      } else {
        setConfig(configPTApproverApplication({
          t,
          action,
          approvers,
          selectedApprover,
          setSelectedApprover,
          selectFile,
          uploadedFile,
          setUploadedFile,
          businessService
        }));
      }
    }
  }, [action, approvers, financialYears, selectedFinancialYear, uploadedFile]);
  return action && config.form ? /*#__PURE__*/React.createElement(Modal, {
    headerBarMain: /*#__PURE__*/React.createElement(Heading, {
      label: t(config.label.heading)
    }),
    headerBarEnd: /*#__PURE__*/React.createElement(CloseBtn, {
      onClick: closeModal
    }),
    actionCancelLabel: t(config.label.cancel),
    actionCancelOnSubmit: closeModal,
    actionSaveLabel: t(config.label.submit),
    actionSaveOnSubmit: () => {},
    isDisabled: !action.showFinancialYearsModal ? PTALoading || (action === null || action === void 0 ? void 0 : action.docUploadRequired) && !uploadedFile : !selectedFinancialYear,
    formId: "modal-action"
  }, financialYearsLoading ? /*#__PURE__*/React.createElement(Loader, null) : /*#__PURE__*/React.createElement(FormComposer, {
    config: config.form,
    noBoxShadow: true,
    inline: true,
    childrenAtTheBottom: true,
    onSubmit: submit,
    defaultValues: defaultValues,
    formId: "modal-action"
  })) : /*#__PURE__*/React.createElement(Loader, null);
};

const Heading$1 = props => {
  return /*#__PURE__*/React.createElement("h1", {
    className: "heading-m"
  }, props.label);
};
const Close$1 = () => /*#__PURE__*/React.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24",
  fill: "#FFFFFF"
}, /*#__PURE__*/React.createElement("path", {
  d: "M0 0h24v24H0V0z",
  fill: "none"
}), /*#__PURE__*/React.createElement("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"
}));
const CloseBtn$1 = props => {
  return /*#__PURE__*/React.createElement("div", {
    className: "icon-bg-secondary",
    onClick: props.onClick
  }, /*#__PURE__*/React.createElement(Close$1, null));
};
const ActionModal$1 = ({
  t,
  action,
  tenantId,
  state,
  id,
  closeModal,
  submitAction,
  actionData,
  applicationData,
  businessService,
  moduleCode
}) => {
  var _action$assigneeRoles, _action$assigneeRoles2;
  const {
    data: approverData,
    isLoading: PTALoading
  } = Digit.Hooks.useEmployeeSearch(tenantId, {
    roles: action === null || action === void 0 ? void 0 : (_action$assigneeRoles = action.assigneeRoles) === null || _action$assigneeRoles === void 0 ? void 0 : (_action$assigneeRoles2 = _action$assigneeRoles.map) === null || _action$assigneeRoles2 === void 0 ? void 0 : _action$assigneeRoles2.call(_action$assigneeRoles, e => ({
      code: e
    })),
    isActive: true
  }, {
    enabled: !(action !== null && action !== void 0 && action.isTerminateState)
  });
  const {
    isLoading: financialYearsLoading,
    data: financialYearsData
  } = Digit.Hooks.pt.useMDMS(tenantId, businessService, "FINANCIAL_YEARLS", {}, {
    details: {
      tenantId: Digit.ULBService.getStateId(),
      moduleDetails: [{
        moduleName: "egf-master",
        masterDetails: [{
          name: "FinancialYear",
          filter: "[?(@.module == 'TL')]"
        }]
      }]
    }
  });
  const [config, setConfig] = useState({});
  const [defaultValues, setDefaultValues] = useState({});
  const [approvers, setApprovers] = useState([]);
  const [selectedApprover, setSelectedApprover] = useState({});
  const [file, setFile] = useState(null);
  const [uploadedFile, setUploadedFile] = useState(null);
  const [error, setError] = useState(null);
  const [financialYears, setFinancialYears] = useState([]);
  const [selectedFinancialYear, setSelectedFinancialYear] = useState(null);
  useEffect(() => {
    if (financialYearsData && financialYearsData["egf-master"]) {
      var _financialYearsData$e;
      setFinancialYears((_financialYearsData$e = financialYearsData["egf-master"]) === null || _financialYearsData$e === void 0 ? void 0 : _financialYearsData$e["FinancialYear"]);
    }
  }, [financialYearsData]);
  useEffect(() => {
    var _approverData$Employe;
    setApprovers(approverData === null || approverData === void 0 ? void 0 : (_approverData$Employe = approverData.Employees) === null || _approverData$Employe === void 0 ? void 0 : _approverData$Employe.map(employee => {
      var _employee$user;
      return {
        uuid: employee === null || employee === void 0 ? void 0 : employee.uuid,
        name: employee === null || employee === void 0 ? void 0 : (_employee$user = employee.user) === null || _employee$user === void 0 ? void 0 : _employee$user.name
      };
    }));
  }, [approverData]);
  function selectFile(e) {
    setFile(e.target.files[0]);
  }
  useEffect(() => {
    (async () => {
      setError(null);
      if (file) {
        if (file.size >= 5242880) {
          setError(t("CS_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
        } else {
          try {
            var _response$data, _response$data$files;
            const response = await Digit.UploadServices.Filestorage("PT", file, Digit.ULBService.getStateId());
            if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
              var _response$data2, _response$data2$files;
              setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
            } else {
              setError(t("CS_FILE_UPLOAD_ERROR"));
            }
          } catch (err) {
            setError(t("CS_FILE_UPLOAD_ERROR"));
          }
        }
      }
    })();
  }, [file]);
  function submit(data) {
    applicationData = {
      ...applicationData,
      action: action === null || action === void 0 ? void 0 : action.action,
      comment: data === null || data === void 0 ? void 0 : data.comments,
      assignee: !(selectedApprover !== null && selectedApprover !== void 0 && selectedApprover.uuid) ? null : [selectedApprover === null || selectedApprover === void 0 ? void 0 : selectedApprover.uuid],
      wfDocuments: uploadedFile ? [{
        documentType: (action === null || action === void 0 ? void 0 : action.action) + " DOC",
        fileName: file === null || file === void 0 ? void 0 : file.name,
        fileStoreId: uploadedFile
      }] : null
    };
    submitAction({
      Licenses: [applicationData]
    });
  }
  useEffect(() => {
    if (action) {
      setConfig(configTLApproverApplication({
        t,
        action,
        approvers,
        selectedApprover,
        setSelectedApprover,
        selectFile,
        uploadedFile,
        setUploadedFile,
        businessService
      }));
    }
  }, [action, approvers, financialYears, selectedFinancialYear, uploadedFile]);
  return action && config.form ? /*#__PURE__*/React.createElement(Modal, {
    headerBarMain: /*#__PURE__*/React.createElement(Heading$1, {
      label: t(config.label.heading)
    }),
    headerBarEnd: /*#__PURE__*/React.createElement(CloseBtn$1, {
      onClick: closeModal
    }),
    actionCancelLabel: t(config.label.cancel),
    actionCancelOnSubmit: closeModal,
    actionSaveLabel: t(config.label.submit),
    actionSaveOnSubmit: () => {},
    formId: "modal-action"
  }, financialYearsLoading ? /*#__PURE__*/React.createElement(Loader, null) : /*#__PURE__*/React.createElement(FormComposer, {
    config: config.form,
    noBoxShadow: true,
    inline: true,
    childrenAtTheBottom: true,
    onSubmit: submit,
    defaultValues: defaultValues,
    formId: "modal-action"
  })) : /*#__PURE__*/React.createElement(Loader, null);
};

const Heading$2 = props => {
  return /*#__PURE__*/React.createElement("h1", {
    style: {
      marginLeft: "22px"
    },
    className: "heading-m BPAheading-m"
  }, props.label);
};
const Close$2 = () => /*#__PURE__*/React.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24",
  fill: "#FFFFFF"
}, /*#__PURE__*/React.createElement("path", {
  d: "M0 0h24v24H0V0z",
  fill: "none"
}), /*#__PURE__*/React.createElement("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"
}));
const CloseBtn$2 = props => {
  return /*#__PURE__*/React.createElement("div", {
    className: "icon-bg-secondary",
    onClick: props.onClick
  }, /*#__PURE__*/React.createElement(Close$2, null));
};
const ActionModal$2 = ({
  t,
  action,
  tenantId,
  state,
  id,
  closeModal,
  submitAction,
  actionData,
  applicationData,
  businessService,
  moduleCode
}) => {
  var _action$assigneeRoles, _action$assigneeRoles2;
  const {
    data: approverData,
    isLoading: PTALoading
  } = Digit.Hooks.useEmployeeSearch(tenantId, {
    roles: action === null || action === void 0 ? void 0 : (_action$assigneeRoles = action.assigneeRoles) === null || _action$assigneeRoles === void 0 ? void 0 : (_action$assigneeRoles2 = _action$assigneeRoles.map) === null || _action$assigneeRoles2 === void 0 ? void 0 : _action$assigneeRoles2.call(_action$assigneeRoles, e => ({
      code: e
    })),
    isActive: true
  }, {
    enabled: !(action !== null && action !== void 0 && action.isTerminateState)
  });
  const [config, setConfig] = useState({});
  const [defaultValues, setDefaultValues] = useState({});
  const [approvers, setApprovers] = useState([]);
  const [selectedApprover, setSelectedApprover] = useState({});
  const [file, setFile] = useState(null);
  const [uploadedFile, setUploadedFile] = useState(null);
  const [error, setError] = useState(null);
  const mobileView = Digit.Utils.browser.isMobile() ? true : false;
  useEffect(() => {
    var _approverData$Employe;
    setApprovers(approverData === null || approverData === void 0 ? void 0 : (_approverData$Employe = approverData.Employees) === null || _approverData$Employe === void 0 ? void 0 : _approverData$Employe.map(employee => {
      var _employee$user;
      return {
        uuid: employee === null || employee === void 0 ? void 0 : employee.uuid,
        name: employee === null || employee === void 0 ? void 0 : (_employee$user = employee.user) === null || _employee$user === void 0 ? void 0 : _employee$user.name
      };
    }));
  }, [approverData]);
  function selectFile(e) {
    setFile(e.target.files[0]);
  }
  useEffect(() => {
    (async () => {
      setError(null);
      if (file) {
        const allowedFileTypesRegex = /(.*?)(jpg|jpeg|png|image|pdf)$/i;
        if (file.size >= 5242880) {
          setError(t("CS_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
        } else if (file !== null && file !== void 0 && file.type && !allowedFileTypesRegex.test(file === null || file === void 0 ? void 0 : file.type)) {
          setError(t(`NOT_SUPPORTED_FILE_TYPE`));
        } else {
          try {
            var _response$data, _response$data$files;
            const response = await Digit.UploadServices.Filestorage("OBPS", file, Digit.ULBService.getStateId() || (tenantId === null || tenantId === void 0 ? void 0 : tenantId.split(".")[0]));
            if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
              var _response$data2, _response$data2$files;
              setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
            } else {
              setError(t("CS_FILE_UPLOAD_ERROR"));
            }
          } catch (err) {
            setError(t("CS_FILE_UPLOAD_ERROR"));
          }
        }
      }
    })();
  }, [file]);
  function submit(data) {
    applicationData = {
      ...applicationData,
      action: action === null || action === void 0 ? void 0 : action.action,
      comment: data === null || data === void 0 ? void 0 : data.comments,
      assignee: !(selectedApprover !== null && selectedApprover !== void 0 && selectedApprover.uuid) ? null : [selectedApprover === null || selectedApprover === void 0 ? void 0 : selectedApprover.uuid],
      wfDocuments: uploadedFile ? [{
        documentType: (action === null || action === void 0 ? void 0 : action.action) + " DOC",
        fileName: file === null || file === void 0 ? void 0 : file.name,
        fileStoreId: uploadedFile
      }] : null
    };
    submitAction({
      Licenses: [applicationData]
    }, false, {
      isStakeholder: true,
      bpa: false
    });
  }
  useEffect(() => {
    if (action) {
      setConfig(configBPAREGApproverApplication({
        t,
        action,
        approvers,
        selectedApprover,
        setSelectedApprover,
        selectFile,
        uploadedFile,
        setUploadedFile,
        businessService,
        error
      }));
    }
  }, [action, approvers, uploadedFile, error]);
  return action && config.form ? /*#__PURE__*/React.createElement(Modal, {
    headerBarMain: /*#__PURE__*/React.createElement(Heading$2, {
      label: t(config.label.heading)
    }),
    headerBarEnd: /*#__PURE__*/React.createElement(CloseBtn$2, {
      onClick: closeModal
    }),
    actionCancelLabel: t(config.label.cancel),
    actionCancelOnSubmit: closeModal,
    actionSaveLabel: t(config.label.submit),
    actionSaveOnSubmit: () => {},
    formId: "modal-action",
    isOBPSFlow: true,
    popupStyles: mobileView ? {
      width: "720px"
    } : {},
    style: !mobileView ? {
      height: "45px",
      width: "107px",
      paddingLeft: "0px",
      paddingRight: "0px"
    } : {
      height: "45px",
      width: "44%"
    },
    popupModuleMianStyles: mobileView ? {
      paddingLeft: "5px"
    } : {}
  }, PTALoading ? /*#__PURE__*/React.createElement(Loader, null) : /*#__PURE__*/React.createElement(FormComposer, {
    config: config.form,
    cardStyle: {
      marginLeft: "0px",
      marginRight: "0px",
      marginTop: "-25px"
    },
    className: "BPAemployeeCard",
    noBoxShadow: true,
    inline: true,
    childrenAtTheBottom: true,
    onSubmit: submit,
    defaultValues: defaultValues,
    formId: "modal-action"
  })) : /*#__PURE__*/React.createElement(Loader, null);
};

const Heading$3 = props => {
  return /*#__PURE__*/React.createElement("h1", {
    style: {
      marginLeft: "22px"
    },
    className: "heading-m BPAheading-m"
  }, props.label);
};
const Close$3 = () => /*#__PURE__*/React.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24",
  fill: "#FFFFFF"
}, /*#__PURE__*/React.createElement("path", {
  d: "M0 0h24v24H0V0z",
  fill: "none"
}), /*#__PURE__*/React.createElement("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"
}));
const CloseBtn$3 = props => {
  return /*#__PURE__*/React.createElement("div", {
    className: "icon-bg-secondary",
    onClick: props.onClick
  }, /*#__PURE__*/React.createElement(Close$3, null));
};
const ActionModal$3 = ({
  t,
  action,
  tenantId,
  state,
  id,
  closeModal,
  submitAction,
  actionData,
  applicationDetails,
  applicationData,
  businessService,
  moduleCode,
  workflowDetails
}) => {
  var _applicationData, _applicationData$land, _applicationData$land2, _applicationData2, _applicationData2$lan, _applicationData2$lan2, _workflowDetails$data, _workflowDetails$data2, _workflowDetails$data3, _workflowDetails$data4, _workflowDetails$data5, _workflowDetails$data6;
  const mutation1 = Digit.Hooks.obps.useObpsAPI((_applicationData = applicationData) !== null && _applicationData !== void 0 && (_applicationData$land = _applicationData.landInfo) !== null && _applicationData$land !== void 0 && (_applicationData$land2 = _applicationData$land.address) !== null && _applicationData$land2 !== void 0 && _applicationData$land2.city ? (_applicationData2 = applicationData) === null || _applicationData2 === void 0 ? void 0 : (_applicationData2$lan = _applicationData2.landInfo) === null || _applicationData2$lan === void 0 ? void 0 : (_applicationData2$lan2 = _applicationData2$lan.address) === null || _applicationData2$lan2 === void 0 ? void 0 : _applicationData2$lan2.city : tenantId, false);
  const {
    data: approverData,
    isLoading: PTALoading
  } = Digit.Hooks.useEmployeeSearch(tenantId, {
    roles: workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data = workflowDetails.data) === null || _workflowDetails$data === void 0 ? void 0 : (_workflowDetails$data2 = _workflowDetails$data.initialActionState) === null || _workflowDetails$data2 === void 0 ? void 0 : (_workflowDetails$data3 = _workflowDetails$data2.nextActions) === null || _workflowDetails$data3 === void 0 ? void 0 : (_workflowDetails$data4 = _workflowDetails$data3.filter(ele => (ele === null || ele === void 0 ? void 0 : ele.action) == (action === null || action === void 0 ? void 0 : action.action))) === null || _workflowDetails$data4 === void 0 ? void 0 : (_workflowDetails$data5 = _workflowDetails$data4[0]) === null || _workflowDetails$data5 === void 0 ? void 0 : (_workflowDetails$data6 = _workflowDetails$data5.assigneeRoles) === null || _workflowDetails$data6 === void 0 ? void 0 : _workflowDetails$data6.map(role => ({
      code: role
    })),
    isActive: true
  }, {
    enabled: !(action !== null && action !== void 0 && action.isTerminateState)
  });
  const queryClient = useQueryClient();
  const [config, setConfig] = useState({});
  const [defaultValues, setDefaultValues] = useState({});
  const [approvers, setApprovers] = useState([]);
  const [selectedApprover, setSelectedApprover] = useState({});
  const [file, setFile] = useState(null);
  const [uploadedFile, setUploadedFile] = useState(null);
  const [error, setError] = useState(null);
  const [selectedFinancialYear, setSelectedFinancialYear] = useState(null);
  const mobileView = Digit.Utils.browser.isMobile() ? true : false;
  useEffect(() => {
    var _approverData$Employe;
    setApprovers(approverData === null || approverData === void 0 ? void 0 : (_approverData$Employe = approverData.Employees) === null || _approverData$Employe === void 0 ? void 0 : _approverData$Employe.map(employee => {
      var _employee$user;
      return {
        uuid: employee === null || employee === void 0 ? void 0 : employee.uuid,
        name: employee === null || employee === void 0 ? void 0 : (_employee$user = employee.user) === null || _employee$user === void 0 ? void 0 : _employee$user.name
      };
    }));
  }, [approverData]);
  function selectFile(e) {
    setFile(e.target.files[0]);
  }
  useEffect(() => {
    (async () => {
      setError(null);
      if (file) {
        const allowedFileTypesRegex = /(.*?)(jpg|jpeg|png|image|pdf)$/i;
        if (file.size >= 5242880) {
          setError(t("CS_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
        } else if (file !== null && file !== void 0 && file.type && !allowedFileTypesRegex.test(file === null || file === void 0 ? void 0 : file.type)) {
          setError(t(`NOT_SUPPORTED_FILE_TYPE`));
        } else {
          try {
            var _response$data, _response$data$files;
            const response = await Digit.UploadServices.Filestorage("OBPS", file, Digit.ULBService.getStateId() || (tenantId === null || tenantId === void 0 ? void 0 : tenantId.split(".")[0]));
            if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
              var _response$data2, _response$data2$files;
              setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
            } else {
              setError(t("CS_FILE_UPLOAD_ERROR"));
            }
          } catch (err) {
            setError(t("CS_FILE_UPLOAD_ERROR"));
          }
        }
      }
    })();
  }, [file]);
  const getInspectionDocs = docs => {
    let refinedDocs = [];
    docs && docs.map((doc, ind) => {
      refinedDocs.push({
        "documentType": (doc.documentType + "_" + doc.documentType.split("_")[1]).replaceAll("_", "."),
        "fileStoreId": doc.fileStoreId,
        "fileStore": doc.fileStoreId,
        "fileName": "",
        "dropDownValues": {
          "value": (doc.documentType + "_" + doc.documentType.split("_")[1]).replaceAll("_", ".")
        }
      });
    });
    return refinedDocs;
  };
  const getQuestion = data => {
    let refinedQues = [];
    var i;
    for (i = 0; i < (data === null || data === void 0 ? void 0 : data.questionLength); i++) {
      var _data;
      refinedQues.push({
        "remarks": data[`Remarks_${i}`],
        "question": data === null || data === void 0 ? void 0 : data.questionList[i].question,
        "value": data === null || data === void 0 ? void 0 : (_data = data[`question_${i}`]) === null || _data === void 0 ? void 0 : _data.code
      });
    }
    return refinedQues;
  };
  const getfeildInspection = data => {
    var _data$additionalDetai, _data$additionalDetai2;
    let formdata = [],
      inspectionOb = [];
    if ((data === null || data === void 0 ? void 0 : (_data$additionalDetai = data.additionalDetails) === null || _data$additionalDetai === void 0 ? void 0 : (_data$additionalDetai2 = _data$additionalDetai.fieldinspection_pending) === null || _data$additionalDetai2 === void 0 ? void 0 : _data$additionalDetai2.length) > 0) {
      var _data$additionalDetai3;
      inspectionOb = data === null || data === void 0 ? void 0 : (_data$additionalDetai3 = data.additionalDetails) === null || _data$additionalDetai3 === void 0 ? void 0 : _data$additionalDetai3.fieldinspection_pending;
    }
    if (data.status == "FIELDINSPECTION_INPROGRESS") {
      var _formdata;
      formdata = JSON.parse(sessionStorage.getItem("INSPECTION_DATA"));
      ((_formdata = formdata) === null || _formdata === void 0 ? void 0 : _formdata.length) > 0 && formdata.map((ob, ind) => {
        inspectionOb.push({
          docs: getInspectionDocs(ob.Documents),
          date: ob.InspectionDate,
          questions: getQuestion(ob),
          time: ob === null || ob === void 0 ? void 0 : ob.InspectionTime
        });
      });
      inspectionOb = inspectionOb.filter(ob => ob.docs && ob.docs.length > 0);
    } else {
      sessionStorage.removeItem("INSPECTION_DATA");
    }
    let fieldinspection_pending = [...inspectionOb];
    return fieldinspection_pending;
  };
  const getDocuments = applicationData => {
    let documentsformdata = JSON.parse(sessionStorage.getItem("BPA_DOCUMENTS"));
    let documentList = [];
    documentsformdata.map(doc => {
      var _doc$uploadedDocument, _doc$uploadedDocument2, _doc$uploadedDocument3, _doc$uploadedDocument4, _doc$uploadedDocument5, _doc$newUploadedDocs;
      if ((doc === null || doc === void 0 ? void 0 : (_doc$uploadedDocument = doc.uploadedDocuments) === null || _doc$uploadedDocument === void 0 ? void 0 : (_doc$uploadedDocument2 = _doc$uploadedDocument[0]) === null || _doc$uploadedDocument2 === void 0 ? void 0 : (_doc$uploadedDocument3 = _doc$uploadedDocument2.values) === null || _doc$uploadedDocument3 === void 0 ? void 0 : _doc$uploadedDocument3.length) > 0) documentList = [...documentList, ...(doc === null || doc === void 0 ? void 0 : (_doc$uploadedDocument4 = doc.uploadedDocuments) === null || _doc$uploadedDocument4 === void 0 ? void 0 : (_doc$uploadedDocument5 = _doc$uploadedDocument4[0]) === null || _doc$uploadedDocument5 === void 0 ? void 0 : _doc$uploadedDocument5.values)];
      if ((doc === null || doc === void 0 ? void 0 : (_doc$newUploadedDocs = doc.newUploadedDocs) === null || _doc$newUploadedDocs === void 0 ? void 0 : _doc$newUploadedDocs.length) > 0) documentList = [...documentList, ...(doc === null || doc === void 0 ? void 0 : doc.newUploadedDocs)];
    });
    return documentList;
  };
  const getPendingApprovals = () => {
    var _result;
    const approvals = Digit.SessionStorage.get("OBPS_APPROVAL_CHECKS");
    const newApprovals = Digit.SessionStorage.get("OBPS_NEW_APPROVALS");
    let result = approvals === null || approvals === void 0 ? void 0 : approvals.reduce((acc, approval) => approval !== null && approval !== void 0 && approval.checked ? acc.push(approval === null || approval === void 0 ? void 0 : approval.label) && acc : acc, []);
    result = (_result = result) === null || _result === void 0 ? void 0 : _result.concat(newApprovals !== null ? newApprovals.filter(ob => ob.label !== "").map(approval => approval === null || approval === void 0 ? void 0 : approval.label) : []);
    return result;
  };
  async function submit(data) {
    var _applicationData3, _data$comments, _data$comments2, _applicationDetails$n, _nocDetails$, _nocDetails$$Noc, _response$Noc;
    applicationData = {
      ...applicationData,
      documents: getDocuments(),
      additionalDetails: {
        ...((_applicationData3 = applicationData) === null || _applicationData3 === void 0 ? void 0 : _applicationData3.additionalDetails),
        fieldinspection_pending: getfeildInspection(applicationData),
        pendingapproval: getPendingApprovals()
      },
      workflow: {
        action: action === null || action === void 0 ? void 0 : action.action,
        comment: (data === null || data === void 0 ? void 0 : (_data$comments = data.comments) === null || _data$comments === void 0 ? void 0 : _data$comments.length) > 0 ? data === null || data === void 0 ? void 0 : data.comments : null,
        comments: (data === null || data === void 0 ? void 0 : (_data$comments2 = data.comments) === null || _data$comments2 === void 0 ? void 0 : _data$comments2.length) > 0 ? data === null || data === void 0 ? void 0 : data.comments : null,
        assignee: !(selectedApprover !== null && selectedApprover !== void 0 && selectedApprover.uuid) ? null : [selectedApprover === null || selectedApprover === void 0 ? void 0 : selectedApprover.uuid],
        assignes: !(selectedApprover !== null && selectedApprover !== void 0 && selectedApprover.uuid) ? null : [selectedApprover === null || selectedApprover === void 0 ? void 0 : selectedApprover.uuid],
        varificationDocuments: uploadedFile ? [{
          documentType: (action === null || action === void 0 ? void 0 : action.action) + " DOC",
          fileName: file === null || file === void 0 ? void 0 : file.name,
          fileStoreId: uploadedFile
        }] : null
      },
      action: action === null || action === void 0 ? void 0 : action.action,
      comment: data === null || data === void 0 ? void 0 : data.comments,
      assignee: !(selectedApprover !== null && selectedApprover !== void 0 && selectedApprover.uuid) ? null : [selectedApprover === null || selectedApprover === void 0 ? void 0 : selectedApprover.uuid],
      wfDocuments: uploadedFile ? [{
        documentType: (action === null || action === void 0 ? void 0 : action.action) + " DOC",
        fileName: file === null || file === void 0 ? void 0 : file.name,
        fileStoreId: uploadedFile
      }] : null
    };
    const nocDetails = applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$n = applicationDetails.nocData) === null || _applicationDetails$n === void 0 ? void 0 : _applicationDetails$n.map(noc => {
      const uploadedDocuments = Digit.SessionStorage.get(noc === null || noc === void 0 ? void 0 : noc.nocType) || [];
      return {
        Noc: {
          ...noc,
          documents: [...(noc !== null && noc !== void 0 && noc.documents ? noc === null || noc === void 0 ? void 0 : noc.documents : []), ...(uploadedDocuments ? uploadedDocuments : [])]
        }
      };
    });
    let filters = {
      sourceRefId: nocDetails === null || nocDetails === void 0 ? void 0 : (_nocDetails$ = nocDetails[0]) === null || _nocDetails$ === void 0 ? void 0 : (_nocDetails$$Noc = _nocDetails$.Noc) === null || _nocDetails$$Noc === void 0 ? void 0 : _nocDetails$$Noc.sourceRefId
    };
    const response = await Digit.NOCSearch.all(tenantId, filters);
    let AirportFlag = true;
    let NocFlag = true;
    response === null || response === void 0 ? void 0 : (_response$Noc = response.Noc) === null || _response$Noc === void 0 ? void 0 : _response$Noc.map(ob => {
      var _ob$applicationStatus, _ob$applicationStatus2, _ob$applicationStatus3, _ob$applicationStatus4, _ob$applicationStatus5;
      if (((ob === null || ob === void 0 ? void 0 : (_ob$applicationStatus = ob.applicationStatus) === null || _ob$applicationStatus === void 0 ? void 0 : _ob$applicationStatus.toUpperCase()) === "APPROVED" || (ob === null || ob === void 0 ? void 0 : (_ob$applicationStatus2 = ob.applicationStatus) === null || _ob$applicationStatus2 === void 0 ? void 0 : _ob$applicationStatus2.toUpperCase()) === "AUTO_APPROVED" || (ob === null || ob === void 0 ? void 0 : (_ob$applicationStatus3 = ob.applicationStatus) === null || _ob$applicationStatus3 === void 0 ? void 0 : _ob$applicationStatus3.toUpperCase()) === "REJECTED" || (ob === null || ob === void 0 ? void 0 : (_ob$applicationStatus4 = ob.applicationStatus) === null || _ob$applicationStatus4 === void 0 ? void 0 : _ob$applicationStatus4.toUpperCase()) === "AUTO_REJECTED" || (ob === null || ob === void 0 ? void 0 : (_ob$applicationStatus5 = ob.applicationStatus) === null || _ob$applicationStatus5 === void 0 ? void 0 : _ob$applicationStatus5.toUpperCase()) === "VOIDED") && (AirportFlag == true || NocFlag == true)) {
        if ((ob === null || ob === void 0 ? void 0 : ob.nocType) === "AIRPORT_AUTHORITY") AirportFlag = false;else if ((ob === null || ob === void 0 ? void 0 : ob.nocType) === "FIRE_NOC") NocFlag = false;
      }
    });
    let nocData = [];
    if (nocDetails) {
      nocDetails.map(noc => {
        var _noc$Noc, _noc$Noc$applicationS, _noc$Noc2, _noc$Noc2$application, _noc$Noc3, _noc$Noc3$application, _noc$Noc4, _noc$Noc4$application, _noc$Noc5, _noc$Noc5$application, _noc$Noc6, _noc$Noc7;
        if ((noc === null || noc === void 0 ? void 0 : (_noc$Noc = noc.Noc) === null || _noc$Noc === void 0 ? void 0 : (_noc$Noc$applicationS = _noc$Noc.applicationStatus) === null || _noc$Noc$applicationS === void 0 ? void 0 : _noc$Noc$applicationS.toUpperCase()) != "APPROVED" && (noc === null || noc === void 0 ? void 0 : (_noc$Noc2 = noc.Noc) === null || _noc$Noc2 === void 0 ? void 0 : (_noc$Noc2$application = _noc$Noc2.applicationStatus) === null || _noc$Noc2$application === void 0 ? void 0 : _noc$Noc2$application.toUpperCase()) != "AUTO_APPROVED" && (noc === null || noc === void 0 ? void 0 : (_noc$Noc3 = noc.Noc) === null || _noc$Noc3 === void 0 ? void 0 : (_noc$Noc3$application = _noc$Noc3.applicationStatus) === null || _noc$Noc3$application === void 0 ? void 0 : _noc$Noc3$application.toUpperCase()) != "REJECTED" && (noc === null || noc === void 0 ? void 0 : (_noc$Noc4 = noc.Noc) === null || _noc$Noc4 === void 0 ? void 0 : (_noc$Noc4$application = _noc$Noc4.applicationStatus) === null || _noc$Noc4$application === void 0 ? void 0 : _noc$Noc4$application.toUpperCase()) != "AUTO_REJECTED" && (noc === null || noc === void 0 ? void 0 : (_noc$Noc5 = noc.Noc) === null || _noc$Noc5 === void 0 ? void 0 : (_noc$Noc5$application = _noc$Noc5.applicationStatus) === null || _noc$Noc5$application === void 0 ? void 0 : _noc$Noc5$application.toUpperCase()) != "VOIDED" && (noc === null || noc === void 0 ? void 0 : (_noc$Noc6 = noc.Noc) === null || _noc$Noc6 === void 0 ? void 0 : _noc$Noc6.nocType) === "AIRPORT_AUTHORITY" && AirportFlag || (noc === null || noc === void 0 ? void 0 : (_noc$Noc7 = noc.Noc) === null || _noc$Noc7 === void 0 ? void 0 : _noc$Noc7.nocType) === "FIRE_NOC" && NocFlag) {
          nocData.push(noc);
        }
      });
    }
    submitAction({
      BPA: applicationData
    }, (nocData === null || nocData === void 0 ? void 0 : nocData.length) > 0 ? nocData : false, {
      isStakeholder: false,
      bpa: true
    });
  }
  useEffect(() => {
    if (action) {
      setConfig(configBPAApproverApplication({
        t,
        action,
        approvers,
        selectedApprover,
        setSelectedApprover,
        selectFile,
        uploadedFile,
        setUploadedFile,
        businessService,
        assigneeLabel: "WF_ASSIGNEE_NAME_LABEL",
        error
      }));
    }
  }, [action, approvers, selectedFinancialYear, uploadedFile, error]);
  return action && config.form ? /*#__PURE__*/React.createElement(Modal, {
    headerBarMain: /*#__PURE__*/React.createElement(Heading$3, {
      label: t(config.label.heading)
    }),
    headerBarEnd: /*#__PURE__*/React.createElement(CloseBtn$3, {
      onClick: closeModal
    }),
    actionCancelLabel: t(config.label.cancel),
    actionCancelOnSubmit: closeModal,
    actionSaveLabel: t(config.label.submit),
    actionSaveOnSubmit: () => {},
    formId: "modal-action",
    isOBPSFlow: true,
    popupStyles: mobileView ? {
      width: "720px"
    } : {},
    style: !mobileView ? {
      minHeight: "45px",
      height: "auto",
      width: "107px",
      paddingLeft: "0px",
      paddingRight: "0px"
    } : {
      minHeight: "45px",
      height: "auto",
      width: "44%"
    },
    popupModuleMianStyles: mobileView ? {
      paddingLeft: "5px"
    } : {}
  }, PTALoading ? /*#__PURE__*/React.createElement(Loader, null) : /*#__PURE__*/React.createElement(FormComposer, {
    config: config.form,
    cardStyle: {
      marginLeft: "0px",
      marginRight: "0px",
      marginTop: "-25px"
    },
    className: "BPAemployeeCard",
    noBoxShadow: true,
    inline: true,
    childrenAtTheBottom: true,
    onSubmit: submit,
    defaultValues: defaultValues,
    formId: "modal-action"
  })) : /*#__PURE__*/React.createElement(Loader, null);
};

const Heading$4 = props => {
  return /*#__PURE__*/React.createElement("h1", {
    style: {
      marginLeft: "22px"
    },
    className: "heading-m BPAheading-m"
  }, props.label);
};
const Close$4 = () => /*#__PURE__*/React.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24",
  fill: "#FFFFFF"
}, /*#__PURE__*/React.createElement("path", {
  d: "M0 0h24v24H0V0z",
  fill: "none"
}), /*#__PURE__*/React.createElement("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"
}));
const CloseBtn$4 = props => {
  return /*#__PURE__*/React.createElement("div", {
    className: "icon-bg-secondary",
    onClick: props.onClick
  }, /*#__PURE__*/React.createElement(Close$4, null));
};
const ActionModal$4 = ({
  t,
  action,
  tenantId,
  state,
  id,
  closeModal,
  submitAction,
  actionData,
  applicationData,
  businessService,
  moduleCode
}) => {
  var _action$assigneeRoles, _action$assigneeRoles2;
  const {
    data: approverData,
    isLoading: PTALoading
  } = Digit.Hooks.useEmployeeSearch(tenantId, {
    roles: action === null || action === void 0 ? void 0 : (_action$assigneeRoles = action.assigneeRoles) === null || _action$assigneeRoles === void 0 ? void 0 : (_action$assigneeRoles2 = _action$assigneeRoles.map) === null || _action$assigneeRoles2 === void 0 ? void 0 : _action$assigneeRoles2.call(_action$assigneeRoles, e => ({
      code: e
    })),
    isActive: true
  }, {
    enabled: !(action !== null && action !== void 0 && action.isTerminateState)
  });
  const queryClient = useQueryClient();
  const [config, setConfig] = useState({});
  const [defaultValues, setDefaultValues] = useState({});
  const [approvers, setApprovers] = useState([]);
  const [selectedApprover, setSelectedApprover] = useState({});
  const [file, setFile] = useState(null);
  const [uploadedFile, setUploadedFile] = useState(null);
  const [error, setError] = useState(null);
  const mobileView = Digit.Utils.browser.isMobile() ? true : false;
  const history = useHistory();
  useEffect(() => {
    var _approverData$Employe;
    setApprovers(approverData === null || approverData === void 0 ? void 0 : (_approverData$Employe = approverData.Employees) === null || _approverData$Employe === void 0 ? void 0 : _approverData$Employe.map(employee => {
      var _employee$user;
      return {
        uuid: employee === null || employee === void 0 ? void 0 : employee.uuid,
        name: employee === null || employee === void 0 ? void 0 : (_employee$user = employee.user) === null || _employee$user === void 0 ? void 0 : _employee$user.name
      };
    }));
  }, [approverData]);
  function selectFile(e) {
    setFile(e.target.files[0]);
  }
  useEffect(() => {
    (async () => {
      setError(null);
      if (file) {
        const allowedFileTypesRegex = /(.*?)(jpg|jpeg|png|image|pdf)$/i;
        if (file.size >= 5242880) {
          setError(t("CS_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
        } else if (file !== null && file !== void 0 && file.type && !allowedFileTypesRegex.test(file === null || file === void 0 ? void 0 : file.type)) {
          setError(t(`NOT_SUPPORTED_FILE_TYPE`));
        } else {
          try {
            var _response$data, _response$data$files;
            const response = await Digit.UploadServices.Filestorage("NOC", file, Digit.ULBService.getStateId() || (tenantId === null || tenantId === void 0 ? void 0 : tenantId.split(".")[0]));
            if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
              var _response$data2, _response$data2$files;
              setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
            } else {
              setError(t("CS_FILE_UPLOAD_ERROR"));
            }
          } catch (err) {
            setError(t("CS_FILE_UPLOAD_ERROR"));
          }
        }
      }
    })();
  }, [file]);
  function submit(data) {
    var _applicationData, _applicationData$docu, _applicationData2;
    let enteredDocs = JSON.parse(sessionStorage.getItem("NewNOCDocs"));
    let newDocs = ((_applicationData = applicationData) === null || _applicationData === void 0 ? void 0 : (_applicationData$docu = _applicationData.documents) === null || _applicationData$docu === void 0 ? void 0 : _applicationData$docu.length) > 0 ? [...((_applicationData2 = applicationData) === null || _applicationData2 === void 0 ? void 0 : _applicationData2.documents)] : [];
    enteredDocs.map((d, index) => {
      newDocs.push(d);
    });
    applicationData = {
      ...applicationData,
      workflow: {
        action: action === null || action === void 0 ? void 0 : action.action,
        comment: data !== null && data !== void 0 && data.comments ? data === null || data === void 0 ? void 0 : data.comments : null,
        assignee: !(selectedApprover !== null && selectedApprover !== void 0 && selectedApprover.uuid) ? null : [selectedApprover === null || selectedApprover === void 0 ? void 0 : selectedApprover.uuid],
        documents: uploadedFile ? [{
          documentType: (action === null || action === void 0 ? void 0 : action.action) + " DOC",
          fileName: file === null || file === void 0 ? void 0 : file.name,
          fileStoreId: uploadedFile
        }] : null
      },
      documents: newDocs
    };
    submitAction({
      Noc: applicationData
    }, false, {
      isNoc: true
    });
  }
  useEffect(() => {
    if (action) {
      setConfig(configNOCApproverApplication({
        t,
        action,
        approvers,
        selectedApprover,
        setSelectedApprover,
        selectFile,
        uploadedFile,
        setUploadedFile,
        businessService,
        assigneeLabel: "WF_ASSIGNEE_NAME_LABEL",
        error
      }));
    }
  }, [action, approvers, uploadedFile, error]);
  return action && config.form ? /*#__PURE__*/React.createElement(Modal, {
    headerBarMain: /*#__PURE__*/React.createElement(Heading$4, {
      label: t(config.label.heading)
    }),
    headerBarEnd: /*#__PURE__*/React.createElement(CloseBtn$4, {
      onClick: closeModal
    }),
    actionCancelLabel: t(config.label.cancel),
    actionCancelOnSubmit: closeModal,
    actionSaveLabel: t(config.label.submit),
    actionSaveOnSubmit: () => {},
    formId: "modal-action",
    isOBPSFlow: true,
    popupStyles: mobileView ? {
      width: "720px"
    } : {},
    style: !mobileView ? {
      height: "45px",
      width: "107px",
      paddingLeft: "0px",
      paddingRight: "0px"
    } : {
      height: "45px",
      width: "44%"
    },
    popupModuleMianStyles: mobileView ? {
      paddingLeft: "5px"
    } : {}
  }, PTALoading ? /*#__PURE__*/React.createElement(Loader, null) : /*#__PURE__*/React.createElement(FormComposer, {
    config: config.form,
    cardStyle: {
      marginLeft: "0px",
      marginRight: "0px",
      marginTop: "-25px"
    },
    className: "BPAemployeeCard",
    noBoxShadow: true,
    inline: true,
    childrenAtTheBottom: true,
    onSubmit: submit,
    defaultValues: defaultValues,
    formId: "modal-action"
  })) : /*#__PURE__*/React.createElement(Loader, null);
};

const Heading$5 = props => {
  return /*#__PURE__*/React.createElement("h1", {
    className: "heading-m"
  }, props.label);
};
const Close$5 = () => /*#__PURE__*/React.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24",
  fill: "#FFFFFF"
}, /*#__PURE__*/React.createElement("path", {
  d: "M0 0h24v24H0V0z",
  fill: "none"
}), /*#__PURE__*/React.createElement("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"
}));
const CloseBtn$5 = props => {
  return /*#__PURE__*/React.createElement("div", {
    className: "icon-bg-secondary",
    onClick: props.onClick
  }, /*#__PURE__*/React.createElement(Close$5, null));
};
const convertDateToEpochNew = (dateString, dayStartOrEnd = "dayend") => {
  try {
    const parts = dateString.match(/(\d{4})-(\d{1,2})-(\d{1,2})/);
    const DateObj = new Date(Date.UTC(parts[1], parts[2] - 1, parts[3]));
    DateObj.setMinutes(DateObj.getMinutes() + DateObj.getTimezoneOffset());
    if (dayStartOrEnd === "dayend") {
      DateObj.setHours(DateObj.getHours() + 24);
      DateObj.setSeconds(DateObj.getSeconds() - 1);
    }
    return DateObj.getTime();
  } catch (e) {
    return dateString;
  }
};
const ActionModal$5 = ({
  t,
  action,
  tenantId,
  state,
  id,
  closeModal,
  submitAction,
  actionData,
  applicationData,
  businessService,
  moduleCode
}) => {
  var _action$assigneeRoles, _action$assigneeRoles2;
  const {
    data: approverData,
    isLoading: PTALoading
  } = Digit.Hooks.useEmployeeSearch(tenantId, {
    roles: action === null || action === void 0 ? void 0 : (_action$assigneeRoles = action.assigneeRoles) === null || _action$assigneeRoles === void 0 ? void 0 : (_action$assigneeRoles2 = _action$assigneeRoles.map) === null || _action$assigneeRoles2 === void 0 ? void 0 : _action$assigneeRoles2.call(_action$assigneeRoles, e => ({
      code: e
    })),
    isActive: true
  }, {
    enabled: !(action !== null && action !== void 0 && action.isTerminateState)
  });
  const [config, setConfig] = useState({});
  const [defaultValues, setDefaultValues] = useState({});
  const [approvers, setApprovers] = useState([]);
  const [selectedApprover, setSelectedApprover] = useState({});
  const [file, setFile] = useState(null);
  const [uploadedFile, setUploadedFile] = useState(null);
  const [error, setError] = useState(null);
  const isMobile = window.Digit.Utils.browser.isMobile();
  const isEmployee = window.location.href.includes("/employee");
  useEffect(() => {
    var _approverData$Employe;
    setApprovers(approverData === null || approverData === void 0 ? void 0 : (_approverData$Employe = approverData.Employees) === null || _approverData$Employe === void 0 ? void 0 : _approverData$Employe.map(employee => {
      var _employee$user;
      return {
        uuid: employee === null || employee === void 0 ? void 0 : employee.uuid,
        name: employee === null || employee === void 0 ? void 0 : (_employee$user = employee.user) === null || _employee$user === void 0 ? void 0 : _employee$user.name
      };
    }));
  }, [approverData]);
  function selectFile(e) {
    setFile(e.target.files[0]);
  }
  useEffect(() => {
    (async () => {
      setError(null);
      if (file) {
        const allowedFileTypesRegex = /(.*?)(jpg|jpeg|png|image|pdf)$/i;
        if (file.size >= 5242880) {
          setError(t("CS_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
        } else if (file !== null && file !== void 0 && file.type && !allowedFileTypesRegex.test(file === null || file === void 0 ? void 0 : file.type)) {
          setError(t(`NOT_SUPPORTED_FILE_TYPE`));
        } else {
          try {
            var _response$data, _response$data$files;
            const response = await Digit.UploadServices.Filestorage("WS", file, Digit.ULBService.getCurrentTenantId());
            if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
              var _response$data2, _response$data2$files;
              setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
            } else {
              setError(t("CS_FILE_UPLOAD_ERROR"));
            }
          } catch (err) {
            console.error("Modal -> err ", err);
            setError(t("CS_FILE_UPLOAD_ERROR"));
          }
        }
      }
    })();
  }, [file]);
  function submit(data) {
    var _applicationData, _applicationData7, _applicationData8, _applicationData8$app, _applicationData9, _applicationData9$pro, _applicationData10, _applicationData10$pr;
    if ((_applicationData = applicationData) !== null && _applicationData !== void 0 && _applicationData.isBillAmend) {
      var _applicationData2, _applicationData2$bil, _applicationData3, _applicationData4, _applicationData4$bil, _applicationData5, _applicationData5$app, _applicationData6, _applicationData6$app;
      const comments = data !== null && data !== void 0 && data.comments ? data.comments : null;
      const additionalDetails = {
        ...((_applicationData2 = applicationData) === null || _applicationData2 === void 0 ? void 0 : (_applicationData2$bil = _applicationData2.billAmendmentDetails) === null || _applicationData2$bil === void 0 ? void 0 : _applicationData2$bil.additionalDetails),
        comments
      };
      const amendment = {
        ...((_applicationData3 = applicationData) === null || _applicationData3 === void 0 ? void 0 : _applicationData3.billAmendmentDetails),
        workflow: {
          businessId: (_applicationData4 = applicationData) === null || _applicationData4 === void 0 ? void 0 : (_applicationData4$bil = _applicationData4.billAmendmentDetails) === null || _applicationData4$bil === void 0 ? void 0 : _applicationData4$bil.amendmentId,
          action: action === null || action === void 0 ? void 0 : action.action,
          tenantId: tenantId,
          businessService: (_applicationData5 = applicationData) !== null && _applicationData5 !== void 0 && (_applicationData5$app = _applicationData5.applicationType) !== null && _applicationData5$app !== void 0 && _applicationData5$app.includes("WATER") ? "WS.AMENDMENT" : "SW.AMENDMENT",
          moduleName: (_applicationData6 = applicationData) !== null && _applicationData6 !== void 0 && (_applicationData6$app = _applicationData6.applicationType) !== null && _applicationData6$app !== void 0 && _applicationData6$app.includes("WATER") ? "WS" : "SW",
          assignes: !(selectedApprover !== null && selectedApprover !== void 0 && selectedApprover.uuid) ? [] : [{
            uuid: selectedApprover === null || selectedApprover === void 0 ? void 0 : selectedApprover.uuid
          }],
          comment: (data === null || data === void 0 ? void 0 : data.comments) || "",
          documents: uploadedFile ? [{
            documentType: (action === null || action === void 0 ? void 0 : action.action) + " DOC",
            fileName: file === null || file === void 0 ? void 0 : file.name,
            fileStoreId: uploadedFile
          }] : []
        },
        additionalDetails,
        comment: (data === null || data === void 0 ? void 0 : data.comments) || "",
        wfDocuments: uploadedFile ? [{
          documentType: (action === null || action === void 0 ? void 0 : action.action) + " DOC",
          fileName: file === null || file === void 0 ? void 0 : file.name,
          fileStoreId: uploadedFile
        }] : null,
        processInstance: {
          action: action === null || action === void 0 ? void 0 : action.action,
          assignes: !(selectedApprover !== null && selectedApprover !== void 0 && selectedApprover.uuid) ? [] : [{
            uuid: selectedApprover === null || selectedApprover === void 0 ? void 0 : selectedApprover.uuid
          }],
          comment: (data === null || data === void 0 ? void 0 : data.comments) || "",
          documents: uploadedFile ? [{
            documentType: (action === null || action === void 0 ? void 0 : action.action) + " DOC",
            fileName: file === null || file === void 0 ? void 0 : file.name,
            fileStoreId: uploadedFile
          }] : []
        }
      };
      submitAction({
        AmendmentUpdate: amendment
      });
      return;
    }
    applicationData = {
      ...applicationData,
      action: action === null || action === void 0 ? void 0 : action.action,
      comment: (data === null || data === void 0 ? void 0 : data.comments) || "",
      assignee: !(selectedApprover !== null && selectedApprover !== void 0 && selectedApprover.uuid) ? [] : [selectedApprover === null || selectedApprover === void 0 ? void 0 : selectedApprover.uuid],
      assignes: !(selectedApprover !== null && selectedApprover !== void 0 && selectedApprover.uuid) ? [] : [{
        uuid: selectedApprover === null || selectedApprover === void 0 ? void 0 : selectedApprover.uuid
      }],
      wfDocuments: uploadedFile ? [{
        documentType: (action === null || action === void 0 ? void 0 : action.action) + " DOC",
        fileName: file === null || file === void 0 ? void 0 : file.name,
        fileStoreId: uploadedFile
      }] : null,
      processInstance: {
        ...((_applicationData7 = applicationData) === null || _applicationData7 === void 0 ? void 0 : _applicationData7.processInstance),
        action: action === null || action === void 0 ? void 0 : action.action,
        assignes: !(selectedApprover !== null && selectedApprover !== void 0 && selectedApprover.uuid) ? [] : [{
          uuid: selectedApprover === null || selectedApprover === void 0 ? void 0 : selectedApprover.uuid
        }],
        comment: (data === null || data === void 0 ? void 0 : data.comments) || "",
        documents: uploadedFile ? [{
          documentType: (action === null || action === void 0 ? void 0 : action.action) + " DOC",
          fileName: file === null || file === void 0 ? void 0 : file.name,
          fileStoreId: uploadedFile
        }] : []
      }
    };
    if (data !== null && data !== void 0 && data.date && (_applicationData8 = applicationData) !== null && _applicationData8 !== void 0 && (_applicationData8$app = _applicationData8.applicationType) !== null && _applicationData8$app !== void 0 && _applicationData8$app.includes("DISCONNECT")) {
      const disconnectionExecutionDate = cloneDeep_1(data === null || data === void 0 ? void 0 : data.date);
      applicationData.disconnectionExecutionDate = convertDateToEpochNew(disconnectionExecutionDate);
    } else if (data !== null && data !== void 0 && data.date) {
      const connectionExecutionDate = cloneDeep_1(data === null || data === void 0 ? void 0 : data.date);
      applicationData.connectionExecutionDate = convertDateToEpochNew(connectionExecutionDate);
    }
    if (((_applicationData9 = applicationData) === null || _applicationData9 === void 0 ? void 0 : (_applicationData9$pro = _applicationData9.processInstance) === null || _applicationData9$pro === void 0 ? void 0 : _applicationData9$pro.businessService) == "DisconnectWSConnection" || ((_applicationData10 = applicationData) === null || _applicationData10 === void 0 ? void 0 : (_applicationData10$pr = _applicationData10.processInstance) === null || _applicationData10$pr === void 0 ? void 0 : _applicationData10$pr.businessService) == "DisconnectSWConnection" || window.location.href.includes("disconnection")) {
      var _applicationData11;
      ((_applicationData11 = applicationData) === null || _applicationData11 === void 0 ? void 0 : _applicationData11.serviceType) == "WATER" ? submitAction({
        WaterConnection: applicationData,
        disconnectRequest: true
      }) : submitAction({
        SewerageConnection: applicationData,
        disconnectRequest: true
      });
    } else {
      var _parsedAdhocRebateDat, _parsedAdhocRebateDat2, _parsedAdhocRebateDat3, _parsedAdhocRebateDat4, _parsedAdhocRebateDat5, _parsedAdhocRebateDat6, _parsedAdhocRebateDat7, _parsedAdhocRebateDat8, _parsedAdhocRebateDat9, _parsedAdhocRebateDat10, _parsedAdhocRebateDat11, _parsedAdhocRebateDat12, _applicationData12;
      const adhocRebateData = sessionStorage.getItem("Digit.ADHOC_ADD_REBATE_DATA");
      const parsedAdhocRebateData = adhocRebateData ? JSON.parse(adhocRebateData) : "";
      if (parsedAdhocRebateData !== null && parsedAdhocRebateData !== void 0 && (_parsedAdhocRebateDat = parsedAdhocRebateData.value) !== null && _parsedAdhocRebateDat !== void 0 && _parsedAdhocRebateDat.adhocPenalty) applicationData.additionalDetails.adhocPenalty = parseInt(parsedAdhocRebateData === null || parsedAdhocRebateData === void 0 ? void 0 : (_parsedAdhocRebateDat2 = parsedAdhocRebateData.value) === null || _parsedAdhocRebateDat2 === void 0 ? void 0 : _parsedAdhocRebateDat2.adhocPenalty) || "";
      if (parsedAdhocRebateData !== null && parsedAdhocRebateData !== void 0 && (_parsedAdhocRebateDat3 = parsedAdhocRebateData.value) !== null && _parsedAdhocRebateDat3 !== void 0 && _parsedAdhocRebateDat3.adhocPenaltyComment) applicationData.additionalDetails.adhocPenaltyComment = (parsedAdhocRebateData === null || parsedAdhocRebateData === void 0 ? void 0 : (_parsedAdhocRebateDat4 = parsedAdhocRebateData.value) === null || _parsedAdhocRebateDat4 === void 0 ? void 0 : _parsedAdhocRebateDat4.adhocPenaltyComment) || "";
      if (parsedAdhocRebateData !== null && parsedAdhocRebateData !== void 0 && (_parsedAdhocRebateDat5 = parsedAdhocRebateData.value) !== null && _parsedAdhocRebateDat5 !== void 0 && _parsedAdhocRebateDat5.adhocPenaltyReason) applicationData.additionalDetails.adhocPenaltyReason = (parsedAdhocRebateData === null || parsedAdhocRebateData === void 0 ? void 0 : (_parsedAdhocRebateDat6 = parsedAdhocRebateData.value) === null || _parsedAdhocRebateDat6 === void 0 ? void 0 : _parsedAdhocRebateDat6.adhocPenaltyReason) || "";
      if (parsedAdhocRebateData !== null && parsedAdhocRebateData !== void 0 && (_parsedAdhocRebateDat7 = parsedAdhocRebateData.value) !== null && _parsedAdhocRebateDat7 !== void 0 && _parsedAdhocRebateDat7.adhocRebate) applicationData.additionalDetails.adhocRebate = parseInt(parsedAdhocRebateData === null || parsedAdhocRebateData === void 0 ? void 0 : (_parsedAdhocRebateDat8 = parsedAdhocRebateData.value) === null || _parsedAdhocRebateDat8 === void 0 ? void 0 : _parsedAdhocRebateDat8.adhocRebate) || "";
      if (parsedAdhocRebateData !== null && parsedAdhocRebateData !== void 0 && (_parsedAdhocRebateDat9 = parsedAdhocRebateData.value) !== null && _parsedAdhocRebateDat9 !== void 0 && _parsedAdhocRebateDat9.adhocRebateComment) applicationData.additionalDetails.adhocRebateComment = (parsedAdhocRebateData === null || parsedAdhocRebateData === void 0 ? void 0 : (_parsedAdhocRebateDat10 = parsedAdhocRebateData.value) === null || _parsedAdhocRebateDat10 === void 0 ? void 0 : _parsedAdhocRebateDat10.adhocRebateComment) || "";
      if (parsedAdhocRebateData !== null && parsedAdhocRebateData !== void 0 && (_parsedAdhocRebateDat11 = parsedAdhocRebateData.value) !== null && _parsedAdhocRebateDat11 !== void 0 && _parsedAdhocRebateDat11.adhocRebateReason) applicationData.additionalDetails.adhocRebateReason = (parsedAdhocRebateData === null || parsedAdhocRebateData === void 0 ? void 0 : (_parsedAdhocRebateDat12 = parsedAdhocRebateData.value) === null || _parsedAdhocRebateDat12 === void 0 ? void 0 : _parsedAdhocRebateDat12.adhocRebateReason) || "";
      ((_applicationData12 = applicationData) === null || _applicationData12 === void 0 ? void 0 : _applicationData12.serviceType) == "WATER" ? submitAction({
        WaterConnection: applicationData
      }) : submitAction({
        SewerageConnection: applicationData
      });
    }
  }
  useEffect(() => {
    var _applicationData13, _applicationData13$pr, _applicationData14, _applicationData14$pr;
    if (((_applicationData13 = applicationData) === null || _applicationData13 === void 0 ? void 0 : (_applicationData13$pr = _applicationData13.processInstance) === null || _applicationData13$pr === void 0 ? void 0 : _applicationData13$pr.businessService) == "DisconnectWSConnection" || ((_applicationData14 = applicationData) === null || _applicationData14 === void 0 ? void 0 : (_applicationData14$pr = _applicationData14.processInstance) === null || _applicationData14$pr === void 0 ? void 0 : _applicationData14$pr.businessService) == "DisconnectSWConnection") {
      if (action) {
        setConfig(configWSDisConnectApplication({
          t,
          action,
          approvers,
          selectedApprover,
          setSelectedApprover,
          selectFile,
          uploadedFile,
          setUploadedFile,
          businessService,
          error
        }));
      }
    } else {
      if (action) {
        setConfig(configWSApproverApplication({
          t,
          action,
          approvers,
          selectedApprover,
          setSelectedApprover,
          selectFile,
          uploadedFile,
          setUploadedFile,
          businessService,
          error
        }));
      }
    }
  }, [action, approvers, uploadedFile, error]);
  return action && config.form ? /*#__PURE__*/React.createElement(Modal, {
    headerBarMain: /*#__PURE__*/React.createElement(Heading$5, {
      label: t(config.label.heading)
    }),
    headerBarEnd: /*#__PURE__*/React.createElement(CloseBtn$5, {
      onClick: closeModal
    }),
    actionCancelLabel: t(config.label.cancel),
    actionCancelOnSubmit: closeModal,
    actionSaveLabel: t(config.label.submit),
    actionSaveOnSubmit: () => {},
    formId: "modal-action",
    style: isMobile && isEmployee ? {
      width: "100%",
      height: "auto"
    } : {}
  }, PTALoading ? /*#__PURE__*/React.createElement(Loader, null) : /*#__PURE__*/React.createElement(FormComposer, {
    config: config.form,
    noBoxShadow: true,
    inline: true,
    childrenAtTheBottom: true,
    onSubmit: submit,
    defaultValues: defaultValues,
    formId: "modal-action"
  })) : /*#__PURE__*/React.createElement(Loader, null);
};

const ActionModal$6 = props => {
  if (props !== null && props !== void 0 && props.businessService.includes("PT")) {
    return /*#__PURE__*/React.createElement(ActionModal, props);
  }
  if (props !== null && props !== void 0 && props.businessService.includes("NewTL") || props !== null && props !== void 0 && props.businessService.includes("TL") || props !== null && props !== void 0 && props.businessService.includes("EDITRENEWAL") || props !== null && props !== void 0 && props.businessService.includes("DIRECTRENEWAL")) {
    return /*#__PURE__*/React.createElement(ActionModal$1, props);
  }
  if (props !== null && props !== void 0 && props.moduleCode.includes("BPAREG")) {
    return /*#__PURE__*/React.createElement(ActionModal$2, props);
  }
  if (props !== null && props !== void 0 && props.moduleCode.includes("BPA")) {
    return /*#__PURE__*/React.createElement(ActionModal$3, props);
  }
  if (props !== null && props !== void 0 && props.moduleCode.includes("NOC")) {
    return /*#__PURE__*/React.createElement(ActionModal$4, props);
  }
  if (props !== null && props !== void 0 && props.moduleCode.includes("WS")) {
    return /*#__PURE__*/React.createElement(ActionModal$5, props);
  }
};

function DocumentsPreview({
  documents,
  svgStyles = {},
  isSendBackFlow = false,
  isHrLine = false,
  titleStyles
}) {
  const {
    t
  } = useTranslation();
  const isStakeholderApplication = window.location.href.includes("stakeholder");
  return /*#__PURE__*/React.createElement("div", {
    style: {
      marginTop: "19px"
    }
  }, !isStakeholderApplication && (documents === null || documents === void 0 ? void 0 : documents.map((document, index) => {
    var _document$values;
    return /*#__PURE__*/React.createElement(React.Fragment, {
      key: index
    }, document !== null && document !== void 0 && document.title ? /*#__PURE__*/React.createElement(CardSubHeader, {
      style: titleStyles ? titleStyles : {
        marginTop: "32px",
        marginBottom: "8px",
        color: "#505A5F",
        fontSize: "24px"
      }
    }, t(document === null || document === void 0 ? void 0 : document.title)) : null, /*#__PURE__*/React.createElement("div", {
      style: {
        display: "flex",
        flexWrap: "wrap",
        justifyContent: "flex-start"
      }
    }, document !== null && document !== void 0 && document.values && (document === null || document === void 0 ? void 0 : document.values.length) > 0 ? document === null || document === void 0 ? void 0 : (_document$values = document.values) === null || _document$values === void 0 ? void 0 : _document$values.map((value, index) => {
      var _value$documentType;
      return /*#__PURE__*/React.createElement("a", {
        target: "_",
        href: value === null || value === void 0 ? void 0 : value.url,
        style: {
          minWidth: "80px",
          marginRight: "10px",
          maxWidth: "100px",
          height: "auto",
          minWidth: "100px"
        },
        key: index
      }, /*#__PURE__*/React.createElement("div", {
        style: {
          display: "flex",
          justifyContent: "center"
        }
      }, /*#__PURE__*/React.createElement(PDFSvg$1, null)), /*#__PURE__*/React.createElement("p", {
        style: {
          marginTop: "8px",
          fontWeight: "bold",
          textAlign: "center",
          color: "#505A5F"
        }
      }, t(value === null || value === void 0 ? void 0 : value.title)), isSendBackFlow ? value !== null && value !== void 0 && (_value$documentType = value.documentType) !== null && _value$documentType !== void 0 && _value$documentType.includes("NOC") ? /*#__PURE__*/React.createElement("p", {
        style: {
          textAlign: "center"
        }
      }, t(value === null || value === void 0 ? void 0 : value.documentType.split(".")[1])) : /*#__PURE__*/React.createElement("p", {
        style: {
          textAlign: "center"
        }
      }, t(value === null || value === void 0 ? void 0 : value.documentType)) : "");
    }) : !window.location.href.includes("citizen") && /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("p", null, t("BPA_NO_DOCUMENTS_UPLOADED_LABEL")))), isHrLine && (documents === null || documents === void 0 ? void 0 : documents.length) != index + 1 ? /*#__PURE__*/React.createElement("hr", {
      style: {
        color: "#D6D5D4",
        backgroundColor: "#D6D5D4",
        height: "2px",
        marginTop: "20px",
        marginBottom: "20px"
      }
    }) : null);
  })), isStakeholderApplication && (documents === null || documents === void 0 ? void 0 : documents.map((document, index) => {
    var _document$values2;
    return /*#__PURE__*/React.createElement(React.Fragment, {
      key: index
    }, document !== null && document !== void 0 && document.title ? /*#__PURE__*/React.createElement(CardSubHeader, {
      style: {
        marginTop: "32px",
        marginBottom: "8px",
        color: "#505A5F",
        fontSize: "24px"
      }
    }, t(document === null || document === void 0 ? void 0 : document.title)) : null, /*#__PURE__*/React.createElement("div", null, document !== null && document !== void 0 && document.values && (document === null || document === void 0 ? void 0 : document.values.length) > 0 ? document === null || document === void 0 ? void 0 : (_document$values2 = document.values) === null || _document$values2 === void 0 ? void 0 : _document$values2.map((value, index) => /*#__PURE__*/React.createElement("a", {
      target: "_",
      href: value === null || value === void 0 ? void 0 : value.url,
      style: {
        minWidth: svgStyles !== null && svgStyles !== void 0 && svgStyles.minWidth ? svgStyles === null || svgStyles === void 0 ? void 0 : svgStyles.minWidth : "160px",
        marginRight: "20px"
      },
      key: index
    }, /*#__PURE__*/React.createElement("div", {
      style: {
        maxWidth: "940px",
        padding: "8px",
        borderRadius: "4px",
        border: "1px solid #D6D5D4",
        background: "#FAFAFA"
      }
    }, /*#__PURE__*/React.createElement("p", {
      style: {
        marginTop: "8px",
        fontWeight: "bold",
        marginBottom: "10px"
      }
    }, t(value === null || value === void 0 ? void 0 : value.title)), value !== null && value !== void 0 && value.docInfo ? /*#__PURE__*/React.createElement("div", {
      style: {
        fontSize: "12px",
        color: "#505A5F",
        fontWeight: 400,
        lineHeight: "15px",
        marginBottom: "10px"
      }
    }, `${t(value === null || value === void 0 ? void 0 : value.docInfo)}`) : null, /*#__PURE__*/React.createElement(PDFSvg$1, null), /*#__PURE__*/React.createElement("p", {
      style: {
        marginTop: "8px",
        fontSize: "16px",
        lineHeight: "19px",
        color: "#505A5F",
        fontWeight: "400",
        textAlign: "center",
        color: "#505A5F"
      }
    }, `${t(value === null || value === void 0 ? void 0 : value.title)}`)))) : !window.location.href.includes("citizen") && /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("p", null, t("BPA_NO_DOCUMENTS_UPLOADED_LABEL")))));
  })));
}

const BPADocuments = ({
  t,
  formData,
  applicationData,
  docs,
  bpaActionsDetails
}) => {
  var _bpaActionsDetails$da, _formData$documents;
  const applicationStatus = (applicationData === null || applicationData === void 0 ? void 0 : applicationData.status) || "";
  const actions = (bpaActionsDetails === null || bpaActionsDetails === void 0 ? void 0 : (_bpaActionsDetails$da = bpaActionsDetails.data) === null || _bpaActionsDetails$da === void 0 ? void 0 : _bpaActionsDetails$da.nextActions) || [];
  const stateId = Digit.ULBService.getStateId();
  const [documents, setDocuments] = useState((formData === null || formData === void 0 ? void 0 : (_formData$documents = formData.documents) === null || _formData$documents === void 0 ? void 0 : _formData$documents.documents) || []);
  const [error, setError] = useState(null);
  const [bpaTaxDocuments, setBpaTaxDocuments] = useState([]);
  const [enableSubmit, setEnableSubmit] = useState(true);
  const [checkRequiredFields, setCheckRequiredFields] = useState(false);
  const [checkEnablingDocs, setCheckEnablingDocs] = useState(false);
  const {
    isLoading: bpaDocsLoading,
    data: bpaDocs
  } = Digit.Hooks.obps.useMDMS(stateId, "BPA", ["DocTypeMapping"]);
  const {
    isLoading: commonDocsLoading,
    data: commonDocs
  } = Digit.Hooks.obps.useMDMS(stateId, "common-masters", ["DocumentType"]);
  useEffect(() => {
    var _bpaDocs$BPA, _filtredBpaDocs, _filtredBpaDocs$, _filtredBpaDocs$$docT;
    let filtredBpaDocs = [];
    if (bpaDocs !== null && bpaDocs !== void 0 && (_bpaDocs$BPA = bpaDocs.BPA) !== null && _bpaDocs$BPA !== void 0 && _bpaDocs$BPA.DocTypeMapping) {
      var _bpaDocs$BPA2, _bpaDocs$BPA2$DocType;
      filtredBpaDocs = bpaDocs === null || bpaDocs === void 0 ? void 0 : (_bpaDocs$BPA2 = bpaDocs.BPA) === null || _bpaDocs$BPA2 === void 0 ? void 0 : (_bpaDocs$BPA2$DocType = _bpaDocs$BPA2.DocTypeMapping) === null || _bpaDocs$BPA2$DocType === void 0 ? void 0 : _bpaDocs$BPA2$DocType.filter(data => {
        var _applicationData$addi, _applicationData$addi2;
        return data.WFState == (applicationData === null || applicationData === void 0 ? void 0 : applicationData.status) ? applicationData === null || applicationData === void 0 ? void 0 : applicationData.status :  data.RiskType == (applicationData === null || applicationData === void 0 ? void 0 : applicationData.riskType) && data.ServiceType == (applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$addi = applicationData.additionalDetails) === null || _applicationData$addi === void 0 ? void 0 : _applicationData$addi.serviceType) && data.applicationType == (applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$addi2 = applicationData.additionalDetails) === null || _applicationData$addi2 === void 0 ? void 0 : _applicationData$addi2.applicationType);
      });
    }
    let documentsList = [];
    (_filtredBpaDocs = filtredBpaDocs) === null || _filtredBpaDocs === void 0 ? void 0 : (_filtredBpaDocs$ = _filtredBpaDocs[0]) === null || _filtredBpaDocs$ === void 0 ? void 0 : (_filtredBpaDocs$$docT = _filtredBpaDocs$.docTypes) === null || _filtredBpaDocs$$docT === void 0 ? void 0 : _filtredBpaDocs$$docT.forEach(doc => {
      var _commonDocs$commonMa, _commonDocs$commonMa$, _docs$, _docs$$values;
      let code = doc.code;
      doc.dropdownData = [];
      doc.uploadedDocuments = [];
      commonDocs === null || commonDocs === void 0 ? void 0 : (_commonDocs$commonMa = commonDocs["common-masters"]) === null || _commonDocs$commonMa === void 0 ? void 0 : (_commonDocs$commonMa$ = _commonDocs$commonMa.DocumentType) === null || _commonDocs$commonMa$ === void 0 ? void 0 : _commonDocs$commonMa$.forEach(value => {
        let values = value.code.slice(0, code.length);
        if (code === values) {
          doc.hasDropdown = true;
          value.i18nKey = value.code;
          doc.dropdownData.push(value);
        }
      });
      doc.uploadedDocuments[0] = {};
      doc.uploadedDocuments[0].values = [];
      docs === null || docs === void 0 ? void 0 : (_docs$ = docs[0]) === null || _docs$ === void 0 ? void 0 : (_docs$$values = _docs$.values) === null || _docs$$values === void 0 ? void 0 : _docs$$values.map(upDocs => {
        var _upDocs$documentType, _upDocs$documentType2;
        if (code === `${upDocs === null || upDocs === void 0 ? void 0 : (_upDocs$documentType = upDocs.documentType) === null || _upDocs$documentType === void 0 ? void 0 : _upDocs$documentType.split('.')[0]}.${upDocs === null || upDocs === void 0 ? void 0 : (_upDocs$documentType2 = upDocs.documentType) === null || _upDocs$documentType2 === void 0 ? void 0 : _upDocs$documentType2.split('.')[1]}`) {
          doc.uploadedDocuments[0].values.push(upDocs);
        }
      });
      documentsList.push(doc);
    });
    sessionStorage.setItem("BPA_DOCUMENTS", JSON.stringify(documentsList));
    setBpaTaxDocuments(documentsList);
  }, [!bpaDocsLoading, !commonDocsLoading]);
  useEffect(() => {
    let count = 0;
    bpaTaxDocuments.map(doc => {
      let isRequired = false;
      documents.map(data => {
        if (doc.required && doc.code == `${data.documentType.split('.')[0]}.${data.documentType.split('.')[1]}`) {
          isRequired = true;
        }
      });
      if (!isRequired && doc.required) {
        count = count + 1;
      }
    });
    if ((count == "0" || count == 0) && documents.length > 0) setEnableSubmit(false);else setEnableSubmit(true);
  }, [documents, checkRequiredFields]);
  useEffect(() => {
    if (applicationStatus === "DOC_VERIFICATION_INPROGRESS" && (actions === null || actions === void 0 ? void 0 : actions.length) > 0) setCheckEnablingDocs(true);else setCheckEnablingDocs(false);
  }, [applicationData, bpaActionsDetails]);
  return /*#__PURE__*/React.createElement("div", null, bpaTaxDocuments === null || bpaTaxDocuments === void 0 ? void 0 : bpaTaxDocuments.map((document, index) => {
    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(SelectDocument$1, {
      key: index,
      index: index,
      document: document,
      t: t,
      error: error,
      setError: setError,
      setDocuments: setDocuments,
      documents: documents,
      setCheckRequiredFields: setCheckRequiredFields,
      applicationStatus: applicationStatus,
      actions: actions,
      bpaTaxDocuments: bpaTaxDocuments,
      checkEnablingDocs: checkEnablingDocs
    }));
  }));
};
function SelectDocument$1({
  t,
  document: doc,
  setDocuments,
  error,
  setError,
  documents,
  setCheckRequiredFields,
  index,
  applicationStatus,
  actions,
  bpaTaxDocuments,
  checkEnablingDocs
}) {
  var _doc$dropdownData, _doc$uploadedDocument;
  const filteredDocument = documents === null || documents === void 0 ? void 0 : documents.filter(item => {
    var _item$documentType;
    return item === null || item === void 0 ? void 0 : (_item$documentType = item.documentType) === null || _item$documentType === void 0 ? void 0 : _item$documentType.includes(doc === null || doc === void 0 ? void 0 : doc.code);
  })[0];
  const tenantId = Digit.ULBService.getStateId();
  const [selectedDocument, setSelectedDocument] = useState(filteredDocument ? {
    ...filteredDocument,
    active: true,
    code: filteredDocument === null || filteredDocument === void 0 ? void 0 : filteredDocument.documentType,
    i18nKey: filteredDocument === null || filteredDocument === void 0 ? void 0 : filteredDocument.documentType
  } : (doc === null || doc === void 0 ? void 0 : (_doc$dropdownData = doc.dropdownData) === null || _doc$dropdownData === void 0 ? void 0 : _doc$dropdownData.length) === 1 ? doc === null || doc === void 0 ? void 0 : doc.dropdownData[0] : {});
  const [file, setFile] = useState(null);
  const [uploadedFile, setUploadedFile] = useState(() => (filteredDocument === null || filteredDocument === void 0 ? void 0 : filteredDocument.fileStoreId) || null);
  const [selectArrayFiles, SetSelectArrayFiles] = useState([]);
  const handleSelectDocument = value => setSelectedDocument(value);
  const allowedFileTypes = /(.*?)(jpg|jpeg|png|image|pdf)$/i;
  function selectfiles(e) {
    e && setFile(e.file);
  }
  useEffect(() => {
    if (selectedDocument !== null && selectedDocument !== void 0 && selectedDocument.code) {
      setDocuments(prev => {
        var _documents$find;
        const filteredDocumentsByDocumentType = prev === null || prev === void 0 ? void 0 : prev.filter(item => (item === null || item === void 0 ? void 0 : item.documentType) !== (selectedDocument === null || selectedDocument === void 0 ? void 0 : selectedDocument.code));
        if ((uploadedFile === null || uploadedFile === void 0 ? void 0 : uploadedFile.length) === 0 || uploadedFile === null) return filteredDocumentsByDocumentType;
        const filteredDocumentsByFileStoreId = filteredDocumentsByDocumentType === null || filteredDocumentsByDocumentType === void 0 ? void 0 : filteredDocumentsByDocumentType.filter(item => (item === null || item === void 0 ? void 0 : item.fileStoreId) !== uploadedFile);
        return [...filteredDocumentsByFileStoreId, {
          documentType: selectedDocument === null || selectedDocument === void 0 ? void 0 : selectedDocument.code,
          fileStoreId: uploadedFile,
          documentUid: uploadedFile,
          fileName: (file === null || file === void 0 ? void 0 : file.name) || "",
          id: documents ? (_documents$find = documents.find(x => x.documentType === (selectedDocument === null || selectedDocument === void 0 ? void 0 : selectedDocument.code))) === null || _documents$find === void 0 ? void 0 : _documents$find.id : undefined
        }];
      });
    }
  }, [uploadedFile, selectedDocument]);
  useEffect(() => {
    (async () => {
      if (selectArrayFiles.length > 0) {
        sessionStorage.removeItem("BPA_DOCUMENTS");
        doc.newUploadedDocs = [];
        selectArrayFiles.map(newDoc => {
          if (selectedDocument !== null && selectedDocument !== void 0 && selectedDocument.code) {
            var _newDoc$fileStoreId, _newDoc$fileStoreId2, _newDoc$fileStoreId3;
            doc.newUploadedDocs.push({
              documentType: selectedDocument === null || selectedDocument === void 0 ? void 0 : selectedDocument.code,
              fileStoreId: newDoc === null || newDoc === void 0 ? void 0 : (_newDoc$fileStoreId = newDoc.fileStoreId) === null || _newDoc$fileStoreId === void 0 ? void 0 : _newDoc$fileStoreId.fileStoreId,
              documentUid: newDoc === null || newDoc === void 0 ? void 0 : (_newDoc$fileStoreId2 = newDoc.fileStoreId) === null || _newDoc$fileStoreId2 === void 0 ? void 0 : _newDoc$fileStoreId2.fileStoreId,
              tenantId: newDoc === null || newDoc === void 0 ? void 0 : (_newDoc$fileStoreId3 = newDoc.fileStoreId) === null || _newDoc$fileStoreId3 === void 0 ? void 0 : _newDoc$fileStoreId3.tenantId
            });
          }
        });
        bpaTaxDocuments[index] = doc;
        sessionStorage.setItem("BPA_DOCUMENTS", JSON.stringify(bpaTaxDocuments));
      }
    })();
  }, [selectArrayFiles, selectedDocument]);
  useEffect(() => {
  }, [file]);
  const getData = (index, state) => {
    let data = Object.fromEntries(state);
    let newArr = Object.values(data);
    if (Object.keys(data).length !== 0) SetSelectArrayFiles(newArr);
    selectfiles(newArr[newArr.length - 1]);
  };
  return /*#__PURE__*/React.createElement("div", {
    style: {
      marginBottom: "24px",
      maxWidth: "950px",
      minWidth: "280px",
      background: "#FAFAFA",
      borderRadius: "4px",
      border: "1px solid #D6D5D4",
      padding: "8px"
    }
  }, /*#__PURE__*/React.createElement(CardSubHeader, {
    style: {
      marginBottom: "8px",
      paddingBottom: "9px",
      color: "#0B0C0C",
      fontSize: "16px",
      lineHeight: "19px"
    }
  }, `${t(doc === null || doc === void 0 ? void 0 : doc.code)}`), (doc === null || doc === void 0 ? void 0 : (_doc$uploadedDocument = doc.uploadedDocuments) === null || _doc$uploadedDocument === void 0 ? void 0 : _doc$uploadedDocument.length) && /*#__PURE__*/React.createElement(DocumentsPreview, {
    documents: doc === null || doc === void 0 ? void 0 : doc.uploadedDocuments,
    svgStyles: {
      width: "100px",
      height: "100px",
      viewBox: "0 0 25 25",
      minWidth: "100px"
    }
  }), checkEnablingDocs ? /*#__PURE__*/React.createElement("div", {
    style: {
      marginTop: "20px"
    }
  }, /*#__PURE__*/React.createElement(LabelFieldPair, {
    style: {
      width: "100%"
    }
  }, /*#__PURE__*/React.createElement(CardLabel, {
    style: {
      marginTop: "-10px",
      width: "100%"
    }
  }, doc !== null && doc !== void 0 && doc.required ? `${t(doc === null || doc === void 0 ? void 0 : doc.code)}* ` : `${t(doc === null || doc === void 0 ? void 0 : doc.code)}`), /*#__PURE__*/React.createElement(Dropdown, {
    className: "form-field",
    t: t,
    isMandatory: false,
    option: doc === null || doc === void 0 ? void 0 : doc.dropdownData,
    selected: selectedDocument,
    optionKey: "i18nKey",
    select: handleSelectDocument,
    style: {
      width: "100%"
    }
  })), /*#__PURE__*/React.createElement(LabelFieldPair, {
    style: {
      width: "100%"
    }
  }, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller",
    style: {
      width: "100%"
    }
  }), /*#__PURE__*/React.createElement("div", {
    className: "field",
    style: {
      width: "100%"
    }
  }, /*#__PURE__*/React.createElement(MultiUploadWrapper, {
    module: "BPA",
    tenantId: tenantId,
    getFormState: e => getData(index, e),
    t: t,
    allowedFileTypesRegex: allowedFileTypes,
    allowedMaxSizeInMB: 5,
    acceptFiles: "image/*, .pdf, .png, .jpeg, .jpg"
  })))) : null);
}

const getDocuments = fiDocuments => {
  const returnDocuments = [{
    title: "BPA_DOCUMENT_DETAILS_LABEL",
    values: fiDocuments === null || fiDocuments === void 0 ? void 0 : fiDocuments.map(doc => {
      var _doc$documentType;
      return {
        title: doc === null || doc === void 0 ? void 0 : (_doc$documentType = doc.documentType) === null || _doc$documentType === void 0 ? void 0 : _doc$documentType.replaceAll('.', '_'),
        documentType: doc === null || doc === void 0 ? void 0 : doc.documentType,
        documentUid: doc === null || doc === void 0 ? void 0 : doc.documentUid,
        fileStoreId: doc === null || doc === void 0 ? void 0 : doc.fileStoreId,
        id: doc === null || doc === void 0 ? void 0 : doc.id,
        url: doc === null || doc === void 0 ? void 0 : doc.url
      };
    })
  }];
  return returnDocuments;
};
function InspectionReport({
  fiReport,
  isCitizen = false
}) {
  const {
    t
  } = useTranslation();
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      marginTop: "10px"
    }
  }, isCitizen ? /*#__PURE__*/React.createElement(CardHeader, {
    style: {
      fontSize: "24px"
    }
  }, `${t(`BPA_FI_REPORT`)}`) : /*#__PURE__*/React.createElement(CardSectionHeader, {
    style: {
      fontSize: "24px"
    }
  }, `${t(`BPA_FI_REPORT`)}`), fiReport.map((fiData, index) => {
    var _fiData$date, _fiData$date2, _fiData$date3, _fiData$questions, _fiData$questions2;
    return /*#__PURE__*/React.createElement("div", {
      style: {
        background: "#FAFAFA",
        border: "1px solid #D6D5D4",
        padding: "8px",
        borderRadius: "4px",
        maxWidth: "950px",
        minWidth: "280px",
        marginBottom: "24px"
      }
    }, /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(CardSectionHeader, {
      style: {
        fontSize: "20px"
      }
    }, (fiReport === null || fiReport === void 0 ? void 0 : fiReport.length) == 1 ? `${t(`BPA_FI_REPORT`)}` : `${t(`BPA_FI_REPORT`)} - ${index + 1}`), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: `${t(`BPA_FI_DATE_LABEL`)}`,
      text: fiData !== null && fiData !== void 0 && fiData.date ? fiData.date.includes("-") ? `${(_fiData$date = fiData.date) === null || _fiData$date === void 0 ? void 0 : _fiData$date.split("-")[2]}/${(_fiData$date2 = fiData.date) === null || _fiData$date2 === void 0 ? void 0 : _fiData$date2.split("-")[1]}/${(_fiData$date3 = fiData.date) === null || _fiData$date3 === void 0 ? void 0 : _fiData$date3.split("-")[0]}` : fiData === null || fiData === void 0 ? void 0 : fiData.date : "NA"
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: `${t(`BPA_FI_TIME_LABEL`)}`,
      text: fiData !== null && fiData !== void 0 && fiData.time ? fiData === null || fiData === void 0 ? void 0 : fiData.time : "NA"
    }), (fiData === null || fiData === void 0 ? void 0 : (_fiData$questions = fiData.questions) === null || _fiData$questions === void 0 ? void 0 : _fiData$questions.length) && (fiData === null || fiData === void 0 ? void 0 : (_fiData$questions2 = fiData.questions) === null || _fiData$questions2 === void 0 ? void 0 : _fiData$questions2.map(qstn => /*#__PURE__*/React.createElement("div", {
      style: {
        background: "white",
        border: "1px solid #D6D5D4",
        padding: "8px",
        borderRadius: "4px",
        marginTop: "10px"
      }
    }, /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: `${t(`${qstn.question}`)}`,
      text: qstn !== null && qstn !== void 0 && qstn.value ? qstn === null || qstn === void 0 ? void 0 : qstn.value : "NA"
    }), /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: `${t(`BPA_ENTER_REMARKS`)}`,
      text: qstn.remarks ? qstn.remarks : "NA"
    })))), /*#__PURE__*/React.createElement(DocumentsPreview, {
      documents: getDocuments(fiData === null || fiData === void 0 ? void 0 : fiData.docs),
      svgStyles: {
        width: "100px",
        height: "100px",
        viewBox: "0 0 25 25",
        minWidth: "100px"
      }
    })));
  })));
}

function SelectDocument$2({
  t,
  document: doc,
  setNocDocuments,
  setError,
  nocDocuments
}) {
  const filteredDocument = nocDocuments === null || nocDocuments === void 0 ? void 0 : nocDocuments.filter(item => {
    var _item$documentType;
    return item === null || item === void 0 ? void 0 : (_item$documentType = item.documentType) === null || _item$documentType === void 0 ? void 0 : _item$documentType.includes(doc === null || doc === void 0 ? void 0 : doc.code);
  })[0];
  const tenantId = Digit.ULBService.getStateId();
  const [selectedDocument, setSelectedDocument] = useState();
  const [file, setFile] = useState(null);
  const [uploadedFile, setUploadedFile] = useState(() => (filteredDocument === null || filteredDocument === void 0 ? void 0 : filteredDocument.fileStoreId) || null);
  const allowedFileTypes = /(.*?)(jpg|jpeg|png|image|pdf)$/i;
  function selectfile(e) {
    e && setFile(e.file);
  }
  useEffect(() => {
    var _doc$dropdownData, _doc$dropdownData$;
    if (doc !== null && doc !== void 0 && (_doc$dropdownData = doc.dropdownData) !== null && _doc$dropdownData !== void 0 && (_doc$dropdownData$ = _doc$dropdownData[0]) !== null && _doc$dropdownData$ !== void 0 && _doc$dropdownData$.code) {
      setNocDocuments(prev => {
        var _doc$dropdownData3;
        const filteredDocumentsByDocumentType = prev === null || prev === void 0 ? void 0 : prev.filter(item => {
          var _doc$dropdownData2, _doc$dropdownData2$;
          return (item === null || item === void 0 ? void 0 : item.documentType) !== (doc === null || doc === void 0 ? void 0 : (_doc$dropdownData2 = doc.dropdownData) === null || _doc$dropdownData2 === void 0 ? void 0 : (_doc$dropdownData2$ = _doc$dropdownData2[0]) === null || _doc$dropdownData2$ === void 0 ? void 0 : _doc$dropdownData2$.code);
        });
        if ((uploadedFile === null || uploadedFile === void 0 ? void 0 : uploadedFile.length) === 0 || uploadedFile === null) {
          return filteredDocumentsByDocumentType;
        }
        const filteredDocumentsByFileStoreId = filteredDocumentsByDocumentType === null || filteredDocumentsByDocumentType === void 0 ? void 0 : filteredDocumentsByDocumentType.filter(item => (item === null || item === void 0 ? void 0 : item.fileStoreId) !== uploadedFile);
        return [...filteredDocumentsByFileStoreId, {
          documentType: doc === null || doc === void 0 ? void 0 : (_doc$dropdownData3 = doc.dropdownData) === null || _doc$dropdownData3 === void 0 ? void 0 : _doc$dropdownData3[0].code,
          fileStoreId: uploadedFile,
          documentUid: uploadedFile,
          fileName: (file === null || file === void 0 ? void 0 : file.name) || ""
        }];
      });
    }
  }, [uploadedFile]);
  useEffect(() => {
    (async () => {
      setError(null);
      if (file) {
        const allowedFileTypesRegex = /(.*?)(jpg|jpeg|png|image|pdf)$/i;
        if (file.size >= 5242880) {
          setError(t("CS_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
        } else if (file !== null && file !== void 0 && file.type && !allowedFileTypesRegex.test(file === null || file === void 0 ? void 0 : file.type)) {
          setError(t(`NOT_SUPPORTED_FILE_TYPE`));
        } else {
          try {
            var _response$data, _response$data$files;
            setUploadedFile(null);
            const response = await Digit.UploadServices.Filestorage("PT", file, Digit.ULBService.getStateId());
            if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
              var _response$data2, _response$data2$files;
              setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
            } else {
              setError(t("CS_FILE_UPLOAD_ERROR"));
            }
          } catch (err) {
            setError(t("CS_FILE_UPLOAD_ERROR"));
          }
        }
      }
    })();
  }, [file]);
  const getData = state => {
    let data = Object.fromEntries(state);
    let newArr = Object.values(data);
    selectfile(newArr[newArr.length - 1]);
  };
  return /*#__PURE__*/React.createElement("div", {
    style: {}
  }, /*#__PURE__*/React.createElement(LabelFieldPair, {
    style: {
      width: "98%",
      marginRight: "10px"
    }
  }, /*#__PURE__*/React.createElement(CardLabel, {
    style: {
      width: "100%"
    }
  }, doc !== null && doc !== void 0 && doc.required ? `${t("TL_BUTTON_UPLOAD FILE")}*` : `${t("TL_BUTTON_UPLOAD FILE")}`), /*#__PURE__*/React.createElement("div", {
    className: "field",
    style: {
      width: "100%"
    }
  }, /*#__PURE__*/React.createElement(MultiUploadWrapper, {
    module: "NOC",
    tenantId: tenantId,
    getFormState: e => getData(e),
    t: t,
    allowedFileTypesRegex: allowedFileTypes,
    allowedMaxSizeInMB: 5,
    acceptFiles: "image/*, .pdf, .png, .jpeg, .jpg"
  }))));
}
const NOCDocuments = ({
  t,
  noc,
  docs,
  isNoc,
  applicationData,
  NOCdata,
  bpaActionsDetails
}) => {
  var _bpaActionsDetails$da;
  const tenantId = Digit.ULBService.getStateId();
  const stateId = Digit.ULBService.getStateId();
  const bpaApplicationStatus = (applicationData === null || applicationData === void 0 ? void 0 : applicationData.status) || "";
  const actions = (bpaActionsDetails === null || bpaActionsDetails === void 0 ? void 0 : (_bpaActionsDetails$da = bpaActionsDetails.data) === null || _bpaActionsDetails$da === void 0 ? void 0 : _bpaActionsDetails$da.nextActions) || [];
  const {
    isLoading: nocDocsLoading,
    data: nocDocs
  } = Digit.Hooks.obps.useMDMS(stateId, "NOC", ["DocumentTypeMapping"], {
    enabled: isNoc
  });
  const {
    isLoading: bpaDocsLoading,
    data: bpaDocs
  } = Digit.Hooks.obps.useMDMS(stateId, "BPA", ["DocTypeMapping"], {
    enabled: !isNoc
  });
  const {
    isLoading: commonDocsLoading,
    data: commonDocs
  } = Digit.Hooks.obps.useMDMS(stateId, "common-masters", ["DocumentType"]);
  const [commonDocMaping, setCommonDocMaping] = useState([]);
  const [nocTaxDocuments, setNocTaxDocuments] = useState([]);
  const [checkEnablingDocs, setCheckEnablingDocs] = useState(false);
  const [nocDocuments, setNocDocuments] = Digit.Hooks.useSessionStorage(noc === null || noc === void 0 ? void 0 : noc.nocType, []);
  const [error, setError] = useState(null);
  const isEmployee = window.location.href.includes("/employee/");
  useEffect(() => {
    var _commonDocs$commonMa;
    setCommonDocMaping(commonDocs === null || commonDocs === void 0 ? void 0 : (_commonDocs$commonMa = commonDocs["common-masters"]) === null || _commonDocs$commonMa === void 0 ? void 0 : _commonDocs$commonMa.DocumentType);
  }, [commonDocs]);
  useEffect(() => {
    var _filteredData, _filteredData$, _filteredData$$docTyp;
    let documents = [];
    let filteredData;
    if (isNoc) {
      var _nocDocs$NOC, _nocDocs$NOC$Document;
      filteredData = nocDocs === null || nocDocs === void 0 ? void 0 : (_nocDocs$NOC = nocDocs.NOC) === null || _nocDocs$NOC === void 0 ? void 0 : (_nocDocs$NOC$Document = _nocDocs$NOC.DocumentTypeMapping) === null || _nocDocs$NOC$Document === void 0 ? void 0 : _nocDocs$NOC$Document.filter(data => {
        return (data === null || data === void 0 ? void 0 : data.applicationType) === (noc === null || noc === void 0 ? void 0 : noc.applicationType) && (data === null || data === void 0 ? void 0 : data.nocType) === (noc === null || noc === void 0 ? void 0 : noc.nocType);
      });
    } else {
      var _bpaDocs$BPA, _bpaDocs$BPA$DocTypeM;
      filteredData = bpaDocs === null || bpaDocs === void 0 ? void 0 : (_bpaDocs$BPA = bpaDocs.BPA) === null || _bpaDocs$BPA === void 0 ? void 0 : (_bpaDocs$BPA$DocTypeM = _bpaDocs$BPA.DocTypeMapping) === null || _bpaDocs$BPA$DocTypeM === void 0 ? void 0 : _bpaDocs$BPA$DocTypeM.filter(data => {
        var _applicationData$addi, _applicationData$addi2;
        return data.WFState == (applicationData === null || applicationData === void 0 ? void 0 : applicationData.status) && data.RiskType == (applicationData === null || applicationData === void 0 ? void 0 : applicationData.riskType) && data.ServiceType == (applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$addi = applicationData.additionalDetails) === null || _applicationData$addi === void 0 ? void 0 : _applicationData$addi.serviceType) && data.applicationType == (applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$addi2 = applicationData.additionalDetails) === null || _applicationData$addi2 === void 0 ? void 0 : _applicationData$addi2.applicationType);
      });
    }
    if ((_filteredData = filteredData) !== null && _filteredData !== void 0 && (_filteredData$ = _filteredData[0]) !== null && _filteredData$ !== void 0 && (_filteredData$$docTyp = _filteredData$.docTypes) !== null && _filteredData$$docTyp !== void 0 && _filteredData$$docTyp[0]) {
      filteredData[0].docTypes[0].nocType = filteredData[0].nocType;
      filteredData[0].docTypes[0].additionalDetails = {
        submissionDetails: noc === null || noc === void 0 ? void 0 : noc.additionalDetails,
        applicationStatus: noc === null || noc === void 0 ? void 0 : noc.applicationStatus,
        appNumberLink: noc === null || noc === void 0 ? void 0 : noc.applicationNo,
        nocNo: noc === null || noc === void 0 ? void 0 : noc.nocNo
      };
      documents.push(filteredData[0].docTypes[0]);
    }
    let documentsList = [];
    if (documents && documents.length > 0) {
      documents.map(doc => {
        let code = doc.documentType;
        doc.dropdownData = [];
        commonDocMaping === null || commonDocMaping === void 0 ? void 0 : commonDocMaping.forEach(value => {
          let values = value.code.slice(0, code === null || code === void 0 ? void 0 : code.length);
          if (code === values) {
            doc.hasDropdown = true;
            doc.dropdownData.push(value);
          }
        });
        documentsList.push(doc);
      });
      setNocTaxDocuments(documentsList);
    }
  }, [nocDocs, commonDocMaping]);
  useEffect(() => {
    if (bpaApplicationStatus === 'NOC_VERIFICATION_INPROGRESS' && (actions === null || actions === void 0 ? void 0 : actions.length) > 0) setCheckEnablingDocs(true);else setCheckEnablingDocs(false);
  }, [applicationData, bpaActionsDetails]);
  return /*#__PURE__*/React.createElement("div", {
    style: {
      border: "1px solid #D6D5D4",
      padding: "16px 0px 16px 8px",
      background: "#FAFAFA",
      borderRadius: "5px",
      marginBottom: "24px",
      maxWidth: "950px"
    }
  }, /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
    label: isEmployee ? `${t(`BPA_${noc === null || noc === void 0 ? void 0 : noc.nocType}_HEADER`)}` : t(`BPA_${noc === null || noc === void 0 ? void 0 : noc.nocType}_HEADER`),
    labelStyle: {
      fontSize: "20px",
      width: "150%"
    }
  }), NOCdata && NOCdata.map((noc, index) => {
    if (noc !== null && noc !== void 0 && noc.value) {
      if ((noc === null || noc === void 0 ? void 0 : noc.field) == "STATUS") {
        return /*#__PURE__*/React.createElement(Row, {
          className: "border-none",
          label: isEmployee ? `${t(noc === null || noc === void 0 ? void 0 : noc.title)}` : t(noc === null || noc === void 0 ? void 0 : noc.title),
          text: noc !== null && noc !== void 0 && noc.value ? t(noc === null || noc === void 0 ? void 0 : noc.value) : t("CS_NA"),
          textStyle: (noc === null || noc === void 0 ? void 0 : noc.value) == "APPROVED" || (noc === null || noc === void 0 ? void 0 : noc.value) == "AUTO_APPROVED" ? {
            color: "#00703C"
          } : {
            color: "#D4351C"
          }
        });
      } else {
        return /*#__PURE__*/React.createElement(Row, {
          className: "border-none",
          label: isEmployee ? `${t(noc === null || noc === void 0 ? void 0 : noc.title)}` : t(noc === null || noc === void 0 ? void 0 : noc.title),
          text: noc !== null && noc !== void 0 && noc.value ? t(noc === null || noc === void 0 ? void 0 : noc.value) : t("CS_NA")
        });
      }
    }
  })), /*#__PURE__*/React.createElement(DocumentsPreview, {
    documents: docs,
    svgStyles: {
      width: "80px",
      height: "100px",
      viewBox: "0 0 25 25",
      minWidth: "80px"
    }
  }), checkEnablingDocs && (nocTaxDocuments === null || nocTaxDocuments === void 0 ? void 0 : nocTaxDocuments.map((document, index) => {
    return /*#__PURE__*/React.createElement(SelectDocument$2, {
      key: index,
      document: document,
      t: t,
      error: error,
      setError: setError,
      setNocDocuments: setNocDocuments,
      nocDocuments: nocDocuments,
      checkEnablingDocs: checkEnablingDocs
    });
  })));
};

const PermissionCheck = ({
  permissions,
  t
}) => {
  const [approvalChecks, setApprovalChecks, clearApprovals] = Digit.Hooks.useSessionStorage("OBPS_APPROVAL_CHECKS", permissions === null || permissions === void 0 ? void 0 : permissions.map(permission => ({
    label: permission,
    checked: false
  })));
  const [newApprovals, setNewApprovals, clearNewApprovals] = Digit.Hooks.useSessionStorage('OBPS_NEW_APPROVALS', []);
  useEffect(() => {
    return () => {
      Digit.SessionStorage.del("OBPS_NEW_APPROVALS");
      Digit.SessionStorage.del("OBPS_APPROVAL_CHECKS");
    };
  }, []);
  const handleAdd = () => {
    setNewApprovals([...newApprovals, {
      label: ''
    }]);
  };
  const handleRemove = index => {
    const values = [...newApprovals];
    values.splice(index, 1);
    setNewApprovals([...values]);
  };
  const handleChange = (event, index) => {
    setNewApprovals(() => {
      return newApprovals === null || newApprovals === void 0 ? void 0 : newApprovals.map((approval, id) => {
        if (index === id) {
          var _event$target;
          return {
            label: event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.value
          };
        }
        return approval;
      });
    });
  };
  const handleCheck = (event, label, index) => {
    const isChecked = event.target.checked;
    setApprovalChecks(() => {
      return approvalChecks === null || approvalChecks === void 0 ? void 0 : approvalChecks.map((approval, id) => {
        if (index === id) {
          return {
            ...approval,
            checked: isChecked
          };
        }
        return approval;
      });
    });
  };
  const isMobile = window.Digit.Utils.browser.isMobile();
  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(CardSubHeader, {
    style: {
      marginBottom: "16px",
      fontSize: "24px"
    }
  }, t("BPA_PERMIT_CONDITIONS")), approvalChecks === null || approvalChecks === void 0 ? void 0 : approvalChecks.map((permission, index) => /*#__PURE__*/React.createElement(CheckBox, {
    key: index,
    styles: {
      margin: "20px 0 40px",
      maxWidth: isMobile ? "100%" : "70%"
    },
    label: permission === null || permission === void 0 ? void 0 : permission.label,
    checked: permission === null || permission === void 0 ? void 0 : permission.checked,
    onChange: event => handleCheck(event, permission === null || permission === void 0 ? void 0 : permission.label, index),
    isLabelFirst: true,
    index: index
  })), newApprovals === null || newApprovals === void 0 ? void 0 : newApprovals.map((approval, index) => /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(TextInput, {
    key: index,
    value: approval === null || approval === void 0 ? void 0 : approval.label,
    onChange: event => handleChange(event, index),
    textInputStyle: {
      maxWidth: isMobile ? "96%" : "830px",
      width: isMobile ? "96%" : "830px"
    },
    style: isMobile ? {
      paddingRight: "10%"
    } : {},
    placeholder: t("BPA_ENTER_PERMIT_CONDITIONS_LABEL")
  }), /*#__PURE__*/React.createElement(LinkButton, {
    label: /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement(Close$7, {
      style: {
        float: "right",
        position: "relative",
        bottom: "32px",
        marginTop: "-22px",
        marginRight: isMobile ? "5%" : "35%"
      }
    }))),
    style: {},
    onClick: e => handleRemove(index)
  }))), /*#__PURE__*/React.createElement(LinkButton, {
    style: {
      color: "#a82227",
      maxWidth: isMobile ? "fit-content" : "10%",
      marginRight: "3%"
    },
    label: t(`BPA_ADD_MORE`),
    onClick: handleAdd
  }));
};

function PropertyDocuments({
  documents,
  svgStyles = {},
  isSendBackFlow = false
}) {
  const {
    t
  } = useTranslation();
  const [filesArray, setFilesArray] = useState(() => []);
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const [pdfFiles, setPdfFiles] = useState({});
  useEffect(() => {
    var _acc;
    let acc = [];
    documents === null || documents === void 0 ? void 0 : documents.forEach((element, index, array) => {
      acc = [...acc, ...(element.values ? element.values : [])];
    });
    setFilesArray((_acc = acc) === null || _acc === void 0 ? void 0 : _acc.map(value => value === null || value === void 0 ? void 0 : value.fileStoreId));
  }, [documents]);
  useEffect(() => {
    var _documents$;
    if (filesArray !== null && filesArray !== void 0 && filesArray.length && (documents === null || documents === void 0 ? void 0 : (_documents$ = documents[0]) === null || _documents$ === void 0 ? void 0 : _documents$.BS) === "BillAmend") {
      Digit.UploadServices.Filefetch(filesArray, Digit.ULBService.getCurrentTenantId()).then(res => {
        setPdfFiles(res === null || res === void 0 ? void 0 : res.data);
      });
    } else if (filesArray !== null && filesArray !== void 0 && filesArray.length) {
      Digit.UploadServices.Filefetch(filesArray, Digit.ULBService.getStateId()).then(res => {
        setPdfFiles(res === null || res === void 0 ? void 0 : res.data);
      });
    }
  }, [filesArray]);
  const checkLocation = window.location.href.includes("employee/tl") || window.location.href.includes("/obps") || window.location.href.includes("employee/ws");
  const isStakeholderApplication = window.location.href.includes("stakeholder");
  return /*#__PURE__*/React.createElement("div", {
    style: {
      marginTop: "19px"
    }
  }, !isStakeholderApplication && (documents === null || documents === void 0 ? void 0 : documents.map((document, index) => {
    var _document$values;
    return /*#__PURE__*/React.createElement(React.Fragment, {
      key: index
    }, document !== null && document !== void 0 && document.title ? /*#__PURE__*/React.createElement(CardSubHeader, {
      style: checkLocation ? {
        marginTop: "32px",
        marginBottom: "18px",
        color: "#0B0C0C, 100%",
        fontSize: "24px",
        lineHeight: "30px"
      } : {
        marginTop: "32px",
        marginBottom: "8px",
        color: "#505A5F",
        fontSize: "24px"
      }
    }, t(document === null || document === void 0 ? void 0 : document.title)) : null, /*#__PURE__*/React.createElement("div", {
      style: {
        display: "flex",
        flexWrap: "wrap",
        justifyContent: "flex-start"
      }
    }, document !== null && document !== void 0 && document.values && (document === null || document === void 0 ? void 0 : document.values.length) > 0 ? document === null || document === void 0 ? void 0 : (_document$values = document.values) === null || _document$values === void 0 ? void 0 : _document$values.map((value, index) => {
      var _pdfFiles$value$fileS, _value$documentType;
      return /*#__PURE__*/React.createElement("a", {
        target: "_",
        href: (_pdfFiles$value$fileS = pdfFiles[value.fileStoreId]) === null || _pdfFiles$value$fileS === void 0 ? void 0 : _pdfFiles$value$fileS.split(",")[0],
        style: {
          minWidth: "80px",
          marginRight: "10px",
          maxWidth: "100px",
          height: "auto"
        },
        key: index
      }, /*#__PURE__*/React.createElement("div", {
        style: {
          display: "flex",
          justifyContent: "center"
        }
      }, /*#__PURE__*/React.createElement(PDFSvg$1, null)), /*#__PURE__*/React.createElement("p", {
        style: checkLocation ? {
          marginTop: "8px",
          fontWeight: "bold",
          fontSize: "16px",
          lineHeight: "19px",
          color: "#505A5F",
          textAlign: "center"
        } : {
          marginTop: "8px",
          fontWeight: "bold"
        }
      }, t(value === null || value === void 0 ? void 0 : value.title)), isSendBackFlow ? value !== null && value !== void 0 && (_value$documentType = value.documentType) !== null && _value$documentType !== void 0 && _value$documentType.includes("NOC") ? /*#__PURE__*/React.createElement("p", {
        style: {
          textAlign: "center"
        }
      }, t(value === null || value === void 0 ? void 0 : value.documentType.split(".")[1])) : /*#__PURE__*/React.createElement("p", {
        style: {
          textAlign: "center"
        }
      }, t(value === null || value === void 0 ? void 0 : value.documentType)) : "");
    }) : !window.location.href.includes("citizen") && /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("p", null, t("BPA_NO_DOCUMENTS_UPLOADED_LABEL")))));
  })), isStakeholderApplication && (documents === null || documents === void 0 ? void 0 : documents.map((document, index) => {
    var _document$values2;
    return /*#__PURE__*/React.createElement(React.Fragment, {
      key: index
    }, document !== null && document !== void 0 && document.title ? /*#__PURE__*/React.createElement(CardSubHeader, {
      style: {
        marginTop: "32px",
        marginBottom: "8px",
        color: "#505A5F",
        fontSize: "24px"
      }
    }, t(document === null || document === void 0 ? void 0 : document.title)) : null, /*#__PURE__*/React.createElement("div", null, document !== null && document !== void 0 && document.values && (document === null || document === void 0 ? void 0 : document.values.length) > 0 ? document === null || document === void 0 ? void 0 : (_document$values2 = document.values) === null || _document$values2 === void 0 ? void 0 : _document$values2.map((value, index) => {
      var _pdfFiles$value$fileS2;
      return /*#__PURE__*/React.createElement("a", {
        target: "_",
        href: (_pdfFiles$value$fileS2 = pdfFiles[value.fileStoreId]) === null || _pdfFiles$value$fileS2 === void 0 ? void 0 : _pdfFiles$value$fileS2.split(",")[0],
        style: {
          minWidth: svgStyles !== null && svgStyles !== void 0 && svgStyles.minWidth ? svgStyles === null || svgStyles === void 0 ? void 0 : svgStyles.minWidth : "160px",
          marginRight: "20px"
        },
        key: index
      }, /*#__PURE__*/React.createElement("div", {
        style: {
          maxWidth: "940px",
          padding: "8px",
          borderRadius: "4px",
          border: "1px solid #D6D5D4",
          background: "#FAFAFA"
        }
      }, /*#__PURE__*/React.createElement("p", {
        style: {
          marginTop: "8px",
          fontWeight: "bold",
          marginBottom: "10px"
        }
      }, t(value === null || value === void 0 ? void 0 : value.title)), value !== null && value !== void 0 && value.docInfo ? /*#__PURE__*/React.createElement("div", {
        style: {
          fontSize: "12px",
          color: "#505A5F",
          fontWeight: 400,
          lineHeight: "15px",
          marginBottom: "10px"
        }
      }, `${t(value === null || value === void 0 ? void 0 : value.docInfo)}`) : null, /*#__PURE__*/React.createElement(PDFSvg$1, null), /*#__PURE__*/React.createElement("p", {
        style: {
          marginTop: "8px",
          fontSize: "16px",
          lineHeight: "19px",
          color: "#505A5F",
          fontWeight: "400"
        }
      }, `${t(value === null || value === void 0 ? void 0 : value.title)}`)));
    }) : !window.location.href.includes("citizen") && /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("p", null, t("BPA_NO_DOCUMENTS_UPLOADED_LABEL")))));
  })));
}

function PropertyEstimates({
  taxHeadEstimatesCalculation
}) {
  const {
    taxHeadEstimates
  } = taxHeadEstimatesCalculation;
  const {
    t
  } = useTranslation();
  return /*#__PURE__*/React.createElement("div", {
    style: {
      marginTop: "40px"
    }
  }, /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
    label: t("ES_PT_TITLE_TAX_HEADS"),
    text: t("ES_PT_TITLE_AMOUNT"),
    className: "border-none",
    textStyle: {
      fontWeight: "bold"
    }
  }), /*#__PURE__*/React.createElement(BreakLine, {
    style: {
      margin: "16px 0",
      width: "40%"
    }
  }), taxHeadEstimates === null || taxHeadEstimates === void 0 ? void 0 : taxHeadEstimates.map((estimate, index) => {
    return /*#__PURE__*/React.createElement(Row, {
      key: t(estimate.taxHeadCode),
      label: t(estimate.taxHeadCode),
      text: `₹ ${estimate.estimateAmount}` || "N/A",
      last: index === (taxHeadEstimates === null || taxHeadEstimates === void 0 ? void 0 : taxHeadEstimates.length) - 1,
      className: "border-none",
      textStyle: {
        color: "#505A5F"
      },
      labelStyle: {
        color: "#505A5F"
      }
    });
  }), /*#__PURE__*/React.createElement(BreakLine, {
    style: {
      margin: "16px 0",
      width: "40%"
    }
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("ES_PT_TITLE_TOTAL_DUE_AMOUNT"),
    text: `₹ ${taxHeadEstimatesCalculation === null || taxHeadEstimatesCalculation === void 0 ? void 0 : taxHeadEstimatesCalculation.totalAmount}` || "N/A",
    className: "border-none",
    textStyle: {
      fontSize: "24px",
      fontWeight: "bold"
    }
  })));
}

function PropertyFloors({
  floors
}) {
  const {
    t
  } = useTranslation();
  return /*#__PURE__*/React.createElement(React.Fragment, null, floors.map(floor => {
    var _floor$values;
    return /*#__PURE__*/React.createElement("div", {
      key: t(floor === null || floor === void 0 ? void 0 : floor.title),
      style: {
        marginTop: "19px"
      }
    }, /*#__PURE__*/React.createElement(CardSubHeader, {
      style: {
        marginBottom: "8px",
        color: "#505A5F",
        fontSize: "24px"
      }
    }, t(floor === null || floor === void 0 ? void 0 : floor.title)), floor === null || floor === void 0 ? void 0 : (_floor$values = floor.values) === null || _floor$values === void 0 ? void 0 : _floor$values.map((value, index) => {
      var _value$values;
      return /*#__PURE__*/React.createElement(React.Fragment, {
        key: index
      }, /*#__PURE__*/React.createElement(CardSectionHeader, {
        style: {
          marginBottom: "16px",
          color: "#505A5F",
          fontSize: "16px",
          marginTop: index !== 0 ? "16px" : "revert"
        }
      }, t(value.title)), /*#__PURE__*/React.createElement(StatusTable, {
        style: {
          position: "relative",
          padding: "8px"
        }
      }, /*#__PURE__*/React.createElement("div", {
        style: {
          border: "1px solid #D6D5D4",
          padding: "16px",
          marginTop: "8px",
          borderRadius: "4px",
          background: "#FAFAFA",
          maxWidth: "100%"
        }
      }, value === null || value === void 0 ? void 0 : (_value$values = value.values) === null || _value$values === void 0 ? void 0 : _value$values.map((value, index) => {
        var _value$values2;
        if (value.map === true && value.value !== "N/A") {
          return /*#__PURE__*/React.createElement(Row, {
            key: t(value.title),
            label: t(value.title),
            text: /*#__PURE__*/React.createElement("img", {
              src: t(value.value),
              alt: ""
            })
          });
        }
        return /*#__PURE__*/React.createElement(Row, {
          key: t(value.title),
          label: t(value.title),
          text: t(value.value) || "N/A",
          last: index === (value === null || value === void 0 ? void 0 : (_value$values2 = value.values) === null || _value$values2 === void 0 ? void 0 : _value$values2.length) - 1,
          caption: value.caption,
          className: "border-none"
        });
      }))));
    }));
  }));
}

function PropertyOwners({
  owners
}) {
  const {
    t
  } = useTranslation();
  const checkOwnerLength = (owners === null || owners === void 0 ? void 0 : owners.length) || 1;
  let cardStyles = {
    marginTop: "19px"
  };
  let statusTableStyles = {
    position: "relative",
    padding: "8px"
  };
  let rowContainerStyle = {
    justifyContent: "space-between",
    fontSize: "16px",
    lineHeight: "19px",
    color: "#0B0C0C"
  };
  if ( Number(checkOwnerLength) > 1) {
    cardStyles = {
      marginTop: "19px",
      background: "#FAFAFA",
      border: "1px solid #D6D5D4",
      borderRadius: "4px",
      padding: "8px",
      lineHeight: "19px",
      maxWidth: "600px",
      minWidth: "280px"
    };
  } else if ( !(Number(checkOwnerLength) > 1)) {
    cardStyles = {
      marginTop: "19px",
      lineHeight: "19px",
      maxWidth: "600px",
      minWidth: "280px"
    };
    statusTableStyles = {
      position: "relative",
      marginTop: "19px"
    };
  }
  if (window.location.href.includes("obps")) {
    cardStyles = {
      ...cardStyles,
      maxWidth: "950px"
    };
    cardStyles = {
      ...cardStyles,
      maxWidth: "950px"
    };
    rowContainerStyle = {};
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, owners.map((owner, index) => {
    var _owner$values;
    return /*#__PURE__*/React.createElement("div", {
      key: t(owner === null || owner === void 0 ? void 0 : owner.title),
      style: cardStyles
    }, /*#__PURE__*/React.createElement(CardSubHeader, {
      style:  Number(checkOwnerLength) > 1 ? {
        marginBottom: "8px",
        paddingBottom: "9px",
        color: "#0B0C0C",
        fontSize: "16px",
        lineHeight: "19px"
      } : {
        marginBottom: "8px",
        color: "#505A5F",
        fontSize: "24px"
      }
    },  Number(checkOwnerLength) > 1 ? `${t(owner === null || owner === void 0 ? void 0 : owner.title)} ${index + 1}` : t(owner === null || owner === void 0 ? void 0 : owner.title)), /*#__PURE__*/React.createElement(React.Fragment, {
      key: index
    }, /*#__PURE__*/React.createElement(StatusTable, {
      style: statusTableStyles
    }, /*#__PURE__*/React.createElement("div", {
      style: {
        maxWidth: "640px",
        top: 0,
        left: 0,
        bottom: 0,
        right: 0,
        width: "auto"
      }
    }), owner === null || owner === void 0 ? void 0 : (_owner$values = owner.values) === null || _owner$values === void 0 ? void 0 : _owner$values.map((value, index) => {
      var _value$values;
      if (value.map === true && value.value !== "N/A") {
        return /*#__PURE__*/React.createElement(Row, {
          key: t(value.title),
          label: t(value.title),
          text: /*#__PURE__*/React.createElement("img", {
            src: t(value.value),
            alt: "",
            privacy: value === null || value === void 0 ? void 0 : value.privacy
          })
        });
      }
      return /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement(Row, {
        key: t(value.title),
        label:  `${t(value.title)}`,
        text: t(value.value) || "N/A",
        last: index === (value === null || value === void 0 ? void 0 : (_value$values = value.values) === null || _value$values === void 0 ? void 0 : _value$values.length) - 1,
        caption: value.caption,
        className: "border-none",
        textStyle: value.textStyle,
        privacy: value === null || value === void 0 ? void 0 : value.privacy,
        rowContainerStyle: rowContainerStyle
      }));
    }))));
  }));
}

const ScruntinyDetails = ({
  scrutinyDetails,
  paymentsList: _paymentsList = []
}) => {
  var _scrutinyDetails$valu, _scrutinyDetails$perm, _scrutinyDetails$scru;
  const {
    t
  } = useTranslation();
  const getTextValues = data => {
    if (data !== null && data !== void 0 && data.value && data !== null && data !== void 0 && data.isTransLate) return /*#__PURE__*/React.createElement("span", {
      style: {
        color: "#00703C"
      }
    }, t(data === null || data === void 0 ? void 0 : data.value));else if (data !== null && data !== void 0 && data.value && data !== null && data !== void 0 && data.isTransLate) return t(data === null || data === void 0 ? void 0 : data.value);else if (data !== null && data !== void 0 && data.value) return data === null || data === void 0 ? void 0 : data.value;else t("NA");
  };
  return /*#__PURE__*/React.createElement(Fragment$1, null, !(scrutinyDetails !== null && scrutinyDetails !== void 0 && scrutinyDetails.isChecklist) && /*#__PURE__*/React.createElement("div", {
    style: {
      background: "#FAFAFA",
      border: "1px solid #D6D5D4",
      padding: "8px",
      borderRadius: "4px",
      maxWidth: "950px"
    }
  }, /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement("div", null, scrutinyDetails === null || scrutinyDetails === void 0 ? void 0 : (_scrutinyDetails$valu = scrutinyDetails.values) === null || _scrutinyDetails$valu === void 0 ? void 0 : _scrutinyDetails$valu.map((value, index) => {
    if (value !== null && value !== void 0 && value.isUnit) return /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      textStyle: (value === null || value === void 0 ? void 0 : value.value) === "Paid" ? {
        color: "darkgreen"
      } : (value === null || value === void 0 ? void 0 : value.value) === "Unpaid" ? {
        color: "red"
      } : {},
      key: `${value.title}`,
      label: `${t(`${value.title}`)}`,
      text: value !== null && value !== void 0 && value.value ? `${getTextValues(value)} ${t(value === null || value === void 0 ? void 0 : value.isUnit)}` : t("NA"),
      labelStyle: value !== null && value !== void 0 && value.isHeader ? {
        fontSize: "20px"
      } : {}
    });else if (value !== null && value !== void 0 && value.isHeader && !(value !== null && value !== void 0 && value.isUnit)) return /*#__PURE__*/React.createElement(CardSubHeader, {
      style: {
        fontSize: "20px",
        paddingBottom: "10px"
      }
    }, t(value === null || value === void 0 ? void 0 : value.title));else if (value !== null && value !== void 0 && value.isSubTitle && !(value !== null && value !== void 0 && value.isUnit)) return /*#__PURE__*/React.createElement(CardSubHeader, {
      style: {
        fontSize: "20px",
        paddingBottom: "10px",
        margin: "0px"
      }
    }, t(value === null || value === void 0 ? void 0 : value.title));else return /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      textStyle: (value === null || value === void 0 ? void 0 : value.value) === "Paid" ? {
        color: "darkgreen",
        wordBreak: "break-all"
      } : (value === null || value === void 0 ? void 0 : value.value) === "Unpaid" ? {
        color: "red",
        wordBreak: "break-all"
      } : {
        wordBreak: "break-all"
      },
      key: `${value.title}`,
      label: `${t(`${value.title}`)}`,
      text: getTextValues(value),
      labelStyle: value !== null && value !== void 0 && value.isHeader ? {
        fontSize: "20px"
      } : {}
    });
  }), scrutinyDetails === null || scrutinyDetails === void 0 ? void 0 : (_scrutinyDetails$perm = scrutinyDetails.permit) === null || _scrutinyDetails$perm === void 0 ? void 0 : _scrutinyDetails$perm.map((value, ind) => {
    return /*#__PURE__*/React.createElement(CardLabel, {
      style: {
        fontWeight: "400"
      }
    }, value === null || value === void 0 ? void 0 : value.title);
  })), /*#__PURE__*/React.createElement("div", null, scrutinyDetails === null || scrutinyDetails === void 0 ? void 0 : (_scrutinyDetails$scru = scrutinyDetails.scruntinyDetails) === null || _scrutinyDetails$scru === void 0 ? void 0 : _scrutinyDetails$scru.map((report, index) => {
    return /*#__PURE__*/React.createElement(Fragment$1, null, /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      label: `${t(report === null || report === void 0 ? void 0 : report.title)}`,
      labelStyle: {
        width: "150%"
      }
    }), /*#__PURE__*/React.createElement("a", {
      href: report === null || report === void 0 ? void 0 : report.value
    }, " ", /*#__PURE__*/React.createElement(PDFSvg$1, null), " "), /*#__PURE__*/React.createElement("p", {
      style: {
        margin: "8px 0px",
        fontWeight: "bold",
        fontSize: "16px",
        lineHeight: "19px",
        color: "#505A5F"
      }
    }, t(report === null || report === void 0 ? void 0 : report.text)));
  })))));
};

const SubOccupancyTable = ({
  edcrDetails,
  applicationData
}) => {
  var _edcrDetails$values, _edcrDetails$subOccup, _edcrDetails$subOccup2, _edcrDetails$subOccup3, _edcrDetails$subOccup4;
  const {
    t
  } = useTranslation();
  const isMobile = window.Digit.Utils.browser.isMobile();
  const tableHeader = [{
    name: "BPA_TABLE_COL_FLOOR",
    id: "Floor"
  }, {
    name: "BPA_TABLE_COL_LEVEL",
    id: "Level"
  }, {
    name: "BPA_TABLE_COL_OCCUPANCY",
    id: "Occupancy"
  }, {
    name: "BPA_TABLE_COL_BUILDUPAREA",
    id: "BuildupArea"
  }, {
    name: "BPA_TABLE_COL_FLOORAREA",
    id: "FloorArea"
  }, {
    name: "BPA_TABLE_COL_CARPETAREA",
    id: "CarpetArea"
  }];
  const accessData = plot => {
    const name = plot;
    return (originalRow, rowIndex, columns) => {
      return originalRow[name];
    };
  };
  const tableColumns = useMemo(() => {
    return tableHeader.map(ob => ({
      Header: t(`${ob.name}`),
      accessor: accessData(ob.id),
      id: ob.id
    }));
  });
  function getFloorData(block) {
    var _block$building;
    let floors = [];
    block === null || block === void 0 ? void 0 : (_block$building = block.building) === null || _block$building === void 0 ? void 0 : _block$building.floors.map(ob => {
      var _ob$occupancies, _ob$occupancies$, _ob$occupancies2, _ob$occupancies2$, _ob$occupancies3, _ob$occupancies3$, _ob$occupancies4, _ob$occupancies4$;
      floors.push({
        Floor: t(`BPA_FLOOR_NAME_${ob.number}`),
        Level: ob.number,
        Occupancy: t(`${(_ob$occupancies = ob.occupancies) === null || _ob$occupancies === void 0 ? void 0 : (_ob$occupancies$ = _ob$occupancies[0]) === null || _ob$occupancies$ === void 0 ? void 0 : _ob$occupancies$.type}`),
        BuildupArea: (_ob$occupancies2 = ob.occupancies) === null || _ob$occupancies2 === void 0 ? void 0 : (_ob$occupancies2$ = _ob$occupancies2[0]) === null || _ob$occupancies2$ === void 0 ? void 0 : _ob$occupancies2$.builtUpArea,
        FloorArea: ((_ob$occupancies3 = ob.occupancies) === null || _ob$occupancies3 === void 0 ? void 0 : (_ob$occupancies3$ = _ob$occupancies3[0]) === null || _ob$occupancies3$ === void 0 ? void 0 : _ob$occupancies3$.floorArea) || 0,
        CarpetArea: ((_ob$occupancies4 = ob.occupancies) === null || _ob$occupancies4 === void 0 ? void 0 : (_ob$occupancies4$ = _ob$occupancies4[0]) === null || _ob$occupancies4$ === void 0 ? void 0 : _ob$occupancies4$.CarpetArea) || 0,
        key: t(`BPA_FLOOR_NAME_${ob.number}`)
      });
    });
    return floors;
  }
  const stringReplaceAll = (str = "", searcher = "", replaceWith = "") => {
    if (searcher == "") return str;
    while (str.includes(searcher)) {
      str = str.replace(searcher, replaceWith);
    }
    return str;
  };
  function getSubOccupancyValues(index) {
    var _applicationData$land;
    let values = applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$land = applicationData.landInfo) === null || _applicationData$land === void 0 ? void 0 : _applicationData$land.unit;
    let returnValue = "";
    if ((values === null || values === void 0 ? void 0 : values.length) > 0) {
      var _values$index, _values$index$usageCa;
      let splitArray = (_values$index = values[index]) === null || _values$index === void 0 ? void 0 : (_values$index$usageCa = _values$index.usageCategory) === null || _values$index$usageCa === void 0 ? void 0 : _values$index$usageCa.split(',');
      if (splitArray !== null && splitArray !== void 0 && splitArray.length) {
        const returnValueArray = splitArray.map(data => data ? `${t(`BPA_SUBOCCUPANCYTYPE_${stringReplaceAll(data === null || data === void 0 ? void 0 : data.toUpperCase(), "-", "_")}`)}` : "NA");
        returnValue = returnValueArray.join(', ');
      }
    }
    return returnValue ? returnValue : "NA";
  }
  return /*#__PURE__*/React.createElement(Fragment$1, null, /*#__PURE__*/React.createElement("div", {
    style: {
      background: "#FAFAFA",
      border: "1px solid #D6D5D4",
      padding: "8px",
      borderRadius: "4px",
      maxWidth: "950px",
      minWidth: "280px"
    }
  }, /*#__PURE__*/React.createElement(StatusTable, null, edcrDetails === null || edcrDetails === void 0 ? void 0 : (_edcrDetails$values = edcrDetails.values) === null || _edcrDetails$values === void 0 ? void 0 : _edcrDetails$values.map((value, index) => {
    if (value !== null && value !== void 0 && value.isHeader) return /*#__PURE__*/React.createElement(CardSubHeader, {
      style: {
        fontSize: "20px",
        paddingBottom: "10px"
      }
    }, t(value === null || value === void 0 ? void 0 : value.title));else return /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      labelStyle: {
        width: "100%",
        fontSize: "20px"
      },
      key: `${value.title}`,
      label: `${t(`${value.title}`)}`,
      text: value !== null && value !== void 0 && value.value ? value === null || value === void 0 ? void 0 : value.value : ""
    });
  })), edcrDetails === null || edcrDetails === void 0 ? void 0 : (_edcrDetails$subOccup = edcrDetails.subOccupancyTableDetails) === null || _edcrDetails$subOccup === void 0 ? void 0 : (_edcrDetails$subOccup2 = _edcrDetails$subOccup[0]) === null || _edcrDetails$subOccup2 === void 0 ? void 0 : (_edcrDetails$subOccup3 = _edcrDetails$subOccup2.value) === null || _edcrDetails$subOccup3 === void 0 ? void 0 : (_edcrDetails$subOccup4 = _edcrDetails$subOccup3.planDetail) === null || _edcrDetails$subOccup4 === void 0 ? void 0 : _edcrDetails$subOccup4.blocks.map((block, index) => {
    var _edcrDetails$subOccup5, _edcrDetails$subOccup6, _edcrDetails$subOccup7, _edcrDetails$subOccup8, _edcrDetails$subOccup9;
    return /*#__PURE__*/React.createElement("div", {
      key: index,
      style: (edcrDetails === null || edcrDetails === void 0 ? void 0 : (_edcrDetails$subOccup5 = edcrDetails.subOccupancyTableDetails) === null || _edcrDetails$subOccup5 === void 0 ? void 0 : (_edcrDetails$subOccup6 = _edcrDetails$subOccup5[0]) === null || _edcrDetails$subOccup6 === void 0 ? void 0 : (_edcrDetails$subOccup7 = _edcrDetails$subOccup6.value) === null || _edcrDetails$subOccup7 === void 0 ? void 0 : (_edcrDetails$subOccup8 = _edcrDetails$subOccup7.planDetail) === null || _edcrDetails$subOccup8 === void 0 ? void 0 : (_edcrDetails$subOccup9 = _edcrDetails$subOccup8.blocks) === null || _edcrDetails$subOccup9 === void 0 ? void 0 : _edcrDetails$subOccup9.length) > 0 ? {
        marginBottom: "30px",
        background: "#FAFAFA",
        border: "1px solid #D6D5D4",
        padding: "8px",
        borderRadius: "4px",
        maxWidth: "950px",
        minWidth: "280px"
      } : {
        marginBottom: "30px"
      }
    }, /*#__PURE__*/React.createElement(CardSubHeader, {
      style: {
        marginBottom: "8px",
        paddingBottom: "9px",
        color: "#0B0C0C",
        fontSize: "18px",
        lineHeight: "19px"
      }
    }, t("BPA_BLOCK_SUBHEADER"), " ", index + 1), /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      textStyle: {
        wordBreak: "break-word"
      },
      label: `${t("BPA_SUB_OCCUPANCY_LABEL")}`,
      text: getSubOccupancyValues(index)
    })), /*#__PURE__*/React.createElement("div", {
      style: window.location.href.includes("citizen") || isMobile ? {
        overflow: "scroll"
      } : {
        maxWidth: "950px",
        maxHeight: "280px"
      }
    }, /*#__PURE__*/React.createElement(Table, {
      className: "customTable table-fixed-first-column table-border-style",
      t: t,
      disableSort: false,
      autoSort: true,
      manualPagination: false,
      isPaginationRequired: false,
      initSortId: "S N ",
      data: getFloorData(block),
      columns: tableColumns,
      getCellProps: cellInfo => {
        return {
          style: {}
        };
      }
    })));
  })));
};

const Reason = ({
  headComment,
  otherComment
}) => /*#__PURE__*/React.createElement("div", {
  className: "checkpoint-comments-wrap"
}, /*#__PURE__*/React.createElement("h4", null, headComment), /*#__PURE__*/React.createElement("p", null, otherComment));

const TLCaption = ({
  data,
  OpenImage,
  privacy: _privacy = {}
}) => {
  var _data$wfComment, _data$thumbnailsToSho, _data$thumbnailsToSho2;
  const {
    t
  } = useTranslation();
  return /*#__PURE__*/React.createElement("div", null, data.date && /*#__PURE__*/React.createElement("p", null, data.date), /*#__PURE__*/React.createElement("p", null, data.name), data.mobileNumber && /*#__PURE__*/React.createElement("span", {
    style: {
      display: "inline-flex",
      width: "fit-content",
      marginLeft: "10px"
    }
  }, /*#__PURE__*/React.createElement(TelePhone, {
    mobile: data.mobileNumber,
    privacy: _privacy
  }), /*#__PURE__*/React.createElement("p", null, "\xA0\xA0\xA0\xA0")), data.source && /*#__PURE__*/React.createElement("p", null, t("ES_APPLICATION_DETAILS_APPLICATION_CHANNEL_" + data.source.toUpperCase())), data.comment && /*#__PURE__*/React.createElement(Reason, {
    otherComment: data === null || data === void 0 ? void 0 : data.otherComment,
    headComment: data === null || data === void 0 ? void 0 : data.comment
  }), data !== null && data !== void 0 && data.wfComment ? /*#__PURE__*/React.createElement("div", null, data === null || data === void 0 ? void 0 : (_data$wfComment = data.wfComment) === null || _data$wfComment === void 0 ? void 0 : _data$wfComment.map(e => /*#__PURE__*/React.createElement("div", {
    className: "TLComments"
  }, /*#__PURE__*/React.createElement("h3", null, t("WF_COMMON_COMMENTS")), /*#__PURE__*/React.createElement("p", null, e)))) : null, (data === null || data === void 0 ? void 0 : (_data$thumbnailsToSho = data.thumbnailsToShow) === null || _data$thumbnailsToSho === void 0 ? void 0 : (_data$thumbnailsToSho2 = _data$thumbnailsToSho.thumbs) === null || _data$thumbnailsToSho2 === void 0 ? void 0 : _data$thumbnailsToSho2.length) > 0 ? /*#__PURE__*/React.createElement("div", {
    className: "TLComments"
  }, /*#__PURE__*/React.createElement("h3", null, t("CS_COMMON_ATTACHMENTS")), /*#__PURE__*/React.createElement(DisplayPhotos, {
    srcs: data === null || data === void 0 ? void 0 : data.thumbnailsToShow.thumbs,
    onClick: (src, index) => {
      OpenImage(src, index, data === null || data === void 0 ? void 0 : data.thumbnailsToShow);
    }
  })) : null);
};

function TLTradeAccessories({
  units
}) {
  const {
    t
  } = useTranslation();
  return /*#__PURE__*/React.createElement(React.Fragment, null, units.map((unit, index) => {
    var _unit$values;
    return (
      /*#__PURE__*/
      React.createElement("div", {
        key: t(unit === null || unit === void 0 ? void 0 : unit.title),
        style: {
          marginTop: "19px",
          background: "#FAFAFA",
          border: "1px solid #D6D5D4",
          borderRadius: "4px",
          padding: "8px",
          lineHeight: "19px",
          maxWidth: "600px",
          minWidth: "280px"
        }
      }, /*#__PURE__*/React.createElement(CardSubHeader, {
        style: {
          marginBottom: "8px",
          paddingBottom: "9px",
          color: "#0B0C0C",
          fontSize: "16px",
          lineHeight: "19px"
        }
      }, `${t(unit === null || unit === void 0 ? void 0 : unit.title)} ${index + 1}`), /*#__PURE__*/React.createElement(React.Fragment, {
        key: index
      }, /*#__PURE__*/React.createElement(StatusTable, {
        style: {
          position: "relative",
          marginTop: "19px"
        }
      }, /*#__PURE__*/React.createElement("div", {
        style: {
          position: "absolute",
          maxWidth: "640px",
          top: 0,
          left: 0,
          bottom: 0,
          right: 0,
          width: "auto"
        }
      }), unit === null || unit === void 0 ? void 0 : (_unit$values = unit.values) === null || _unit$values === void 0 ? void 0 : _unit$values.map((value, index) => {
        var _value$values;
        if (value.map === true && value.value !== "N/A") {
          return /*#__PURE__*/React.createElement(Row, {
            key: t(value.title),
            label: t(value.title),
            text: /*#__PURE__*/React.createElement("img", {
              src: t(value.value),
              alt: ""
            })
          });
        }
        return /*#__PURE__*/React.createElement(Row, {
          key: t(value.title),
          label: `${t(value.title)}:`,
          text: t(value.value) || "N/A",
          last: index === (value === null || value === void 0 ? void 0 : (_value$values = value.values) === null || _value$values === void 0 ? void 0 : _value$values.length) - 1,
          caption: value.caption,
          className: "border-none",
          rowContainerStyle: {
            justifyContent: "space-between",
            fontSize: "16px",
            lineHeight: "19px",
            color: "#0B0C0C"
          }
        });
      }))))
    );
  }));
}

function TLTradeUnits({
  units
}) {
  const {
    t
  } = useTranslation();
  return /*#__PURE__*/React.createElement(React.Fragment, null, units.map((unit, index) => {
    var _unit$values;
    return (
      /*#__PURE__*/
      React.createElement("div", {
        key: t(unit === null || unit === void 0 ? void 0 : unit.title),
        style: {
          marginTop: "19px",
          background: "#FAFAFA",
          border: "1px solid #D6D5D4",
          borderRadius: "4px",
          padding: "8px",
          lineHeight: "19px",
          maxWidth: "600px",
          minWidth: "280px"
        }
      }, /*#__PURE__*/React.createElement(CardSubHeader, {
        style: {
          marginBottom: "9px",
          paddingBottom: "9px",
          color: "#0B0C0C",
          fontSize: "16px",
          lineHeight: "19px"
        }
      }, `${t(unit === null || unit === void 0 ? void 0 : unit.title)} ${index + 1}`), /*#__PURE__*/React.createElement(React.Fragment, {
        key: index
      }, /*#__PURE__*/React.createElement(StatusTable, {
        style: {
          position: "relative",
          marginTop: "19px"
        }
      }, /*#__PURE__*/React.createElement("div", {
        style: {
          position: "absolute",
          maxWidth: "640px",
          top: 0,
          left: 0,
          bottom: 0,
          right: 0,
          width: "auto"
        }
      }), unit === null || unit === void 0 ? void 0 : (_unit$values = unit.values) === null || _unit$values === void 0 ? void 0 : _unit$values.map((value, index) => {
        var _value$values;
        if (value.map === true && value.value !== "N/A") {
          return /*#__PURE__*/React.createElement(Row, {
            key: t(value.title),
            label: t(value.title),
            text: /*#__PURE__*/React.createElement("img", {
              src: t(value.value),
              alt: ""
            })
          });
        }
        return /*#__PURE__*/React.createElement(Row, {
          key: t(value.title),
          label: `${t(value.title)}:`,
          text: t(value.value) || "NA",
          last: index === (value === null || value === void 0 ? void 0 : (_value$values = value.values) === null || _value$values === void 0 ? void 0 : _value$values.length) - 1,
          caption: value.caption,
          className: "border-none",
          rowContainerStyle: {
            justifyContent: "space-between",
            fontSize: "16px",
            lineHeight: "19px",
            color: "#0B0C0C"
          }
        });
      }))))
    );
  }));
}

const getQueryStringParams$1 = query => {
  return query ? (/^[?#]/.test(query) ? query.slice(1) : query).split("&").reduce((params, param) => {
    let [key, value] = param.split("=");
    params[key] = value ? decodeURIComponent(value.replace(/\+/g, " ")) : "";
    return params;
  }, {}) : {};
};

const cardSubHeaderStyles = () => {
  return {
    fontSize: "24px",
    marginBottom: "16px",
    marginTop: "32px"
  };
};
const WSAdditonalDetails = ({
  wsAdditionalDetails,
  oldValue
}) => {
  var _wsAdditionalDetails$, _wsAdditionalDetails$2, _wsAdditionalDetails$3, _wsAdditionalDetails$4;
  const {
    t
  } = useTranslation();
  let filters = getQueryStringParams$1(location.search);
  const isModify = filters === null || filters === void 0 ? void 0 : filters.mode;
  var {
    connectionDetails,
    plumberDetails,
    roadCuttingDetails,
    activationDetails
  } = (wsAdditionalDetails === null || wsAdditionalDetails === void 0 ? void 0 : wsAdditionalDetails.additionalDetails) || {
    connectionDetails: [],
    plumberDetails: []
  };
  return /*#__PURE__*/React.createElement(Fragment$1, null, /*#__PURE__*/React.createElement("div", {
    style: {
      lineHeight: "19px",
      maxWidth: "950px",
      minWidth: "280px"
    }
  }, (wsAdditionalDetails === null || wsAdditionalDetails === void 0 ? void 0 : (_wsAdditionalDetails$ = wsAdditionalDetails.additionalDetails) === null || _wsAdditionalDetails$ === void 0 ? void 0 : _wsAdditionalDetails$.connectionDetails) && /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(CardSubHeader, {
    style: cardSubHeaderStyles()
  }, t("WS_COMMON_CONNECTION_DETAIL")), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
    className: "connection-details-new-value-wrapper"
  }, connectionDetails === null || connectionDetails === void 0 ? void 0 : connectionDetails.map((value, index) => {
    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      key: `${value.title}`,
      label: `${t(`${value.title}`)}`,
      text: value !== null && value !== void 0 && value.oldValue ? value === null || value === void 0 ? void 0 : value.oldValue : value !== null && value !== void 0 && value.value ? value === null || value === void 0 ? void 0 : value.value : ""
    }));
  })))), (wsAdditionalDetails === null || wsAdditionalDetails === void 0 ? void 0 : (_wsAdditionalDetails$2 = wsAdditionalDetails.additionalDetails) === null || _wsAdditionalDetails$2 === void 0 ? void 0 : _wsAdditionalDetails$2.plumberDetails) && isModify != "MODIFY" && /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(CardSubHeader, {
    style: cardSubHeaderStyles()
  }, t("WS_COMMON_PLUMBER_DETAILS")), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
    className: "plumber-details-new-value-wrapper"
  }, plumberDetails === null || plumberDetails === void 0 ? void 0 : plumberDetails.map((value, index) => {
    return /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      key: `${value.title}`,
      label: `${t(`${value.title}`)}`,
      text: value !== null && value !== void 0 && value.oldValue ? value === null || value === void 0 ? void 0 : value.oldValue : value !== null && value !== void 0 && value.value ? value === null || value === void 0 ? void 0 : value.value : "",
      privacy: value.privacy
    });
  })))), (wsAdditionalDetails === null || wsAdditionalDetails === void 0 ? void 0 : (_wsAdditionalDetails$3 = wsAdditionalDetails.additionalDetails) === null || _wsAdditionalDetails$3 === void 0 ? void 0 : _wsAdditionalDetails$3.roadCuttingDetails) && isModify != "MODIFY" && /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(CardSubHeader, {
    style: cardSubHeaderStyles()
  }, t("WS_ROAD_CUTTING_DETAILS")), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
    className: "plumber-details-new-value-wrapper"
  }, roadCuttingDetails === null || roadCuttingDetails === void 0 ? void 0 : roadCuttingDetails.map(value => {
    var _value$values;
    return /*#__PURE__*/React.createElement("div", {
      style: (roadCuttingDetails === null || roadCuttingDetails === void 0 ? void 0 : roadCuttingDetails.length) > 1 ? {
        border: "1px solid #D6D5D4",
        background: "#FAFAFA",
        borderRadius: "4px",
        padding: "10px 10px 0px 10px",
        margin: "5px 0px"
      } : {}
    }, value === null || value === void 0 ? void 0 : (_value$values = value.values) === null || _value$values === void 0 ? void 0 : _value$values.map(roadValue => /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      key: `${roadValue.title}`,
      label: `${t(`${roadValue.title}`)}`,
      text: roadValue !== null && roadValue !== void 0 && roadValue.oldValue ? roadValue === null || roadValue === void 0 ? void 0 : roadValue.oldValue : roadValue !== null && roadValue !== void 0 && roadValue.value ? roadValue === null || roadValue === void 0 ? void 0 : roadValue.value : ""
    })));
  })))), (wsAdditionalDetails === null || wsAdditionalDetails === void 0 ? void 0 : (_wsAdditionalDetails$4 = wsAdditionalDetails.additionalDetails) === null || _wsAdditionalDetails$4 === void 0 ? void 0 : _wsAdditionalDetails$4.activationDetails) && /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(CardSubHeader, {
    style: cardSubHeaderStyles()
  }, t("WS_ACTIVATION_DETAILS")), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
    className: "plumber-details-new-value-wrapper"
  }, activationDetails === null || activationDetails === void 0 ? void 0 : activationDetails.map((value, index) => {
    return /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      key: `${value.title}`,
      label: `${t(`${value.title}`)}`,
      text: value !== null && value !== void 0 && value.oldValue ? value === null || value === void 0 ? void 0 : value.oldValue : value !== null && value !== void 0 && value.value ? value === null || value === void 0 ? void 0 : value.value : ""
    });
  }))))));
};

const Penality_menu = [{
  title: "PT_PENDING_DUES_FROM_EARLIER",
  value: "Pending dues from earlier"
}, {
  title: "PT_MISCALCULATION_OF_EARLIER_ASSESSMENT",
  value: "Miscalculation of earlier Assessment"
}, {
  title: "PT_ONE_TIME_PENALITY",
  value: "One time penality"
}, {
  title: "PT_OTHERS",
  value: "Others"
}];
const Rebate_menu = [{
  title: "PT_ADVANCED_PAID_BY_CITIZEN_EARLIER",
  value: "Advanced Paid By Citizen Earlier"
}, {
  title: "PT_REBATE_PROVIDED_BY_COMMISSIONER_EO",
  value: "Rebate provided by commissioner/EO"
}, {
  title: "PT_ADDITIONAL_AMOUNT_CHARGED_FROM_THE_CITIZEN",
  value: "Additional amount charged from the citizen"
}, {
  title: "PT_OTHERS",
  value: "Others"
}];
const WSFeeEstimation = ({
  wsAdditionalDetails,
  workflowDetails
}) => {
  var _wsAdditionalDetails$, _wsAdditionalDetails$20, _fields$adhocPenaltyR, _fields$adhocRebateRe;
  const {
    t
  } = useTranslation();
  const [sessionFormData, setSessionFormData, clearSessionFormData] = Digit.Hooks.useSessionStorage("ADHOC_ADD_REBATE_DATA", {});
  const [sessionBillFormData, setSessionBillFormData, clearBillSessionFormData] = Digit.Hooks.useSessionStorage("ADHOC_BILL_ADD_REBATE_DATA", {});
  const isPaid = wsAdditionalDetails !== null && wsAdditionalDetails !== void 0 && (_wsAdditionalDetails$ = wsAdditionalDetails.additionalDetails) !== null && _wsAdditionalDetails$ !== void 0 && _wsAdditionalDetails$.isPaid ? true : false;
  const [popup, showPopUp] = useState(false);
  const [fields, setFields] = useState(sessionFormData ? sessionFormData : {});
  const [showToast, setShowToast] = useState(null);
  const [billDetails, setBillDetails] = useState(wsAdditionalDetails.additionalDetails.data ? wsAdditionalDetails.additionalDetails.data : {});
  const [values, setValues] = useState(wsAdditionalDetails.additionalDetails.values ? wsAdditionalDetails.additionalDetails.values : []);
  const stateCode = Digit.ULBService.getStateId();
  const {
    isMdmsLoading,
    data: mdmsRes
  } = Digit.Hooks.ws.useMDMS(stateCode, "BillingService", ["TaxHeadMaster"]);
  useEffect(() => {
    var _wsAdditionalDetails$2, _wsAdditionalDetails$3, _sessionFormData$bill;
    const data = {
      ...(wsAdditionalDetails === null || wsAdditionalDetails === void 0 ? void 0 : (_wsAdditionalDetails$2 = wsAdditionalDetails.additionalDetails) === null || _wsAdditionalDetails$2 === void 0 ? void 0 : (_wsAdditionalDetails$3 = _wsAdditionalDetails$2.appDetails) === null || _wsAdditionalDetails$3 === void 0 ? void 0 : _wsAdditionalDetails$3.additionalDetails)
    };
    if ((sessionFormData === null || sessionFormData === void 0 ? void 0 : (_sessionFormData$bill = sessionFormData.billDetails) === null || _sessionFormData$bill === void 0 ? void 0 : _sessionFormData$bill.length) > 0) {
      var _sessionFormData$bill2, _sessionFormData$bill3, _sessionFormData$bill4, _sessionFormData$bill5, _sessionFormData$bill6, _sessionFormData$bill7, _sessionFormData$bill8;
      const values = [{
        title: "WS_APPLICATION_FEE_HEADER",
        value: /*#__PURE__*/React.createElement("span", null, "\u20B9", sessionFormData === null || sessionFormData === void 0 ? void 0 : (_sessionFormData$bill2 = sessionFormData.billDetails) === null || _sessionFormData$bill2 === void 0 ? void 0 : (_sessionFormData$bill3 = _sessionFormData$bill2[0]) === null || _sessionFormData$bill3 === void 0 ? void 0 : _sessionFormData$bill3.fee)
      }, {
        title: "WS_SERVICE_FEE_HEADER",
        value: /*#__PURE__*/React.createElement("span", null, "\u20B9", sessionFormData === null || sessionFormData === void 0 ? void 0 : (_sessionFormData$bill4 = sessionFormData.billDetails) === null || _sessionFormData$bill4 === void 0 ? void 0 : (_sessionFormData$bill5 = _sessionFormData$bill4[0]) === null || _sessionFormData$bill5 === void 0 ? void 0 : _sessionFormData$bill5.charge)
      }, {
        title: "WS_TAX_HEADER",
        value: /*#__PURE__*/React.createElement("span", null, "\u20B9", sessionFormData === null || sessionFormData === void 0 ? void 0 : (_sessionFormData$bill6 = sessionFormData.billDetails) === null || _sessionFormData$bill6 === void 0 ? void 0 : (_sessionFormData$bill7 = _sessionFormData$bill6[0]) === null || _sessionFormData$bill7 === void 0 ? void 0 : _sessionFormData$bill7.taxAmount)
      }];
      setValues(values);
      setBillDetails(sessionFormData === null || sessionFormData === void 0 ? void 0 : (_sessionFormData$bill8 = sessionFormData.billDetails) === null || _sessionFormData$bill8 === void 0 ? void 0 : _sessionFormData$bill8[0]);
    } else {
      setSessionFormData(data);
      setFields(data);
    }
  }, []);
  let validation = {};
  const Heading = props => {
    return /*#__PURE__*/React.createElement("h1", {
      className: "heading-m"
    }, props.label);
  };
  const Close = () => /*#__PURE__*/React.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "#FFFFFF"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"
  }));
  const CloseBtn = props => {
    return /*#__PURE__*/React.createElement("div", {
      className: "icon-bg-secondary",
      onClick: props.onClick
    }, /*#__PURE__*/React.createElement(Close, null));
  };
  const closeToast = () => {
    setShowToast(false);
  };
  const addAdhocRebatePenality = e => {
    const adhocAmount = fields !== null && fields !== void 0 && fields.adhocPenalty ? Number(fields === null || fields === void 0 ? void 0 : fields.adhocPenalty) : 0;
    const rebateAmount = fields !== null && fields !== void 0 && fields.adhocRebate ? Number(fields === null || fields === void 0 ? void 0 : fields.adhocRebate) : 0;
    if (adhocAmount || rebateAmount) {
      var _wsAdditionalDetails$4, _wsAdditionalDetails$5;
      const totalAmount = wsAdditionalDetails === null || wsAdditionalDetails === void 0 ? void 0 : (_wsAdditionalDetails$4 = wsAdditionalDetails.additionalDetails) === null || _wsAdditionalDetails$4 === void 0 ? void 0 : (_wsAdditionalDetails$5 = _wsAdditionalDetails$4.data) === null || _wsAdditionalDetails$5 === void 0 ? void 0 : _wsAdditionalDetails$5.totalAmount;
      if (rebateAmount > totalAmount) {
        setShowToast({
          isError: false,
          isWarning: true,
          key: "error",
          message: t("ERR_WS_REBATE_GREATER_THAN_AMOUNT")
        });
      } else {
        var _wsAdditionalDetails$10, _wsAdditionalDetails$11, _wsAdditionalDetails$12, _wsAdditionalDetails$13, _wsAdditionalDetails$14, _wsAdditionalDetails$15, _wsAdditionalDetails$16, _wsAdditionalDetails$17, _wsAdditionalDetails$18, _wsAdditionalDetails$19;
        const applicationNo = wsAdditionalDetails === null || wsAdditionalDetails === void 0 ? void 0 : (_wsAdditionalDetails$10 = wsAdditionalDetails.additionalDetails) === null || _wsAdditionalDetails$10 === void 0 ? void 0 : (_wsAdditionalDetails$11 = _wsAdditionalDetails$10.appDetails) === null || _wsAdditionalDetails$11 === void 0 ? void 0 : _wsAdditionalDetails$11.applicationNo;
        const tenantId = wsAdditionalDetails === null || wsAdditionalDetails === void 0 ? void 0 : (_wsAdditionalDetails$12 = wsAdditionalDetails.additionalDetails) === null || _wsAdditionalDetails$12 === void 0 ? void 0 : (_wsAdditionalDetails$13 = _wsAdditionalDetails$12.appDetails) === null || _wsAdditionalDetails$13 === void 0 ? void 0 : _wsAdditionalDetails$13.tenantId;
        const appAdditionalDetails = {
          ...(wsAdditionalDetails === null || wsAdditionalDetails === void 0 ? void 0 : (_wsAdditionalDetails$14 = wsAdditionalDetails.additionalDetails) === null || _wsAdditionalDetails$14 === void 0 ? void 0 : (_wsAdditionalDetails$15 = _wsAdditionalDetails$14.appDetails) === null || _wsAdditionalDetails$15 === void 0 ? void 0 : _wsAdditionalDetails$15.additionalDetails),
          ...fields
        };
        wsAdditionalDetails.additionalDetails.appDetails.additionalDetails = appAdditionalDetails;
        const data = {
          CalculationCriteria: (wsAdditionalDetails === null || wsAdditionalDetails === void 0 ? void 0 : (_wsAdditionalDetails$16 = wsAdditionalDetails.additionalDetails) === null || _wsAdditionalDetails$16 === void 0 ? void 0 : (_wsAdditionalDetails$17 = _wsAdditionalDetails$16.appDetails) === null || _wsAdditionalDetails$17 === void 0 ? void 0 : _wsAdditionalDetails$17.service) == "WATER" ? [{
            applicationNo: applicationNo,
            tenantId: tenantId,
            waterConnection: wsAdditionalDetails.additionalDetails.appDetails
          }] : [{
            applicationNo: applicationNo,
            tenantId: tenantId,
            sewerageConnection: wsAdditionalDetails.additionalDetails.appDetails
          }],
          isconnectionCalculation: false
        };
        let businessService = (wsAdditionalDetails === null || wsAdditionalDetails === void 0 ? void 0 : (_wsAdditionalDetails$18 = wsAdditionalDetails.additionalDetails) === null || _wsAdditionalDetails$18 === void 0 ? void 0 : (_wsAdditionalDetails$19 = _wsAdditionalDetails$18.appDetails) === null || _wsAdditionalDetails$19 === void 0 ? void 0 : _wsAdditionalDetails$19.service) == "WATER" ? "WS" : "SW";
        Digit.WSService.wsCalculationEstimate(data, businessService).then((result, err) => {
          var _result$Calculation, _result$Calculation$, _result$Calculation$$, _result$Calculation3, _result$Calculation3$, _result$Calculation4, _result$Calculation4$, _result$Calculation5, _result$Calculation5$, _result$Calculation6, _result$Calculation6$, _result$Calculation7;
          if ((result === null || result === void 0 ? void 0 : (_result$Calculation = result.Calculation) === null || _result$Calculation === void 0 ? void 0 : (_result$Calculation$ = _result$Calculation[0]) === null || _result$Calculation$ === void 0 ? void 0 : (_result$Calculation$$ = _result$Calculation$.taxHeadEstimates) === null || _result$Calculation$$ === void 0 ? void 0 : _result$Calculation$$.length) > 0) {
            var _result$Calculation2, _result$Calculation2$, _result$Calculation2$2;
            result === null || result === void 0 ? void 0 : (_result$Calculation2 = result.Calculation) === null || _result$Calculation2 === void 0 ? void 0 : (_result$Calculation2$ = _result$Calculation2[0]) === null || _result$Calculation2$ === void 0 ? void 0 : (_result$Calculation2$2 = _result$Calculation2$.taxHeadEstimates) === null || _result$Calculation2$2 === void 0 ? void 0 : _result$Calculation2$2.forEach(data => data.amount = data.estimateAmount);
          }
          result.Calculation[0].billSlabData = _.groupBy(result === null || result === void 0 ? void 0 : (_result$Calculation3 = result.Calculation) === null || _result$Calculation3 === void 0 ? void 0 : (_result$Calculation3$ = _result$Calculation3[0]) === null || _result$Calculation3$ === void 0 ? void 0 : _result$Calculation3$.taxHeadEstimates, 'category');
          const values = [{
            title: "WS_APPLICATION_FEE_HEADER",
            value: (_result$Calculation4 = result.Calculation) === null || _result$Calculation4 === void 0 ? void 0 : (_result$Calculation4$ = _result$Calculation4[0]) === null || _result$Calculation4$ === void 0 ? void 0 : _result$Calculation4$.fee
          }, {
            title: "WS_SERVICE_FEE_HEADER",
            value: (_result$Calculation5 = result.Calculation) === null || _result$Calculation5 === void 0 ? void 0 : (_result$Calculation5$ = _result$Calculation5[0]) === null || _result$Calculation5$ === void 0 ? void 0 : _result$Calculation5$.charge
          }, {
            title: "WS_TAX_HEADER",
            value: (_result$Calculation6 = result.Calculation) === null || _result$Calculation6 === void 0 ? void 0 : (_result$Calculation6$ = _result$Calculation6[0]) === null || _result$Calculation6$ === void 0 ? void 0 : _result$Calculation6$.taxAmount
          }];
          setSessionBillFormData(cloneDeep_1(result.Calculation[0]));
          setBillDetails(result === null || result === void 0 ? void 0 : (_result$Calculation7 = result.Calculation) === null || _result$Calculation7 === void 0 ? void 0 : _result$Calculation7[0]);
          setValues(values);
          fields.billDetails = result === null || result === void 0 ? void 0 : result.Calculation;
          setSessionFormData(fields);
          showPopUp(false);
        }).catch(e => {
          var _e$response, _e$response$data, _e$response$data$Erro, _e$response2, _e$response2$data, _e$response2$data$Err;
          setShowToast({
            isError: true,
            isWarning: false,
            key: "error",
            message: e !== null && e !== void 0 && (_e$response = e.response) !== null && _e$response !== void 0 && (_e$response$data = _e$response.data) !== null && _e$response$data !== void 0 && (_e$response$data$Erro = _e$response$data.Errors[0]) !== null && _e$response$data$Erro !== void 0 && _e$response$data$Erro.message ? t(`${e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : (_e$response2$data$Err = _e$response2$data.Errors[0]) === null || _e$response2$data$Err === void 0 ? void 0 : _e$response2$data$Err.code}`) : t("PT_COMMON_ADD_REBATE_PENALITY")
          });
        });
      }
    } else {
      setShowToast({
        isError: false,
        isWarning: true,
        key: "warning",
        message: t("ERR_WS_ENTER_ATLEAST_ONE_FIELD")
      });
    }
  };
  const selectedValuesData = (value, isDropDownValue = false, e) => {
    let values = {
      ...fields
    };
    if ((value == "adhocPenalty" || value == "adhocRebate") && e.target.value) {
      var _e$target, _e$target2;
      const targetValueSign = (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value) == 0 ? 1 : Math.sign(e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.value) || -1;
      if (targetValueSign == 1) {
        values[value] = e.target.value;
      } else {
        values[value] = '';
      }
    } else if (isDropDownValue) {
      values[`${value}_data`] = e;
      values[value] = e.title;
      if (e.title == "PT_OTHERS" && value == "adhocPenaltyReason") values[`adhocPenaltyComment`] = "";
      if (e.title == "PT_OTHERS" && value == "adhocRebateReason") values[`adhocRebateComment`] = "";
    } else {
      values[value] = e.target.value;
    }
    setFields(values);
  };
  return /*#__PURE__*/React.createElement(Fragment$1, null, /*#__PURE__*/React.createElement("div", {
    style: {
      lineHeight: "19px",
      maxWidth: "950px",
      minWidth: "280px"
    }
  }, values && /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement("div", null, values === null || values === void 0 ? void 0 : values.map((value, index) => {
    return /*#__PURE__*/React.createElement(Row, {
      className: "border-none",
      key: `${value.title}`,
      label: `${t(`${value.title}`)}`,
      text: value !== null && value !== void 0 && value.value ? value === null || value === void 0 ? void 0 : value.value : ""
    });
  })), /*#__PURE__*/React.createElement("hr", {
    style: {
      border: "1px solid #D6D5D4",
      color: "#D6D5D4",
      margin: "16px 0px"
    }
  }), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Row, {
    className: "border-none",
    key: `WS_COMMON_TOTAL_AMT`,
    label: `${t(`WS_COMMON_TOTAL_AMT`)}`,
    text: /*#__PURE__*/React.createElement("span", null, "\u20B9", (billDetails === null || billDetails === void 0 ? void 0 : billDetails.totalAmount) || 0),
    textStyle: {
      fontSize: "24px",
      fontWeight: "700"
    }
  }), /*#__PURE__*/React.createElement(Row, {
    className: "border-none",
    key: `CS_INBOX_STATUS_FILTER`,
    label: `${t(`CS_INBOX_STATUS_FILTER`)}`,
    text: isPaid ? t("WS_COMMON_PAID_LABEL") : t("WS_COMMON_NOT_PAID"),
    textStyle: !isPaid ? {
      color: "#D4351C"
    } : {
      color: "#00703C"
    }
  }))), wsAdditionalDetails !== null && wsAdditionalDetails !== void 0 && (_wsAdditionalDetails$20 = wsAdditionalDetails.additionalDetails) !== null && _wsAdditionalDetails$20 !== void 0 && _wsAdditionalDetails$20.isAdhocRebate ? /*#__PURE__*/React.createElement("div", {
    onClick: e => {
      showPopUp(true);
    }
  }, /*#__PURE__*/React.createElement("span", {
    style: {
      cursor: "pointer",
      color: "#a82227"
    }
  }, t("WS_PAYMENT_ADD_REBATE_PENALTY"))) : null, popup && /*#__PURE__*/React.createElement(Modal, {
    headerBarMain: /*#__PURE__*/React.createElement(Heading, {
      label: t("PT_ADD_REBATE_PENALITY")
    }),
    headerBarEnd: /*#__PURE__*/React.createElement(CloseBtn, {
      onClick: () => {
        setFields(sessionFormData);
        showPopUp(false);
      }
    }),
    actionCancelLabel: t("PT_CANCEL"),
    actionCancelOnSubmit: () => {
      setFields(sessionFormData);
      showPopUp(false);
    },
    actionSaveLabel: t("PT_ADD"),
    actionSaveOnSubmit: e => addAdhocRebatePenality(),
    hideSubmit: false,
    popupStyles: {
      overflowY: "auto"
    }
  }, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Card, {
    style: {
      padding: "10px 10px 1px 10px",
      margin: "0px 0px 15px 0px"
    }
  }, /*#__PURE__*/React.createElement(CardSectionHeader, {
    style: {
      fontSize: "16px",
      fontWeight: "700",
      lineHeight: "18px",
      padding: "0px",
      margin: "0px 0px 10px 0px"
    }
  }, t("PT_AD_PENALTY")), /*#__PURE__*/React.createElement(CardLabel, null, t("PT_TX_HEADS")), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Dropdown, {
    isMandatory: true,
    option: Penality_menu,
    optionKey: "title",
    select: e => selectedValuesData("adhocPenaltyReason", true, e),
    selected: (fields === null || fields === void 0 ? void 0 : fields.adhocPenaltyReason_data) || "",
    isPropertyAssess: true,
    name: "adhocPenaltyReason_data",
    t: t
  })), (fields === null || fields === void 0 ? void 0 : (_fields$adhocPenaltyR = fields.adhocPenaltyReason_data) === null || _fields$adhocPenaltyR === void 0 ? void 0 : _fields$adhocPenaltyR.title) === "PT_OTHERS" && /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(CardLabel, null, t("PT_REASON")), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(TextInput, Object.assign({
    style: {
      background: "#FAFAFA"
    },
    t: t,
    type: "text",
    isMandatory: false,
    name: "adhocPenaltyComment",
    value: (fields === null || fields === void 0 ? void 0 : fields.adhocPenaltyComment) || "",
    onChange: e => selectedValuesData("adhocPenaltyComment", false, e)
  }, validation = {
    isRequired: true,
    pattern: "^[a-zA-Z-.`' ]*$",
    type: "text",
    title: t("TL_NAME_ERROR_MESSAGE")
  })))), /*#__PURE__*/React.createElement(CardLabel, null, t("PT_HEAD_AMT")), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(TextInput, Object.assign({
    style: {
      background: "#FAFAFA"
    },
    t: t,
    type: "number",
    isMandatory: false,
    name: "adhocPenalty",
    value: (fields === null || fields === void 0 ? void 0 : fields.adhocPenalty) || "",
    onChange: e => selectedValuesData("adhocPenalty", false, e)
  }, validation = {
    isRequired: true,
    pattern: "^[1-9]+[0-9]*$",
    title: t("ERR_DEFAULT_INPUT_FIELD_MSG")
  })))), /*#__PURE__*/React.createElement(Card, {
    style: {
      padding: "10px 10px 1px 10px",
      margin: "0px 0px 15px 0px"
    }
  }, /*#__PURE__*/React.createElement(CardSectionHeader, {
    style: {
      fontSize: "16px",
      fontWeight: "700",
      lineHeight: "18px",
      padding: "0px",
      margin: "0px 0px 10px 0px"
    }
  }, t("PT_AD_REBATE")), /*#__PURE__*/React.createElement(CardLabel, null, t("PT_TX_HEADS")), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Dropdown, {
    isMandatory: true,
    option: Rebate_menu,
    optionKey: "title",
    select: e => selectedValuesData("adhocRebateReason", true, e),
    selected: (fields === null || fields === void 0 ? void 0 : fields.adhocRebateReason_data) || "",
    name: "adhocRebateReason_data",
    isPropertyAssess: true,
    t: t
  })), (fields === null || fields === void 0 ? void 0 : (_fields$adhocRebateRe = fields.adhocRebateReason_data) === null || _fields$adhocRebateRe === void 0 ? void 0 : _fields$adhocRebateRe.title) === "PT_OTHERS" && /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(CardLabel, null, t("PT_REASON")), /*#__PURE__*/React.createElement(TextInput, Object.assign({
    style: {
      background: "#FAFAFA"
    },
    t: t,
    type: "text",
    isMandatory: false,
    name: "adhocRebateComment",
    value: (fields === null || fields === void 0 ? void 0 : fields.adhocRebateComment) || "",
    onChange: e => selectedValuesData("adhocRebateComment", false, e)
  }, validation = {
    isRequired: true,
    pattern: "^[a-zA-Z-.`' ]*$",
    type: "text",
    title: t("TL_NAME_ERROR_MESSAGE")
  }))), /*#__PURE__*/React.createElement(CardLabel, null, t("PT_HEAD_AMT")), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(TextInput, Object.assign({
    style: {
      background: "#FAFAFA"
    },
    t: t,
    type: "number",
    isMandatory: false,
    name: "adhocRebate",
    value: (fields === null || fields === void 0 ? void 0 : fields.adhocRebate) || "",
    onChange: e => selectedValuesData("adhocRebate", false, e)
  }, validation = {
    isRequired: true,
    pattern: "^[1-9]+[0-9]*$",
    title: t("ERR_DEFAULT_INPUT_FIELD_MSG")
  }))))), " "), showToast && /*#__PURE__*/React.createElement(Toast, {
    style: {
      zIndex: "10000"
    },
    warning: showToast === null || showToast === void 0 ? void 0 : showToast.isWarning,
    error: showToast !== null && showToast !== void 0 && showToast.isWarning ? false : true,
    label: t(showToast === null || showToast === void 0 ? void 0 : showToast.message),
    onClose: closeToast,
    isDleteBtn: true
  })));
};

const EyeSvgINdex = ({
  style
}) => {
  return /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement("svg", {
    style: {
      ...style
    },
    display: "inline",
    width: "22",
    height: "16",
    viewBox: "0 0 22 16",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M11 0.5C6 0.5 1.73 3.61 0 8C1.73 12.39 6 15.5 11 15.5C16 15.5 20.27 12.39 22 8C20.27 3.61 16 0.5 11 0.5ZM11 13C8.24 13 6 10.76 6 8C6 5.24 8.24 3 11 3C13.76 3 16 5.24 16 8C16 10.76 13.76 13 11 13ZM11 5C9.34 5 8 6.34 8 8C8 9.66 9.34 11 11 11C12.66 11 14 9.66 14 8C14 6.34 12.66 5 11 5Z",
    fill: "#a82227"
  })));
};
const InfoDetails = ({
  t,
  userType: _userType = false,
  infoBannerLabel: _infoBannerLabel = "",
  infoClickLable: _infoClickLable = "",
  infoClickInfoLabel: _infoClickInfoLabel = "",
  infoClickInfoLabel1: _infoClickInfoLabel2 = ""
}) => {
  _userType = _userType || Digit.SessionStorage.get("userType");
  const isMobile = window.Digit.Utils.browser.isMobile();
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: isMobile ? {} : {
      width: "80%"
    }
  }, /*#__PURE__*/React.createElement("div", {
    className: "info-banner-wrap",
    style: {
      color: "#3498DB",
      margin: "0px"
    }
  }, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(InfoBannerIcon, null), /*#__PURE__*/React.createElement("h2", {
    style: {
      color: "#3498DB"
    }
  }, t(_infoBannerLabel))), `${t(_infoClickLable)} `, /*#__PURE__*/React.createElement(EyeSvgINdex, {
    style: {
      display: "inline",
      marginBottom: "5px"
    }
  }), ` ${t(_infoClickInfoLabel)}`, /*#__PURE__*/React.createElement("div", null, ` ${t(_infoClickInfoLabel2)}`))));
};

const ViewBreakup = ({
  wsAdditionalDetails,
  workflowDetails
}) => {
  var _wsAdditionalDetails$, _breakUpData$billSlab, _breakUpData$billSlab2, _breakUpData$billSlab3, _breakUpData$billSlab4, _breakUpData$billSlab5, _breakUpData$billSlab6;
  const {
    t
  } = useTranslation();
  const [popup, showPopUp] = useState(false);
  const [breakUpData, setBreakUpData] = useState({});
  const Heading = props => {
    return /*#__PURE__*/React.createElement("h1", {
      className: "heading-m"
    }, props.label);
  };
  const Close = () => /*#__PURE__*/React.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "#FFFFFF"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"
  }));
  const CloseBtn = props => {
    return /*#__PURE__*/React.createElement("div", {
      className: "icon-bg-secondary",
      onClick: props.onClick
    }, /*#__PURE__*/React.createElement(Close, null));
  };
  const onPopupOpen = () => {
    var _sessionBillFormData$;
    let breakupData = wsAdditionalDetails.additionalDetails.data || {};
    const sessionBillData = sessionStorage.getItem("Digit.ADHOC_BILL_ADD_REBATE_DATA");
    const sessionBillFormData = sessionBillData ? JSON.parse(sessionBillData) : {};
    if (sessionBillFormData !== null && sessionBillFormData !== void 0 && (_sessionBillFormData$ = sessionBillFormData.value) !== null && _sessionBillFormData$ !== void 0 && _sessionBillFormData$.totalAmount) breakupData = sessionBillFormData === null || sessionBillFormData === void 0 ? void 0 : sessionBillFormData.value;
    setBreakUpData(breakupData);
    showPopUp(true);
  };
  return /*#__PURE__*/React.createElement(Fragment$1, null, /*#__PURE__*/React.createElement("div", {
    style: {
      lineHeight: "19px",
      maxWidth: "950px",
      minWidth: "280px"
    }
  }, wsAdditionalDetails !== null && wsAdditionalDetails !== void 0 && (_wsAdditionalDetails$ = wsAdditionalDetails.additionalDetails) !== null && _wsAdditionalDetails$ !== void 0 && _wsAdditionalDetails$.isViewBreakup ? /*#__PURE__*/React.createElement("div", {
    onClick: e => onPopupOpen(),
    style: {
      marginTop: "12px"
    }
  }, /*#__PURE__*/React.createElement("span", {
    style: {
      cursor: "pointer",
      color: "#a82227"
    }
  }, t("WS_PAYMENT_VIEW_BREAKUP"))) : null, popup && /*#__PURE__*/React.createElement(Modal, {
    headerBarMain: /*#__PURE__*/React.createElement(Heading, {
      label: t("WS_CALCULATION_BREAKUP")
    }),
    headerBarEnd: /*#__PURE__*/React.createElement(CloseBtn, {
      onClick: () => {
        showPopUp(false);
      }
    }),
    hideSubmit: true,
    popupStyles: {
      overflowY: "auto"
    },
    headerBarMainStyle: {
      marginBottom: "0px"
    },
    popupModuleMianStyles: {
      paddingTop: "0px"
    }
  }, /*#__PURE__*/React.createElement(StatusTable, {
    style: {
      padding: "10px",
      paddingTop: "0px"
    }
  }, /*#__PURE__*/React.createElement(CardSectionHeader, {
    style: {
      margin: "10px 0px"
    }
  }, t("WS_APPLICATION_FEE_HEADER")), breakUpData === null || breakUpData === void 0 ? void 0 : (_breakUpData$billSlab = breakUpData.billSlabData) === null || _breakUpData$billSlab === void 0 ? void 0 : (_breakUpData$billSlab2 = _breakUpData$billSlab.FEE) === null || _breakUpData$billSlab2 === void 0 ? void 0 : _breakUpData$billSlab2.map(data => /*#__PURE__*/React.createElement(Row, {
    className: "border-none",
    rowContainerStyle: {
      margin: "0px"
    },
    labelStyle: {
      width: "50%"
    },
    key: `${data === null || data === void 0 ? void 0 : data.taxHeadCode}`,
    label: `${t(`${data === null || data === void 0 ? void 0 : data.taxHeadCode}`)}`,
    text: /*#__PURE__*/React.createElement("span", null, "\u20B9", Number(data === null || data === void 0 ? void 0 : data.amount) || 0),
    textStyle: {
      textAlign: "right"
    }
  })), /*#__PURE__*/React.createElement("hr", {
    style: {
      color: "#cccccc",
      backgroundColor: "#cccccc",
      marginBottom: "10px"
    }
  }), /*#__PURE__*/React.createElement(Row, {
    className: "border-none",
    rowContainerStyle: {
      margin: "0px"
    },
    labelStyle: {
      width: "50%"
    },
    key: `PDF_STATIC_LABEL_CONSOLIDATED_TLAPP_TOTAL_AMOUNT1`,
    label: `${t(`PDF_STATIC_LABEL_CONSOLIDATED_TLAPP_TOTAL_AMOUNT`)}`,
    text: /*#__PURE__*/React.createElement("span", null, "\u20B9", Number(breakUpData === null || breakUpData === void 0 ? void 0 : breakUpData.fee) || 0),
    textStyle: {
      textAlign: "right",
      fontWeight: "700",
      fontSize: "24px"
    }
  }), /*#__PURE__*/React.createElement(CardSectionHeader, {
    style: {
      margin: "10px 0px"
    }
  }, t("WS_SERVICE_FEE_HEADER")), breakUpData === null || breakUpData === void 0 ? void 0 : (_breakUpData$billSlab3 = breakUpData.billSlabData) === null || _breakUpData$billSlab3 === void 0 ? void 0 : (_breakUpData$billSlab4 = _breakUpData$billSlab3.CHARGES) === null || _breakUpData$billSlab4 === void 0 ? void 0 : _breakUpData$billSlab4.map(data => /*#__PURE__*/React.createElement(Row, {
    className: "border-none",
    rowContainerStyle: {
      margin: "0px"
    },
    labelStyle: {
      width: "50%"
    },
    key: `${data === null || data === void 0 ? void 0 : data.taxHeadCode}`,
    label: `${t(`${data === null || data === void 0 ? void 0 : data.taxHeadCode}`)}`,
    text: /*#__PURE__*/React.createElement("span", null, "\u20B9", Number(data === null || data === void 0 ? void 0 : data.amount) || 0),
    textStyle: {
      textAlign: "right"
    }
  })), /*#__PURE__*/React.createElement("hr", {
    style: {
      color: "#cccccc",
      backgroundColor: "#cccccc",
      marginBottom: "10px"
    }
  }), /*#__PURE__*/React.createElement(Row, {
    className: "border-none",
    rowContainerStyle: {
      margin: "0px"
    },
    labelStyle: {
      width: "50%"
    },
    key: `PDF_STATIC_LABEL_CONSOLIDATED_TLAPP_TOTAL_AMOUNT2`,
    label: `${t(`PDF_STATIC_LABEL_CONSOLIDATED_TLAPP_TOTAL_AMOUNT`)}`,
    text: /*#__PURE__*/React.createElement("span", null, "\u20B9", Number(breakUpData === null || breakUpData === void 0 ? void 0 : breakUpData.charge) || 0),
    textStyle: {
      textAlign: "right",
      fontWeight: "700",
      fontSize: "24px"
    }
  }), breakUpData === null || breakUpData === void 0 ? void 0 : (_breakUpData$billSlab5 = breakUpData.billSlabData) === null || _breakUpData$billSlab5 === void 0 ? void 0 : (_breakUpData$billSlab6 = _breakUpData$billSlab5.TAX) === null || _breakUpData$billSlab6 === void 0 ? void 0 : _breakUpData$billSlab6.map(data => /*#__PURE__*/React.createElement(Row, {
    className: "border-none",
    rowContainerStyle: {
      margin: "0px"
    },
    labelStyle: {
      width: "50%"
    },
    key: `${data === null || data === void 0 ? void 0 : data.taxHeadCode}`,
    label: `${t(`${data === null || data === void 0 ? void 0 : data.taxHeadCode}`)}`,
    text: /*#__PURE__*/React.createElement("span", null, "\u20B9", Number(data === null || data === void 0 ? void 0 : data.amount) || 0),
    textStyle: {
      textAlign: "right"
    }
  })), /*#__PURE__*/React.createElement("hr", {
    style: {
      color: "#cccccc",
      backgroundColor: "#cccccc",
      marginBottom: "10px"
    }
  }), /*#__PURE__*/React.createElement(Row, {
    className: "border-none",
    rowContainerStyle: {
      margin: "0px"
    },
    labelStyle: {
      width: "50%"
    },
    key: `PDF_STATIC_LABEL_CONSOLIDATED_TLAPP_TOTAL_AMOUNT3`,
    label: `${t(`PDF_STATIC_LABEL_CONSOLIDATED_TLAPP_TOTAL_AMOUNT`)}`,
    text: /*#__PURE__*/React.createElement("span", null, "\u20B9", Number(breakUpData === null || breakUpData === void 0 ? void 0 : breakUpData.totalAmount) || 0),
    textStyle: {
      textAlign: "right",
      fontWeight: "700",
      fontSize: "24px"
    }
  })))));
};

function ApplicationDetailsContent({
  applicationDetails,
  workflowDetails,
  isDataLoading,
  applicationData,
  businessService,
  timelineStatusPrefix,
  showTimeLine = true,
  statusAttribute = "status",
  paymentsList,
  oldValue,
  isInfoLabel = false
}) {
  var _applicationDetails$a, _workflowDetails$data3, _workflowDetails$data4, _workflowDetails$data5, _workflowDetails$data6, _workflowDetails$data7, _workflowDetails$data8, _workflowDetails$data9, _workflowDetails$data10, _workflowDetails$data11, _workflowDetails$data12;
  const {
    t
  } = useTranslation();
  function OpenImage(imageSource, index, thumbnailsToShow) {
    var _thumbnailsToShow$ful;
    window.open(thumbnailsToShow === null || thumbnailsToShow === void 0 ? void 0 : (_thumbnailsToShow$ful = thumbnailsToShow.fullImage) === null || _thumbnailsToShow$ful === void 0 ? void 0 : _thumbnailsToShow$ful[0], "_blank");
  }
  const convertEpochToDateDMY = dateEpoch => {
    if (dateEpoch == null || dateEpoch == undefined || dateEpoch == "") {
      return "NA";
    }
    const dateFromApi = new Date(dateEpoch);
    let month = dateFromApi.getMonth() + 1;
    let day = dateFromApi.getDate();
    let year = dateFromApi.getFullYear();
    month = (month > 9 ? "" : "0") + month;
    day = (day > 9 ? "" : "0") + day;
    return `${day}/${month}/${year}`;
  };
  const getTimelineCaptions = (checkpoint, index = 0) => {
    if (checkpoint.state === "OPEN" || checkpoint.status === "INITIATED" && !window.location.href.includes("/obps/")) {
      var _applicationData$audi;
      const caption = {
        date: convertEpochToDateDMY(applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$audi = applicationData.auditDetails) === null || _applicationData$audi === void 0 ? void 0 : _applicationData$audi.createdTime),
        source: (applicationData === null || applicationData === void 0 ? void 0 : applicationData.channel) || ""
      };
      return /*#__PURE__*/React.createElement(TLCaption, {
        data: caption
      });
    } else if (window.location.href.includes("/obps/") || window.location.href.includes("/noc/") || window.location.href.includes("/ws/")) {
      var _checkpoint$assignes, _checkpoint$assignes$, _checkpoint$auditDeta, _checkpoint$assignes2, _checkpoint$assignes3, _applicationData$proc, _applicationData$proc2, _applicationData$proc3, _checkpoint$assignes4, _checkpoint$assignes5, _applicationData$proc4, _applicationData$proc5, _applicationData$proc6, _applicationData$proc7, _applicationData$proc8, _applicationData$proc9, _checkpoint$assignes6, _checkpoint$assignes7;
      const privacy = {
        uuid: checkpoint === null || checkpoint === void 0 ? void 0 : (_checkpoint$assignes = checkpoint.assignes) === null || _checkpoint$assignes === void 0 ? void 0 : (_checkpoint$assignes$ = _checkpoint$assignes[0]) === null || _checkpoint$assignes$ === void 0 ? void 0 : _checkpoint$assignes$.uuid,
        fieldName: "mobileNumber",
        model: "User",
        showValue: false,
        loadData: {
          serviceName: "/egov-workflow-v2/egov-wf/process/_search",
          requestBody: {},
          requestParam: {
            tenantId: applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.tenantId,
            businessIds: applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.applicationNo,
            history: true
          },
          jsonPath: "ProcessInstances[0].assignes[0].mobileNumber",
          isArray: false,
          d: res => {
            let resultstring = "";
            resultstring = `+91 ${_.get(res, `ProcessInstances[${index}].assignes[0].mobileNumber`)}`;
            return resultstring;
          }
        }
      };
      const caption = {
        date: checkpoint === null || checkpoint === void 0 ? void 0 : (_checkpoint$auditDeta = checkpoint.auditDetails) === null || _checkpoint$auditDeta === void 0 ? void 0 : _checkpoint$auditDeta.lastModified,
        name: checkpoint === null || checkpoint === void 0 ? void 0 : (_checkpoint$assignes2 = checkpoint.assignes) === null || _checkpoint$assignes2 === void 0 ? void 0 : (_checkpoint$assignes3 = _checkpoint$assignes2[0]) === null || _checkpoint$assignes3 === void 0 ? void 0 : _checkpoint$assignes3.name,
        mobileNumber: (applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$proc = applicationData.processInstance) === null || _applicationData$proc === void 0 ? void 0 : (_applicationData$proc2 = _applicationData$proc.assignes) === null || _applicationData$proc2 === void 0 ? void 0 : (_applicationData$proc3 = _applicationData$proc2[0]) === null || _applicationData$proc3 === void 0 ? void 0 : _applicationData$proc3.uuid) === (checkpoint === null || checkpoint === void 0 ? void 0 : (_checkpoint$assignes4 = checkpoint.assignes) === null || _checkpoint$assignes4 === void 0 ? void 0 : (_checkpoint$assignes5 = _checkpoint$assignes4[0]) === null || _checkpoint$assignes5 === void 0 ? void 0 : _checkpoint$assignes5.uuid) && applicationData !== null && applicationData !== void 0 && (_applicationData$proc4 = applicationData.processInstance) !== null && _applicationData$proc4 !== void 0 && (_applicationData$proc5 = _applicationData$proc4.assignes) !== null && _applicationData$proc5 !== void 0 && (_applicationData$proc6 = _applicationData$proc5[0]) !== null && _applicationData$proc6 !== void 0 && _applicationData$proc6.mobileNumber ? applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$proc7 = applicationData.processInstance) === null || _applicationData$proc7 === void 0 ? void 0 : (_applicationData$proc8 = _applicationData$proc7.assignes) === null || _applicationData$proc8 === void 0 ? void 0 : (_applicationData$proc9 = _applicationData$proc8[0]) === null || _applicationData$proc9 === void 0 ? void 0 : _applicationData$proc9.mobileNumber : checkpoint === null || checkpoint === void 0 ? void 0 : (_checkpoint$assignes6 = checkpoint.assignes) === null || _checkpoint$assignes6 === void 0 ? void 0 : (_checkpoint$assignes7 = _checkpoint$assignes6[0]) === null || _checkpoint$assignes7 === void 0 ? void 0 : _checkpoint$assignes7.mobileNumber,
        comment: t(checkpoint === null || checkpoint === void 0 ? void 0 : checkpoint.comment),
        wfComment: checkpoint.wfComment,
        thumbnailsToShow: checkpoint === null || checkpoint === void 0 ? void 0 : checkpoint.thumbnailsToShow
      };
      return /*#__PURE__*/React.createElement(TLCaption, {
        data: caption,
        OpenImage: OpenImage,
        privacy: privacy
      });
    } else {
      var _applicationData$audi2, _checkpoint$assignes8, _checkpoint$assignes9, _checkpoint$assignes10, _checkpoint$assignes11;
      const caption = {
        date: convertEpochToDateDMY(applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$audi2 = applicationData.auditDetails) === null || _applicationData$audi2 === void 0 ? void 0 : _applicationData$audi2.lastModifiedTime),
        name: checkpoint === null || checkpoint === void 0 ? void 0 : (_checkpoint$assignes8 = checkpoint.assignes) === null || _checkpoint$assignes8 === void 0 ? void 0 : (_checkpoint$assignes9 = _checkpoint$assignes8[0]) === null || _checkpoint$assignes9 === void 0 ? void 0 : _checkpoint$assignes9.name,
        wfComment: checkpoint === null || checkpoint === void 0 ? void 0 : checkpoint.wfComment,
        mobileNumber: checkpoint === null || checkpoint === void 0 ? void 0 : (_checkpoint$assignes10 = checkpoint.assignes) === null || _checkpoint$assignes10 === void 0 ? void 0 : (_checkpoint$assignes11 = _checkpoint$assignes10[0]) === null || _checkpoint$assignes11 === void 0 ? void 0 : _checkpoint$assignes11.mobileNumber
      };
      return /*#__PURE__*/React.createElement(TLCaption, {
        data: caption
      });
    }
  };
  const getTranslatedValues = (dataValue, isNotTranslated) => {
    if (dataValue) {
      return !isNotTranslated ? t(dataValue) : dataValue;
    } else {
      return t("NA");
    }
  };
  const checkLocation = window.location.href.includes("employee/tl") || window.location.href.includes("employee/obps") || window.location.href.includes("employee/noc");
  const isNocLocation = window.location.href.includes("employee/noc");
  const isBPALocation = window.location.href.includes("employee/obps");
  const isWS = window.location.href.includes("employee/ws");
  const getRowStyles = () => {
    if (window.location.href.includes("employee/obps") || window.location.href.includes("employee/noc")) {
      return {
        justifyContent: "space-between",
        fontSize: "16px",
        lineHeight: "19px",
        color: "#0B0C0C"
      };
    } else if (checkLocation) {
      return {
        justifyContent: "space-between",
        fontSize: "16px",
        lineHeight: "19px",
        color: "#0B0C0C"
      };
    } else {
      return {};
    }
  };
  const getTableStyles = () => {
    if (window.location.href.includes("employee/obps") || window.location.href.includes("employee/noc")) {
      return {
        position: "relative",
        marginTop: "19px"
      };
    } else if (checkLocation) {
      return {
        position: "relative",
        marginTop: "19px"
      };
    } else {
      return {};
    }
  };
  const getMainDivStyles = () => {
    if (window.location.href.includes("employee/obps") || window.location.href.includes("employee/noc") || window.location.href.includes("employee/ws")) {
      return {
        lineHeight: "19px",
        maxWidth: "950px",
        minWidth: "280px"
      };
    } else if (checkLocation) {
      return {
        lineHeight: "19px",
        maxWidth: "600px",
        minWidth: "280px"
      };
    } else {
      return {};
    }
  };
  const getTextValue = value => {
    if (value !== null && value !== void 0 && value.skip) return value.value;else if (value !== null && value !== void 0 && value.isUnit) return value !== null && value !== void 0 && value.value ? `${getTranslatedValues(value === null || value === void 0 ? void 0 : value.value, value === null || value === void 0 ? void 0 : value.isNotTranslated)} ${t(value === null || value === void 0 ? void 0 : value.isUnit)}` : t("N/A");else return value !== null && value !== void 0 && value.value ? getTranslatedValues(value === null || value === void 0 ? void 0 : value.value, value === null || value === void 0 ? void 0 : value.isNotTranslated) : t("N/A");
  };
  const getClickInfoDetails = () => {
    if (window.location.href.includes("disconnection") || window.location.href.includes("application")) {
      return "WS_DISCONNECTION_CLICK_ON_INFO_LABEL";
    } else {
      return "WS_CLICK_ON_INFO_LABEL";
    }
  };
  const getClickInfoDetails1 = () => {
    if (window.location.href.includes("disconnection") || window.location.href.includes("application")) {
      return "WS_DISCONNECTION_CLICK_ON_INFO1_LABEL";
    } else {
      return "";
    }
  };
  return /*#__PURE__*/React.createElement(Card, {
    style: {
      position: "relative"
    },
    className: "employeeCard-override"
  }, isInfoLabel ? /*#__PURE__*/React.createElement(InfoDetails, {
    t: t,
    userType: false,
    infoBannerLabel: "CS_FILE_APPLICATION_INFO_LABEL",
    infoClickLable: "WS_CLICK_ON_LABEL",
    infoClickInfoLabel: getClickInfoDetails(),
    infoClickInfoLabel1: getClickInfoDetails1()
  }) : null, applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a = applicationDetails.applicationDetails) === null || _applicationDetails$a === void 0 ? void 0 : _applicationDetails$a.map((detail, index) => {
    var _detail$values, _detail$additionalDet, _applicationDetails$a2, _applicationDetails$a3, _applicationDetails$a4, _detail$additionalDet2, _applicationDetails$a5, _applicationDetails$a6, _detail$additionalDet3, _detail$additionalDet4, _detail$additionalDet5, _detail$additionalDet6, _detail$additionalDet7, _detail$additionalDet8, _detail$additionalDet9, _detail$additionalDet10, _detail$additionalDet11, _workflowDetails$data, _workflowDetails$data2, _detail$additionalDet12, _detail$additionalDet13, _detail$additionalDet14, _detail$additionalDet15, _detail$additionalDet16, _detail$additionalDet17, _detail$additionalDet18, _detail$additionalDet19, _detail$additionalDet20, _detail$additionalDet21, _detail$additionalDet22, _detail$additionalDet23, _detail$additionalDet24, _detail$additionalDet25, _detail$additionalDet26, _detail$additionalDet27, _detail$additionalDet28, _detail$additionalDet29, _detail$additionalDet30, _detail$additionalDet31;
    return /*#__PURE__*/React.createElement(React.Fragment, {
      key: index
    }, /*#__PURE__*/React.createElement("div", {
      style: getMainDivStyles()
    }, index === 0 && !detail.asSectionHeader ? /*#__PURE__*/React.createElement(CardSubHeader, {
      style: {
        marginBottom: "16px",
        fontSize: "24px"
      }
    }, t(detail.title)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CardSectionHeader, {
      style: index == 0 && checkLocation ? {
        marginBottom: "16px",
        fontSize: "24px"
      } : {
        marginBottom: "16px",
        marginTop: "32px",
        fontSize: "24px"
      }
    }, isNocLocation ? `${t(detail.title)}` : t(detail.title), detail !== null && detail !== void 0 && detail.Component ? /*#__PURE__*/React.createElement(detail.Component, null) : null)), (detail === null || detail === void 0 ? void 0 : detail.isTable) && /*#__PURE__*/React.createElement("table", {
      style: {
        tableLayout: "fixed",
        width: "100%",
        borderCollapse: "collapse"
      }
    }, /*#__PURE__*/React.createElement("tr", {
      style: {
        textAlign: "left"
      }
    }, detail === null || detail === void 0 ? void 0 : detail.headers.map(header => /*#__PURE__*/React.createElement("th", {
      style: {
        padding: "10px",
        paddingLeft: "0px"
      }
    }, t(header)))), detail === null || detail === void 0 ? void 0 : detail.tableRows.map((row, index) => {
      if (index === (detail === null || detail === void 0 ? void 0 : detail.tableRows.length) - 1) {
        return /*#__PURE__*/React.createElement(Fragment$1, null, /*#__PURE__*/React.createElement("hr", {
          style: {
            width: "370%",
            marginTop: "15px"
          },
          className: "underline"
        }), /*#__PURE__*/React.createElement("tr", null, row.map(element => /*#__PURE__*/React.createElement("td", {
          style: {
            textAlign: "left"
          }
        }, t(element)))));
      }
      return /*#__PURE__*/React.createElement("tr", null, row.map(element => /*#__PURE__*/React.createElement("td", {
        style: {
          paddingTop: "20px",
          textAlign: "left"
        }
      }, t(element))));
    })), /*#__PURE__*/React.createElement(StatusTable, {
      style: getTableStyles()
    }, (detail === null || detail === void 0 ? void 0 : detail.title) && !(detail !== null && detail !== void 0 && detail.title.includes("NOC")) && (detail === null || detail === void 0 ? void 0 : (_detail$values = detail.values) === null || _detail$values === void 0 ? void 0 : _detail$values.map((value, index) => {
      var _detail$values3;
      if (value.map === true && value.value !== "N/A") {
        return /*#__PURE__*/React.createElement(Row, {
          labelStyle: {
            wordBreak: "break-all"
          },
          textStyle: {
            wordBreak: "break-all"
          },
          key: t(value.title),
          label: t(value.title),
          text: /*#__PURE__*/React.createElement("img", {
            src: t(value.value),
            alt: "",
            privacy: value === null || value === void 0 ? void 0 : value.privacy
          })
        });
      }
      if ((value === null || value === void 0 ? void 0 : value.isLink) == true) {
        var _detail$values2;
        return /*#__PURE__*/React.createElement(Row, {
          key: t(value.title),
          label: window.location.href.includes("tl") || window.location.href.includes("ws") ? /*#__PURE__*/React.createElement("div", {
            style: {
              width: "200%"
            }
          }, /*#__PURE__*/React.createElement(Link, {
            to: value === null || value === void 0 ? void 0 : value.to
          }, /*#__PURE__*/React.createElement("span", {
            className: "link",
            style: {
              color: "#a82227"
            }
          }, t(value === null || value === void 0 ? void 0 : value.title)))) : isNocLocation || isBPALocation ? `${t(value.title)}` : t(value.title),
          text: /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Link, {
            to: value === null || value === void 0 ? void 0 : value.to
          }, /*#__PURE__*/React.createElement("span", {
            className: "link",
            style: {
              color: "#a82227"
            }
          }, value === null || value === void 0 ? void 0 : value.value))),
          last: index === (detail === null || detail === void 0 ? void 0 : (_detail$values2 = detail.values) === null || _detail$values2 === void 0 ? void 0 : _detail$values2.length) - 1,
          caption: value.caption,
          className: "border-none",
          rowContainerStyle: getRowStyles(),
          labelStyle: {
            wordBreak: "break-all"
          },
          textStyle: {
            wordBreak: "break-all"
          }
        });
      }
      return /*#__PURE__*/React.createElement("div", null, window.location.href.includes("modify") ? /*#__PURE__*/React.createElement(Row, {
        className: "border-none",
        key: `${value.title}`,
        label: `${t(`${value.title}`)}`,
        privacy: value === null || value === void 0 ? void 0 : value.privacy,
        text: value !== null && value !== void 0 && value.oldValue ? value === null || value === void 0 ? void 0 : value.oldValue : value !== null && value !== void 0 && value.value ? value === null || value === void 0 ? void 0 : value.value : "",
        labelStyle: {
          wordBreak: "break-all"
        },
        textStyle: {
          wordBreak: "break-all"
        }
      }) : /*#__PURE__*/React.createElement(Row, {
        key: t(value.title),
        label: t(value.title),
        text: getTextValue(value),
        last: index === (detail === null || detail === void 0 ? void 0 : (_detail$values3 = detail.values) === null || _detail$values3 === void 0 ? void 0 : _detail$values3.length) - 1,
        caption: value.caption,
        className: "border-none",
        privacy: value === null || value === void 0 ? void 0 : value.privacy,
        rowContainerStyle: getRowStyles(),
        labelStyle: {
          wordBreak: "break-all"
        },
        textStyle: {
          wordBreak: "break-all"
        }
      }));
    })))), (detail === null || detail === void 0 ? void 0 : detail.belowComponent) && /*#__PURE__*/React.createElement(detail.belowComponent, null), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet = detail.additionalDetails) === null || _detail$additionalDet === void 0 ? void 0 : _detail$additionalDet.inspectionReport) && /*#__PURE__*/React.createElement(ScruntinyDetails, {
      scrutinyDetails: detail === null || detail === void 0 ? void 0 : detail.additionalDetails,
      paymentsList: paymentsList
    }), (applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a2 = applicationDetails.applicationData) === null || _applicationDetails$a2 === void 0 ? void 0 : (_applicationDetails$a3 = _applicationDetails$a2.additionalDetails) === null || _applicationDetails$a3 === void 0 ? void 0 : (_applicationDetails$a4 = _applicationDetails$a3.fieldinspection_pending) === null || _applicationDetails$a4 === void 0 ? void 0 : _applicationDetails$a4.length) > 0 && (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet2 = detail.additionalDetails) === null || _detail$additionalDet2 === void 0 ? void 0 : _detail$additionalDet2.fiReport) && /*#__PURE__*/React.createElement(InspectionReport, {
      fiReport: applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a5 = applicationDetails.applicationData) === null || _applicationDetails$a5 === void 0 ? void 0 : (_applicationDetails$a6 = _applicationDetails$a5.additionalDetails) === null || _applicationDetails$a6 === void 0 ? void 0 : _applicationDetails$a6.fieldinspection_pending
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet3 = detail.additionalDetails) === null || _detail$additionalDet3 === void 0 ? void 0 : _detail$additionalDet3.floors) && /*#__PURE__*/React.createElement(PropertyFloors, {
      floors: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet4 = detail.additionalDetails) === null || _detail$additionalDet4 === void 0 ? void 0 : _detail$additionalDet4.floors
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet5 = detail.additionalDetails) === null || _detail$additionalDet5 === void 0 ? void 0 : _detail$additionalDet5.owners) && /*#__PURE__*/React.createElement(PropertyOwners, {
      owners: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet6 = detail.additionalDetails) === null || _detail$additionalDet6 === void 0 ? void 0 : _detail$additionalDet6.owners
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet7 = detail.additionalDetails) === null || _detail$additionalDet7 === void 0 ? void 0 : _detail$additionalDet7.units) && /*#__PURE__*/React.createElement(TLTradeUnits, {
      units: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet8 = detail.additionalDetails) === null || _detail$additionalDet8 === void 0 ? void 0 : _detail$additionalDet8.units
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet9 = detail.additionalDetails) === null || _detail$additionalDet9 === void 0 ? void 0 : _detail$additionalDet9.accessories) && /*#__PURE__*/React.createElement(TLTradeAccessories, {
      units: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet10 = detail.additionalDetails) === null || _detail$additionalDet10 === void 0 ? void 0 : _detail$additionalDet10.accessories
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet11 = detail.additionalDetails) === null || _detail$additionalDet11 === void 0 ? void 0 : _detail$additionalDet11.permissions) && (workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data = workflowDetails.data) === null || _workflowDetails$data === void 0 ? void 0 : (_workflowDetails$data2 = _workflowDetails$data.nextActions) === null || _workflowDetails$data2 === void 0 ? void 0 : _workflowDetails$data2.length) > 0 && /*#__PURE__*/React.createElement(PermissionCheck, {
      applicationData: applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.applicationData,
      t: t,
      permissions: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet12 = detail.additionalDetails) === null || _detail$additionalDet12 === void 0 ? void 0 : _detail$additionalDet12.permissions
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet13 = detail.additionalDetails) === null || _detail$additionalDet13 === void 0 ? void 0 : _detail$additionalDet13.obpsDocuments) && /*#__PURE__*/React.createElement(BPADocuments, {
      t: t,
      applicationData: applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.applicationData,
      docs: detail.additionalDetails.obpsDocuments,
      bpaActionsDetails: workflowDetails
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet14 = detail.additionalDetails) === null || _detail$additionalDet14 === void 0 ? void 0 : _detail$additionalDet14.noc) && /*#__PURE__*/React.createElement(NOCDocuments, {
      t: t,
      isNoc: true,
      NOCdata: detail.values,
      applicationData: applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.applicationData,
      docs: detail.additionalDetails.noc,
      noc: (_detail$additionalDet15 = detail.additionalDetails) === null || _detail$additionalDet15 === void 0 ? void 0 : _detail$additionalDet15.data,
      bpaActionsDetails: workflowDetails
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet16 = detail.additionalDetails) === null || _detail$additionalDet16 === void 0 ? void 0 : _detail$additionalDet16.scruntinyDetails) && /*#__PURE__*/React.createElement(ScruntinyDetails, {
      scrutinyDetails: detail === null || detail === void 0 ? void 0 : detail.additionalDetails
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet17 = detail.additionalDetails) === null || _detail$additionalDet17 === void 0 ? void 0 : _detail$additionalDet17.buildingExtractionDetails) && /*#__PURE__*/React.createElement(ScruntinyDetails, {
      scrutinyDetails: detail === null || detail === void 0 ? void 0 : detail.additionalDetails
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet18 = detail.additionalDetails) === null || _detail$additionalDet18 === void 0 ? void 0 : _detail$additionalDet18.subOccupancyTableDetails) && /*#__PURE__*/React.createElement(SubOccupancyTable, {
      edcrDetails: detail === null || detail === void 0 ? void 0 : detail.additionalDetails,
      applicationData: applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.applicationData
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet19 = detail.additionalDetails) === null || _detail$additionalDet19 === void 0 ? void 0 : _detail$additionalDet19.documentsWithUrl) && /*#__PURE__*/React.createElement(DocumentsPreview, {
      documents: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet20 = detail.additionalDetails) === null || _detail$additionalDet20 === void 0 ? void 0 : _detail$additionalDet20.documentsWithUrl
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet21 = detail.additionalDetails) === null || _detail$additionalDet21 === void 0 ? void 0 : _detail$additionalDet21.documents) && /*#__PURE__*/React.createElement(PropertyDocuments, {
      documents: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet22 = detail.additionalDetails) === null || _detail$additionalDet22 === void 0 ? void 0 : _detail$additionalDet22.documents
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet23 = detail.additionalDetails) === null || _detail$additionalDet23 === void 0 ? void 0 : _detail$additionalDet23.taxHeadEstimatesCalculation) && /*#__PURE__*/React.createElement(PropertyEstimates, {
      taxHeadEstimatesCalculation: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet24 = detail.additionalDetails) === null || _detail$additionalDet24 === void 0 ? void 0 : _detail$additionalDet24.taxHeadEstimatesCalculation
    }), (detail === null || detail === void 0 ? void 0 : detail.isWaterConnectionDetails) && /*#__PURE__*/React.createElement(WSAdditonalDetails, {
      wsAdditionalDetails: detail,
      oldValue: oldValue
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet25 = detail.additionalDetails) === null || _detail$additionalDet25 === void 0 ? void 0 : _detail$additionalDet25.redirectUrl) && /*#__PURE__*/React.createElement("div", {
      style: {
        fontSize: "16px",
        lineHeight: "24px",
        fontWeight: "400",
        padding: "10px 0px"
      }
    }, /*#__PURE__*/React.createElement(Link, {
      to: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet26 = detail.additionalDetails) === null || _detail$additionalDet26 === void 0 ? void 0 : (_detail$additionalDet27 = _detail$additionalDet26.redirectUrl) === null || _detail$additionalDet27 === void 0 ? void 0 : _detail$additionalDet27.url
    }, /*#__PURE__*/React.createElement("span", {
      className: "link",
      style: {
        color: "#a82227"
      }
    }, detail === null || detail === void 0 ? void 0 : (_detail$additionalDet28 = detail.additionalDetails) === null || _detail$additionalDet28 === void 0 ? void 0 : (_detail$additionalDet29 = _detail$additionalDet28.redirectUrl) === null || _detail$additionalDet29 === void 0 ? void 0 : _detail$additionalDet29.title))), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet30 = detail.additionalDetails) === null || _detail$additionalDet30 === void 0 ? void 0 : _detail$additionalDet30.estimationDetails) && /*#__PURE__*/React.createElement(WSFeeEstimation, {
      wsAdditionalDetails: detail,
      workflowDetails: workflowDetails
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet31 = detail.additionalDetails) === null || _detail$additionalDet31 === void 0 ? void 0 : _detail$additionalDet31.estimationDetails) && /*#__PURE__*/React.createElement(ViewBreakup, {
      wsAdditionalDetails: detail,
      workflowDetails: workflowDetails
    }));
  }), showTimeLine && (workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data3 = workflowDetails.data) === null || _workflowDetails$data3 === void 0 ? void 0 : (_workflowDetails$data4 = _workflowDetails$data3.timeline) === null || _workflowDetails$data4 === void 0 ? void 0 : _workflowDetails$data4.length) > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BreakLine, null), ((workflowDetails === null || workflowDetails === void 0 ? void 0 : workflowDetails.isLoading) || isDataLoading) && /*#__PURE__*/React.createElement(Loader, null), !(workflowDetails !== null && workflowDetails !== void 0 && workflowDetails.isLoading) && !isDataLoading && /*#__PURE__*/React.createElement(Fragment$1, null, /*#__PURE__*/React.createElement(CardSectionHeader, {
    style: {
      marginBottom: "16px",
      marginTop: "32px"
    }
  }, t("ES_APPLICATION_DETAILS_APPLICATION_TIMELINE")), workflowDetails !== null && workflowDetails !== void 0 && (_workflowDetails$data5 = workflowDetails.data) !== null && _workflowDetails$data5 !== void 0 && _workflowDetails$data5.timeline && (workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data6 = workflowDetails.data) === null || _workflowDetails$data6 === void 0 ? void 0 : (_workflowDetails$data7 = _workflowDetails$data6.timeline) === null || _workflowDetails$data7 === void 0 ? void 0 : _workflowDetails$data7.length) === 1 ? /*#__PURE__*/React.createElement(CheckPoint, {
    isCompleted: true,
    label: t(`${timelineStatusPrefix}${workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data8 = workflowDetails.data) === null || _workflowDetails$data8 === void 0 ? void 0 : (_workflowDetails$data9 = _workflowDetails$data8.timeline[0]) === null || _workflowDetails$data9 === void 0 ? void 0 : _workflowDetails$data9.state}`),
    customChild: getTimelineCaptions(workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data10 = workflowDetails.data) === null || _workflowDetails$data10 === void 0 ? void 0 : _workflowDetails$data10.timeline[0])
  }) : /*#__PURE__*/React.createElement(ConnectingCheckPoints, null, (workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data11 = workflowDetails.data) === null || _workflowDetails$data11 === void 0 ? void 0 : _workflowDetails$data11.timeline) && (workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data12 = workflowDetails.data) === null || _workflowDetails$data12 === void 0 ? void 0 : _workflowDetails$data12.timeline.map((checkpoint, index, arr) => {
    let timelineStatusPostfix = "";
    if (window.location.href.includes("/obps/")) {
      var _workflowDetails$data13, _workflowDetails$data14, _workflowDetails$data15, _workflowDetails$data16, _workflowDetails$data17, _workflowDetails$data18;
      if (workflowDetails !== null && workflowDetails !== void 0 && (_workflowDetails$data13 = workflowDetails.data) !== null && _workflowDetails$data13 !== void 0 && (_workflowDetails$data14 = _workflowDetails$data13.timeline[index - 1]) !== null && _workflowDetails$data14 !== void 0 && (_workflowDetails$data15 = _workflowDetails$data14.state) !== null && _workflowDetails$data15 !== void 0 && _workflowDetails$data15.includes("BACK_FROM") || workflowDetails !== null && workflowDetails !== void 0 && (_workflowDetails$data16 = workflowDetails.data) !== null && _workflowDetails$data16 !== void 0 && (_workflowDetails$data17 = _workflowDetails$data16.timeline[index - 1]) !== null && _workflowDetails$data17 !== void 0 && (_workflowDetails$data18 = _workflowDetails$data17.state) !== null && _workflowDetails$data18 !== void 0 && _workflowDetails$data18.includes("SEND_TO_CITIZEN")) timelineStatusPostfix = `_NOT_DONE`;else if ((checkpoint === null || checkpoint === void 0 ? void 0 : checkpoint.performedAction) === "SEND_TO_ARCHITECT") timelineStatusPostfix = `_BY_ARCHITECT_DONE`;else timelineStatusPostfix = index == 0 ? "" : `_DONE`;
    }
    return /*#__PURE__*/React.createElement(React.Fragment, {
      key: index
    }, /*#__PURE__*/React.createElement(CheckPoint, {
      keyValue: index,
      isCompleted: index === 0,
      info: checkpoint.comment,
      label: t(`${timelineStatusPrefix}${(checkpoint === null || checkpoint === void 0 ? void 0 : checkpoint.performedAction) === "REOPEN" ? checkpoint === null || checkpoint === void 0 ? void 0 : checkpoint.performedAction : checkpoint === null || checkpoint === void 0 ? void 0 : checkpoint[statusAttribute]}${timelineStatusPostfix}`),
      customChild: getTimelineCaptions(checkpoint, index)
    }));
  }))))));
}

function ApplicationDetailsToast({
  t,
  showToast,
  closeToast,
  businessService
}) {
  var _showToast$error, _showToast$error2, _showToast$error3, _showToast$error4, _showToast$error5, _showToast$error6, _showToast$error7, _showToast$error8, _showToast$action2, _showToast$error9, _showToast$error10, _showToast$error11, _showToast$error12, _showToast$error13, _showToast$error14, _showToast$error15, _showToast$error16, _showToast$action4;
  if (businessService !== null && businessService !== void 0 && businessService.includes("NewTL") || businessService !== null && businessService !== void 0 && businessService.includes("TL") || businessService !== null && businessService !== void 0 && businessService.includes("EDITRENEWAL")) {
    var _showToast$action;
    let label = "";
    switch (showToast === null || showToast === void 0 ? void 0 : (_showToast$action = showToast.action) === null || _showToast$action === void 0 ? void 0 : _showToast$action.action) {
      case "SENDBACK":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error = showToast.error) === null || _showToast$error === void 0 ? void 0 : _showToast$error.message : t("TL_SENDBACK_CHECKLIST_MESSAGE_HEAD");
        break;
      case "FORWARD":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error2 = showToast.error) === null || _showToast$error2 === void 0 ? void 0 : _showToast$error2.message : t("TL_FORWARD_SUCCESS_MESSAGE_MAIN");
        break;
      case "APPROVE":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error3 = showToast.error) === null || _showToast$error3 === void 0 ? void 0 : _showToast$error3.message : t("TL_APPROVAL_CHECKLIST_MESSAGE_HEAD");
        break;
      case "SENDBACKTOCITIZEN":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error4 = showToast.error) === null || _showToast$error4 === void 0 ? void 0 : _showToast$error4.message : t("TL_SENDBACK_TOCITIZEN_CHECKLIST_MESSAGE_HEAD");
        break;
      case "REJECT":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error5 = showToast.error) === null || _showToast$error5 === void 0 ? void 0 : _showToast$error5.message : t("TL_APPROVAL_REJ_MESSAGE_HEAD");
        break;
      case "RESUBMIT":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error6 = showToast.error) === null || _showToast$error6 === void 0 ? void 0 : _showToast$error6.message : t("TL_APPLICATION_RESUBMIT_SUCCESS_MESSAGE_MAIN");
        break;
      case "CANCEL":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error7 = showToast.error) === null || _showToast$error7 === void 0 ? void 0 : _showToast$error7.message : t("TL_TL_CANCELLED_MESSAGE_HEAD");
        break;
      default:
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error8 = showToast.error) === null || _showToast$error8 === void 0 ? void 0 : _showToast$error8.message : t(`ES_${businessService}_${showToast === null || showToast === void 0 ? void 0 : (_showToast$action2 = showToast.action) === null || _showToast$action2 === void 0 ? void 0 : _showToast$action2.action}_UPDATE_SUCCESS`);
    }
    return /*#__PURE__*/React.createElement(React.Fragment, null, showToast && /*#__PURE__*/React.createElement(Toast, {
      error: showToast.key === "error",
      label: label,
      onClose: closeToast
    }));
  } else if (businessService !== null && businessService !== void 0 && businessService.includes("BPA") || businessService !== null && businessService !== void 0 && businessService.includes("BPA_LOW") || businessService !== null && businessService !== void 0 && businessService.includes("BPA_OC")) {
    var _showToast$action3;
    const getMessage = (messages = []) => {
      let returnValue = messages[0];
      if ((messages === null || messages === void 0 ? void 0 : messages.length) == 2) returnValue = businessService !== null && businessService !== void 0 && businessService.includes("BPA_OC") ? t(messages[1]) : t(messages[0]);else returnValue = t(messages[0]);
      return returnValue;
    };
    let label = "";
    switch (showToast === null || showToast === void 0 ? void 0 : (_showToast$action3 = showToast.action) === null || _showToast$action3 === void 0 ? void 0 : _showToast$action3.action) {
      case "REVOCATE":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error9 = showToast.error) === null || _showToast$error9 === void 0 ? void 0 : _showToast$error9.message : getMessage(["BPA_APPROVAL_REVOCATED_MESSAGE_HEAD", "BPA_APPROVAL_OC_REVOCATED_MESSAGE_HEAD"]);
        break;
      case "VERIFY_AND_FORWARD":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error10 = showToast.error) === null || _showToast$error10 === void 0 ? void 0 : _showToast$error10.message : getMessage(["BPA_FORWARD_SUCCESS_MESSAGE_MAIN"]);
        break;
      case "SEND_BACK_TO_CITIZEN":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error11 = showToast.error) === null || _showToast$error11 === void 0 ? void 0 : _showToast$error11.message : getMessage(["BPA_SENDBACK_SUCCESS_MESSAGE_MAIN"]);
        break;
      case "APPROVE":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error12 = showToast.error) === null || _showToast$error12 === void 0 ? void 0 : _showToast$error12.message : getMessage(["BPA_APPROVAL_CHECKLIST_MESSAGE_HEAD"]);
        break;
      case "REJECT":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error13 = showToast.error) === null || _showToast$error13 === void 0 ? void 0 : _showToast$error13.message : getMessage(["BPA_APPROVAL_REJECTED_MESSAGE_HEAD", "BPA_OC_APPROVAL_REJECTED_MESSAGE_HEAD"]);
        break;
      case "FORWARD":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error14 = showToast.error) === null || _showToast$error14 === void 0 ? void 0 : _showToast$error14.message : getMessage(["BPA_FORWARD_SUCCESS_MESSAGE_MAIN"]);
        break;
      case "SEND_BACK_FOR_DOCUMENT_VERIFICATION":
      case "SEND_BACK_FOR_FIELD_INSPECTION":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error15 = showToast.error) === null || _showToast$error15 === void 0 ? void 0 : _showToast$error15.message : getMessage(["BPA_SENDBACK_SUCCESS_MESSAGE_MAIN"]);
        break;
      default:
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error16 = showToast.error) === null || _showToast$error16 === void 0 ? void 0 : _showToast$error16.message : t(`ES_${businessService}_${showToast === null || showToast === void 0 ? void 0 : (_showToast$action4 = showToast.action) === null || _showToast$action4 === void 0 ? void 0 : _showToast$action4.action}_UPDATE_SUCCESS`);
    }
    return /*#__PURE__*/React.createElement(React.Fragment, null, showToast && /*#__PURE__*/React.createElement(Toast, {
      error: showToast.key === "error",
      label: label,
      onClose: closeToast
    }));
  } else {
    var _showToast$error17, _showToast$action5;
    const label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error17 = showToast.error) === null || _showToast$error17 === void 0 ? void 0 : _showToast$error17.message : `ES_${businessService}_${showToast === null || showToast === void 0 ? void 0 : (_showToast$action5 = showToast.action) === null || _showToast$action5 === void 0 ? void 0 : _showToast$action5.action}_UPDATE_SUCCESS`;
    return /*#__PURE__*/React.createElement(React.Fragment, null, showToast && /*#__PURE__*/React.createElement(Toast, {
      error: showToast.key === "error",
      label: t(label),
      onClose: closeToast
    }));
  }
}

function ApplicationDetailsActionBar({
  workflowDetails,
  displayMenu,
  onActionSelect,
  setDisplayMenu,
  businessService,
  forcedActionPrefix,
  ActionBarStyle = {},
  MenuStyle = {}
}) {
  var _user, _user$info, _user$info$roles, _workflowDetails$data, _workflowDetails$data2, _workflowDetails$data3, _workflowDetails$data4, _workflowDetails$data5, _actions$, _actions$$redirection, _workflowDetails$data6, _workflowDetails$data7, _workflowDetails$data8, _actions$2, _actions$3, _actions$4;
  const {
    t
  } = useTranslation();
  let user = Digit.UserService.getUser();
  const menuRef = useRef();
  if (window.location.href.includes("/obps") || window.location.href.includes("/noc")) {
    const userInfos = sessionStorage.getItem("Digit.citizen.userRequestObject");
    const userInfo = userInfos ? JSON.parse(userInfos) : {};
    user = userInfo === null || userInfo === void 0 ? void 0 : userInfo.value;
  }
  const userRoles = (_user = user) === null || _user === void 0 ? void 0 : (_user$info = _user.info) === null || _user$info === void 0 ? void 0 : (_user$info$roles = _user$info.roles) === null || _user$info$roles === void 0 ? void 0 : _user$info$roles.map(e => e.code);
  let isSingleButton = false;
  let isMenuBotton = false;
  let actions = (workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data = workflowDetails.data) === null || _workflowDetails$data === void 0 ? void 0 : (_workflowDetails$data2 = _workflowDetails$data.actionState) === null || _workflowDetails$data2 === void 0 ? void 0 : (_workflowDetails$data3 = _workflowDetails$data2.nextActions) === null || _workflowDetails$data3 === void 0 ? void 0 : _workflowDetails$data3.filter(e => {
    return (userRoles === null || userRoles === void 0 ? void 0 : userRoles.some(role => {
      var _e$roles;
      return (_e$roles = e.roles) === null || _e$roles === void 0 ? void 0 : _e$roles.includes(role);
    })) || !e.roles;
  })) || (workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data4 = workflowDetails.data) === null || _workflowDetails$data4 === void 0 ? void 0 : (_workflowDetails$data5 = _workflowDetails$data4.nextActions) === null || _workflowDetails$data5 === void 0 ? void 0 : _workflowDetails$data5.filter(e => {
    return (userRoles === null || userRoles === void 0 ? void 0 : userRoles.some(role => {
      var _e$roles2;
      return (_e$roles2 = e.roles) === null || _e$roles2 === void 0 ? void 0 : _e$roles2.includes(role);
    })) || !e.roles;
  }));
  const closeMenu = () => {
    setDisplayMenu(false);
  };
  Digit.Hooks.useClickOutside(menuRef, closeMenu, displayMenu);
  if ((window.location.href.includes("/obps") || window.location.href.includes("/noc")) && (actions === null || actions === void 0 ? void 0 : actions.length) == 1 || actions !== null && actions !== void 0 && (_actions$ = actions[0]) !== null && _actions$ !== void 0 && (_actions$$redirection = _actions$.redirectionUrl) !== null && _actions$$redirection !== void 0 && _actions$$redirection.pathname.includes("/pt/property-details/") && (actions === null || actions === void 0 ? void 0 : actions.length) == 1) {
    isMenuBotton = false;
    isSingleButton = true;
  } else if ((actions === null || actions === void 0 ? void 0 : actions.length) > 0) {
    isMenuBotton = true;
    isSingleButton = false;
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, !(workflowDetails !== null && workflowDetails !== void 0 && workflowDetails.isLoading) && isMenuBotton && !isSingleButton && /*#__PURE__*/React.createElement(ActionBar, {
    style: {
      ...ActionBarStyle
    }
  }, displayMenu && (workflowDetails !== null && workflowDetails !== void 0 && (_workflowDetails$data6 = workflowDetails.data) !== null && _workflowDetails$data6 !== void 0 && (_workflowDetails$data7 = _workflowDetails$data6.actionState) !== null && _workflowDetails$data7 !== void 0 && _workflowDetails$data7.nextActions || workflowDetails !== null && workflowDetails !== void 0 && (_workflowDetails$data8 = workflowDetails.data) !== null && _workflowDetails$data8 !== void 0 && _workflowDetails$data8.nextActions) ? /*#__PURE__*/React.createElement(Menu, {
    localeKeyPrefix: forcedActionPrefix || `WF_EMPLOYEE_${businessService === null || businessService === void 0 ? void 0 : businessService.toUpperCase()}`,
    options: actions,
    optionKey: "action",
    t: t,
    onSelect: onActionSelect,
    style: MenuStyle
  }) : null, /*#__PURE__*/React.createElement(SubmitBar, {
    ref: menuRef,
    label: t("WF_TAKE_ACTION"),
    onSubmit: () => setDisplayMenu(!displayMenu)
  })), !(workflowDetails !== null && workflowDetails !== void 0 && workflowDetails.isLoading) && !isMenuBotton && isSingleButton && /*#__PURE__*/React.createElement(ActionBar, {
    style: {
      ...ActionBarStyle
    }
  }, /*#__PURE__*/React.createElement("button", {
    style: {
      color: "#FFFFFF",
      fontSize: "18px"
    },
    className: "submit-bar",
    name: actions === null || actions === void 0 ? void 0 : (_actions$2 = actions[0]) === null || _actions$2 === void 0 ? void 0 : _actions$2.action,
    value: actions === null || actions === void 0 ? void 0 : (_actions$3 = actions[0]) === null || _actions$3 === void 0 ? void 0 : _actions$3.action,
    onClick: e => {
      onActionSelect((actions === null || actions === void 0 ? void 0 : actions[0]) || {});
    }
  }, t(`${forcedActionPrefix || `WF_EMPLOYEE_${businessService === null || businessService === void 0 ? void 0 : businessService.toUpperCase()}`}_${actions === null || actions === void 0 ? void 0 : (_actions$4 = actions[0]) === null || _actions$4 === void 0 ? void 0 : _actions$4.action}`))));
}

const Close$6 = () => /*#__PURE__*/React.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24",
  fill: "#FFFFFF"
}, /*#__PURE__*/React.createElement("path", {
  d: "M0 0h24v24H0V0z",
  fill: "none"
}), /*#__PURE__*/React.createElement("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"
}));
const CloseBtn$6 = props => {
  return /*#__PURE__*/React.createElement("div", {
    className: "icon-bg-secondary",
    onClick: props.onClick
  }, /*#__PURE__*/React.createElement(Close$6, null));
};
function ApplicationDetailsWarningPopup({
  action,
  workflowDetails,
  businessService,
  isWarningPop,
  closeWarningPopup
}) {
  const {
    t
  } = useTranslation();
  const isMobile = window.Digit.Utils.browser.isMobile();
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {
    headerBarMain: /*#__PURE__*/React.createElement("h1", {
      className: "heading-m"
    }, t("PT_DUES_ARE_PENDING")),
    headerBarEnd: /*#__PURE__*/React.createElement(CloseBtn$6, {
      onClick: () => {
        closeWarningPopup();
      }
    }),
    hideSubmit: true,
    isDisabled: false,
    popupStyles: isMobile ? {} : {
      width: "29%",
      marginTop: "auto"
    }
  }, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement("div", {
    style: {
      marginBottom: "30px"
    }
  }, /*#__PURE__*/React.createElement("h1", null, t("PT_YOU_HAVE"), " \u20B9", action === null || action === void 0 ? void 0 : action.AmountDueForPay, " ", t("PT_DUE_WARNING_MSG2"))), /*#__PURE__*/React.createElement(Row, {
    rowContainerStyle: {
      display: "flex"
    },
    labelStyle: {
      fontSize: "24px",
      fontWeight: "700",
      marginRight: "10%"
    },
    textStyle: {
      fontSize: "24px",
      fontWeight: "700",
      marginBottom: "20px"
    },
    label: `${t("PT_AMOUNT_DUE")}`,
    text: `₹${t(action === null || action === void 0 ? void 0 : action.AmountDueForPay)}`
  }), /*#__PURE__*/React.createElement("div", {
    style: {
      width: "100%",
      display: "flex",
      justifyContent: "flex-end"
    }
  }, /*#__PURE__*/React.createElement(ButtonSelector, {
    theme: "border",
    label: t('ES_PT_COMMON_CANCEL'),
    onSubmit: closeWarningPopup,
    style: {
      marginLeft: "10px"
    }
  }), /*#__PURE__*/React.createElement(ButtonSelector, {
    label: t('PT_COLLECT'),
    onSubmit: () => {
      var _action$redirectionUr;
      return window.location.assign(`${window.location.origin}${action === null || action === void 0 ? void 0 : (_action$redirectionUr = action.redirectionUrl) === null || _action$redirectionUr === void 0 ? void 0 : _action$redirectionUr.pathname}`);
    },
    style: {
      marginLeft: "10px"
    }
  })))), ")");
}

const ApplicationDetails = props => {
  var _workflowDetails$data;
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const state = Digit.ULBService.getStateId();
  const {
    t
  } = useTranslation();
  const history = useHistory();
  let {
    id: applicationNumber
  } = useParams();
  const [displayMenu, setDisplayMenu] = useState(false);
  const [selectedAction, setSelectedAction] = useState(null);
  const [showModal, setShowModal] = useState(false);
  const [isEnableLoader, setIsEnableLoader] = useState(false);
  const [isWarningPop, setWarningPopUp] = useState(false);
  const {
    applicationDetails,
    showToast,
    setShowToast,
    isLoading,
    isDataLoading,
    applicationData,
    mutate,
    nocMutation,
    workflowDetails,
    businessService,
    closeToast,
    moduleCode,
    timelineStatusPrefix,
    forcedActionPrefix,
    statusAttribute,
    ActionBarStyle,
    MenuStyle,
    paymentsList,
    showTimeLine = true,
    oldValue,
    isInfoLabel = false,
    clearDataDetails
  } = props;
  useEffect(() => {
    if (showToast) {
      workflowDetails.revalidate();
    }
  }, [showToast]);
  function onActionSelect(action) {
    if (action) {
      if (action !== null && action !== void 0 && action.isToast) {
        setShowToast({
          key: "error",
          error: {
            message: action === null || action === void 0 ? void 0 : action.toastMessage
          }
        });
        setTimeout(closeToast, 5000);
      } else if (action !== null && action !== void 0 && action.isWarningPopUp) {
        setWarningPopUp(true);
      } else if (action !== null && action !== void 0 && action.redirectionUrll) {
        var _action$redirectionUr, _action$redirectionUr4;
        if ((action === null || action === void 0 ? void 0 : (_action$redirectionUr = action.redirectionUrll) === null || _action$redirectionUr === void 0 ? void 0 : _action$redirectionUr.action) === "ACTIVATE_CONNECTION") {
          var _action$redirectionUr2, _action$redirectionUr3, _location;
          history.push(`${action === null || action === void 0 ? void 0 : (_action$redirectionUr2 = action.redirectionUrll) === null || _action$redirectionUr2 === void 0 ? void 0 : _action$redirectionUr2.pathname}`, JSON.stringify({
            data: action === null || action === void 0 ? void 0 : (_action$redirectionUr3 = action.redirectionUrll) === null || _action$redirectionUr3 === void 0 ? void 0 : _action$redirectionUr3.state,
            url: `${(_location = location) === null || _location === void 0 ? void 0 : _location.pathname}${location.search}`
          }));
        } else if ((action === null || action === void 0 ? void 0 : (_action$redirectionUr4 = action.redirectionUrll) === null || _action$redirectionUr4 === void 0 ? void 0 : _action$redirectionUr4.action) === "RE-SUBMIT-APPLICATION") {
          var _action$redirectionUr5, _action$redirectionUr6;
          history.push(`${action === null || action === void 0 ? void 0 : (_action$redirectionUr5 = action.redirectionUrll) === null || _action$redirectionUr5 === void 0 ? void 0 : _action$redirectionUr5.pathname}`, {
            data: action === null || action === void 0 ? void 0 : (_action$redirectionUr6 = action.redirectionUrll) === null || _action$redirectionUr6 === void 0 ? void 0 : _action$redirectionUr6.state
          });
        } else {
          var _action$redirectionUr7;
          window.location.assign(`${window.location.origin}/digit-ui/employee/payment/collect/${action === null || action === void 0 ? void 0 : (_action$redirectionUr7 = action.redirectionUrll) === null || _action$redirectionUr7 === void 0 ? void 0 : _action$redirectionUr7.pathname}`);
        }
      } else if (!(action !== null && action !== void 0 && action.redirectionUrl)) {
        setShowModal(true);
      } else {
        var _action$redirectionUr8, _action$redirectionUr9;
        history.push({
          pathname: (_action$redirectionUr8 = action.redirectionUrl) === null || _action$redirectionUr8 === void 0 ? void 0 : _action$redirectionUr8.pathname,
          state: {
            ...((_action$redirectionUr9 = action.redirectionUrl) === null || _action$redirectionUr9 === void 0 ? void 0 : _action$redirectionUr9.state)
          }
        });
      }
    }
    setSelectedAction(action);
    setDisplayMenu(false);
  }
  const queryClient = useQueryClient();
  const closeModal = () => {
    setSelectedAction(null);
    setShowModal(false);
  };
  const closeWarningPopup = () => {
    setWarningPopUp(false);
  };
  const submitAction = async (data, nocData = false, isOBPS = {}) => {
    setIsEnableLoader(true);
    if (typeof (data === null || data === void 0 ? void 0 : data.customFunctionToExecute) === "function") {
      data === null || data === void 0 ? void 0 : data.customFunctionToExecute({
        ...data
      });
    }
    if (nocData !== false && nocMutation) {
      const nocPrmomises = nocData === null || nocData === void 0 ? void 0 : nocData.map(noc => {
        return nocMutation === null || nocMutation === void 0 ? void 0 : nocMutation.mutateAsync(noc);
      });
      try {
        setIsEnableLoader(true);
        const values = await Promise.all(nocPrmomises);
        values && values.map(ob => {
          var _ob$Noc, _ob$Noc$;
          Digit.SessionStorage.del(ob === null || ob === void 0 ? void 0 : (_ob$Noc = ob.Noc) === null || _ob$Noc === void 0 ? void 0 : (_ob$Noc$ = _ob$Noc[0]) === null || _ob$Noc$ === void 0 ? void 0 : _ob$Noc$.nocType);
        });
      } catch (err) {
        var _err$response, _err$response$data, _err$response$data$Er, _err$response$data$Er2, _err$response2, _err$response2$data, _err$response2$data$E, _err$response2$data$E2, _err$response3, _err$response3$data, _err$response3$data$E, _err$response3$data$E2;
        setIsEnableLoader(false);
        let errorValue = err !== null && err !== void 0 && (_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && (_err$response$data$Er = _err$response$data.Errors) !== null && _err$response$data$Er !== void 0 && (_err$response$data$Er2 = _err$response$data$Er[0]) !== null && _err$response$data$Er2 !== void 0 && _err$response$data$Er2.code ? t(err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : (_err$response2$data$E = _err$response2$data.Errors) === null || _err$response2$data$E === void 0 ? void 0 : (_err$response2$data$E2 = _err$response2$data$E[0]) === null || _err$response2$data$E2 === void 0 ? void 0 : _err$response2$data$E2.code) : (err === null || err === void 0 ? void 0 : (_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : (_err$response3$data$E = _err$response3$data.Errors) === null || _err$response3$data$E === void 0 ? void 0 : (_err$response3$data$E2 = _err$response3$data$E[0]) === null || _err$response3$data$E2 === void 0 ? void 0 : _err$response3$data$E2.message) || err;
        closeModal();
        setShowToast({
          key: "error",
          error: {
            message: errorValue
          }
        });
        setTimeout(closeToast, 5000);
        return;
      }
    }
    if (mutate) {
      setIsEnableLoader(true);
      mutate(data, {
        onError: (error, variables) => {
          setIsEnableLoader(false);
          setShowToast({
            key: "error",
            error
          });
          setTimeout(closeToast, 5000);
        },
        onSuccess: (data, variables) => {
          var _data$Amendments;
          sessionStorage.removeItem("WS_SESSION_APPLICATION_DETAILS");
          setIsEnableLoader(false);
          if (isOBPS !== null && isOBPS !== void 0 && isOBPS.bpa) {
            data.selectedAction = selectedAction;
            history.replace(`/digit-ui/employee/obps/response`, {
              data: data
            });
          }
          if (isOBPS !== null && isOBPS !== void 0 && isOBPS.isStakeholder) {
            data.selectedAction = selectedAction;
            history.push(`/digit-ui/employee/obps/stakeholder-response`, {
              data: data
            });
          }
          if (isOBPS !== null && isOBPS !== void 0 && isOBPS.isNoc) {
            history.push(`/digit-ui/employee/noc/response`, {
              data: data
            });
          }
          if ((data === null || data === void 0 ? void 0 : (_data$Amendments = data.Amendments) === null || _data$Amendments === void 0 ? void 0 : _data$Amendments.length) > 0) {
            var _variables$AmendmentU, _variables$AmendmentU2, _variables$AmendmentU3, _variables$AmendmentU4, _variables$AmendmentU5, _variables$AmendmentU6, _variables$AmendmentU7, _variables$AmendmentU8;
            if (variables !== null && variables !== void 0 && (_variables$AmendmentU = variables.AmendmentUpdate) !== null && _variables$AmendmentU !== void 0 && (_variables$AmendmentU2 = _variables$AmendmentU.workflow) !== null && _variables$AmendmentU2 !== void 0 && _variables$AmendmentU2.action.includes("SEND_BACK")) {
              setShowToast({
                key: "success",
                label: t("ES_MODIFYSWCONNECTION_SEND_BACK_UPDATE_SUCCESS")
              });
            } else if (variables !== null && variables !== void 0 && (_variables$AmendmentU3 = variables.AmendmentUpdate) !== null && _variables$AmendmentU3 !== void 0 && (_variables$AmendmentU4 = _variables$AmendmentU3.workflow) !== null && _variables$AmendmentU4 !== void 0 && _variables$AmendmentU4.action.includes("RE-SUBMIT")) {
              setShowToast({
                key: "success",
                label: t("ES_MODIFYSWCONNECTION_RE_SUBMIT_UPDATE_SUCCESS")
              });
            } else if (variables !== null && variables !== void 0 && (_variables$AmendmentU5 = variables.AmendmentUpdate) !== null && _variables$AmendmentU5 !== void 0 && (_variables$AmendmentU6 = _variables$AmendmentU5.workflow) !== null && _variables$AmendmentU6 !== void 0 && _variables$AmendmentU6.action.includes("APPROVE")) {
              setShowToast({
                key: "success",
                label: t("ES_MODIFYSWCONNECTION_APPROVE_UPDATE_SUCCESS")
              });
            } else if (variables !== null && variables !== void 0 && (_variables$AmendmentU7 = variables.AmendmentUpdate) !== null && _variables$AmendmentU7 !== void 0 && (_variables$AmendmentU8 = _variables$AmendmentU7.workflow) !== null && _variables$AmendmentU8 !== void 0 && _variables$AmendmentU8.action.includes("REJECT")) {
              setShowToast({
                key: "success",
                label: t("ES_MODIFYWSCONNECTION_REJECT_UPDATE_SUCCESS")
              });
            }
            return;
          }
          setShowToast({
            key: "success",
            action: selectedAction
          });
          clearDataDetails && setTimeout(clearDataDetails, 3000);
          setTimeout(closeToast, 5000);
          queryClient.clear();
          queryClient.refetchQueries("APPLICATION_SEARCH");
        }
      });
    }
    closeModal();
  };
  if (isLoading || isEnableLoader) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, !isLoading ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ApplicationDetailsContent, {
    applicationDetails: applicationDetails,
    workflowDetails: workflowDetails,
    isDataLoading: isDataLoading,
    applicationData: applicationData,
    businessService: businessService,
    timelineStatusPrefix: timelineStatusPrefix,
    statusAttribute: statusAttribute,
    paymentsList: paymentsList,
    showTimeLine: showTimeLine,
    oldValue: oldValue,
    isInfoLabel: isInfoLabel
  }), showModal ? /*#__PURE__*/React.createElement(ActionModal$6, {
    t: t,
    action: selectedAction,
    tenantId: tenantId,
    state: state,
    id: applicationNumber,
    applicationDetails: applicationDetails,
    applicationData: applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.applicationData,
    closeModal: closeModal,
    submitAction: submitAction,
    actionData: workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data = workflowDetails.data) === null || _workflowDetails$data === void 0 ? void 0 : _workflowDetails$data.timeline,
    businessService: businessService,
    workflowDetails: workflowDetails,
    moduleCode: moduleCode
  }) : null, isWarningPop ? /*#__PURE__*/React.createElement(ApplicationDetailsWarningPopup, {
    action: selectedAction,
    workflowDetails: workflowDetails,
    businessService: businessService,
    isWarningPop: isWarningPop,
    closeWarningPopup: closeWarningPopup
  }) : null, /*#__PURE__*/React.createElement(ApplicationDetailsToast, {
    t: t,
    showToast: showToast,
    closeToast: closeToast,
    businessService: businessService
  }), /*#__PURE__*/React.createElement(ApplicationDetailsActionBar, {
    workflowDetails: workflowDetails,
    displayMenu: displayMenu,
    onActionSelect: onActionSelect,
    setDisplayMenu: setDisplayMenu,
    businessService: businessService,
    forcedActionPrefix: forcedActionPrefix,
    ActionBarStyle: ActionBarStyle,
    MenuStyle: MenuStyle
  })) : /*#__PURE__*/React.createElement(Loader, null));
};

var HASH_UNDEFINED$2 = '__lodash_hash_undefined__';
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED$2);
  return this;
}
var _setCacheAdd = setCacheAdd;

function setCacheHas(value) {
  return this.__data__.has(value);
}
var _setCacheHas = setCacheHas;

function SetCache(values) {
  var index = -1,
    length = values == null ? 0 : values.length;
  this.__data__ = new _MapCache();
  while (++index < length) {
    this.add(values[index]);
  }
}
SetCache.prototype.add = SetCache.prototype.push = _setCacheAdd;
SetCache.prototype.has = _setCacheHas;
var _SetCache = SetCache;

function arraySome(array, predicate) {
  var index = -1,
    length = array == null ? 0 : array.length;
  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}
var _arraySome = arraySome;

function cacheHas(cache, key) {
  return cache.has(key);
}
var _cacheHas = cacheHas;

var COMPARE_PARTIAL_FLAG = 1,
  COMPARE_UNORDERED_FLAG = 2;
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
    arrLength = array.length,
    othLength = other.length;
  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index = -1,
    result = true,
    seen = bitmask & COMPARE_UNORDERED_FLAG ? new _SetCache() : undefined;
  stack.set(array, other);
  stack.set(other, array);
  while (++index < arrLength) {
    var arrValue = array[index],
      othValue = other[index];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    if (seen) {
      if (!_arraySome(other, function (othValue, othIndex) {
        if (!_cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}
var _equalArrays = equalArrays;

function mapToArray(map) {
  var index = -1,
    result = Array(map.size);
  map.forEach(function (value, key) {
    result[++index] = [key, value];
  });
  return result;
}
var _mapToArray = mapToArray;

function setToArray(set) {
  var index = -1,
    result = Array(set.size);
  set.forEach(function (value) {
    result[++index] = value;
  });
  return result;
}
var _setToArray = setToArray;

var COMPARE_PARTIAL_FLAG$1 = 1,
  COMPARE_UNORDERED_FLAG$1 = 2;
var boolTag$3 = '[object Boolean]',
  dateTag$3 = '[object Date]',
  errorTag$2 = '[object Error]',
  mapTag$5 = '[object Map]',
  numberTag$3 = '[object Number]',
  regexpTag$3 = '[object RegExp]',
  setTag$5 = '[object Set]',
  stringTag$3 = '[object String]',
  symbolTag$3 = '[object Symbol]';
var arrayBufferTag$3 = '[object ArrayBuffer]',
  dataViewTag$4 = '[object DataView]';
var symbolProto$2 = _Symbol ? _Symbol.prototype : undefined,
  symbolValueOf$1 = symbolProto$2 ? symbolProto$2.valueOf : undefined;
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag$4:
      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;
    case arrayBufferTag$3:
      if (object.byteLength != other.byteLength || !equalFunc(new _Uint8Array(object), new _Uint8Array(other))) {
        return false;
      }
      return true;
    case boolTag$3:
    case dateTag$3:
    case numberTag$3:
      return eq_1(+object, +other);
    case errorTag$2:
      return object.name == other.name && object.message == other.message;
    case regexpTag$3:
    case stringTag$3:
      return object == other + '';
    case mapTag$5:
      var convert = _mapToArray;
    case setTag$5:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG$1;
      convert || (convert = _setToArray);
      if (object.size != other.size && !isPartial) {
        return false;
      }
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG$1;
      stack.set(object, other);
      var result = _equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;
    case symbolTag$3:
      if (symbolValueOf$1) {
        return symbolValueOf$1.call(object) == symbolValueOf$1.call(other);
      }
  }
  return false;
}
var _equalByTag = equalByTag;

var COMPARE_PARTIAL_FLAG$2 = 1;
var objectProto$d = Object.prototype;
var hasOwnProperty$b = objectProto$d.hasOwnProperty;
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$2,
    objProps = _getAllKeys(object),
    objLength = objProps.length,
    othProps = _getAllKeys(other),
    othLength = othProps.length;
  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty$b.call(other, key))) {
      return false;
    }
  }
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);
  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
      othValue = other[key];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
    }
    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
      othCtor = other.constructor;
    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}
var _equalObjects = equalObjects;

var COMPARE_PARTIAL_FLAG$3 = 1;
var argsTag$3 = '[object Arguments]',
  arrayTag$2 = '[object Array]',
  objectTag$3 = '[object Object]';
var objectProto$e = Object.prototype;
var hasOwnProperty$c = objectProto$e.hasOwnProperty;
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray_1(object),
    othIsArr = isArray_1(other),
    objTag = objIsArr ? arrayTag$2 : _getTag(object),
    othTag = othIsArr ? arrayTag$2 : _getTag(other);
  objTag = objTag == argsTag$3 ? objectTag$3 : objTag;
  othTag = othTag == argsTag$3 ? objectTag$3 : othTag;
  var objIsObj = objTag == objectTag$3,
    othIsObj = othTag == objectTag$3,
    isSameTag = objTag == othTag;
  if (isSameTag && isBuffer_1(object)) {
    if (!isBuffer_1(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new _Stack());
    return objIsArr || isTypedArray_1(object) ? _equalArrays(object, other, bitmask, customizer, equalFunc, stack) : _equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG$3)) {
    var objIsWrapped = objIsObj && hasOwnProperty$c.call(object, '__wrapped__'),
      othIsWrapped = othIsObj && hasOwnProperty$c.call(other, '__wrapped__');
    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
        othUnwrapped = othIsWrapped ? other.value() : other;
      stack || (stack = new _Stack());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new _Stack());
  return _equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}
var _baseIsEqualDeep = baseIsEqualDeep;

function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || !isObjectLike_1(value) && !isObjectLike_1(other)) {
    return value !== value && other !== other;
  }
  return _baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}
var _baseIsEqual = baseIsEqual;

var COMPARE_PARTIAL_FLAG$4 = 1,
  COMPARE_UNORDERED_FLAG$2 = 2;
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
    length = index,
    noCustomizer = !customizer;
  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
      objValue = object[key],
      srcValue = data[1];
    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new _Stack();
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined ? _baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG$4 | COMPARE_UNORDERED_FLAG$2, customizer, stack) : result)) {
        return false;
      }
    }
  }
  return true;
}
var _baseIsMatch = baseIsMatch;

function isStrictComparable(value) {
  return value === value && !isObject_1(value);
}
var _isStrictComparable = isStrictComparable;

function getMatchData(object) {
  var result = keys_1(object),
    length = result.length;
  while (length--) {
    var key = result[length],
      value = object[key];
    result[length] = [key, value, _isStrictComparable(value)];
  }
  return result;
}
var _getMatchData = getMatchData;

function matchesStrictComparable(key, srcValue) {
  return function (object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));
  };
}
var _matchesStrictComparable = matchesStrictComparable;

function baseMatches(source) {
  var matchData = _getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return _matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function (object) {
    return object === source || _baseIsMatch(object, source, matchData);
  };
}
var _baseMatches = baseMatches;

function baseHasIn(object, key) {
  return object != null && key in Object(object);
}
var _baseHasIn = baseHasIn;

function hasPath(object, path, hasFunc) {
  path = _castPath(path, object);
  var index = -1,
    length = path.length,
    result = false;
  while (++index < length) {
    var key = _toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength_1(length) && _isIndex(key, length) && (isArray_1(object) || isArguments_1(object));
}
var _hasPath = hasPath;

function hasIn(object, path) {
  return object != null && _hasPath(object, path, _baseHasIn);
}
var hasIn_1 = hasIn;

var COMPARE_PARTIAL_FLAG$5 = 1,
  COMPARE_UNORDERED_FLAG$3 = 2;
function baseMatchesProperty(path, srcValue) {
  if (_isKey(path) && _isStrictComparable(srcValue)) {
    return _matchesStrictComparable(_toKey(path), srcValue);
  }
  return function (object) {
    var objValue = get_1(object, path);
    return objValue === undefined && objValue === srcValue ? hasIn_1(object, path) : _baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG$5 | COMPARE_UNORDERED_FLAG$3);
  };
}
var _baseMatchesProperty = baseMatchesProperty;

function identity(value) {
  return value;
}
var identity_1 = identity;

function baseProperty(key) {
  return function (object) {
    return object == null ? undefined : object[key];
  };
}
var _baseProperty = baseProperty;

function basePropertyDeep(path) {
  return function (object) {
    return _baseGet(object, path);
  };
}
var _basePropertyDeep = basePropertyDeep;

function property(path) {
  return _isKey(path) ? _baseProperty(_toKey(path)) : _basePropertyDeep(path);
}
var property_1 = property;

function baseIteratee(value) {
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return identity_1;
  }
  if (typeof value == 'object') {
    return isArray_1(value) ? _baseMatchesProperty(value[0], value[1]) : _baseMatches(value);
  }
  return property_1(value);
}
var _baseIteratee = baseIteratee;

function createBaseFor(fromRight) {
  return function (object, iteratee, keysFunc) {
    var index = -1,
      iterable = Object(object),
      props = keysFunc(object),
      length = props.length;
    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}
var _createBaseFor = createBaseFor;

var baseFor = _createBaseFor();
var _baseFor = baseFor;

function baseForOwn(object, iteratee) {
  return object && _baseFor(object, iteratee, keys_1);
}
var _baseForOwn = baseForOwn;

function createBaseEach(eachFunc, fromRight) {
  return function (collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike_1(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length,
      index = fromRight ? length : -1,
      iterable = Object(collection);
    while (fromRight ? index-- : ++index < length) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}
var _createBaseEach = createBaseEach;

var baseEach = _createBaseEach(_baseForOwn);
var _baseEach = baseEach;

function baseMap(collection, iteratee) {
  var index = -1,
    result = isArrayLike_1(collection) ? Array(collection.length) : [];
  _baseEach(collection, function (value, key, collection) {
    result[++index] = iteratee(value, key, collection);
  });
  return result;
}
var _baseMap = baseMap;

function baseSortBy(array, comparer) {
  var length = array.length;
  array.sort(comparer);
  while (length--) {
    array[length] = array[length].value;
  }
  return array;
}
var _baseSortBy = baseSortBy;

function compareAscending(value, other) {
  if (value !== other) {
    var valIsDefined = value !== undefined,
      valIsNull = value === null,
      valIsReflexive = value === value,
      valIsSymbol = isSymbol_1(value);
    var othIsDefined = other !== undefined,
      othIsNull = other === null,
      othIsReflexive = other === other,
      othIsSymbol = isSymbol_1(other);
    if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
      return 1;
    }
    if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
      return -1;
    }
  }
  return 0;
}
var _compareAscending = compareAscending;

function compareMultiple(object, other, orders) {
  var index = -1,
    objCriteria = object.criteria,
    othCriteria = other.criteria,
    length = objCriteria.length,
    ordersLength = orders.length;
  while (++index < length) {
    var result = _compareAscending(objCriteria[index], othCriteria[index]);
    if (result) {
      if (index >= ordersLength) {
        return result;
      }
      var order = orders[index];
      return result * (order == 'desc' ? -1 : 1);
    }
  }
  return object.index - other.index;
}
var _compareMultiple = compareMultiple;

function baseOrderBy(collection, iteratees, orders) {
  if (iteratees.length) {
    iteratees = _arrayMap(iteratees, function (iteratee) {
      if (isArray_1(iteratee)) {
        return function (value) {
          return _baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
        };
      }
      return iteratee;
    });
  } else {
    iteratees = [identity_1];
  }
  var index = -1;
  iteratees = _arrayMap(iteratees, _baseUnary(_baseIteratee));
  var result = _baseMap(collection, function (value, key, collection) {
    var criteria = _arrayMap(iteratees, function (iteratee) {
      return iteratee(value);
    });
    return {
      'criteria': criteria,
      'index': ++index,
      'value': value
    };
  });
  return _baseSortBy(result, function (object, other) {
    return _compareMultiple(object, other, orders);
  });
}
var _baseOrderBy = baseOrderBy;

function orderBy(collection, iteratees, orders, guard) {
  if (collection == null) {
    return [];
  }
  if (!isArray_1(iteratees)) {
    iteratees = iteratees == null ? [] : [iteratees];
  }
  orders = guard ? undefined : orders;
  if (!isArray_1(orders)) {
    orders = orders == null ? [] : [orders];
  }
  return _baseOrderBy(collection, iteratees, orders);
}
var orderBy_1 = orderBy;

const ApplicationDetails$1 = () => {
  var _applicationDetails$a, _workflowDetails3, _workflowDetails3$dat, _workflowDetails3$dat2, _userInfo$info, _applicationDetails$a10, _applicationDetails$a11, _applicationDetails$a12, _applicationDetails$a13, _applicationDetails$a16, _workflowDetails$data2, _workflowDetails$data3, _ownerdetails$additio, _applicationDetails$a21, _applicationDetails$a22, _applicationDetails$a23;
  const {
    data: storeData
  } = Digit.Hooks.useStore.getInitData();
  const {
    tenants
  } = storeData || {};
  const {
    t
  } = useTranslation();
  const tenantId = Digit.ULBService.getCurrentTenantId();
  const {
    id: applicationNumber
  } = useParams();
  const [showToast, setShowToast] = useState(null);
  const [businessService, setBusinessService] = useState("NewTL");
  const [numberOfApplications, setNumberOfApplications] = useState([]);
  const [allowedToNextYear, setAllowedToNextYear] = useState(false);
  const [oldRenewalAppNo, setoldRenewalAppNo] = useState("");
  const [latestRenewalYearofAPP, setlatestRenewalYearofAPP] = useState("");
  sessionStorage.setItem("applicationNumber", applicationNumber);
  const {
    renewalPending: renewalPending
  } = Digit.Hooks.useQueryParams();
  const {
    isLoading,
    isError,
    data: applicationDetails,
    error
  } = Digit.Hooks.tl.useApplicationDetail(t, tenantId, applicationNumber);
  const stateId = Digit.ULBService.getStateId();
  const {
    data: TradeRenewalDate = {}
  } = Digit.Hooks.tl.useTradeLicenseMDMS(stateId, "TradeLicense", ["TradeRenewal"]);
  const {
    isLoading: updatingApplication,
    isError: updateApplicationError,
    data: updateResponse,
    error: updateError,
    mutate
  } = Digit.Hooks.tl.useApplicationActions(tenantId);
  let EditRenewalApplastModifiedTime = Digit.SessionStorage.get("EditRenewalApplastModifiedTime");
  let workflowDetails = Digit.Hooks.useWorkflowDetails({
    tenantId: (applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.tenantId) || tenantId,
    id: applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a = applicationDetails.applicationData) === null || _applicationDetails$a === void 0 ? void 0 : _applicationDetails$a.applicationNumber,
    moduleCode: businessService,
    role: "TL_CEMP",
    config: {
      EditRenewalApplastModifiedTime: EditRenewalApplastModifiedTime
    }
  });
  const closeToast = () => {
    setShowToast(null);
  };
  useEffect(() => {
    var _applicationDetails$n;
    if ((applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$n = applicationDetails.numOfApplications) === null || _applicationDetails$n === void 0 ? void 0 : _applicationDetails$n.length) > 0) {
      var _applicationDetails$a2, _applicationDetails$n2, _applicationDetails$n3, _applicationDetails$n4, _applicationDetails$a4, _applicationDetails$a5;
      let financialYear = cloneDeep_1(applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a2 = applicationDetails.applicationData) === null || _applicationDetails$a2 === void 0 ? void 0 : _applicationDetails$a2.financialYear);
      const financialYearDate = financialYear === null || financialYear === void 0 ? void 0 : financialYear.split('-')[1];
      const finalFinancialYear = `20${Number(financialYearDate)}-${Number(financialYearDate) + 1}`;
      const latestFinancialYear = Math.max.apply(Math, applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$n2 = applicationDetails.numOfApplications) === null || _applicationDetails$n2 === void 0 ? void 0 : (_applicationDetails$n3 = _applicationDetails$n2.filter(ob => {
        var _applicationDetails$a3;
        return ob.licenseNumber === (applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a3 = applicationDetails.applicationData) === null || _applicationDetails$a3 === void 0 ? void 0 : _applicationDetails$a3.licenseNumber);
      })) === null || _applicationDetails$n3 === void 0 ? void 0 : _applicationDetails$n3.map(function (o) {
        return parseInt(o.financialYear.split("-")[0]);
      }));
      const isAllowedToNextYear = applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$n4 = applicationDetails.numOfApplications) === null || _applicationDetails$n4 === void 0 ? void 0 : _applicationDetails$n4.filter(data => data.financialYear == finalFinancialYear && (data === null || data === void 0 ? void 0 : data.status) !== "REJECTED");
      if ((isAllowedToNextYear === null || isAllowedToNextYear === void 0 ? void 0 : isAllowedToNextYear.length) > 0) {
        var _isAllowedToNextYear$;
        setAllowedToNextYear(false);
        setoldRenewalAppNo(isAllowedToNextYear === null || isAllowedToNextYear === void 0 ? void 0 : (_isAllowedToNextYear$ = isAllowedToNextYear[0]) === null || _isAllowedToNextYear$ === void 0 ? void 0 : _isAllowedToNextYear$.applicationNumber);
      }
      if (!(applicationDetails !== null && applicationDetails !== void 0 && (_applicationDetails$a4 = applicationDetails.applicationData) !== null && _applicationDetails$a4 !== void 0 && _applicationDetails$a4.financialYear.includes(`${latestFinancialYear}`))) setlatestRenewalYearofAPP(applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a5 = applicationDetails.applicationData) === null || _applicationDetails$a5 === void 0 ? void 0 : _applicationDetails$a5.financialYear);
      if (!isAllowedToNextYear || (isAllowedToNextYear === null || isAllowedToNextYear === void 0 ? void 0 : isAllowedToNextYear.length) == 0) setAllowedToNextYear(true);
      setNumberOfApplications(applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.numOfApplications);
    }
  }, [applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.numOfApplications]);
  useEffect(() => {
    var _workflowDetails, _workflowDetails$data;
    if ((_workflowDetails = workflowDetails) !== null && _workflowDetails !== void 0 && (_workflowDetails$data = _workflowDetails.data) !== null && _workflowDetails$data !== void 0 && _workflowDetails$data.applicationBusinessService) {
      var _workflowDetails2, _workflowDetails2$dat;
      setBusinessService((_workflowDetails2 = workflowDetails) === null || _workflowDetails2 === void 0 ? void 0 : (_workflowDetails2$dat = _workflowDetails2.data) === null || _workflowDetails2$dat === void 0 ? void 0 : _workflowDetails2$dat.applicationBusinessService);
    }
  }, [workflowDetails.data]);
  if (((_workflowDetails3 = workflowDetails) === null || _workflowDetails3 === void 0 ? void 0 : (_workflowDetails3$dat = _workflowDetails3.data) === null || _workflowDetails3$dat === void 0 ? void 0 : (_workflowDetails3$dat2 = _workflowDetails3$dat.processInstances) === null || _workflowDetails3$dat2 === void 0 ? void 0 : _workflowDetails3$dat2.length) > 0) {
    var _get, _workflowDetails4, _workflowDetails4$dat, _workflowDetails5, _workflowDetails5$dat, _workflowDetails6, _workflowDetails6$dat, _workflowDetails6$dat2, _workflowDetails6$dat3;
    let filteredActions = [];
    filteredActions = (_get = get_1((_workflowDetails4 = workflowDetails) === null || _workflowDetails4 === void 0 ? void 0 : (_workflowDetails4$dat = _workflowDetails4.data) === null || _workflowDetails4$dat === void 0 ? void 0 : _workflowDetails4$dat.processInstances[0], "nextActions", [])) === null || _get === void 0 ? void 0 : _get.filter(item => item.action != "ADHOC");
    let actions = orderBy_1(filteredActions, ["action"], ["desc"]);
    if ((!actions || (actions === null || actions === void 0 ? void 0 : actions.length) == 0) && (_workflowDetails5 = workflowDetails) !== null && _workflowDetails5 !== void 0 && (_workflowDetails5$dat = _workflowDetails5.data) !== null && _workflowDetails5$dat !== void 0 && _workflowDetails5$dat.actionState) workflowDetails.data.actionState.nextActions = [];
    (_workflowDetails6 = workflowDetails) === null || _workflowDetails6 === void 0 ? void 0 : (_workflowDetails6$dat = _workflowDetails6.data) === null || _workflowDetails6$dat === void 0 ? void 0 : (_workflowDetails6$dat2 = _workflowDetails6$dat.actionState) === null || _workflowDetails6$dat2 === void 0 ? void 0 : (_workflowDetails6$dat3 = _workflowDetails6$dat2.nextActions) === null || _workflowDetails6$dat3 === void 0 ? void 0 : _workflowDetails6$dat3.forEach(data => {
      if (data.action == "RESUBMIT") {
        data.redirectionUrl = {
          pathname: `/digit-ui/employee/tl/edit-application-details/${applicationNumber}`,
          state: applicationDetails
        }, data.tenantId = stateId;
      }
    });
  }
  const userInfo = Digit.UserService.getUser();
  const rolearray = userInfo === null || userInfo === void 0 ? void 0 : (_userInfo$info = userInfo.info) === null || _userInfo$info === void 0 ? void 0 : _userInfo$info.roles.filter(item => {
    if (item.code == "TL_CEMP" && item.tenantId === tenantId || item.code == "CITIZEN") return true;
  });
  const rolecheck = rolearray.length > 0 ? true : false;
  const getToastMessages = () => {
    var _applicationDetails$a7, _applicationDetails$a8, _applicationDetails$a9;
    if (allowedToNextYear == false && oldRenewalAppNo && (applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a7 = applicationDetails.applicationData) === null || _applicationDetails$a7 === void 0 ? void 0 : _applicationDetails$a7.status) !== "MANUALEXPIRED") {
      return `${t("TL_ERROR_TOAST_RENEWAL_1")} ${oldRenewalAppNo} ${t("TL_ERROR_TOAST_RENEWAL_2")}`;
    } else if ((applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a8 = applicationDetails.applicationData) === null || _applicationDetails$a8 === void 0 ? void 0 : _applicationDetails$a8.status) === "CANCELLED") {
      return `${t("TL_ERROR_TOAST_RENEWAL_CANCEL")}`;
    } else if ((applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a9 = applicationDetails.applicationData) === null || _applicationDetails$a9 === void 0 ? void 0 : _applicationDetails$a9.status) === "MANUALEXPIRED") {
      return `${t("TL_ERROR_TOAST_MUTUALLY_EXPIRED")}`;
    }
  };
  if (rolecheck && ((applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a10 = applicationDetails.applicationData) === null || _applicationDetails$a10 === void 0 ? void 0 : _applicationDetails$a10.status) === "APPROVED" || (applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a11 = applicationDetails.applicationData) === null || _applicationDetails$a11 === void 0 ? void 0 : _applicationDetails$a11.status) === "EXPIRED" || (applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a12 = applicationDetails.applicationData) === null || _applicationDetails$a12 === void 0 ? void 0 : _applicationDetails$a12.status) === "CANCELLED" || (applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a13 = applicationDetails.applicationData) === null || _applicationDetails$a13 === void 0 ? void 0 : _applicationDetails$a13.status) === "MANUALEXPIRED")) {
    var _workflowDetails7;
    if ((_workflowDetails7 = workflowDetails) !== null && _workflowDetails7 !== void 0 && _workflowDetails7.data) {
      var _workflowDetails8, _workflowDetails8$dat, _workflowDetails9, _workflowDetails9$dat, _workflowDetails9$dat2, _workflowDetails9$dat3;
      if (!((_workflowDetails8 = workflowDetails) !== null && _workflowDetails8 !== void 0 && (_workflowDetails8$dat = _workflowDetails8.data) !== null && _workflowDetails8$dat !== void 0 && _workflowDetails8$dat.actionState)) {
        workflowDetails.data.actionState = {};
        workflowDetails.data.actionState.nextActions = [];
      }
      const flagData = (_workflowDetails9 = workflowDetails) === null || _workflowDetails9 === void 0 ? void 0 : (_workflowDetails9$dat = _workflowDetails9.data) === null || _workflowDetails9$dat === void 0 ? void 0 : (_workflowDetails9$dat2 = _workflowDetails9$dat.actionState) === null || _workflowDetails9$dat2 === void 0 ? void 0 : (_workflowDetails9$dat3 = _workflowDetails9$dat2.nextActions) === null || _workflowDetails9$dat3 === void 0 ? void 0 : _workflowDetails9$dat3.filter(data => data.action == "RENEWAL_SUBMIT_BUTTON");
      if (flagData && flagData.length === 0) {
        var _workflowDetails10, _workflowDetails10$da, _workflowDetails10$da2, _workflowDetails10$da3, _applicationDetails$a14, _applicationDetails$a15;
        (_workflowDetails10 = workflowDetails) === null || _workflowDetails10 === void 0 ? void 0 : (_workflowDetails10$da = _workflowDetails10.data) === null || _workflowDetails10$da === void 0 ? void 0 : (_workflowDetails10$da2 = _workflowDetails10$da.actionState) === null || _workflowDetails10$da2 === void 0 ? void 0 : (_workflowDetails10$da3 = _workflowDetails10$da2.nextActions) === null || _workflowDetails10$da3 === void 0 ? void 0 : _workflowDetails10$da3.push({
          action: "RENEWAL_SUBMIT_BUTTON",
          isToast: allowedToNextYear == false || (applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a14 = applicationDetails.applicationData) === null || _applicationDetails$a14 === void 0 ? void 0 : _applicationDetails$a14.status) === "CANCELLED" || (applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a15 = applicationDetails.applicationData) === null || _applicationDetails$a15 === void 0 ? void 0 : _applicationDetails$a15.status) === "MANUALEXPIRED" ? true : false,
          toastMessage: getToastMessages(),
          redirectionUrl: {
            pathname: `/digit-ui/employee/tl/renew-application-details/${applicationNumber}`,
            state: applicationDetails
          },
          tenantId: stateId,
          role: []
        });
      }
    }
  }
  if (rolearray && (applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a16 = applicationDetails.applicationData) === null || _applicationDetails$a16 === void 0 ? void 0 : _applicationDetails$a16.status) === "PENDINGPAYMENT") {
    var _workflowDetails11, _workflowDetails11$da, _workflowDetails11$da2, _workflowDetails13, _workflowDetails13$da, _workflowDetails13$da2, _workflowDetails13$da3;
    (_workflowDetails11 = workflowDetails) === null || _workflowDetails11 === void 0 ? void 0 : (_workflowDetails11$da = _workflowDetails11.data) === null || _workflowDetails11$da === void 0 ? void 0 : (_workflowDetails11$da2 = _workflowDetails11$da.nextActions) === null || _workflowDetails11$da2 === void 0 ? void 0 : _workflowDetails11$da2.map(data => {
      if (data.action === "PAY") {
        var _workflowDetails12, _applicationDetails$a17;
        workflowDetails = {
          ...workflowDetails,
          data: {
            ...((_workflowDetails12 = workflowDetails) === null || _workflowDetails12 === void 0 ? void 0 : _workflowDetails12.data),
            actionState: {
              nextActions: [{
                action: data.action,
                redirectionUrll: {
                  pathname: `TL/${applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a17 = applicationDetails.applicationData) === null || _applicationDetails$a17 === void 0 ? void 0 : _applicationDetails$a17.applicationNumber}/${tenantId}`,
                  state: tenantId
                },
                tenantId: tenantId
              }]
            }
          }
        };
      }
    });
    (_workflowDetails13 = workflowDetails) === null || _workflowDetails13 === void 0 ? void 0 : (_workflowDetails13$da = _workflowDetails13.data) === null || _workflowDetails13$da === void 0 ? void 0 : (_workflowDetails13$da2 = _workflowDetails13$da.actionState) === null || _workflowDetails13$da2 === void 0 ? void 0 : (_workflowDetails13$da3 = _workflowDetails13$da2.nextActions) === null || _workflowDetails13$da3 === void 0 ? void 0 : _workflowDetails13$da3.forEach(action => {
      if ((action === null || action === void 0 ? void 0 : action.action) === "PAY") {
        var _applicationDetails$a18;
        action.redirectionUrll = {
          pathname: `TL/${applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a18 = applicationDetails.applicationData) === null || _applicationDetails$a18 === void 0 ? void 0 : _applicationDetails$a18.applicationNumber}/${tenantId}`,
          state: (applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.tenantId) || tenantId
        };
      }
    });
  }
  const wfDocs = (_workflowDetails$data2 = workflowDetails.data) === null || _workflowDetails$data2 === void 0 ? void 0 : (_workflowDetails$data3 = _workflowDetails$data2.timeline) === null || _workflowDetails$data3 === void 0 ? void 0 : _workflowDetails$data3.reduce((acc, {
    wfDocuments
  }) => {
    return wfDocuments ? [...acc, ...wfDocuments] : acc;
  }, []);
  const ownerdetails = applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.applicationDetails.find(e => e.title === "ES_NEW_APPLICATION_OWNERSHIP_DETAILS");
  let appdetailsDocuments = ownerdetails === null || ownerdetails === void 0 ? void 0 : (_ownerdetails$additio = ownerdetails.additionalDetails) === null || _ownerdetails$additio === void 0 ? void 0 : _ownerdetails$additio.documents;
  if (appdetailsDocuments && wfDocs !== null && wfDocs !== void 0 && wfDocs.length && !appdetailsDocuments.find(e => e.title === "TL_WORKFLOW_DOCS")) {
    var _wfDocs$map;
    ownerdetails.additionalDetails.documents = [...ownerdetails.additionalDetails.documents, {
      title: "TL_WORKFLOW_DOCS",
      values: wfDocs === null || wfDocs === void 0 ? void 0 : (_wfDocs$map = wfDocs.map) === null || _wfDocs$map === void 0 ? void 0 : _wfDocs$map.call(wfDocs, e => ({
        ...e,
        title: e.documentType
      }))
    }];
  }
  const handleDownloadPdf = async () => {
    const tenantInfo = tenants.find(tenant => tenant.code === applicationDetails.tenantId);
    const data = await getPTAcknowledgementData(applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.applicationData, tenantInfo, t);
    Digit.Utils.pdf.generate(data);
    setIsDisplayDownloadMenu(false);
  };
  const printReciept = async (businessService = "TL", consumerCode = (_applicationDetails$a19 => applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a19 = applicationDetails.applicationData) === null || _applicationDetails$a19 === void 0 ? void 0 : _applicationDetails$a19.applicationNumber)()) => {
    await Digit.Utils.downloadReceipt(consumerCode, businessService, 'tradelicense-receipt');
    setIsDisplayDownloadMenu(false);
  };
  const printCertificate = async () => {
    var _applicationDetails$a20;
    let res = await Digit.TLService.TLsearch({
      tenantId: applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.tenantId,
      filters: {
        applicationNumber: applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a20 = applicationDetails.applicationData) === null || _applicationDetails$a20 === void 0 ? void 0 : _applicationDetails$a20.applicationNumber
      }
    });
    const TLcertificatefile = await Digit.PaymentService.generatePdf(tenantId, {
      Licenses: res === null || res === void 0 ? void 0 : res.Licenses
    }, "tlcertificate");
    const receiptFile = await Digit.PaymentService.printReciept(tenantId, {
      fileStoreIds: TLcertificatefile.filestoreIds[0]
    });
    window.open(receiptFile[TLcertificatefile.filestoreIds[0]], "_blank");
    setIsDisplayDownloadMenu(false);
  };
  const [isDisplayDownloadMenu, setIsDisplayDownloadMenu] = useState(false);
  const applicationStatus = applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a21 = applicationDetails.applicationData) === null || _applicationDetails$a21 === void 0 ? void 0 : _applicationDetails$a21.status;
  const dowloadOptions = applicationStatus === "APPROVED" ? [{
    label: t("TL_CERTIFICATE"),
    onClick: printCertificate
  }, {
    label: t("TL_RECEIPT"),
    onClick: printReciept
  }, {
    label: t("TL_APPLICATION"),
    onClick: handleDownloadPdf
  }] : [{
    label: t("TL_APPLICATION"),
    onClick: handleDownloadPdf
  }];
  return /*#__PURE__*/React.createElement("div", {
    className: "employee-main-application-details"
  }, /*#__PURE__*/React.createElement("div", {
    className: "employee-application-details",
    style: {
      marginBottom: "15px"
    }
  }, /*#__PURE__*/React.createElement(Header, null, (applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a22 = applicationDetails.applicationData) === null || _applicationDetails$a22 === void 0 ? void 0 : _applicationDetails$a22.workflowCode) == "NewTL" && (applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a23 = applicationDetails.applicationData) === null || _applicationDetails$a23 === void 0 ? void 0 : _applicationDetails$a23.status) !== "APPROVED" ? t("TL_TRADE_APPLICATION_DETAILS_LABEL") : t("TL_TRADE_LICENSE_DETAILS_LABEL")), /*#__PURE__*/React.createElement(MultiLink, {
    className: "multilinkWrapper employee-mulitlink-main-div",
    onHeadClick: () => setIsDisplayDownloadMenu(!isDisplayDownloadMenu),
    displayOptions: isDisplayDownloadMenu,
    options: dowloadOptions,
    downloadBtnClassName: "employee-download-btn-className",
    optionsClassName: "employee-options-btn-className",
    optionStyle: {
      padding: "10px"
    }
  })), /*#__PURE__*/React.createElement(ApplicationDetails, {
    applicationDetails: applicationDetails,
    isLoading: isLoading,
    isDataLoading: isLoading,
    applicationData: applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.applicationData,
    mutate: mutate,
    workflowDetails: workflowDetails,
    businessService: businessService,
    moduleCode: "TL",
    showToast: showToast,
    setShowToast: setShowToast,
    closeToast: closeToast,
    timelineStatusPrefix: "WF_NEWTL_"
  }));
};

const TLBreadCrumb = ({
  location
}) => {
  var _location$pathname, _location$pathname2, _location$pathname3, _location$pathname4, _location$pathname5, _location$pathname6, _location$pathname7, _location$pathname8, _location$pathname9;
  const {
    t
  } = useTranslation();
  const isSearch = location === null || location === void 0 ? void 0 : (_location$pathname = location.pathname) === null || _location$pathname === void 0 ? void 0 : _location$pathname.includes("search");
  const isInbox = location === null || location === void 0 ? void 0 : (_location$pathname2 = location.pathname) === null || _location$pathname2 === void 0 ? void 0 : _location$pathname2.includes("inbox");
  const isApplicationSearch = location === null || location === void 0 ? void 0 : (_location$pathname3 = location.pathname) === null || _location$pathname3 === void 0 ? void 0 : _location$pathname3.includes("search/application");
  const isLicenceSearch = location === null || location === void 0 ? void 0 : (_location$pathname4 = location.pathname) === null || _location$pathname4 === void 0 ? void 0 : _location$pathname4.includes("search/license");
  const isEditApplication = location === null || location === void 0 ? void 0 : (_location$pathname5 = location.pathname) === null || _location$pathname5 === void 0 ? void 0 : _location$pathname5.includes("edit-application-details");
  const isRenewalApplication = location === null || location === void 0 ? void 0 : (_location$pathname6 = location.pathname) === null || _location$pathname6 === void 0 ? void 0 : _location$pathname6.includes("renew-application-details");
  const isApplicationDetails = location === null || location === void 0 ? void 0 : (_location$pathname7 = location.pathname) === null || _location$pathname7 === void 0 ? void 0 : _location$pathname7.includes("tl/application-details");
  const isNewApplication = location === null || location === void 0 ? void 0 : (_location$pathname8 = location.pathname) === null || _location$pathname8 === void 0 ? void 0 : _location$pathname8.includes("tl/new-application");
  const isResponse = location === null || location === void 0 ? void 0 : (_location$pathname9 = location.pathname) === null || _location$pathname9 === void 0 ? void 0 : _location$pathname9.includes("tl/response");
  const isMobile = window.Digit.Utils.browser.isMobile();
  const [search, setSearch] = useState(false);
  const locationsForTLEmployee = window.location.href;
  const breadCrumbUrl = sessionStorage.getItem("breadCrumbUrl") || "";
  if (locationsForTLEmployee.includes("inbox")) {
    sessionStorage.setItem("breadCrumbUrl", "inbox");
  } else if (locationsForTLEmployee.includes("home")) {
    sessionStorage.setItem("breadCrumbUrl", "home");
  } else if (locationsForTLEmployee.includes("search/license")) {
    if (breadCrumbUrl == "home") sessionStorage.setItem("breadCrumbUrl", "home/license");else if (breadCrumbUrl == "inbox") sessionStorage.setItem("breadCrumbUrl", "inbox/license");else sessionStorage.setItem("breadCrumbUrl", breadCrumbUrl.includes("home/license") ? "home/license" : "inbox/license");
  } else if (locationsForTLEmployee.includes("search/application")) {
    if (breadCrumbUrl == "home") sessionStorage.setItem("breadCrumbUrl", "home/search");else if (breadCrumbUrl == "inbox") sessionStorage.setItem("breadCrumbUrl", "inbox/search");else sessionStorage.setItem("breadCrumbUrl", breadCrumbUrl.includes("home/search") ? "home/search" : "inbox/search");
  } else if (locationsForTLEmployee.includes("new-application")) {
    if (breadCrumbUrl == "home") sessionStorage.setItem("breadCrumbUrl", "home/newApp");else if (breadCrumbUrl == "inbox") sessionStorage.setItem("breadCrumbUrl", "inbox/newApp");
  } else if (locationsForTLEmployee.includes("application-details")) {
    if (breadCrumbUrl == "home/license") sessionStorage.setItem("breadCrumbUrl", "home/license/appDetails");else if (breadCrumbUrl == "inbox/license") sessionStorage.setItem("breadCrumbUrl", "inbox/license/appDetails");else if (breadCrumbUrl == "home/search") sessionStorage.setItem("breadCrumbUrl", "home/search/appDetails");else if (breadCrumbUrl == "inbox/search") sessionStorage.setItem("breadCrumbUrl", "inbox/search/appDetails");else if (breadCrumbUrl == "inbox") sessionStorage.setItem("breadCrumbUrl", "inbox/appDetails");
  } else if (locationsForTLEmployee.includes("renew-application-details")) {
    if (breadCrumbUrl == "inbox/appDetails") sessionStorage.setItem("breadCrumbUrl", "inbox/appDetails/renew");else if (breadCrumbUrl == "home/license/appDetails") sessionStorage.setItem("breadCrumbUrl", "home/license/appDetails/renew");else if (breadCrumbUrl == "inbox/license/appDetails") sessionStorage.setItem("breadCrumbUrl", "inbox/license/appDetails/renew");else if (breadCrumbUrl == "home/search/appDetails") sessionStorage.setItem("breadCrumbUrl", "home/search/appDetails/renew");else if (breadCrumbUrl == "inbox/search/appDetails") sessionStorage.setItem("breadCrumbUrl", "inbox/search/appDetails/renew");
  } else if (locationsForTLEmployee.includes("edit-application-details")) {
    if (breadCrumbUrl == "inbox/appDetails") sessionStorage.setItem("breadCrumbUrl", "inbox/appDetails/renew");else if (breadCrumbUrl == "home/license/appDetails") sessionStorage.setItem("breadCrumbUrl", "home/license/appDetails/edit");else if (breadCrumbUrl == "inbox/license/appDetails") sessionStorage.setItem("breadCrumbUrl", "inbox/license/appDetails/edit");else if (breadCrumbUrl == "home/search/appDetails") sessionStorage.setItem("breadCrumbUrl", "home/search/appDetails/edit");else if (breadCrumbUrl == "inbox/search/appDetails") sessionStorage.setItem("breadCrumbUrl", "inbox/search/appDetails/edit");
  } else if (locationsForTLEmployee.includes("response")) {
    sessionStorage.setItem("breadCrumbUrl", "");
  }
  useEffect(() => {
    if (!search) {
      setSearch(isSearch);
    } else if (isInbox && search) {
      setSearch(false);
    }
  }, [location]);
  const breadCrumbUrls = sessionStorage.getItem("breadCrumbUrl") || "";
  const crumbs = [{
    path: "/digit-ui/employee",
    content: t("ES_COMMON_HOME"),
    show: true
  }, {
    path: "/digit-ui/employee/tl/inbox",
    content: t("ES_TITLE_INBOX"),
    show: breadCrumbUrls.includes("inbox") || isInbox
  }, {
    path: "/digit-ui/employee/tl/search/application",
    content: t("ES_COMMON_SEARCH_APPLICATION"),
    show: isApplicationSearch || breadCrumbUrls.includes("home/search") || breadCrumbUrls.includes("inbox/search")
  }, {
    path: "/digit-ui/employee/tl/search/license",
    content: t("TL_SEARCH_TRADE_HEADER"),
    show: isLicenceSearch || breadCrumbUrls.includes("home/license") || breadCrumbUrls.includes("inbox/license")
  }, {
    path: sessionStorage.getItem("applicationNumber") ? `/digit-ui/employee/tl/application-details/${sessionStorage.getItem("applicationNumber")}` : "",
    content: t("TL_DETAILS_HEADER_LABEL"),
    show: isApplicationDetails || breadCrumbUrls.includes("inbox/appDetails") || breadCrumbUrls.includes("home/license/appDetails") || breadCrumbUrls.includes("inbox/license/appDetails") || breadCrumbUrls.includes("home/search/appDetails") || breadCrumbUrls.includes("inbox/search/appDetails")
  }, {
    path: "/digit-ui/employee/tl/new-application",
    content: t("TL_HOME_SEARCH_RESULTS_NEW_APP_BUTTON"),
    show: isNewApplication || breadCrumbUrls.includes("home/newApp") || breadCrumbUrls.includes("inbox/newApp")
  }, {
    content: t("ES_TITLE_RENEW_TRADE_LICESE_APPLICATION"),
    show: isRenewalApplication || breadCrumbUrls.includes("inbox/appDetails/renew") || breadCrumbUrls.includes("home/license/appDetails/renew") || breadCrumbUrls.includes("inbox/license/appDetails/renew") || breadCrumbUrls.includes("home/search/appDetails/renew") || breadCrumbUrls.includes("inbox/search/appDetails/renew")
  }, {
    content: t("ES_TITLE_RE_NEW_TRADE_LICESE_APPLICATION"),
    show: isEditApplication || breadCrumbUrls.includes("inbox/appDetails/edit") || breadCrumbUrls.includes("home/license/appDetails/edit") || breadCrumbUrls.includes("inbox/license/appDetails/edit") || breadCrumbUrls.includes("home/search/appDetails/edit") || breadCrumbUrls.includes("inbox/search/appDetails/edit")
  }, {
    path: "/digit-ui/employee/tl/inbox",
    content: t("ACTION_TEST_RESPONSE"),
    show: isResponse
  }];
  return /*#__PURE__*/React.createElement(BreadCrumb, {
    style: isMobile ? {
      display: "flex"
    } : {},
    spanStyle: {
      maxWidth: "min-content"
    },
    crumbs: crumbs
  });
};
const EmployeeApp = ({
  path,
  url,
  userType
}) => {
  var _Digit, _Digit$ComponentRegis, _Digit2, _Digit2$ComponentRegi, _Digit3, _Digit3$ComponentRegi, _Digit4, _Digit4$ComponentRegi;
  const {
    t
  } = useTranslation();
  const location = useLocation();
  const locationCheck = window.location.href.includes("employee/tl/new-application") || window.location.href.includes("employee/tl/response") || window.location.href.includes("employee/tl/edit-application-details") || window.location.href.includes("employee/tl/renew-application-details");
  const NewApplication = (_Digit = Digit) === null || _Digit === void 0 ? void 0 : (_Digit$ComponentRegis = _Digit.ComponentRegistryService) === null || _Digit$ComponentRegis === void 0 ? void 0 : _Digit$ComponentRegis.getComponent('TLNewApplication');
  const ReNewApplication = (_Digit2 = Digit) === null || _Digit2 === void 0 ? void 0 : (_Digit2$ComponentRegi = _Digit2.ComponentRegistryService) === null || _Digit2$ComponentRegi === void 0 ? void 0 : _Digit2$ComponentRegi.getComponent('TLReNewApplication');
  const Response = (_Digit3 = Digit) === null || _Digit3 === void 0 ? void 0 : (_Digit3$ComponentRegi = _Digit3.ComponentRegistryService) === null || _Digit3$ComponentRegi === void 0 ? void 0 : _Digit3$ComponentRegi.getComponent('TLResponse');
  const Search = (_Digit4 = Digit) === null || _Digit4 === void 0 ? void 0 : (_Digit4$ComponentRegi = _Digit4.ComponentRegistryService) === null || _Digit4$ComponentRegi === void 0 ? void 0 : _Digit4$ComponentRegi.getComponent('TLSearch');
  return /*#__PURE__*/React.createElement(Switch, null, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    className: "ground-container",
    style: locationCheck ? {
      width: "100%",
      marginLeft: "0px"
    } : {
      marginLeft: "0px"
    }
  }, /*#__PURE__*/React.createElement("div", {
    style: locationCheck ? {
      marginLeft: "15px"
    } : {}
  }, /*#__PURE__*/React.createElement(TLBreadCrumb, {
    location: location
  })), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: `${path}/inbox`,
    component: () => /*#__PURE__*/React.createElement(Inbox, {
      parentRoute: path,
      businessService: "TL",
      filterComponent: "TL_INBOX_FILTER",
      initialStates: {},
      isInbox: true
    })
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: `${path}/new-application`,
    component: () => /*#__PURE__*/React.createElement(NewApplication, {
      parentUrl: url
    })
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: `${path}/application-details/:id`,
    component: () => /*#__PURE__*/React.createElement(ApplicationDetails$1, {
      parentRoute: path
    })
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: `${path}/renew-application-details/:id`,
    component: props => /*#__PURE__*/React.createElement(ReNewApplication, Object.assign({}, props, {
      parentRoute: path
    }))
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: `${path}/edit-application-details/:id`,
    component: props => /*#__PURE__*/React.createElement(ReNewApplication, Object.assign({}, props, {
      header: t("TL_ACTION_RESUBMIT"),
      parentRoute: path
    }))
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: `${path}/response`,
    component: props => /*#__PURE__*/React.createElement(Response, Object.assign({}, props, {
      parentRoute: path
    }))
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: `${path}/search/:variant`,
    component: props => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {
      parentRoute: path
    }))
  }))));
};

const TLModule = ({
  stateCode,
  userType,
  tenants
}) => {
  const {
    path,
    url
  } = useRouteMatch();
  const moduleCode = "TL";
  const language = Digit.StoreData.getCurrentLanguage();
  const {
    isLoading,
    data: store
  } = Digit.Services.useStore({
    stateCode,
    moduleCode,
    language
  });
  Digit.SessionStorage.set("TL_TENANTS", tenants);
  if (userType === "employee") {
    return /*#__PURE__*/React.createElement(EmployeeApp, {
      path: path,
      url: url,
      userType: userType
    });
  } else return /*#__PURE__*/React.createElement(App, null);
};
const TLLinks = ({
  matchPath,
  userType
}) => {
  const {
    t
  } = useTranslation();
  const [params, setParams, clearParams] = Digit.Hooks.useSessionStorage("PT_CREATE_TRADE", {});
  useEffect(() => {
    clearParams();
  }, []);
  const links = [{
    link: `${matchPath}/tradelicence/new-application`,
    i18nKey: t("TL_CREATE_TRADE")
  }, {
    link: `${matchPath}/tradelicence/renewal-list`,
    i18nKey: t("TL_RENEWAL_HEADER")
  }, {
    link: `${matchPath}/tradelicence/my-application`,
    i18nKey: t("TL_MY_APPLICATIONS_HEADER")
  }];
  return /*#__PURE__*/React.createElement(CitizenHomeCard, {
    header: t("ACTION_TEST_TRADE_LICENSE"),
    links: links,
    Icon: () => /*#__PURE__*/React.createElement(CaseIcon, {
      className: "fill-path-primary-main"
    })
  });
};
const componentsToRegister = {
  TLModule,
  TLLinks,
  TLCard,
  TradeLicense,
  SelectTradeName,
  SelectStructureType,
  SelectVehicleType,
  SelectBuildingType,
  SelectCommencementDate,
  SelectTradeUnits,
  SelectAccessories,
  SelectAccessoriesDetails,
  TLSelectGeolocation,
  TLSelectAddress,
  TLSelectPincode,
  Proof,
  SelectOwnerShipDetails,
  SelectOwnerDetails,
  SelectOwnerAddress,
  SelectProofIdentity,
  SelectOwnershipProof,
  TLSelectStreet,
  TLSelectLandmark,
  TLSelectOwnerAddress,
  TLCheckPage: CheckPage,
  TLDocument,
  TLAcknowledgement,
  TradeLicenseList,
  MyApplications,
  TLOwnerDetailsEmployee,
  TLTradeDetailsEmployee,
  TLTradeUnitsEmployee,
  TLAccessoriesEmployee,
  TLDocumentsEmployee,
  SearchApplication,
  SearchLicense,
  TL_INBOX_FILTER: Filter,
  TLInfoLabel,
  TLWFApplicationTimeline,
  TLApplicationDetails,
  TLCreateTradeLicence: CreateTradeLicence,
  TLEditTrade: EditTrade,
  TLList,
  TLRenewTrade: RenewTrade,
  TLSearchTradeComponent: SearchTrade$1,
  TLNewApplication: NewApplication,
  TLReNewApplication: ReNewApplication,
  TLSearch: Search,
  TLResponse: Response,
  SelectOtherTradeDetails,
  SelectTradeUnitsInitial,
  TLTradeUnitsEmployeeInitial
};
const initTLComponents = () => {
  Object.entries(componentsToRegister).forEach(([key, value]) => {
    Digit.ComponentRegistryService.setComponent(key, value);
  });
};

export { TLLinks, TLModule, initTLComponents };
//# sourceMappingURL=index.modern.js.map
